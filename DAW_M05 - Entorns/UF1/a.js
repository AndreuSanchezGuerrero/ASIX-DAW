/*! For license information please see main_056ad9c9.js.LICENSE.txt */
!function () {
    var e = {
        7757: function (e, t, n) {
            e.exports = n(5666)
        },
        1965: function (e, t) {
            'use strict';
            function n(e) {
                return 'Tag' === e || 'Monat' === e ? 'r' : 'Jahr' === e ? 's' : ''
            }
            function r(e) {
                return 'Tag' === e || 'Monat' === e ? 'r' : 'Jahr' === e ? 's' : ''
            }
            var a = [
                {
                    code: 'af',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Vorige',
                        next: 'Volgende',
                        today: 'Vandag',
                        year: 'Jaar',
                        month: 'Maand',
                        week: 'Week',
                        day: 'Dag',
                        list: 'Agenda'
                    },
                    allDayText: 'Heeldag',
                    moreLinkText: 'Addisionele',
                    noEventsText: 'Daar is geen gebeurtenisse nie'
                },
                {
                    code: 'ar-dz',
                    week: {
                        dow: 0,
                        doy: 4
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'السابق',
                        next: 'التالي',
                        today: 'اليوم',
                        month: 'شهر',
                        week: 'أسبوع',
                        day: 'يوم',
                        list: 'أجندة'
                    },
                    weekText: 'أسبوع',
                    allDayText: 'اليوم كله',
                    moreLinkText: 'أخرى',
                    noEventsText: 'أي أحداث لعرض'
                },
                {
                    code: 'ar-kw',
                    week: {
                        dow: 0,
                        doy: 12
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'السابق',
                        next: 'التالي',
                        today: 'اليوم',
                        month: 'شهر',
                        week: 'أسبوع',
                        day: 'يوم',
                        list: 'أجندة'
                    },
                    weekText: 'أسبوع',
                    allDayText: 'اليوم كله',
                    moreLinkText: 'أخرى',
                    noEventsText: 'أي أحداث لعرض'
                },
                {
                    code: 'ar-ly',
                    week: {
                        dow: 6,
                        doy: 12
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'السابق',
                        next: 'التالي',
                        today: 'اليوم',
                        month: 'شهر',
                        week: 'أسبوع',
                        day: 'يوم',
                        list: 'أجندة'
                    },
                    weekText: 'أسبوع',
                    allDayText: 'اليوم كله',
                    moreLinkText: 'أخرى',
                    noEventsText: 'أي أحداث لعرض'
                },
                {
                    code: 'ar-ma',
                    week: {
                        dow: 6,
                        doy: 12
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'السابق',
                        next: 'التالي',
                        today: 'اليوم',
                        month: 'شهر',
                        week: 'أسبوع',
                        day: 'يوم',
                        list: 'أجندة'
                    },
                    weekText: 'أسبوع',
                    allDayText: 'اليوم كله',
                    moreLinkText: 'أخرى',
                    noEventsText: 'أي أحداث لعرض'
                },
                {
                    code: 'ar-sa',
                    week: {
                        dow: 0,
                        doy: 6
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'السابق',
                        next: 'التالي',
                        today: 'اليوم',
                        month: 'شهر',
                        week: 'أسبوع',
                        day: 'يوم',
                        list: 'أجندة'
                    },
                    weekText: 'أسبوع',
                    allDayText: 'اليوم كله',
                    moreLinkText: 'أخرى',
                    noEventsText: 'أي أحداث لعرض'
                },
                {
                    code: 'ar-tn',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'السابق',
                        next: 'التالي',
                        today: 'اليوم',
                        month: 'شهر',
                        week: 'أسبوع',
                        day: 'يوم',
                        list: 'أجندة'
                    },
                    weekText: 'أسبوع',
                    allDayText: 'اليوم كله',
                    moreLinkText: 'أخرى',
                    noEventsText: 'أي أحداث لعرض'
                },
                {
                    code: 'ar',
                    week: {
                        dow: 6,
                        doy: 12
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'السابق',
                        next: 'التالي',
                        today: 'اليوم',
                        month: 'شهر',
                        week: 'أسبوع',
                        day: 'يوم',
                        list: 'أجندة'
                    },
                    weekText: 'أسبوع',
                    allDayText: 'اليوم كله',
                    moreLinkText: 'أخرى',
                    noEventsText: 'أي أحداث لعرض'
                },
                {
                    code: 'az',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Əvvəl',
                        next: 'Sonra',
                        today: 'Bu Gün',
                        month: 'Ay',
                        week: 'Həftə',
                        day: 'Gün',
                        list: 'Gündəm'
                    },
                    weekText: 'Həftə',
                    allDayText: 'Bütün Gün',
                    moreLinkText: function (e) {
                        return '+ daha çox ' + e
                    },
                    noEventsText: 'Göstərmək üçün hadisə yoxdur'
                },
                {
                    code: 'bg',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'назад',
                        next: 'напред',
                        today: 'днес',
                        month: 'Месец',
                        week: 'Седмица',
                        day: 'Ден',
                        list: 'График'
                    },
                    allDayText: 'Цял ден',
                    moreLinkText: function (e) {
                        return '+още ' + e
                    },
                    noEventsText: 'Няма събития за показване'
                },
                {
                    code: 'bn',
                    week: {
                        dow: 0,
                        doy: 6
                    },
                    buttonText: {
                        prev: 'পেছনে',
                        next: 'সামনে',
                        today: 'আজ',
                        month: 'মাস',
                        week: 'সপ্তাহ',
                        day: 'দিন',
                        list: 'তালিকা'
                    },
                    weekText: 'সপ্তাহ',
                    allDayText: 'সারাদিন',
                    moreLinkText: function (e) {
                        return '+অন্যান্য ' + e
                    },
                    noEventsText: 'কোনো ইভেন্ট নেই'
                },
                {
                    code: 'bs',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Prošli',
                        next: 'Sljedeći',
                        today: 'Danas',
                        month: 'Mjesec',
                        week: 'Sedmica',
                        day: 'Dan',
                        list: 'Raspored'
                    },
                    weekText: 'Sed',
                    allDayText: 'Cijeli dan',
                    moreLinkText: function (e) {
                        return '+ još ' + e
                    },
                    noEventsText: 'Nema događaja za prikazivanje'
                },
                {
                    code: 'ca',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Anterior',
                        next: 'Següent',
                        today: 'Avui',
                        month: 'Mes',
                        week: 'Setmana',
                        day: 'Dia',
                        list: 'Agenda'
                    },
                    weekText: 'Set',
                    allDayText: 'Tot el dia',
                    moreLinkText: 'més',
                    noEventsText: 'No hi ha esdeveniments per mostrar'
                },
                {
                    code: 'cs',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Dříve',
                        next: 'Později',
                        today: 'Nyní',
                        month: 'Měsíc',
                        week: 'Týden',
                        day: 'Den',
                        list: 'Agenda'
                    },
                    weekText: 'Týd',
                    allDayText: 'Celý den',
                    moreLinkText: function (e) {
                        return '+další: ' + e
                    },
                    noEventsText: 'Žádné akce k zobrazení'
                },
                {
                    code: 'cy',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Blaenorol',
                        next: 'Nesaf',
                        today: 'Heddiw',
                        year: 'Blwyddyn',
                        month: 'Mis',
                        week: 'Wythnos',
                        day: 'Dydd',
                        list: 'Rhestr'
                    },
                    weekText: 'Wythnos',
                    allDayText: 'Trwy\'r dydd',
                    moreLinkText: 'Mwy',
                    noEventsText: 'Dim digwyddiadau'
                },
                {
                    code: 'da',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Forrige',
                        next: 'Næste',
                        today: 'I dag',
                        month: 'Måned',
                        week: 'Uge',
                        day: 'Dag',
                        list: 'Agenda'
                    },
                    weekText: 'Uge',
                    allDayText: 'Hele dagen',
                    moreLinkText: 'flere',
                    noEventsText: 'Ingen arrangementer at vise'
                },
                {
                    code: 'de-at',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Zurück',
                        next: 'Vor',
                        today: 'Heute',
                        year: 'Jahr',
                        month: 'Monat',
                        week: 'Woche',
                        day: 'Tag',
                        list: 'Terminübersicht'
                    },
                    weekText: 'KW',
                    weekTextLong: 'Woche',
                    allDayText: 'Ganztägig',
                    moreLinkText: function (e) {
                        return '+ weitere ' + e
                    },
                    noEventsText: 'Keine Ereignisse anzuzeigen',
                    buttonHints: {
                        prev: e => `Vorherige${n(e)} ${e}`,
                        next: e => `Nächste${n(e)} ${e}`,
                        today: e => 'Tag' === e ? 'Heute' : `Diese${n(e)} ${e}`
                    },
                    viewHint: e => e + ('Woche' === e ? 'n' : 'Monat' === e ? 's' : 'es') + 'ansicht',
                    navLinkHint: 'Gehe zu $0',
                    moreLinkHint: e => 'Zeige ' + (1 === e ? 'ein weiteres Ereignis' : e + ' weitere Ereignisse'),
                    closeHint: 'Schließen',
                    timeHint: 'Uhrzeit',
                    eventHint: 'Ereignis'
                },
                {
                    code: 'de',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Zurück',
                        next: 'Vor',
                        today: 'Heute',
                        year: 'Jahr',
                        month: 'Monat',
                        week: 'Woche',
                        day: 'Tag',
                        list: 'Terminübersicht'
                    },
                    weekText: 'KW',
                    weekTextLong: 'Woche',
                    allDayText: 'Ganztägig',
                    moreLinkText: function (e) {
                        return '+ weitere ' + e
                    },
                    noEventsText: 'Keine Ereignisse anzuzeigen',
                    buttonHints: {
                        prev: e => `Vorherige${r(e)} ${e}`,
                        next: e => `Nächste${r(e)} ${e}`,
                        today: e => 'Tag' === e ? 'Heute' : `Diese${r(e)} ${e}`
                    },
                    viewHint: e => e + ('Woche' === e ? 'n' : 'Monat' === e ? 's' : 'es') + 'ansicht',
                    navLinkHint: 'Gehe zu $0',
                    moreLinkHint: e => 'Zeige ' + (1 === e ? 'ein weiteres Ereignis' : e + ' weitere Ereignisse'),
                    closeHint: 'Schließen',
                    timeHint: 'Uhrzeit',
                    eventHint: 'Ereignis'
                },
                {
                    code: 'el',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Προηγούμενος',
                        next: 'Επόμενος',
                        today: 'Σήμερα',
                        month: 'Μήνας',
                        week: 'Εβδομάδα',
                        day: 'Ημέρα',
                        list: 'Ατζέντα'
                    },
                    weekText: 'Εβδ',
                    allDayText: 'Ολοήμερο',
                    moreLinkText: 'περισσότερα',
                    noEventsText: 'Δεν υπάρχουν γεγονότα προς εμφάνιση'
                },
                {
                    code: 'en-au',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonHints: {
                        prev: 'Previous $0',
                        next: 'Next $0',
                        today: 'This $0'
                    },
                    viewHint: '$0 view',
                    navLinkHint: 'Go to $0',
                    moreLinkHint: e => `Show ${e} more event${1 === e ? '' : 's'}`
                },
                {
                    code: 'en-gb',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonHints: {
                        prev: 'Previous $0',
                        next: 'Next $0',
                        today: 'This $0'
                    },
                    viewHint: '$0 view',
                    navLinkHint: 'Go to $0',
                    moreLinkHint: e => `Show ${e} more event${1 === e ? '' : 's'}`
                },
                {
                    code: 'en-nz',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonHints: {
                        prev: 'Previous $0',
                        next: 'Next $0',
                        today: 'This $0'
                    },
                    viewHint: '$0 view',
                    navLinkHint: 'Go to $0',
                    moreLinkHint: e => `Show ${e} more event${1 === e ? '' : 's'}`
                },
                {
                    code: 'eo',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Antaŭa',
                        next: 'Sekva',
                        today: 'Hodiaŭ',
                        month: 'Monato',
                        week: 'Semajno',
                        day: 'Tago',
                        list: 'Tagordo'
                    },
                    weekText: 'Sm',
                    allDayText: 'Tuta tago',
                    moreLinkText: 'pli',
                    noEventsText: 'Neniuj eventoj por montri'
                },
                {
                    code: 'es',
                    week: {
                        dow: 0,
                        doy: 6
                    },
                    buttonText: {
                        prev: 'Ant',
                        next: 'Sig',
                        today: 'Hoy',
                        month: 'Mes',
                        week: 'Semana',
                        day: 'Día',
                        list: 'Agenda'
                    },
                    weekText: 'Sm',
                    allDayText: 'Todo el día',
                    moreLinkText: 'más',
                    noEventsText: 'No hay eventos para mostrar'
                },
                {
                    code: 'es',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Ant',
                        next: 'Sig',
                        today: 'Hoy',
                        month: 'Mes',
                        week: 'Semana',
                        day: 'Día',
                        list: 'Agenda'
                    },
                    buttonHints: {
                        prev: '$0 antes',
                        next: '$0 siguiente',
                        today: e => 'Día' === e ? 'Hoy' : ('Semana' === e ? 'Esta' : 'Este') + ' ' + e.toLocaleLowerCase()
                    },
                    viewHint: e => 'Vista ' + ('Semana' === e ? 'de la' : 'del') + ' ' + e.toLocaleLowerCase(),
                    weekText: 'Sm',
                    weekTextLong: 'Semana',
                    allDayText: 'Todo el día',
                    moreLinkText: 'más',
                    moreLinkHint: e => `Mostrar ${e} eventos más`,
                    noEventsText: 'No hay eventos para mostrar',
                    navLinkHint: 'Ir al $0',
                    closeHint: 'Cerrar',
                    timeHint: 'La hora',
                    eventHint: 'Evento'
                },
                {
                    code: 'et',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Eelnev',
                        next: 'Järgnev',
                        today: 'Täna',
                        month: 'Kuu',
                        week: 'Nädal',
                        day: 'Päev',
                        list: 'Päevakord'
                    },
                    weekText: 'näd',
                    allDayText: 'Kogu päev',
                    moreLinkText: function (e) {
                        return '+ veel ' + e
                    },
                    noEventsText: 'Kuvamiseks puuduvad sündmused'
                },
                {
                    code: 'eu',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Aur',
                        next: 'Hur',
                        today: 'Gaur',
                        month: 'Hilabetea',
                        week: 'Astea',
                        day: 'Eguna',
                        list: 'Agenda'
                    },
                    weekText: 'As',
                    allDayText: 'Egun osoa',
                    moreLinkText: 'gehiago',
                    noEventsText: 'Ez dago ekitaldirik erakusteko'
                },
                {
                    code: 'fa',
                    week: {
                        dow: 6,
                        doy: 12
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'قبلی',
                        next: 'بعدی',
                        today: 'امروز',
                        month: 'ماه',
                        week: 'هفته',
                        day: 'روز',
                        list: 'برنامه'
                    },
                    weekText: 'هف',
                    allDayText: 'تمام روز',
                    moreLinkText: function (e) {
                        return 'بیش از ' + e
                    },
                    noEventsText: 'هیچ رویدادی به نمایش'
                },
                {
                    code: 'fi',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Edellinen',
                        next: 'Seuraava',
                        today: 'Tänään',
                        month: 'Kuukausi',
                        week: 'Viikko',
                        day: 'Päivä',
                        list: 'Tapahtumat'
                    },
                    weekText: 'Vk',
                    allDayText: 'Koko päivä',
                    moreLinkText: 'lisää',
                    noEventsText: 'Ei näytettäviä tapahtumia'
                },
                {
                    code: 'fr',
                    buttonText: {
                        prev: 'Précédent',
                        next: 'Suivant',
                        today: 'Aujourd\'hui',
                        year: 'Année',
                        month: 'Mois',
                        week: 'Semaine',
                        day: 'Jour',
                        list: 'Mon planning'
                    },
                    weekText: 'Sem.',
                    allDayText: 'Toute la journée',
                    moreLinkText: 'en plus',
                    noEventsText: 'Aucun événement à afficher'
                },
                {
                    code: 'fr-ch',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Précédent',
                        next: 'Suivant',
                        today: 'Courant',
                        year: 'Année',
                        month: 'Mois',
                        week: 'Semaine',
                        day: 'Jour',
                        list: 'Mon planning'
                    },
                    weekText: 'Sm',
                    allDayText: 'Toute la journée',
                    moreLinkText: 'en plus',
                    noEventsText: 'Aucun événement à afficher'
                },
                {
                    code: 'fr',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Précédent',
                        next: 'Suivant',
                        today: 'Aujourd\'hui',
                        year: 'Année',
                        month: 'Mois',
                        week: 'Semaine',
                        day: 'Jour',
                        list: 'Planning'
                    },
                    weekText: 'Sem.',
                    allDayText: 'Toute la journée',
                    moreLinkText: 'en plus',
                    noEventsText: 'Aucun événement à afficher'
                },
                {
                    code: 'gl',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Ant',
                        next: 'Seg',
                        today: 'Hoxe',
                        month: 'Mes',
                        week: 'Semana',
                        day: 'Día',
                        list: 'Axenda'
                    },
                    weekText: 'Sm',
                    allDayText: 'Todo o día',
                    moreLinkText: 'máis',
                    noEventsText: 'Non hai eventos para amosar'
                },
                {
                    code: 'he',
                    direction: 'rtl',
                    buttonText: {
                        prev: 'הקודם',
                        next: 'הבא',
                        today: 'היום',
                        month: 'חודש',
                        week: 'שבוע',
                        day: 'יום',
                        list: 'סדר יום'
                    },
                    allDayText: 'כל היום',
                    moreLinkText: 'אחר',
                    noEventsText: 'אין אירועים להצגה',
                    weekText: 'שבוע'
                },
                {
                    code: 'hi',
                    week: {
                        dow: 0,
                        doy: 6
                    },
                    buttonText: {
                        prev: 'पिछला',
                        next: 'अगला',
                        today: 'आज',
                        month: 'महीना',
                        week: 'सप्ताह',
                        day: 'दिन',
                        list: 'कार्यसूची'
                    },
                    weekText: 'हफ्ता',
                    allDayText: 'सभी दिन',
                    moreLinkText: function (e) {
                        return '+अधिक ' + e
                    },
                    noEventsText: 'कोई घटनाओं को प्रदर्शित करने के लिए'
                },
                {
                    code: 'hr',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Prijašnji',
                        next: 'Sljedeći',
                        today: 'Danas',
                        month: 'Mjesec',
                        week: 'Tjedan',
                        day: 'Dan',
                        list: 'Raspored'
                    },
                    weekText: 'Tje',
                    allDayText: 'Cijeli dan',
                    moreLinkText: function (e) {
                        return '+ još ' + e
                    },
                    noEventsText: 'Nema događaja za prikaz'
                },
                {
                    code: 'hu',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'vissza',
                        next: 'előre',
                        today: 'ma',
                        month: 'Hónap',
                        week: 'Hét',
                        day: 'Nap',
                        list: 'Lista'
                    },
                    weekText: 'Hét',
                    allDayText: 'Egész nap',
                    moreLinkText: 'további',
                    noEventsText: 'Nincs megjeleníthető esemény'
                },
                {
                    code: 'hy-am',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Նախորդ',
                        next: 'Հաջորդ',
                        today: 'Այսօր',
                        month: 'Ամիս',
                        week: 'Շաբաթ',
                        day: 'Օր',
                        list: 'Օրվա ցուցակ'
                    },
                    weekText: 'Շաբ',
                    allDayText: 'Ամբողջ օր',
                    moreLinkText: function (e) {
                        return '+ ևս ' + e
                    },
                    noEventsText: 'Բացակայում է իրադարձությունը ցուցադրելու'
                },
                {
                    code: 'id',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'mundur',
                        next: 'maju',
                        today: 'hari ini',
                        month: 'Bulan',
                        week: 'Minggu',
                        day: 'Hari',
                        list: 'Agenda'
                    },
                    weekText: 'Mg',
                    allDayText: 'Sehari penuh',
                    moreLinkText: 'lebih',
                    noEventsText: 'Tidak ada acara untuk ditampilkan'
                },
                {
                    code: 'is',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Fyrri',
                        next: 'Næsti',
                        today: 'Í dag',
                        month: 'Mánuður',
                        week: 'Vika',
                        day: 'Dagur',
                        list: 'Dagskrá'
                    },
                    weekText: 'Vika',
                    allDayText: 'Allan daginn',
                    moreLinkText: 'meira',
                    noEventsText: 'Engir viðburðir til að sýna'
                },
                {
                    code: 'it',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Prec',
                        next: 'Succ',
                        today: 'Oggi',
                        month: 'Mese',
                        week: 'Settimana',
                        day: 'Giorno',
                        list: 'Agenda'
                    },
                    weekText: 'Sm',
                    allDayText: 'Tutto il giorno',
                    moreLinkText: function (e) {
                        return '+altri ' + e
                    },
                    noEventsText: 'Non ci sono eventi da visualizzare'
                },
                {
                    code: 'ja',
                    buttonText: {
                        prev: '前',
                        next: '次',
                        today: '今日',
                        month: '月',
                        week: '週',
                        day: '日',
                        list: '予定リスト'
                    },
                    weekText: '週',
                    allDayText: '終日',
                    moreLinkText: function (e) {
                        return '他 ' + e + ' 件'
                    },
                    noEventsText: '表示する予定はありません'
                },
                {
                    code: 'ka',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'წინა',
                        next: 'შემდეგი',
                        today: 'დღეს',
                        month: 'თვე',
                        week: 'კვირა',
                        day: 'დღე',
                        list: 'დღის წესრიგი'
                    },
                    weekText: 'კვ',
                    allDayText: 'მთელი დღე',
                    moreLinkText: function (e) {
                        return '+ კიდევ ' + e
                    },
                    noEventsText: 'ღონისძიებები არ არის'
                },
                {
                    code: 'kk',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Алдыңғы',
                        next: 'Келесі',
                        today: 'Бүгін',
                        month: 'Ай',
                        week: 'Апта',
                        day: 'Күн',
                        list: 'Күн тәртібі'
                    },
                    weekText: 'Не',
                    allDayText: 'Күні бойы',
                    moreLinkText: function (e) {
                        return '+ тағы ' + e
                    },
                    noEventsText: 'Көрсету үшін оқиғалар жоқ'
                },
                {
                    code: 'km',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'មុន',
                        next: 'បន្ទាប់',
                        today: 'ថ្ងៃនេះ',
                        year: 'ឆ្នាំ',
                        month: 'ខែ',
                        week: 'សប្តាហ៍',
                        day: 'ថ្ងៃ',
                        list: 'បញ្ជី'
                    },
                    weekText: 'សប្តាហ៍',
                    allDayText: 'ពេញមួយថ្ងៃ',
                    moreLinkText: 'ច្រើនទៀត',
                    noEventsText: 'គ្មានព្រឹត្តិការណ៍ត្រូវបង្ហាញ'
                },
                {
                    code: 'ko',
                    buttonText: {
                        prev: '이전달',
                        next: '다음달',
                        today: '오늘',
                        month: '월',
                        week: '주',
                        day: '일',
                        list: '일정목록'
                    },
                    weekText: '주',
                    allDayText: '종일',
                    moreLinkText: '개',
                    noEventsText: '일정이 없습니다'
                },
                {
                    code: 'ku',
                    week: {
                        dow: 6,
                        doy: 12
                    },
                    direction: 'rtl',
                    buttonText: {
                        prev: 'پێشتر',
                        next: 'دواتر',
                        today: 'ئەمڕو',
                        month: 'مانگ',
                        week: 'هەفتە',
                        day: 'ڕۆژ',
                        list: 'بەرنامە'
                    },
                    weekText: 'هەفتە',
                    allDayText: 'هەموو ڕۆژەکە',
                    moreLinkText: 'زیاتر',
                    noEventsText: 'هیچ ڕووداوێك نیە'
                },
                {
                    code: 'lb',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Zréck',
                        next: 'Weider',
                        today: 'Haut',
                        month: 'Mount',
                        week: 'Woch',
                        day: 'Dag',
                        list: 'Terminiwwersiicht'
                    },
                    weekText: 'W',
                    allDayText: 'Ganzen Dag',
                    moreLinkText: 'méi',
                    noEventsText: 'Nee Evenementer ze affichéieren'
                },
                {
                    code: 'lt',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Atgal',
                        next: 'Pirmyn',
                        today: 'Šiandien',
                        month: 'Mėnuo',
                        week: 'Savaitė',
                        day: 'Diena',
                        list: 'Darbotvarkė'
                    },
                    weekText: 'SAV',
                    allDayText: 'Visą dieną',
                    moreLinkText: 'daugiau',
                    noEventsText: 'Nėra įvykių rodyti'
                },
                {
                    code: 'lv',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Iepr.',
                        next: 'Nāk.',
                        today: 'Šodien',
                        month: 'Mēnesis',
                        week: 'Nedēļa',
                        day: 'Diena',
                        list: 'Dienas kārtība'
                    },
                    weekText: 'Ned.',
                    allDayText: 'Visu dienu',
                    moreLinkText: function (e) {
                        return '+vēl ' + e
                    },
                    noEventsText: 'Nav notikumu'
                },
                {
                    code: 'mk',
                    buttonText: {
                        prev: 'претходно',
                        next: 'следно',
                        today: 'Денес',
                        month: 'Месец',
                        week: 'Недела',
                        day: 'Ден',
                        list: 'График'
                    },
                    weekText: 'Сед',
                    allDayText: 'Цел ден',
                    moreLinkText: function (e) {
                        return '+повеќе ' + e
                    },
                    noEventsText: 'Нема настани за прикажување'
                },
                {
                    code: 'ms',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Sebelum',
                        next: 'Selepas',
                        today: 'hari ini',
                        month: 'Bulan',
                        week: 'Minggu',
                        day: 'Hari',
                        list: 'Agenda'
                    },
                    weekText: 'Mg',
                    allDayText: 'Sepanjang hari',
                    moreLinkText: function (e) {
                        return 'masih ada ' + e + ' acara'
                    },
                    noEventsText: 'Tiada peristiwa untuk dipaparkan'
                },
                {
                    code: 'nb',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Forrige',
                        next: 'Neste',
                        today: 'I dag',
                        month: 'Måned',
                        week: 'Uke',
                        day: 'Dag',
                        list: 'Agenda'
                    },
                    weekText: 'Uke',
                    weekTextLong: 'Uke',
                    allDayText: 'Hele dagen',
                    moreLinkText: 'til',
                    noEventsText: 'Ingen hendelser å vise',
                    buttonHints: {
                        prev: 'Forrige $0',
                        next: 'Neste $0',
                        today: 'Nåværende $0'
                    },
                    viewHint: '$0 visning',
                    navLinkHint: 'Gå til $0',
                    moreLinkHint: e => `Vis ${e} flere hendelse${1 === e ? '' : 'r'}`
                },
                {
                    code: 'ne',
                    week: {
                        dow: 7,
                        doy: 1
                    },
                    buttonText: {
                        prev: 'अघिल्लो',
                        next: 'अर्को',
                        today: 'आज',
                        month: 'महिना',
                        week: 'हप्ता',
                        day: 'दिन',
                        list: 'सूची'
                    },
                    weekText: 'हप्ता',
                    allDayText: 'दिनभरि',
                    moreLinkText: 'थप लिंक',
                    noEventsText: 'देखाउनको लागि कुनै घटनाहरू छैनन्'
                },
                {
                    code: 'nl',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Vorige',
                        next: 'Volgende',
                        today: 'Vandaag',
                        year: 'Jaar',
                        month: 'Maand',
                        week: 'Week',
                        day: 'Dag',
                        list: 'Agenda'
                    },
                    allDayText: 'Hele dag',
                    moreLinkText: 'extra',
                    noEventsText: 'Geen evenementen om te laten zien'
                },
                {
                    code: 'nn',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Førre',
                        next: 'Neste',
                        today: 'I dag',
                        month: 'Månad',
                        week: 'Veke',
                        day: 'Dag',
                        list: 'Agenda'
                    },
                    weekText: 'Veke',
                    allDayText: 'Heile dagen',
                    moreLinkText: 'til',
                    noEventsText: 'Ingen hendelser å vise'
                },
                {
                    code: 'pl',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Poprzedni',
                        next: 'Następny',
                        today: 'Dziś',
                        month: 'Miesiąc',
                        week: 'Tydzień',
                        day: 'Dzień',
                        list: 'Plan dnia'
                    },
                    weekText: 'Tydz',
                    allDayText: 'Cały dzień',
                    moreLinkText: 'więcej',
                    noEventsText: 'Brak wydarzeń do wyświetlenia'
                },
                {
                    code: 'pt-br',
                    buttonText: {
                        prev: 'Anterior',
                        next: 'Próximo',
                        today: 'Hoje',
                        month: 'Mês',
                        week: 'Semana',
                        day: 'Dia',
                        list: 'Lista'
                    },
                    weekText: 'Sm',
                    allDayText: 'dia inteiro',
                    moreLinkText: function (e) {
                        return 'mais +' + e
                    },
                    noEventsText: 'Não há eventos para mostrar'
                },
                {
                    code: 'pt',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Anterior',
                        next: 'Seguinte',
                        today: 'Hoje',
                        month: 'Mês',
                        week: 'Semana',
                        day: 'Dia',
                        list: 'Agenda'
                    },
                    weekText: 'Sem',
                    allDayText: 'Todo o dia',
                    moreLinkText: 'mais',
                    noEventsText: 'Não há eventos para mostrar'
                },
                {
                    code: 'ro',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'precedentă',
                        next: 'următoare',
                        today: 'Azi',
                        month: 'Lună',
                        week: 'Săptămână',
                        day: 'Zi',
                        list: 'Agendă'
                    },
                    weekText: 'Săpt',
                    allDayText: 'Toată ziua',
                    moreLinkText: function (e) {
                        return '+alte ' + e
                    },
                    noEventsText: 'Nu există evenimente de afișat'
                },
                {
                    code: 'ru',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Пред',
                        next: 'След',
                        today: 'Сегодня',
                        month: 'Месяц',
                        week: 'Неделя',
                        day: 'День',
                        list: 'Повестка дня'
                    },
                    weekText: 'Нед',
                    allDayText: 'Весь день',
                    moreLinkText: function (e) {
                        return '+ ещё ' + e
                    },
                    noEventsText: 'Нет событий для отображения'
                },
                {
                    code: 'si-lk',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'පෙර',
                        next: 'පසු',
                        today: 'අද',
                        month: 'මාසය',
                        week: 'සතිය',
                        day: 'දවස',
                        list: 'ලැයිස්තුව'
                    },
                    weekText: 'සති',
                    allDayText: 'සියලු',
                    moreLinkText: 'තවත්',
                    noEventsText: 'මුකුත් නැත'
                },
                {
                    code: 'sk',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Predchádzajúci',
                        next: 'Nasledujúci',
                        today: 'Dnes',
                        month: 'Mesiac',
                        week: 'Týždeň',
                        day: 'Deň',
                        list: 'Rozvrh'
                    },
                    weekText: 'Ty',
                    allDayText: 'Celý deň',
                    moreLinkText: function (e) {
                        return '+ďalšie: ' + e
                    },
                    noEventsText: 'Žiadne akcie na zobrazenie'
                },
                {
                    code: 'sl',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Prejšnji',
                        next: 'Naslednji',
                        today: 'Trenutni',
                        month: 'Mesec',
                        week: 'Teden',
                        day: 'Dan',
                        list: 'Dnevni red'
                    },
                    weekText: 'Teden',
                    allDayText: 'Ves dan',
                    moreLinkText: 'več',
                    noEventsText: 'Ni dogodkov za prikaz'
                },
                {
                    code: 'sm',
                    buttonText: {
                        prev: 'Talu ai',
                        next: 'Mulimuli atu',
                        today: 'Aso nei',
                        month: 'Masina',
                        week: 'Vaiaso',
                        day: 'Aso',
                        list: 'Faasologa'
                    },
                    weekText: 'Vaiaso',
                    allDayText: 'Aso atoa',
                    moreLinkText: 'sili atu',
                    noEventsText: 'Leai ni mea na tutupu'
                },
                {
                    code: 'sq',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'mbrapa',
                        next: 'Përpara',
                        today: 'sot',
                        month: 'Muaj',
                        week: 'Javë',
                        day: 'Ditë',
                        list: 'Listë'
                    },
                    weekText: 'Ja',
                    allDayText: 'Gjithë ditën',
                    moreLinkText: function (e) {
                        return '+më tepër ' + e
                    },
                    noEventsText: 'Nuk ka evente për të shfaqur'
                },
                {
                    code: 'sr-cyrl',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Претходна',
                        next: 'следећи',
                        today: 'Данас',
                        month: 'Месец',
                        week: 'Недеља',
                        day: 'Дан',
                        list: 'Планер'
                    },
                    weekText: 'Сед',
                    allDayText: 'Цео дан',
                    moreLinkText: function (e) {
                        return '+ још ' + e
                    },
                    noEventsText: 'Нема догађаја за приказ'
                },
                {
                    code: 'sr',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Prethodna',
                        next: 'Sledeći',
                        today: 'Danas',
                        month: 'Mеsеc',
                        week: 'Nеdеlja',
                        day: 'Dan',
                        list: 'Planеr'
                    },
                    weekText: 'Sed',
                    allDayText: 'Cеo dan',
                    moreLinkText: function (e) {
                        return '+ još ' + e
                    },
                    noEventsText: 'Nеma događaja za prikaz'
                },
                {
                    code: 'sv',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Förra',
                        next: 'Nästa',
                        today: 'Idag',
                        month: 'Månad',
                        week: 'Vecka',
                        day: 'Dag',
                        list: 'Program'
                    },
                    buttonHints: {
                        prev: e => `Föregående ${e.toLocaleLowerCase()}`,
                        next: e => `Nästa ${e.toLocaleLowerCase()}`,
                        today: e => ('Program' === e ? 'Detta' : 'Denna') + ' ' + e.toLocaleLowerCase()
                    },
                    viewHint: '$0 vy',
                    navLinkHint: 'Gå till $0',
                    moreLinkHint: e => `Visa ytterligare ${e} händelse${1 === e ? '' : 'r'}`,
                    weekText: 'v.',
                    weekTextLong: 'Vecka',
                    allDayText: 'Heldag',
                    moreLinkText: 'till',
                    noEventsText: 'Inga händelser att visa',
                    closeHint: 'Stäng',
                    timeHint: 'Klockan',
                    eventHint: 'Händelse'
                },
                {
                    code: 'ta-in',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'முந்தைய',
                        next: 'அடுத்தது',
                        today: 'இன்று',
                        month: 'மாதம்',
                        week: 'வாரம்',
                        day: 'நாள்',
                        list: 'தினசரி அட்டவணை'
                    },
                    weekText: 'வாரம்',
                    allDayText: 'நாள் முழுவதும்',
                    moreLinkText: function (e) {
                        return '+ மேலும் ' + e
                    },
                    noEventsText: 'காண்பிக்க நிகழ்வுகள் இல்லை'
                },
                {
                    code: 'th',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'ก่อนหน้า',
                        next: 'ถัดไป',
                        prevYear: 'ปีก่อนหน้า',
                        nextYear: 'ปีถัดไป',
                        year: 'ปี',
                        today: 'วันนี้',
                        month: 'เดือน',
                        week: 'สัปดาห์',
                        day: 'วัน',
                        list: 'กำหนดการ'
                    },
                    weekText: 'สัปดาห์',
                    allDayText: 'ตลอดวัน',
                    moreLinkText: 'เพิ่มเติม',
                    noEventsText: 'ไม่มีกิจกรรมที่จะแสดง'
                },
                {
                    code: 'tr',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'geri',
                        next: 'ileri',
                        today: 'bugün',
                        month: 'Ay',
                        week: 'Hafta',
                        day: 'Gün',
                        list: 'Ajanda'
                    },
                    weekText: 'Hf',
                    allDayText: 'Tüm gün',
                    moreLinkText: 'daha fazla',
                    noEventsText: 'Gösterilecek etkinlik yok'
                },
                {
                    code: 'ug',
                    buttonText: {
                        month: 'ئاي',
                        week: 'ھەپتە',
                        day: 'كۈن',
                        list: 'كۈنتەرتىپ'
                    },
                    allDayText: 'پۈتۈن كۈن'
                },
                {
                    code: 'uk',
                    week: {
                        dow: 1,
                        doy: 7
                    },
                    buttonText: {
                        prev: 'Попередній',
                        next: 'далі',
                        today: 'Сьогодні',
                        month: 'Місяць',
                        week: 'Тиждень',
                        day: 'День',
                        list: 'Порядок денний'
                    },
                    weekText: 'Тиж',
                    allDayText: 'Увесь день',
                    moreLinkText: function (e) {
                        return '+ще ' + e + '...'
                    },
                    noEventsText: 'Немає подій для відображення'
                },
                {
                    code: 'uz',
                    buttonText: {
                        month: 'Oy',
                        week: 'Xafta',
                        day: 'Kun',
                        list: 'Kun tartibi'
                    },
                    allDayText: 'Kun bo\'yi',
                    moreLinkText: function (e) {
                        return '+ yana ' + e
                    },
                    noEventsText: 'Ko\'rsatish uchun voqealar yo\'q'
                },
                {
                    code: 'vi',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: 'Trước',
                        next: 'Tiếp',
                        today: 'Hôm nay',
                        month: 'Tháng',
                        week: 'Tuần',
                        day: 'Ngày',
                        list: 'Lịch biểu'
                    },
                    weekText: 'Tu',
                    allDayText: 'Cả ngày',
                    moreLinkText: function (e) {
                        return '+ thêm ' + e
                    },
                    noEventsText: 'Không có sự kiện để hiển thị'
                },
                {
                    code: 'zh-cn',
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    buttonText: {
                        prev: '上月',
                        next: '下月',
                        today: '今天',
                        month: '月',
                        week: '周',
                        day: '日',
                        list: '日程'
                    },
                    weekText: '周',
                    allDayText: '全天',
                    moreLinkText: function (e) {
                        return '另外 ' + e + ' 个'
                    },
                    noEventsText: '没有事件显示'
                },
                {
                    code: 'zh-tw',
                    buttonText: {
                        prev: '上月',
                        next: '下月',
                        today: '今天',
                        month: '月',
                        week: '週',
                        day: '天',
                        list: '活動列表'
                    },
                    weekText: '周',
                    allDayText: '整天',
                    moreLinkText: '顯示更多',
                    noEventsText: '没有任何活動'
                }
            ];
            t.Z = a
        },
        6456: function (e, t, n) {
            n(2262);
            var r = n(2649);
            e.exports = r('Array', 'at')
        },
        9662: function (e, t, n) {
            var r = n(7854),
                a = n(614),
                i = n(6330),
                o = r.TypeError;
            e.exports = function (e) {
                if (a(e)) return e;
                throw o(i(e) + ' is not a function')
            }
        },
        9483: function (e, t, n) {
            var r = n(7854),
                a = n(4411),
                i = n(6330),
                o = r.TypeError;
            e.exports = function (e) {
                if (a(e)) return e;
                throw o(i(e) + ' is not a constructor')
            }
        },
        6077: function (e, t, n) {
            var r = n(7854),
                a = n(614),
                i = r.String,
                o = r.TypeError;
            e.exports = function (e) {
                if ('object' == typeof e || a(e)) return e;
                throw o('Can\'t set ' + i(e) + ' as a prototype')
            }
        },
        1223: function (e, t, n) {
            var r = n(5112),
                a = n(30),
                i = n(3070),
                o = r('unscopables'),
                s = Array.prototype;
            null == s[o] && i.f(s, o, {
                configurable: !0,
                value: a(null)
            }),
                e.exports = function (e) {
                    s[o][e] = !0
                }
        },
        1530: function (e, t, n) {
            'use strict';
            var r = n(8710).charAt;
            e.exports = function (e, t, n) {
                return t + (n ? r(e, t).length : 1)
            }
        },
        5787: function (e, t, n) {
            var r = n(7854),
                a = n(7976),
                i = r.TypeError;
            e.exports = function (e, t) {
                if (a(t, e)) return e;
                throw i('Incorrect invocation')
            }
        },
        9670: function (e, t, n) {
            var r = n(7854),
                a = n(111),
                i = r.String,
                o = r.TypeError;
            e.exports = function (e) {
                if (a(e)) return e;
                throw o(i(e) + ' is not an object')
            }
        },
        1285: function (e, t, n) {
            'use strict';
            var r = n(7908),
                a = n(1400),
                i = n(6244);
            e.exports = function (e) {
                for (var t = r(this), n = i(t), o = arguments.length, s = a(o > 1 ? arguments[1] : void 0, n), u = o > 2 ? arguments[2] : void 0, l = void 0 === u ? n : a(u, n); l > s;) t[s++] = e;
                return t
            }
        },
        8533: function (e, t, n) {
            'use strict';
            var r = n(2092).forEach,
                a = n(9341)('forEach');
            e.exports = a ? [
            ].forEach : function (e) {
                return r(this, e, arguments.length > 1 ? arguments[1] : void 0)
            }
        },
        8457: function (e, t, n) {
            'use strict';
            var r = n(7854),
                a = n(9974),
                i = n(6916),
                o = n(7908),
                s = n(3411),
                u = n(7659),
                l = n(4411),
                d = n(6244),
                c = n(6135),
                m = n(8554),
                f = n(1246),
                h = r.Array;
            e.exports = function (e) {
                var t = o(e),
                    n = l(this),
                    r = arguments.length,
                    p = r > 1 ? arguments[1] : void 0,
                    g = void 0 !== p;
                g && (p = a(p, r > 2 ? arguments[2] : void 0));
                var v,
                    y,
                    w,
                    b,
                    k,
                    M,
                    E = f(t),
                    P = 0;
                if (!E || this == h && u(E)) for (v = d(t), y = n ? new this(v) : h(v); v > P; P++) M = g ? p(t[P], P) : t[P],
                    c(y, P, M);
                else for (k = (b = m(t, E)).next, y = n ? new this : [
                ]; !(w = i(k, b)).done; P++) M = g ? s(b, p, [
                    w.value,
                    P
                ], !0) : w.value,
                    c(y, P, M);
                return y.length = P,
                    y
            }
        },
        1318: function (e, t, n) {
            var r = n(5656),
                a = n(1400),
                i = n(6244),
                o = function (e) {
                    return function (t, n, o) {
                        var s,
                            u = r(t),
                            l = i(u),
                            d = a(o, l);
                        if (e && n != n) {
                            for (; l > d;) if ((s = u[d++]) != s) return !0
                        } else for (; l > d; d++) if ((e || d in u) && u[d] === n) return e || d || 0;
                        return !e && - 1
                    }
                };
            e.exports = {
                includes: o(!0),
                indexOf: o(!1)
            }
        },
        2092: function (e, t, n) {
            var r = n(9974),
                a = n(1702),
                i = n(8361),
                o = n(7908),
                s = n(6244),
                u = n(5417),
                l = a([].push),
                d = function (e) {
                    var t = 1 == e,
                        n = 2 == e,
                        a = 3 == e,
                        d = 4 == e,
                        c = 6 == e,
                        m = 7 == e,
                        f = 5 == e || c;
                    return function (h, p, g, v) {
                        for (var y, w, b = o(h), k = i(b), M = r(p, g), E = s(k), P = 0, x = v || u, S = t ? x(h, E) : n || m ? x(h, 0) : void 0; E > P; P++) if ((f || P in k) && (w = M(y = k[P], P, b), e)) if (t) S[P] = w;
                        else if (w) switch (e) {
                            case 3:
                                return !0;
                            case 5:
                                return y;
                            case 6:
                                return P;
                            case 2:
                                l(S, y)
                        } else switch (e) {
                            case 4:
                                return !1;
                            case 7:
                                l(S, y)
                        }
                        return c ? - 1 : a || d ? d : S
                    }
                };
            e.exports = {
                forEach: d(0),
                map: d(1),
                filter: d(2),
                some: d(3),
                every: d(4),
                find: d(5),
                findIndex: d(6),
                filterReject: d(7)
            }
        },
        1194: function (e, t, n) {
            var r = n(7293),
                a = n(5112),
                i = n(7392),
                o = a('species');
            e.exports = function (e) {
                return i >= 51 || !r((function () {
                    var t = [
                    ];
                    return (t.constructor = {
                    })[o] = function () {
                        return {
                            foo: 1
                        }
                    },
                        1 !== t[e](Boolean).foo
                }))
            }
        },
        9341: function (e, t, n) {
            'use strict';
            var r = n(7293);
            e.exports = function (e, t) {
                var n = [
                ][e];
                return !!n && r((function () {
                    n.call(null, t || function () {
                        return 1
                    }, 1)
                }))
            }
        },
        3671: function (e, t, n) {
            var r = n(7854),
                a = n(9662),
                i = n(7908),
                o = n(8361),
                s = n(6244),
                u = r.TypeError,
                l = function (e) {
                    return function (t, n, r, l) {
                        a(n);
                        var d = i(t),
                            c = o(d),
                            m = s(d),
                            f = e ? m - 1 : 0,
                            h = e ? - 1 : 1;
                        if (r < 2) for (; ;) {
                            if (f in c) {
                                l = c[f],
                                    f += h;
                                break
                            }
                            if (f += h, e ? f < 0 : m <= f) throw u('Reduce of empty array with no initial value')
                        }
                        for (; e ? f >= 0 : m > f; f += h) f in c && (l = n(l, c[f], f, d));
                        return l
                    }
                };
            e.exports = {
                left: l(!1),
                right: l(!0)
            }
        },
        1589: function (e, t, n) {
            var r = n(7854),
                a = n(1400),
                i = n(6244),
                o = n(6135),
                s = r.Array,
                u = Math.max;
            e.exports = function (e, t, n) {
                for (var r = i(e), l = a(t, r), d = a(void 0 === n ? r : n, r), c = s(u(d - l, 0)), m = 0; l < d; l++, m++) o(c, m, e[l]);
                return c.length = m,
                    c
            }
        },
        206: function (e, t, n) {
            var r = n(1702);
            e.exports = r([].slice)
        },
        4362: function (e, t, n) {
            var r = n(1589),
                a = Math.floor,
                i = function (e, t) {
                    var n = e.length,
                        u = a(n / 2);
                    return n < 8 ? o(e, t) : s(e, i(r(e, 0, u), t), i(r(e, u), t), t)
                },
                o = function (e, t) {
                    for (var n, r, a = e.length, i = 1; i < a;) {
                        for (r = i, n = e[i]; r && t(e[r - 1], n) > 0;) e[r] = e[--r];
                        r !== i++ && (e[r] = n)
                    }
                    return e
                },
                s = function (e, t, n, r) {
                    for (var a = t.length, i = n.length, o = 0, s = 0; o < a || s < i;) e[o + s] = o < a && s < i ? r(t[o], n[s]) <= 0 ? t[o++] : n[s++] : o < a ? t[o++] : n[s++];
                    return e
                };
            e.exports = i
        },
        7475: function (e, t, n) {
            var r = n(7854),
                a = n(3157),
                i = n(4411),
                o = n(111),
                s = n(5112)('species'),
                u = r.Array;
            e.exports = function (e) {
                var t;
                return a(e) && (t = e.constructor, (i(t) && (t === u || a(t.prototype)) || o(t) && null === (t = t[s])) && (t = void 0)),
                    void 0 === t ? u : t
            }
        },
        5417: function (e, t, n) {
            var r = n(7475);
            e.exports = function (e, t) {
                return new (r(e))(0 === t ? 0 : t)
            }
        },
        3411: function (e, t, n) {
            var r = n(9670),
                a = n(9212);
            e.exports = function (e, t, n, i) {
                try {
                    return i ? t(r(n)[0], n[1]) : t(n)
                } catch (t) {
                    a(e, 'throw', t)
                }
            }
        },
        7072: function (e, t, n) {
            var r = n(5112)('iterator'),
                a = !1;
            try {
                var i = 0,
                    o = {
                        next: function () {
                            return {
                                done: !!i++
                            }
                        },
                        return: function () {
                            a = !0
                        }
                    };
                o[r] = function () {
                    return this
                },
                    Array.from(o, (function () {
                        throw 2
                    }))
            } catch (e) {
            }
            e.exports = function (e, t) {
                if (!t && !a) return !1;
                var n = !1;
                try {
                    var i = {
                    };
                    i[r] = function () {
                        return {
                            next: function () {
                                return {
                                    done: n = !0
                                }
                            }
                        }
                    },
                        e(i)
                } catch (e) {
                }
                return n
            }
        },
        4326: function (e, t, n) {
            var r = n(1702),
                a = r({
                }.toString),
                i = r(''.slice);
            e.exports = function (e) {
                return i(a(e), 8, - 1)
            }
        },
        648: function (e, t, n) {
            var r = n(7854),
                a = n(1694),
                i = n(614),
                o = n(4326),
                s = n(5112)('toStringTag'),
                u = r.Object,
                l = 'Arguments' == o(function () {
                    return arguments
                }());
            e.exports = a ? o : function (e) {
                var t,
                    n,
                    r;
                return void 0 === e ? 'Undefined' : null === e ? 'Null' : 'string' == typeof (n = function (e, t) {
                    try {
                        return e[t]
                    } catch (e) {
                    }
                }(t = u(e), s)) ? n : l ? o(t) : 'Object' == (r = o(t)) && i(t.callee) ? 'Arguments' : r
            }
        },
        7741: function (e, t, n) {
            var r = n(1702)(''.replace),
                a = String(Error('zxcasd').stack),
                i = /\n\s*at [^:]*:[^\n]*/,
                o = i.test(a);
            e.exports = function (e, t) {
                if (o && 'string' == typeof e) for (; t--;) e = r(e, i, '');
                return e
            }
        },
        9920: function (e, t, n) {
            var r = n(2597),
                a = n(3887),
                i = n(1236),
                o = n(3070);
            e.exports = function (e, t, n) {
                for (var s = a(t), u = o.f, l = i.f, d = 0; d < s.length; d++) {
                    var c = s[d];
                    r(e, c) || n && r(n, c) || u(e, c, l(t, c))
                }
            }
        },
        4964: function (e, t, n) {
            var r = n(5112)('match');
            e.exports = function (e) {
                var t = /./;
                try {
                    '/./'[e](t)
                } catch (n) {
                    try {
                        return t[r] = !1,
                            '/./'[e](t)
                    } catch (e) {
                    }
                }
                return !1
            }
        },
        8544: function (e, t, n) {
            var r = n(7293);
            e.exports = !r((function () {
                function e() {
                }
                return e.prototype.constructor = null,
                    Object.getPrototypeOf(new e) !== e.prototype
            }))
        },
        4994: function (e, t, n) {
            'use strict';
            var r = n(3383).IteratorPrototype,
                a = n(30),
                i = n(9114),
                o = n(8003),
                s = n(7497),
                u = function () {
                    return this
                };
            e.exports = function (e, t, n, l) {
                var d = t + ' Iterator';
                return e.prototype = a(r, {
                    next: i(+ !l, n)
                }),
                    o(e, d, !1, !0),
                    s[d] = u,
                    e
            }
        },
        8880: function (e, t, n) {
            var r = n(9781),
                a = n(3070),
                i = n(9114);
            e.exports = r ? function (e, t, n) {
                return a.f(e, t, i(1, n))
            }
                : function (e, t, n) {
                    return e[t] = n,
                        e
                }
        },
        9114: function (e) {
            e.exports = function (e, t) {
                return {
                    enumerable: !(1 & e),
                    configurable: !(2 & e),
                    writable: !(4 & e),
                    value: t
                }
            }
        },
        6135: function (e, t, n) {
            'use strict';
            var r = n(4948),
                a = n(3070),
                i = n(9114);
            e.exports = function (e, t, n) {
                var o = r(t);
                o in e ? a.f(e, o, i(0, n)) : e[o] = n
            }
        },
        654: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(6916),
                i = n(1913),
                o = n(6530),
                s = n(614),
                u = n(4994),
                l = n(9518),
                d = n(7674),
                c = n(8003),
                m = n(8880),
                f = n(1320),
                h = n(5112),
                p = n(7497),
                g = n(3383),
                v = o.PROPER,
                y = o.CONFIGURABLE,
                w = g.IteratorPrototype,
                b = g.BUGGY_SAFARI_ITERATORS,
                k = h('iterator'),
                M = 'keys',
                E = 'values',
                P = 'entries',
                x = function () {
                    return this
                };
            e.exports = function (e, t, n, o, h, g, S) {
                u(n, t, o);
                var T,
                    C,
                    W,
                    j = function (e) {
                        if (e === h && R) return R;
                        if (!b && e in I) return I[e];
                        switch (e) {
                            case M:
                            case E:
                            case P:
                                return function () {
                                    return new n(this, e)
                                }
                        }
                        return function () {
                            return new n(this)
                        }
                    },
                    D = t + ' Iterator',
                    N = !1,
                    I = e.prototype,
                    z = I[k] || I['@@iterator'] || h && I[h],
                    R = !b && z || j(h),
                    A = 'Array' == t && I.entries || z;
                if (A && (T = l(A.call(new e))) !== Object.prototype && T.next && (i || l(T) === w || (d ? d(T, w) : s(T[k]) || f(T, k, x)), c(T, D, !0, !0), i && (p[D] = x)), v && h == E && z && z.name !== E && (!i && y ? m(I, 'name', E) : (N = !0, R = function () {
                    return a(z, this)
                })), h) if (C = {
                    values: j(E),
                    keys: g ? R : j(M),
                    entries: j(P)
                }, S) for (W in C) (b || N || !(W in I)) && f(I, W, C[W]);
                    else r({
                        target: t,
                        proto: !0,
                        forced: b || N
                    }, C);
                return i && !S || I[k] === R || f(I, k, R, {
                    name: h
                }),
                    p[t] = R,
                    C
            }
        },
        7235: function (e, t, n) {
            var r = n(857),
                a = n(2597),
                i = n(6061),
                o = n(3070).f;
            e.exports = function (e) {
                var t = r.Symbol || (r.Symbol = {
                });
                a(t, e) || o(t, e, {
                    value: i.f(e)
                })
            }
        },
        9781: function (e, t, n) {
            var r = n(7293);
            e.exports = !r((function () {
                return 7 != Object.defineProperty({
                }, 1, {
                    get: function () {
                        return 7
                    }
                })[1]
            }))
        },
        317: function (e, t, n) {
            var r = n(7854),
                a = n(111),
                i = r.document,
                o = a(i) && a(i.createElement);
            e.exports = function (e) {
                return o ? i.createElement(e) : {
                }
            }
        },
        8324: function (e) {
            e.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
            }
        },
        8509: function (e, t, n) {
            var r = n(317)('span').classList,
                a = r && r.constructor && r.constructor.prototype;
            e.exports = a === Object.prototype ? void 0 : a
        },
        8886: function (e, t, n) {
            var r = n(8113).match(/firefox\/(\d+)/i);
            e.exports = !!r && + r[1]
        },
        7871: function (e) {
            e.exports = 'object' == typeof window
        },
        256: function (e, t, n) {
            var r = n(8113);
            e.exports = /MSIE|Trident/.test(r)
        },
        1528: function (e, t, n) {
            var r = n(8113),
                a = n(7854);
            e.exports = /ipad|iphone|ipod/i.test(r) && void 0 !== a.Pebble
        },
        6833: function (e, t, n) {
            var r = n(8113);
            e.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(r)
        },
        5268: function (e, t, n) {
            var r = n(4326),
                a = n(7854);
            e.exports = 'process' == r(a.process)
        },
        1036: function (e, t, n) {
            var r = n(8113);
            e.exports = /web0s(?!.*chrome)/i.test(r)
        },
        8113: function (e, t, n) {
            var r = n(5005);
            e.exports = r('navigator', 'userAgent') || ''
        },
        7392: function (e, t, n) {
            var r,
                a,
                i = n(7854),
                o = n(8113),
                s = i.process,
                u = i.Deno,
                l = s && s.versions || u && u.version,
                d = l && l.v8;
            d && (a = (r = d.split('.'))[0] > 0 && r[0] < 4 ? 1 : + (r[0] + r[1])),
                !a && o && (!(r = o.match(/Edge\/(\d+)/)) || r[1] >= 74) && (r = o.match(/Chrome\/(\d+)/)) && (a = + r[1]),
                e.exports = a
        },
        8008: function (e, t, n) {
            var r = n(8113).match(/AppleWebKit\/(\d+)\./);
            e.exports = !!r && + r[1]
        },
        2649: function (e, t, n) {
            var r = n(7854),
                a = n(1702);
            e.exports = function (e, t) {
                return a(r[e].prototype[t])
            }
        },
        748: function (e) {
            e.exports = [
                'constructor',
                'hasOwnProperty',
                'isPrototypeOf',
                'propertyIsEnumerable',
                'toLocaleString',
                'toString',
                'valueOf'
            ]
        },
        2914: function (e, t, n) {
            var r = n(7293),
                a = n(9114);
            e.exports = !r((function () {
                var e = Error('a');
                return !('stack' in e) || (Object.defineProperty(e, 'stack', a(1, 7)), 7 !== e.stack)
            }))
        },
        2109: function (e, t, n) {
            var r = n(7854),
                a = n(1236).f,
                i = n(8880),
                o = n(1320),
                s = n(3505),
                u = n(9920),
                l = n(4705);
            e.exports = function (e, t) {
                var n,
                    d,
                    c,
                    m,
                    f,
                    h = e.target,
                    p = e.global,
                    g = e.stat;
                if (n = p ? r : g ? r[h] || s(h, {
                }) : (r[h] || {
                }).prototype) for (d in t) {
                    if (m = t[d], c = e.noTargetGet ? (f = a(n, d)) && f.value : n[d], !l(p ? d : h + (g ? '.' : '#') + d, e.forced) && void 0 !== c) {
                        if (typeof m == typeof c) continue;
                        u(m, c)
                    } (e.sham || c && c.sham) && i(m, 'sham', !0),
                        o(n, d, m, e)
                }
            }
        },
        7293: function (e) {
            e.exports = function (e) {
                try {
                    return !!e()
                } catch (e) {
                    return !0
                }
            }
        },
        7007: function (e, t, n) {
            'use strict';
            n(4916);
            var r = n(1702),
                a = n(1320),
                i = n(2261),
                o = n(7293),
                s = n(5112),
                u = n(8880),
                l = s('species'),
                d = RegExp.prototype;
            e.exports = function (e, t, n, c) {
                var m = s(e),
                    f = !o((function () {
                        var t = {
                        };
                        return t[m] = function () {
                            return 7
                        },
                            7 != ''[e](t)
                    })),
                    h = f && !o((function () {
                        var t = !1,
                            n = /a/;
                        return 'split' === e && ((n = {
                        }).constructor = {
                        }, n.constructor[l] = function () {
                            return n
                        }, n.flags = '', n[m] = /./[m]),
                            n.exec = function () {
                                return t = !0,
                                    null
                            },
                            n[m](''),
                            !t
                    }));
                if (!f || !h || n) {
                    var p = r(/./[m]),
                        g = t(m, ''[e], (function (e, t, n, a, o) {
                            var s = r(e),
                                u = t.exec;
                            return u === i || u === d.exec ? f && !o ? {
                                done: !0,
                                value: p(t, n, a)
                            }
                                : {
                                    done: !0,
                                    value: s(n, t, a)
                                }
                                : {
                                    done: !1
                                }
                        }));
                    a(String.prototype, e, g[0]),
                        a(d, m, g[1])
                }
                c && u(d[m], 'sham', !0)
            }
        },
        6790: function (e, t, n) {
            'use strict';
            var r = n(7854),
                a = n(3157),
                i = n(6244),
                o = n(9974),
                s = r.TypeError,
                u = function (e, t, n, r, l, d, c, m) {
                    for (var f, h, p = l, g = 0, v = !!c && o(c, m); g < r;) {
                        if (g in n) {
                            if (f = v ? v(n[g], g, t) : n[g], d > 0 && a(f)) h = i(f),
                                p = u(e, t, f, h, p, d - 1) - 1;
                            else {
                                if (p >= 9007199254740991) throw s('Exceed the acceptable array length');
                                e[p] = f
                            }
                            p++
                        }
                        g++
                    }
                    return p
                };
            e.exports = u
        },
        2104: function (e, t, n) {
            var r = n(4374),
                a = Function.prototype,
                i = a.apply,
                o = a.call;
            e.exports = 'object' == typeof Reflect && Reflect.apply || (r ? o.bind(i) : function () {
                return o.apply(i, arguments)
            })
        },
        9974: function (e, t, n) {
            var r = n(1702),
                a = n(9662),
                i = n(4374),
                o = r(r.bind);
            e.exports = function (e, t) {
                return a(e),
                    void 0 === t ? e : i ? o(e, t) : function () {
                        return e.apply(t, arguments)
                    }
            }
        },
        4374: function (e, t, n) {
            var r = n(7293);
            e.exports = !r((function () {
                var e = function () {
                }.bind();
                return 'function' != typeof e || e.hasOwnProperty('prototype')
            }))
        },
        7065: function (e, t, n) {
            'use strict';
            var r = n(7854),
                a = n(1702),
                i = n(9662),
                o = n(111),
                s = n(2597),
                u = n(206),
                l = n(4374),
                d = r.Function,
                c = a([].concat),
                m = a([].join),
                f = {
                },
                h = function (e, t, n) {
                    if (!s(f, t)) {
                        for (var r = [
                        ], a = 0; a < t; a++) r[a] = 'a[' + a + ']';
                        f[t] = d('C,a', 'return new C(' + m(r, ',') + ')')
                    }
                    return f[t](e, n)
                };
            e.exports = l ? d.bind : function (e) {
                var t = i(this),
                    n = t.prototype,
                    r = u(arguments, 1),
                    a = function () {
                        var n = c(r, u(arguments));
                        return this instanceof a ? h(t, n.length, n) : t.apply(e, n)
                    };
                return o(n) && (a.prototype = n),
                    a
            }
        },
        6916: function (e, t, n) {
            var r = n(4374),
                a = Function.prototype.call;
            e.exports = r ? a.bind(a) : function () {
                return a.apply(a, arguments)
            }
        },
        6530: function (e, t, n) {
            var r = n(9781),
                a = n(2597),
                i = Function.prototype,
                o = r && Object.getOwnPropertyDescriptor,
                s = a(i, 'name'),
                u = s && 'something' === function () {
                }.name,
                l = s && (!r || r && o(i, 'name').configurable);
            e.exports = {
                EXISTS: s,
                PROPER: u,
                CONFIGURABLE: l
            }
        },
        1702: function (e, t, n) {
            var r = n(4374),
                a = Function.prototype,
                i = a.bind,
                o = a.call,
                s = r && i.bind(o, o);
            e.exports = r ? function (e) {
                return e && s(e)
            }
                : function (e) {
                    return e && function () {
                        return o.apply(e, arguments)
                    }
                }
        },
        5005: function (e, t, n) {
            var r = n(7854),
                a = n(614),
                i = function (e) {
                    return a(e) ? e : void 0
                };
            e.exports = function (e, t) {
                return arguments.length < 2 ? i(r[e]) : r[e] && r[e][t]
            }
        },
        1246: function (e, t, n) {
            var r = n(648),
                a = n(8173),
                i = n(7497),
                o = n(5112)('iterator');
            e.exports = function (e) {
                if (null != e) return a(e, o) || a(e, '@@iterator') || i[r(e)]
            }
        },
        8554: function (e, t, n) {
            var r = n(7854),
                a = n(6916),
                i = n(9662),
                o = n(9670),
                s = n(6330),
                u = n(1246),
                l = r.TypeError;
            e.exports = function (e, t) {
                var n = arguments.length < 2 ? u(e) : t;
                if (i(n)) return o(a(n, e));
                throw l(s(e) + ' is not iterable')
            }
        },
        8173: function (e, t, n) {
            var r = n(9662);
            e.exports = function (e, t) {
                var n = e[t];
                return null == n ? void 0 : r(n)
            }
        },
        647: function (e, t, n) {
            var r = n(1702),
                a = n(7908),
                i = Math.floor,
                o = r(''.charAt),
                s = r(''.replace),
                u = r(''.slice),
                l = /\$([$&'`]|\d{1,2}|<[^>]*>)/g,
                d = /\$([$&'`]|\d{1,2})/g;
            e.exports = function (e, t, n, r, c, m) {
                var f = n + e.length,
                    h = r.length,
                    p = d;
                return void 0 !== c && (c = a(c), p = l),
                    s(m, p, (function (a, s) {
                        var l;
                        switch (o(s, 0)) {
                            case '$':
                                return '$';
                            case '&':
                                return e;
                            case '`':
                                return u(t, 0, n);
                            case '\'':
                                return u(t, f);
                            case '<':
                                l = c[u(s, 1, - 1)];
                                break;
                            default:
                                var d = + s;
                                if (0 === d) return a;
                                if (d > h) {
                                    var m = i(d / 10);
                                    return 0 === m ? a : m <= h ? void 0 === r[m - 1] ? o(s, 1) : r[m - 1] + o(s, 1) : a
                                }
                                l = r[d - 1]
                        }
                        return void 0 === l ? '' : l
                    }))
            }
        },
        7854: function (e, t, n) {
            var r = function (e) {
                return e && e.Math == Math && e
            };
            e.exports = r('object' == typeof globalThis && globalThis) || r('object' == typeof window && window) || r('object' == typeof self && self) || r('object' == typeof n.g && n.g) || function () {
                return this
            }() || Function('return this')()
        },
        2597: function (e, t, n) {
            var r = n(1702),
                a = n(7908),
                i = r({
                }.hasOwnProperty);
            e.exports = Object.hasOwn || function (e, t) {
                return i(a(e), t)
            }
        },
        3501: function (e) {
            e.exports = {
            }
        },
        842: function (e, t, n) {
            var r = n(7854);
            e.exports = function (e, t) {
                var n = r.console;
                n && n.error && (1 == arguments.length ? n.error(e) : n.error(e, t))
            }
        },
        490: function (e, t, n) {
            var r = n(5005);
            e.exports = r('document', 'documentElement')
        },
        4664: function (e, t, n) {
            var r = n(9781),
                a = n(7293),
                i = n(317);
            e.exports = !r && !a((function () {
                return 7 != Object.defineProperty(i('div'), 'a', {
                    get: function () {
                        return 7
                    }
                }).a
            }))
        },
        8361: function (e, t, n) {
            var r = n(7854),
                a = n(1702),
                i = n(7293),
                o = n(4326),
                s = r.Object,
                u = a(''.split);
            e.exports = i((function () {
                return !s('z').propertyIsEnumerable(0)
            })) ? function (e) {
                return 'String' == o(e) ? u(e, '') : s(e)
            }
                : s
        },
        9587: function (e, t, n) {
            var r = n(614),
                a = n(111),
                i = n(7674);
            e.exports = function (e, t, n) {
                var o,
                    s;
                return i && r(o = t.constructor) && o !== n && a(s = o.prototype) && s !== n.prototype && i(e, s),
                    e
            }
        },
        2788: function (e, t, n) {
            var r = n(1702),
                a = n(614),
                i = n(5465),
                o = r(Function.toString);
            a(i.inspectSource) || (i.inspectSource = function (e) {
                return o(e)
            }),
                e.exports = i.inspectSource
        },
        8340: function (e, t, n) {
            var r = n(111),
                a = n(8880);
            e.exports = function (e, t) {
                r(t) && 'cause' in t && a(e, 'cause', t.cause)
            }
        },
        9909: function (e, t, n) {
            var r,
                a,
                i,
                o = n(8536),
                s = n(7854),
                u = n(1702),
                l = n(111),
                d = n(8880),
                c = n(2597),
                m = n(5465),
                f = n(6200),
                h = n(3501),
                p = 'Object already initialized',
                g = s.TypeError,
                v = s.WeakMap;
            if (o || m.state) {
                var y = m.state || (m.state = new v),
                    w = u(y.get),
                    b = u(y.has),
                    k = u(y.set);
                r = function (e, t) {
                    if (b(y, e)) throw new g(p);
                    return t.facade = e,
                        k(y, e, t),
                        t
                },
                    a = function (e) {
                        return w(y, e) || {
                        }
                    },
                    i = function (e) {
                        return b(y, e)
                    }
            } else {
                var M = f('state');
                h[M] = !0,
                    r = function (e, t) {
                        if (c(e, M)) throw new g(p);
                        return t.facade = e,
                            d(e, M, t),
                            t
                    },
                    a = function (e) {
                        return c(e, M) ? e[M] : {
                        }
                    },
                    i = function (e) {
                        return c(e, M)
                    }
            }
            e.exports = {
                set: r,
                get: a,
                has: i,
                enforce: function (e) {
                    return i(e) ? a(e) : r(e, {
                    })
                },
                getterFor: function (e) {
                    return function (t) {
                        var n;
                        if (!l(t) || (n = a(t)).type !== e) throw g('Incompatible receiver, ' + e + ' required');
                        return n
                    }
                }
            }
        },
        7659: function (e, t, n) {
            var r = n(5112),
                a = n(7497),
                i = r('iterator'),
                o = Array.prototype;
            e.exports = function (e) {
                return void 0 !== e && (a.Array === e || o[i] === e)
            }
        },
        3157: function (e, t, n) {
            var r = n(4326);
            e.exports = Array.isArray || function (e) {
                return 'Array' == r(e)
            }
        },
        614: function (e) {
            e.exports = function (e) {
                return 'function' == typeof e
            }
        },
        4411: function (e, t, n) {
            var r = n(1702),
                a = n(7293),
                i = n(614),
                o = n(648),
                s = n(5005),
                u = n(2788),
                l = function () {
                },
                d = [
                ],
                c = s('Reflect', 'construct'),
                m = /^\s*(?:class|function)\b/,
                f = r(m.exec),
                h = !m.exec(l),
                p = function (e) {
                    if (!i(e)) return !1;
                    try {
                        return c(l, d, e),
                            !0
                    } catch (e) {
                        return !1
                    }
                },
                g = function (e) {
                    if (!i(e)) return !1;
                    switch (o(e)) {
                        case 'AsyncFunction':
                        case 'GeneratorFunction':
                        case 'AsyncGeneratorFunction':
                            return !1
                    }
                    try {
                        return h || !!f(m, u(e))
                    } catch (e) {
                        return !0
                    }
                };
            g.sham = !0,
                e.exports = !c || a((function () {
                    var e;
                    return p(p.call) || !p(Object) || !p((function () {
                        e = !0
                    })) || e
                })) ? g : p
        },
        4705: function (e, t, n) {
            var r = n(7293),
                a = n(614),
                i = /#|\.prototype\./,
                o = function (e, t) {
                    var n = u[s(e)];
                    return n == d || n != l && (a(t) ? r(t) : !!t)
                },
                s = o.normalize = function (e) {
                    return String(e).replace(i, '.').toLowerCase()
                },
                u = o.data = {
                },
                l = o.NATIVE = 'N',
                d = o.POLYFILL = 'P';
            e.exports = o
        },
        111: function (e, t, n) {
            var r = n(614);
            e.exports = function (e) {
                return 'object' == typeof e ? null !== e : r(e)
            }
        },
        1913: function (e) {
            e.exports = !1
        },
        7850: function (e, t, n) {
            var r = n(111),
                a = n(4326),
                i = n(5112)('match');
            e.exports = function (e) {
                var t;
                return r(e) && (void 0 !== (t = e[i]) ? !!t : 'RegExp' == a(e))
            }
        },
        2190: function (e, t, n) {
            var r = n(7854),
                a = n(5005),
                i = n(614),
                o = n(7976),
                s = n(3307),
                u = r.Object;
            e.exports = s ? function (e) {
                return 'symbol' == typeof e
            }
                : function (e) {
                    var t = a('Symbol');
                    return i(t) && o(t.prototype, u(e))
                }
        },
        408: function (e, t, n) {
            var r = n(7854),
                a = n(9974),
                i = n(6916),
                o = n(9670),
                s = n(6330),
                u = n(7659),
                l = n(6244),
                d = n(7976),
                c = n(8554),
                m = n(1246),
                f = n(9212),
                h = r.TypeError,
                p = function (e, t) {
                    this.stopped = e,
                        this.result = t
                },
                g = p.prototype;
            e.exports = function (e, t, n) {
                var r,
                    v,
                    y,
                    w,
                    b,
                    k,
                    M,
                    E = n && n.that,
                    P = !(!n || !n.AS_ENTRIES),
                    x = !(!n || !n.IS_ITERATOR),
                    S = !(!n || !n.INTERRUPTED),
                    T = a(t, E),
                    C = function (e) {
                        return r && f(r, 'normal', e),
                            new p(!0, e)
                    },
                    W = function (e) {
                        return P ? (o(e), S ? T(e[0], e[1], C) : T(e[0], e[1])) : S ? T(e, C) : T(e)
                    };
                if (x) r = e;
                else {
                    if (!(v = m(e))) throw h(s(e) + ' is not iterable');
                    if (u(v)) {
                        for (y = 0, w = l(e); w > y; y++) if ((b = W(e[y])) && d(g, b)) return b;
                        return new p(!1)
                    }
                    r = c(e, v)
                }
                for (k = r.next; !(M = i(k, r)).done;) {
                    try {
                        b = W(M.value)
                    } catch (e) {
                        f(r, 'throw', e)
                    }
                    if ('object' == typeof b && b && d(g, b)) return b
                }
                return new p(!1)
            }
        },
        9212: function (e, t, n) {
            var r = n(6916),
                a = n(9670),
                i = n(8173);
            e.exports = function (e, t, n) {
                var o,
                    s;
                a(e);
                try {
                    if (!(o = i(e, 'return'))) {
                        if ('throw' === t) throw n;
                        return n
                    }
                    o = r(o, e)
                } catch (e) {
                    s = !0,
                        o = e
                }
                if ('throw' === t) throw n;
                if (s) throw o;
                return a(o),
                    n
            }
        },
        3383: function (e, t, n) {
            'use strict';
            var r,
                a,
                i,
                o = n(7293),
                s = n(614),
                u = n(30),
                l = n(9518),
                d = n(1320),
                c = n(5112),
                m = n(1913),
                f = c('iterator'),
                h = !1;
            [
            ].keys && ('next' in (i = [
            ].keys()) ? (a = l(l(i))) !== Object.prototype && (r = a) : h = !0),
                null == r || o((function () {
                    var e = {
                    };
                    return r[f].call(e) !== e
                })) ? r = {
                }
                    : m && (r = u(r)),
                s(r[f]) || d(r, f, (function () {
                    return this
                })),
                e.exports = {
                    IteratorPrototype: r,
                    BUGGY_SAFARI_ITERATORS: h
                }
        },
        7497: function (e) {
            e.exports = {
            }
        },
        6244: function (e, t, n) {
            var r = n(7466);
            e.exports = function (e) {
                return r(e.length)
            }
        },
        5948: function (e, t, n) {
            var r,
                a,
                i,
                o,
                s,
                u,
                l,
                d,
                c = n(7854),
                m = n(9974),
                f = n(1236).f,
                h = n(261).set,
                p = n(6833),
                g = n(1528),
                v = n(1036),
                y = n(5268),
                w = c.MutationObserver || c.WebKitMutationObserver,
                b = c.document,
                k = c.process,
                M = c.Promise,
                E = f(c, 'queueMicrotask'),
                P = E && E.value;
            P || (r = function () {
                var e,
                    t;
                for (y && (e = k.domain) && e.exit(); a;) {
                    t = a.fn,
                        a = a.next;
                    try {
                        t()
                    } catch (e) {
                        throw a ? o() : i = void 0,
                        e
                    }
                }
                i = void 0,
                    e && e.enter()
            }, p || y || v || !w || !b ? !g && M && M.resolve ? ((l = M.resolve(void 0)).constructor = M, d = m(l.then, l), o = function () {
                d(r)
            }) : y ? o = function () {
                k.nextTick(r)
            }
                : (h = m(h, c), o = function () {
                    h(r)
                }) : (s = !0, u = b.createTextNode(''), new w(r).observe(u, {
                    characterData: !0
                }), o = function () {
                    u.data = s = !s
                })),
                e.exports = P || function (e) {
                    var t = {
                        fn: e,
                        next: void 0
                    };
                    i && (i.next = t),
                        a || (a = t, o()),
                        i = t
                }
        },
        3366: function (e, t, n) {
            var r = n(7854);
            e.exports = r.Promise
        },
        133: function (e, t, n) {
            var r = n(7392),
                a = n(7293);
            e.exports = !!Object.getOwnPropertySymbols && !a((function () {
                var e = Symbol();
                return !String(e) || !(Object(e) instanceof Symbol) || !Symbol.sham && r && r < 41
            }))
        },
        8536: function (e, t, n) {
            var r = n(7854),
                a = n(614),
                i = n(2788),
                o = r.WeakMap;
            e.exports = a(o) && /native code/.test(i(o))
        },
        8523: function (e, t, n) {
            'use strict';
            var r = n(9662),
                a = function (e) {
                    var t,
                        n;
                    this.promise = new e((function (e, r) {
                        if (void 0 !== t || void 0 !== n) throw TypeError('Bad Promise constructor');
                        t = e,
                            n = r
                    })),
                        this.resolve = r(t),
                        this.reject = r(n)
                };
            e.exports.f = function (e) {
                return new a(e)
            }
        },
        6277: function (e, t, n) {
            var r = n(1340);
            e.exports = function (e, t) {
                return void 0 === e ? arguments.length < 2 ? '' : t : r(e)
            }
        },
        3929: function (e, t, n) {
            var r = n(7854),
                a = n(7850),
                i = r.TypeError;
            e.exports = function (e) {
                if (a(e)) throw i('The method doesn\'t accept regular expressions');
                return e
            }
        },
        30: function (e, t, n) {
            var r,
                a = n(9670),
                i = n(6048),
                o = n(748),
                s = n(3501),
                u = n(490),
                l = n(317),
                d = n(6200)('IE_PROTO'),
                c = function () {
                },
                m = function (e) {
                    return '<script>' + e + '</script>'
                },
                f = function (e) {
                    e.write(m('')),
                        e.close();
                    var t = e.parentWindow.Object;
                    return e = null,
                        t
                },
                h = function () {
                    try {
                        r = new ActiveXObject('htmlfile')
                    } catch (e) {
                    }
                    var e,
                        t;
                    h = 'undefined' != typeof document ? document.domain && r ? f(r) : ((t = l('iframe')).style.display = 'none', u.appendChild(t), t.src = String('javascript:'), (e = t.contentWindow.document).open(), e.write(m('document.F=Object')), e.close(), e.F) : f(r);
                    for (var n = o.length; n--;) delete h.prototype[o[n]];
                    return h()
                };
            s[d] = !0,
                e.exports = Object.create || function (e, t) {
                    var n;
                    return null !== e ? (c.prototype = a(e), n = new c, c.prototype = null, n[d] = e) : n = h(),
                        void 0 === t ? n : i.f(n, t)
                }
        },
        6048: function (e, t, n) {
            var r = n(9781),
                a = n(3353),
                i = n(3070),
                o = n(9670),
                s = n(5656),
                u = n(1956);
            t.f = r && !a ? Object.defineProperties : function (e, t) {
                o(e);
                for (var n, r = s(t), a = u(t), l = a.length, d = 0; l > d;) i.f(e, n = a[d++], r[n]);
                return e
            }
        },
        3070: function (e, t, n) {
            var r = n(7854),
                a = n(9781),
                i = n(4664),
                o = n(3353),
                s = n(9670),
                u = n(4948),
                l = r.TypeError,
                d = Object.defineProperty,
                c = Object.getOwnPropertyDescriptor;
            t.f = a ? o ? function (e, t, n) {
                if (s(e), t = u(t), s(n), 'function' == typeof e && 'prototype' === t && 'value' in n && 'writable' in n && !n.writable) {
                    var r = c(e, t);
                    r && r.writable && (e[t] = n.value, n = {
                        configurable: 'configurable' in n ? n.configurable : r.configurable,
                        enumerable: 'enumerable' in n ? n.enumerable : r.enumerable,
                        writable: !1
                    })
                }
                return d(e, t, n)
            }
                : d : function (e, t, n) {
                    if (s(e), t = u(t), s(n), i) try {
                        return d(e, t, n)
                    } catch (e) {
                    }
                    if ('get' in n || 'set' in n) throw l('Accessors not supported');
                    return 'value' in n && (e[t] = n.value),
                        e
                }
        },
        1236: function (e, t, n) {
            var r = n(9781),
                a = n(6916),
                i = n(5296),
                o = n(9114),
                s = n(5656),
                u = n(4948),
                l = n(2597),
                d = n(4664),
                c = Object.getOwnPropertyDescriptor;
            t.f = r ? c : function (e, t) {
                if (e = s(e), t = u(t), d) try {
                    return c(e, t)
                } catch (e) {
                }
                if (l(e, t)) return o(!a(i.f, e, t), e[t])
            }
        },
        1156: function (e, t, n) {
            var r = n(4326),
                a = n(5656),
                i = n(8006).f,
                o = n(1589),
                s = 'object' == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [
                ];
            e.exports.f = function (e) {
                return s && 'Window' == r(e) ? function (e) {
                    try {
                        return i(e)
                    } catch (e) {
                        return o(s)
                    }
                }(e) : i(a(e))
            }
        },
        8006: function (e, t, n) {
            var r = n(6324),
                a = n(748).concat('length', 'prototype');
            t.f = Object.getOwnPropertyNames || function (e) {
                return r(e, a)
            }
        },
        5181: function (e, t) {
            t.f = Object.getOwnPropertySymbols
        },
        9518: function (e, t, n) {
            var r = n(7854),
                a = n(2597),
                i = n(614),
                o = n(7908),
                s = n(6200),
                u = n(8544),
                l = s('IE_PROTO'),
                d = r.Object,
                c = d.prototype;
            e.exports = u ? d.getPrototypeOf : function (e) {
                var t = o(e);
                if (a(t, l)) return t[l];
                var n = t.constructor;
                return i(n) && t instanceof n ? n.prototype : t instanceof d ? c : null
            }
        },
        7976: function (e, t, n) {
            var r = n(1702);
            e.exports = r({
            }.isPrototypeOf)
        },
        6324: function (e, t, n) {
            var r = n(1702),
                a = n(2597),
                i = n(5656),
                o = n(1318).indexOf,
                s = n(3501),
                u = r([].push);
            e.exports = function (e, t) {
                var n,
                    r = i(e),
                    l = 0,
                    d = [
                    ];
                for (n in r) !a(s, n) && a(r, n) && u(d, n);
                for (; t.length > l;) a(r, n = t[l++]) && (~o(d, n) || u(d, n));
                return d
            }
        },
        1956: function (e, t, n) {
            var r = n(6324),
                a = n(748);
            e.exports = Object.keys || function (e) {
                return r(e, a)
            }
        },
        5296: function (e, t) {
            'use strict';
            var n = {
            }.propertyIsEnumerable,
                r = Object.getOwnPropertyDescriptor,
                a = r && !n.call({
                    1: 2
                }, 1);
            t.f = a ? function (e) {
                var t = r(this, e);
                return !!t && t.enumerable
            }
                : n
        },
        7674: function (e, t, n) {
            var r = n(1702),
                a = n(9670),
                i = n(6077);
            e.exports = Object.setPrototypeOf || ('__proto__' in {
            }
                ? function () {
                    var e,
                        t = !1,
                        n = {
                        };
                    try {
                        (e = r(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set))(n, [
                        ]),
                            t = n instanceof Array
                    } catch (e) {
                    }
                    return function (n, r) {
                        return a(n),
                            i(r),
                            t ? e(n, r) : n.__proto__ = r,
                            n
                    }
                }() : void 0)
        },
        4699: function (e, t, n) {
            var r = n(9781),
                a = n(1702),
                i = n(1956),
                o = n(5656),
                s = a(n(5296).f),
                u = a([].push),
                l = function (e) {
                    return function (t) {
                        for (var n, a = o(t), l = i(a), d = l.length, c = 0, m = [
                        ]; d > c;) n = l[c++],
                            r && !s(a, n) || u(m, e ? [
                                n,
                                a[n]
                            ] : a[n]);
                        return m
                    }
                };
            e.exports = {
                entries: l(!0),
                values: l(!1)
            }
        },
        288: function (e, t, n) {
            'use strict';
            var r = n(1694),
                a = n(648);
            e.exports = r ? {
            }.toString : function () {
                return '[object ' + a(this) + ']'
            }
        },
        2140: function (e, t, n) {
            var r = n(7854),
                a = n(6916),
                i = n(614),
                o = n(111),
                s = r.TypeError;
            e.exports = function (e, t) {
                var n,
                    r;
                if ('string' === t && i(n = e.toString) && !o(r = a(n, e))) return r;
                if (i(n = e.valueOf) && !o(r = a(n, e))) return r;
                if ('string' !== t && i(n = e.toString) && !o(r = a(n, e))) return r;
                throw s('Can\'t convert object to primitive value')
            }
        },
        3887: function (e, t, n) {
            var r = n(5005),
                a = n(1702),
                i = n(8006),
                o = n(5181),
                s = n(9670),
                u = a([].concat);
            e.exports = r('Reflect', 'ownKeys') || function (e) {
                var t = i.f(s(e)),
                    n = o.f;
                return n ? u(t, n(e)) : t
            }
        },
        857: function (e, t, n) {
            var r = n(7854);
            e.exports = r
        },
        2534: function (e) {
            e.exports = function (e) {
                try {
                    return {
                        error: !1,
                        value: e()
                    }
                } catch (e) {
                    return {
                        error: !0,
                        value: e
                    }
                }
            }
        },
        9478: function (e, t, n) {
            var r = n(9670),
                a = n(111),
                i = n(8523);
            e.exports = function (e, t) {
                if (r(e), a(t) && t.constructor === e) return t;
                var n = i.f(e);
                return (0, n.resolve)(t),
                    n.promise
            }
        },
        8572: function (e) {
            var t = function () {
                this.head = null,
                    this.tail = null
            };
            t.prototype = {
                add: function (e) {
                    var t = {
                        item: e,
                        next: null
                    };
                    this.head ? this.tail.next = t : this.head = t,
                        this.tail = t
                },
                get: function () {
                    var e = this.head;
                    if (e) return this.head = e.next,
                        this.tail === e && (this.tail = null),
                        e.item
                }
            },
                e.exports = t
        },
        2248: function (e, t, n) {
            var r = n(1320);
            e.exports = function (e, t, n) {
                for (var a in t) r(e, a, t[a], n);
                return e
            }
        },
        1320: function (e, t, n) {
            var r = n(7854),
                a = n(614),
                i = n(2597),
                o = n(8880),
                s = n(3505),
                u = n(2788),
                l = n(9909),
                d = n(6530).CONFIGURABLE,
                c = l.get,
                m = l.enforce,
                f = String(String).split('String');
            (e.exports = function (e, t, n, u) {
                var l,
                    c = !!u && !!u.unsafe,
                    h = !!u && !!u.enumerable,
                    p = !!u && !!u.noTargetGet,
                    g = u && void 0 !== u.name ? u.name : t;
                a(n) && ('Symbol(' === String(g).slice(0, 7) && (g = '[' + String(g).replace(/^Symbol\(([^)]*)\)/, '$1') + ']'), (!i(n, 'name') || d && n.name !== g) && o(n, 'name', g), (l = m(n)).source || (l.source = f.join('string' == typeof g ? g : ''))),
                    e !== r ? (c ? !p && e[t] && (h = !0) : delete e[t], h ? e[t] = n : o(e, t, n)) : h ? e[t] = n : s(t, n)
            })(Function.prototype, 'toString', (function () {
                return a(this) && c(this).source || u(this)
            }))
        },
        7651: function (e, t, n) {
            var r = n(7854),
                a = n(6916),
                i = n(9670),
                o = n(614),
                s = n(4326),
                u = n(2261),
                l = r.TypeError;
            e.exports = function (e, t) {
                var n = e.exec;
                if (o(n)) {
                    var r = a(n, e, t);
                    return null !== r && i(r),
                        r
                }
                if ('RegExp' === s(e)) return a(u, e, t);
                throw l('RegExp#exec called on incompatible receiver')
            }
        },
        2261: function (e, t, n) {
            'use strict';
            var r,
                a,
                i = n(6916),
                o = n(1702),
                s = n(1340),
                u = n(7066),
                l = n(2999),
                d = n(2309),
                c = n(30),
                m = n(9909).get,
                f = n(9441),
                h = n(7168),
                p = d('native-string-replace', String.prototype.replace),
                g = RegExp.prototype.exec,
                v = g,
                y = o(''.charAt),
                w = o(''.indexOf),
                b = o(''.replace),
                k = o(''.slice),
                M = (a = /b*/g, i(g, r = /a/, 'a'), i(g, a, 'a'), 0 !== r.lastIndex || 0 !== a.lastIndex),
                E = l.BROKEN_CARET,
                P = void 0 !== /()??/.exec('')[1];
            (M || P || E || f || h) && (v = function (e) {
                var t,
                    n,
                    r,
                    a,
                    o,
                    l,
                    d,
                    f = this,
                    h = m(f),
                    x = s(e),
                    S = h.raw;
                if (S) return S.lastIndex = f.lastIndex,
                    t = i(v, S, x),
                    f.lastIndex = S.lastIndex,
                    t;
                var T = h.groups,
                    C = E && f.sticky,
                    W = i(u, f),
                    j = f.source,
                    D = 0,
                    N = x;
                if (C && (W = b(W, 'y', ''), - 1 === w(W, 'g') && (W += 'g'), N = k(x, f.lastIndex), f.lastIndex > 0 && (!f.multiline || f.multiline && '\n' !== y(x, f.lastIndex - 1)) && (j = '(?: ' + j + ')', N = ' ' + N, D++), n = new RegExp('^(?:' + j + ')', W)), P && (n = new RegExp('^' + j + '$(?!\\s)', W)), M && (r = f.lastIndex), a = i(g, C ? n : f, N), C ? a ? (a.input = k(a.input, D), a[0] = k(a[0], D), a.index = f.lastIndex, f.lastIndex += a[0].length) : f.lastIndex = 0 : M && a && (f.lastIndex = f.global ? a.index + a[0].length : r), P && a && a.length > 1 && i(p, a[0], n, (function () {
                    for (o = 1; o < arguments.length - 2; o++) void 0 === arguments[o] && (a[o] = void 0)
                })), a && T) for (a.groups = l = c(null), o = 0; o < T.length; o++) l[(d = T[o])[0]] = a[d[1]];
                return a
            }),
                e.exports = v
        },
        7066: function (e, t, n) {
            'use strict';
            var r = n(9670);
            e.exports = function () {
                var e = r(this),
                    t = '';
                return e.global && (t += 'g'),
                    e.ignoreCase && (t += 'i'),
                    e.multiline && (t += 'm'),
                    e.dotAll && (t += 's'),
                    e.unicode && (t += 'u'),
                    e.sticky && (t += 'y'),
                    t
            }
        },
        2999: function (e, t, n) {
            var r = n(7293),
                a = n(7854).RegExp,
                i = r((function () {
                    var e = a('a', 'y');
                    return e.lastIndex = 2,
                        null != e.exec('abcd')
                })),
                o = i || r((function () {
                    return !a('a', 'y').sticky
                })),
                s = i || r((function () {
                    var e = a('^r', 'gy');
                    return e.lastIndex = 2,
                        null != e.exec('str')
                }));
            e.exports = {
                BROKEN_CARET: s,
                MISSED_STICKY: o,
                UNSUPPORTED_Y: i
            }
        },
        9441: function (e, t, n) {
            var r = n(7293),
                a = n(7854).RegExp;
            e.exports = r((function () {
                var e = a('.', 's');
                return !(e.dotAll && e.exec('\n') && 's' === e.flags)
            }))
        },
        7168: function (e, t, n) {
            var r = n(7293),
                a = n(7854).RegExp;
            e.exports = r((function () {
                var e = a('(?<a>b)', 'g');
                return 'b' !== e.exec('b').groups.a || 'bc' !== 'b'.replace(e, '$<a>c')
            }))
        },
        4488: function (e, t, n) {
            var r = n(7854).TypeError;
            e.exports = function (e) {
                if (null == e) throw r('Can\'t call method on ' + e);
                return e
            }
        },
        1150: function (e) {
            e.exports = Object.is || function (e, t) {
                return e === t ? 0 !== e || 1 / e == 1 / t : e != e && t != t
            }
        },
        3505: function (e, t, n) {
            var r = n(7854),
                a = Object.defineProperty;
            e.exports = function (e, t) {
                try {
                    a(r, e, {
                        value: t,
                        configurable: !0,
                        writable: !0
                    })
                } catch (n) {
                    r[e] = t
                }
                return t
            }
        },
        6340: function (e, t, n) {
            'use strict';
            var r = n(5005),
                a = n(3070),
                i = n(5112),
                o = n(9781),
                s = i('species');
            e.exports = function (e) {
                var t = r(e),
                    n = a.f;
                o && t && !t[s] && n(t, s, {
                    configurable: !0,
                    get: function () {
                        return this
                    }
                })
            }
        },
        8003: function (e, t, n) {
            var r = n(3070).f,
                a = n(2597),
                i = n(5112)('toStringTag');
            e.exports = function (e, t, n) {
                e && !n && (e = e.prototype),
                    e && !a(e, i) && r(e, i, {
                        configurable: !0,
                        value: t
                    })
            }
        },
        6200: function (e, t, n) {
            var r = n(2309),
                a = n(9711),
                i = r('keys');
            e.exports = function (e) {
                return i[e] || (i[e] = a(e))
            }
        },
        5465: function (e, t, n) {
            var r = n(7854),
                a = n(3505),
                i = '__core-js_shared__',
                o = r[i] || a(i, {
                });
            e.exports = o
        },
        2309: function (e, t, n) {
            var r = n(1913),
                a = n(5465);
            (e.exports = function (e, t) {
                return a[e] || (a[e] = void 0 !== t ? t : {
                })
            })('versions', [
            ]).push({
                version: '3.21.1',
                mode: r ? 'pure' : 'global',
                copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',
                license: 'https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE',
                source: 'https://github.com/zloirock/core-js'
            })
        },
        6707: function (e, t, n) {
            var r = n(9670),
                a = n(9483),
                i = n(5112)('species');
            e.exports = function (e, t) {
                var n,
                    o = r(e).constructor;
                return void 0 === o || null == (n = r(o)[i]) ? t : a(n)
            }
        },
        8710: function (e, t, n) {
            var r = n(1702),
                a = n(9303),
                i = n(1340),
                o = n(4488),
                s = r(''.charAt),
                u = r(''.charCodeAt),
                l = r(''.slice),
                d = function (e) {
                    return function (t, n) {
                        var r,
                            d,
                            c = i(o(t)),
                            m = a(n),
                            f = c.length;
                        return m < 0 || m >= f ? e ? '' : void 0 : (r = u(c, m)) < 55296 || r > 56319 || m + 1 === f || (d = u(c, m + 1)) < 56320 || d > 57343 ? e ? s(c, m) : r : e ? l(c, m, m + 2) : d - 56320 + (r - 55296 << 10) + 65536
                    }
                };
            e.exports = {
                codeAt: d(!1),
                charAt: d(!0)
            }
        },
        4986: function (e, t, n) {
            var r = n(8113);
            e.exports = /Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(r)
        },
        6650: function (e, t, n) {
            var r = n(1702),
                a = n(7466),
                i = n(1340),
                o = n(8415),
                s = n(4488),
                u = r(o),
                l = r(''.slice),
                d = Math.ceil,
                c = function (e) {
                    return function (t, n, r) {
                        var o,
                            c,
                            m = i(s(t)),
                            f = a(n),
                            h = m.length,
                            p = void 0 === r ? ' ' : i(r);
                        return f <= h || '' == p ? m : ((c = u(p, d((o = f - h) / p.length))).length > o && (c = l(c, 0, o)), e ? m + c : c + m)
                    }
                };
            e.exports = {
                start: c(!1),
                end: c(!0)
            }
        },
        8415: function (e, t, n) {
            'use strict';
            var r = n(7854),
                a = n(9303),
                i = n(1340),
                o = n(4488),
                s = r.RangeError;
            e.exports = function (e) {
                var t = i(o(this)),
                    n = '',
                    r = a(e);
                if (r < 0 || r == 1 / 0) throw s('Wrong number of repetitions');
                for (; r > 0; (r >>>= 1) && (t += t)) 1 & r && (n += t);
                return n
            }
        },
        6091: function (e, t, n) {
            var r = n(6530).PROPER,
                a = n(7293),
                i = n(1361);
            e.exports = function (e) {
                return a((function () {
                    return !!i[e]() || '​᠎' !== '​᠎'[e]() || r && i[e].name !== e
                }))
            }
        },
        3111: function (e, t, n) {
            var r = n(1702),
                a = n(4488),
                i = n(1340),
                o = n(1361),
                s = r(''.replace),
                u = '[' + o + ']',
                l = RegExp('^' + u + u + '*'),
                d = RegExp(u + u + '*$'),
                c = function (e) {
                    return function (t) {
                        var n = i(a(t));
                        return 1 & e && (n = s(n, l, '')),
                            2 & e && (n = s(n, d, '')),
                            n
                    }
                };
            e.exports = {
                start: c(1),
                end: c(2),
                trim: c(3)
            }
        },
        261: function (e, t, n) {
            var r,
                a,
                i,
                o,
                s = n(7854),
                u = n(2104),
                l = n(9974),
                d = n(614),
                c = n(2597),
                m = n(7293),
                f = n(490),
                h = n(206),
                p = n(317),
                g = n(8053),
                v = n(6833),
                y = n(5268),
                w = s.setImmediate,
                b = s.clearImmediate,
                k = s.process,
                M = s.Dispatch,
                E = s.Function,
                P = s.MessageChannel,
                x = s.String,
                S = 0,
                T = {
                };
            try {
                r = s.location
            } catch (e) {
            }
            var C = function (e) {
                if (c(T, e)) {
                    var t = T[e];
                    delete T[e],
                        t()
                }
            },
                W = function (e) {
                    return function () {
                        C(e)
                    }
                },
                j = function (e) {
                    C(e.data)
                },
                D = function (e) {
                    s.postMessage(x(e), r.protocol + '//' + r.host)
                };
            w && b || (w = function (e) {
                g(arguments.length, 1);
                var t = d(e) ? e : E(e),
                    n = h(arguments, 1);
                return T[++S] = function () {
                    u(t, void 0, n)
                },
                    a(S),
                    S
            }, b = function (e) {
                delete T[e]
            }, y ? a = function (e) {
                k.nextTick(W(e))
            }
                    : M && M.now ? a = function (e) {
                        M.now(W(e))
                    }
                        : P && !v ? (o = (i = new P).port2, i.port1.onmessage = j, a = l(o.postMessage, o)) : s.addEventListener && d(s.postMessage) && !s.importScripts && r && 'file:' !== r.protocol && !m(D) ? (a = D, s.addEventListener('message', j, !1)) : a = 'onreadystatechange' in p('script') ? function (e) {
                            f.appendChild(p('script')).onreadystatechange = function () {
                                f.removeChild(this),
                                    C(e)
                            }
                        }
                            : function (e) {
                                setTimeout(W(e), 0)
                            }),
                e.exports = {
                    set: w,
                    clear: b
                }
        },
        863: function (e, t, n) {
            var r = n(1702);
            e.exports = r(1.valueOf)
        },
        1400: function (e, t, n) {
            var r = n(9303),
                a = Math.max,
                i = Math.min;
            e.exports = function (e, t) {
                var n = r(e);
                return n < 0 ? a(n + t, 0) : i(n, t)
            }
        },
        5656: function (e, t, n) {
            var r = n(8361),
                a = n(4488);
            e.exports = function (e) {
                return r(a(e))
            }
        },
        9303: function (e) {
            var t = Math.ceil,
                n = Math.floor;
            e.exports = function (e) {
                var r = + e;
                return r != r || 0 === r ? 0 : (r > 0 ? n : t)(r)
            }
        },
        7466: function (e, t, n) {
            var r = n(9303),
                a = Math.min;
            e.exports = function (e) {
                return e > 0 ? a(r(e), 9007199254740991) : 0
            }
        },
        7908: function (e, t, n) {
            var r = n(7854),
                a = n(4488),
                i = r.Object;
            e.exports = function (e) {
                return i(a(e))
            }
        },
        7593: function (e, t, n) {
            var r = n(7854),
                a = n(6916),
                i = n(111),
                o = n(2190),
                s = n(8173),
                u = n(2140),
                l = n(5112),
                d = r.TypeError,
                c = l('toPrimitive');
            e.exports = function (e, t) {
                if (!i(e) || o(e)) return e;
                var n,
                    r = s(e, c);
                if (r) {
                    if (void 0 === t && (t = 'default'), n = a(r, e, t), !i(n) || o(n)) return n;
                    throw d('Can\'t convert object to primitive value')
                }
                return void 0 === t && (t = 'number'),
                    u(e, t)
            }
        },
        4948: function (e, t, n) {
            var r = n(7593),
                a = n(2190);
            e.exports = function (e) {
                var t = r(e, 'string');
                return a(t) ? t : t + ''
            }
        },
        1694: function (e, t, n) {
            var r = {
            };
            r[n(5112)('toStringTag')] = 'z',
                e.exports = '[object z]' === String(r)
        },
        1340: function (e, t, n) {
            var r = n(7854),
                a = n(648),
                i = r.String;
            e.exports = function (e) {
                if ('Symbol' === a(e)) throw TypeError('Cannot convert a Symbol value to a string');
                return i(e)
            }
        },
        6330: function (e, t, n) {
            var r = n(7854).String;
            e.exports = function (e) {
                try {
                    return r(e)
                } catch (e) {
                    return 'Object'
                }
            }
        },
        9711: function (e, t, n) {
            var r = n(1702),
                a = 0,
                i = Math.random(),
                o = r(1.toString);
            e.exports = function (e) {
                return 'Symbol(' + (void 0 === e ? '' : e) + ')_' + o(++a + i, 36)
            }
        },
        3307: function (e, t, n) {
            var r = n(133);
            e.exports = r && !Symbol.sham && 'symbol' == typeof Symbol.iterator
        },
        3353: function (e, t, n) {
            var r = n(9781),
                a = n(7293);
            e.exports = r && a((function () {
                return 42 != Object.defineProperty((function () {
                }), 'prototype', {
                    value: 42,
                    writable: !1
                }).prototype
            }))
        },
        8053: function (e, t, n) {
            var r = n(7854).TypeError;
            e.exports = function (e, t) {
                if (e < t) throw r('Not enough arguments');
                return e
            }
        },
        6061: function (e, t, n) {
            var r = n(5112);
            t.f = r
        },
        5112: function (e, t, n) {
            var r = n(7854),
                a = n(2309),
                i = n(2597),
                o = n(9711),
                s = n(133),
                u = n(3307),
                l = a('wks'),
                d = r.Symbol,
                c = d && d.for,
                m = u ? d : d && d.withoutSetter || o;
            e.exports = function (e) {
                if (!i(l, e) || !s && 'string' != typeof l[e]) {
                    var t = 'Symbol.' + e;
                    s && i(d, e) ? l[e] = d[e] : l[e] = u && c ? c(t) : m(t)
                }
                return l[e]
            }
        },
        1361: function (e) {
            e.exports = '\t\n\v\f\r                　\u2028\u2029﻿'
        },
        9191: function (e, t, n) {
            'use strict';
            var r = n(5005),
                a = n(2597),
                i = n(8880),
                o = n(7976),
                s = n(7674),
                u = n(9920),
                l = n(9587),
                d = n(6277),
                c = n(8340),
                m = n(7741),
                f = n(2914),
                h = n(1913);
            e.exports = function (e, t, n, p) {
                var g = p ? 2 : 1,
                    v = e.split('.'),
                    y = v[v.length - 1],
                    w = r.apply(null, v);
                if (w) {
                    var b = w.prototype;
                    if (!h && a(b, 'cause') && delete b.cause, !n) return w;
                    var k = r('Error'),
                        M = t((function (e, t) {
                            var n = d(p ? t : e, void 0),
                                r = p ? new w(e) : new w;
                            return void 0 !== n && i(r, 'message', n),
                                f && i(r, 'stack', m(r.stack, 2)),
                                this && o(b, this) && l(r, this, M),
                                arguments.length > g && c(r, arguments[g]),
                                r
                        }));
                    if (M.prototype = b, 'Error' !== y && (s ? s(M, k) : u(M, k, {
                        name: !0
                    })), u(M, w), !h) try {
                        b.name !== y && i(b, 'name', y),
                            b.constructor = M
                    } catch (e) {
                    }
                    return M
                }
            }
        },
        2262: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(7908),
                i = n(6244),
                o = n(9303),
                s = n(1223);
            r({
                target: 'Array',
                proto: !0
            }, {
                at: function (e) {
                    var t = a(this),
                        n = i(t),
                        r = o(e),
                        s = r >= 0 ? r : n + r;
                    return s < 0 || s >= n ? void 0 : t[s]
                }
            }),
                s('at')
        },
        2222: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(7854),
                i = n(7293),
                o = n(3157),
                s = n(111),
                u = n(7908),
                l = n(6244),
                d = n(6135),
                c = n(5417),
                m = n(1194),
                f = n(5112),
                h = n(7392),
                p = f('isConcatSpreadable'),
                g = 9007199254740991,
                v = 'Maximum allowed index exceeded',
                y = a.TypeError,
                w = h >= 51 || !i((function () {
                    var e = [
                    ];
                    return e[p] = !1,
                        e.concat()[0] !== e
                })),
                b = m('concat'),
                k = function (e) {
                    if (!s(e)) return !1;
                    var t = e[p];
                    return void 0 !== t ? !!t : o(e)
                };
            r({
                target: 'Array',
                proto: !0,
                forced: !w || !b
            }, {
                concat: function (e) {
                    var t,
                        n,
                        r,
                        a,
                        i,
                        o = u(this),
                        s = c(o, 0),
                        m = 0;
                    for (t = - 1, r = arguments.length; t < r; t++) if (k(i = - 1 === t ? o : arguments[t])) {
                        if (m + (a = l(i)) > g) throw y(v);
                        for (n = 0; n < a; n++, m++) n in i && d(s, m, i[n])
                    } else {
                        if (m >= g) throw y(v);
                        d(s, m++, i)
                    }
                    return s.length = m,
                        s
                }
            })
        },
        3290: function (e, t, n) {
            var r = n(2109),
                a = n(1285),
                i = n(1223);
            r({
                target: 'Array',
                proto: !0
            }, {
                fill: a
            }),
                i('fill')
        },
        7327: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(2092).filter;
            r({
                target: 'Array',
                proto: !0,
                forced: !n(1194)('filter')
            }, {
                filter: function (e) {
                    return a(this, e, arguments.length > 1 ? arguments[1] : void 0)
                }
            })
        },
        9826: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(2092).find,
                i = n(1223),
                o = 'find',
                s = !0;
            o in [
            ] && Array(1).find((function () {
                s = !1
            })),
                r({
                    target: 'Array',
                    proto: !0,
                    forced: s
                }, {
                    find: function (e) {
                        return a(this, e, arguments.length > 1 ? arguments[1] : void 0)
                    }
                }),
                i(o)
        },
        6535: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(6790),
                i = n(9662),
                o = n(7908),
                s = n(6244),
                u = n(5417);
            r({
                target: 'Array',
                proto: !0
            }, {
                flatMap: function (e) {
                    var t,
                        n = o(this),
                        r = s(n);
                    return i(e),
                        (t = u(n, 0)).length = a(t, n, n, r, 0, 1, e, arguments.length > 1 ? arguments[1] : void 0),
                        t
                }
            })
        },
        1038: function (e, t, n) {
            var r = n(2109),
                a = n(8457);
            r({
                target: 'Array',
                stat: !0,
                forced: !n(7072)((function (e) {
                    Array.from(e)
                }))
            }, {
                from: a
            })
        },
        6699: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(1318).includes,
                i = n(1223);
            r({
                target: 'Array',
                proto: !0
            }, {
                includes: function (e) {
                    return a(this, e, arguments.length > 1 ? arguments[1] : void 0)
                }
            }),
                i('includes')
        },
        6992: function (e, t, n) {
            'use strict';
            var r = n(5656),
                a = n(1223),
                i = n(7497),
                o = n(9909),
                s = n(3070).f,
                u = n(654),
                l = n(1913),
                d = n(9781),
                c = 'Array Iterator',
                m = o.set,
                f = o.getterFor(c);
            e.exports = u(Array, 'Array', (function (e, t) {
                m(this, {
                    type: c,
                    target: r(e),
                    index: 0,
                    kind: t
                })
            }), (function () {
                var e = f(this),
                    t = e.target,
                    n = e.kind,
                    r = e.index++;
                return !t || r >= t.length ? (e.target = void 0, {
                    value: void 0,
                    done: !0
                }) : 'keys' == n ? {
                    value: r,
                    done: !1
                }
                    : 'values' == n ? {
                        value: t[r],
                        done: !1
                    }
                        : {
                            value: [
                                r,
                                t[r]
                            ],
                            done: !1
                        }
            }), 'values');
            var h = i.Arguments = i.Array;
            if (a('keys'), a('values'), a('entries'), !l && d && 'values' !== h.name) try {
                s(h, 'name', {
                    value: 'values'
                })
            } catch (e) {
            }
        },
        9600: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(1702),
                i = n(8361),
                o = n(5656),
                s = n(9341),
                u = a([].join),
                l = i != Object,
                d = s('join', ',');
            r({
                target: 'Array',
                proto: !0,
                forced: l || !d
            }, {
                join: function (e) {
                    return u(o(this), void 0 === e ? ',' : e)
                }
            })
        },
        1249: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(2092).map;
            r({
                target: 'Array',
                proto: !0,
                forced: !n(1194)('map')
            }, {
                map: function (e) {
                    return a(this, e, arguments.length > 1 ? arguments[1] : void 0)
                }
            })
        },
        5827: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(3671).left,
                i = n(9341),
                o = n(7392),
                s = n(5268);
            r({
                target: 'Array',
                proto: !0,
                forced: !i('reduce') || !s && o > 79 && o < 83
            }, {
                reduce: function (e) {
                    var t = arguments.length;
                    return a(this, e, t, t > 1 ? arguments[1] : void 0)
                }
            })
        },
        7042: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(7854),
                i = n(3157),
                o = n(4411),
                s = n(111),
                u = n(1400),
                l = n(6244),
                d = n(5656),
                c = n(6135),
                m = n(5112),
                f = n(1194),
                h = n(206),
                p = f('slice'),
                g = m('species'),
                v = a.Array,
                y = Math.max;
            r({
                target: 'Array',
                proto: !0,
                forced: !p
            }, {
                slice: function (e, t) {
                    var n,
                        r,
                        a,
                        m = d(this),
                        f = l(m),
                        p = u(e, f),
                        w = u(void 0 === t ? f : t, f);
                    if (i(m) && (n = m.constructor, (o(n) && (n === v || i(n.prototype)) || s(n) && null === (n = n[g])) && (n = void 0), n === v || void 0 === n)) return h(m, p, w);
                    for (r = new (void 0 === n ? v : n)(y(w - p, 0)), a = 0; p < w; p++, a++) p in m && c(r, a, m[p]);
                    return r.length = a,
                        r
                }
            })
        },
        2707: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(1702),
                i = n(9662),
                o = n(7908),
                s = n(6244),
                u = n(1340),
                l = n(7293),
                d = n(4362),
                c = n(9341),
                m = n(8886),
                f = n(256),
                h = n(7392),
                p = n(8008),
                g = [
                ],
                v = a(g.sort),
                y = a(g.push),
                w = l((function () {
                    g.sort(void 0)
                })),
                b = l((function () {
                    g.sort(null)
                })),
                k = c('sort'),
                M = !l((function () {
                    if (h) return h < 70;
                    if (!(m && m > 3)) {
                        if (f) return !0;
                        if (p) return p < 603;
                        var e,
                            t,
                            n,
                            r,
                            a = '';
                        for (e = 65; e < 76; e++) {
                            switch (t = String.fromCharCode(e), e) {
                                case 66:
                                case 69:
                                case 70:
                                case 72:
                                    n = 3;
                                    break;
                                case 68:
                                case 71:
                                    n = 4;
                                    break;
                                default:
                                    n = 2
                            }
                            for (r = 0; r < 47; r++) g.push({
                                k: t + r,
                                v: n
                            })
                        }
                        for (g.sort((function (e, t) {
                            return t.v - e.v
                        })), r = 0; r < g.length; r++) t = g[r].k.charAt(0),
                            a.charAt(a.length - 1) !== t && (a += t);
                        return 'DGBEFHACIJK' !== a
                    }
                }));
            r({
                target: 'Array',
                proto: !0,
                forced: w || !b || !k || !M
            }, {
                sort: function (e) {
                    void 0 !== e && i(e);
                    var t = o(this);
                    if (M) return void 0 === e ? v(t) : v(t, e);
                    var n,
                        r,
                        a = [
                        ],
                        l = s(t);
                    for (r = 0; r < l; r++) r in t && y(a, t[r]);
                    for (d(a, function (e) {
                        return function (t, n) {
                            return void 0 === n ? - 1 : void 0 === t ? 1 : void 0 !== e ? + e(t, n) || 0 : u(t) > u(n) ? 1 : - 1
                        }
                    }(e)), n = a.length, r = 0; r < n;) t[r] = a[r++];
                    for (; r < l;) delete t[r++];
                    return t
                }
            })
        },
        9244: function (e, t, n) {
            n(1223)('flatMap')
        },
        1703: function (e, t, n) {
            var r = n(2109),
                a = n(7854),
                i = n(2104),
                o = n(9191),
                s = a.WebAssembly,
                u = 7 !== Error('e', {
                    cause: 7
                }).cause,
                l = function (e, t) {
                    var n = {
                    };
                    n[e] = o(e, t, u),
                        r({
                            global: !0,
                            forced: u
                        }, n)
                },
                d = function (e, t) {
                    if (s && s[e]) {
                        var n = {
                        };
                        n[e] = o('WebAssembly.' + e, t, u),
                            r({
                                target: 'WebAssembly',
                                stat: !0,
                                forced: u
                            }, n)
                    }
                };
            l('Error', (function (e) {
                return function (t) {
                    return i(e, this, arguments)
                }
            })),
                l('EvalError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                })),
                l('RangeError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                })),
                l('ReferenceError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                })),
                l('SyntaxError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                })),
                l('TypeError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                })),
                l('URIError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                })),
                d('CompileError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                })),
                d('LinkError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                })),
                d('RuntimeError', (function (e) {
                    return function (t) {
                        return i(e, this, arguments)
                    }
                }))
        },
        8309: function (e, t, n) {
            var r = n(9781),
                a = n(6530).EXISTS,
                i = n(1702),
                o = n(3070).f,
                s = Function.prototype,
                u = i(s.toString),
                l = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,
                d = i(l.exec);
            r && !a && o(s, 'name', {
                configurable: !0,
                get: function () {
                    try {
                        return d(l, u(this))[1]
                    } catch (e) {
                        return ''
                    }
                }
            })
        },
        8862: function (e, t, n) {
            var r = n(2109),
                a = n(7854),
                i = n(5005),
                o = n(2104),
                s = n(1702),
                u = n(7293),
                l = a.Array,
                d = i('JSON', 'stringify'),
                c = s(/./.exec),
                m = s(''.charAt),
                f = s(''.charCodeAt),
                h = s(''.replace),
                p = s(1.toString),
                g = /[\uD800-\uDFFF]/g,
                v = /^[\uD800-\uDBFF]$/,
                y = /^[\uDC00-\uDFFF]$/,
                w = function (e, t, n) {
                    var r = m(n, t - 1),
                        a = m(n, t + 1);
                    return c(v, e) && !c(y, a) || c(y, e) && !c(v, r) ? '\\u' + p(f(e, 0), 16) : e
                },
                b = u((function () {
                    return '"\\udf06\\ud834"' !== d('��') || '"\\udead"' !== d('�')
                }));
            d && r({
                target: 'JSON',
                stat: !0,
                forced: b
            }, {
                stringify: function (e, t, n) {
                    for (var r = 0, a = arguments.length, i = l(a); r < a; r++) i[r] = arguments[r];
                    var s = o(d, null, i);
                    return 'string' == typeof s ? h(s, g, w) : s
                }
            })
        },
        9653: function (e, t, n) {
            'use strict';
            var r = n(9781),
                a = n(7854),
                i = n(1702),
                o = n(4705),
                s = n(1320),
                u = n(2597),
                l = n(9587),
                d = n(7976),
                c = n(2190),
                m = n(7593),
                f = n(7293),
                h = n(8006).f,
                p = n(1236).f,
                g = n(3070).f,
                v = n(863),
                y = n(3111).trim,
                w = 'Number',
                b = a.Number,
                k = b.prototype,
                M = a.TypeError,
                E = i(''.slice),
                P = i(''.charCodeAt),
                x = function (e) {
                    var t = m(e, 'number');
                    return 'bigint' == typeof t ? t : S(t)
                },
                S = function (e) {
                    var t,
                        n,
                        r,
                        a,
                        i,
                        o,
                        s,
                        u,
                        l = m(e, 'number');
                    if (c(l)) throw M('Cannot convert a Symbol value to a number');
                    if ('string' == typeof l && l.length > 2) if (l = y(l), 43 === (t = P(l, 0)) || 45 === t) {
                        if (88 === (n = P(l, 2)) || 120 === n) return NaN
                    } else if (48 === t) {
                        switch (P(l, 1)) {
                            case 66:
                            case 98:
                                r = 2,
                                    a = 49;
                                break;
                            case 79:
                            case 111:
                                r = 8,
                                    a = 55;
                                break;
                            default:
                                return + l
                        }
                        for (o = (i = E(l, 2)).length, s = 0; s < o; s++) if ((u = P(i, s)) < 48 || u > a) return NaN;
                        return parseInt(i, r)
                    }
                    return + l
                };
            if (o(w, !b(' 0o1') || !b('0b1') || b('+0x1'))) {
                for (var T, C = function (e) {
                    var t = arguments.length < 1 ? 0 : b(x(e)),
                        n = this;
                    return d(k, n) && f((function () {
                        v(n)
                    })) ? l(Object(t), n, C) : t
                }, W = r ? h(b) : 'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range'.split(','), j = 0; W.length > j; j++) u(b, T = W[j]) && !u(C, T) && g(C, T, p(b, T));
                C.prototype = k,
                    k.constructor = C,
                    s(a, w, C)
            }
        },
        3321: function (e, t, n) {
            var r = n(2109),
                a = n(9781),
                i = n(6048).f;
            r({
                target: 'Object',
                stat: !0,
                forced: Object.defineProperties !== i,
                sham: !a
            }, {
                defineProperties: i
            })
        },
        9070: function (e, t, n) {
            var r = n(2109),
                a = n(9781),
                i = n(3070).f;
            r({
                target: 'Object',
                stat: !0,
                forced: Object.defineProperty !== i,
                sham: !a
            }, {
                defineProperty: i
            })
        },
        9720: function (e, t, n) {
            var r = n(2109),
                a = n(4699).entries;
            r({
                target: 'Object',
                stat: !0
            }, {
                entries: function (e) {
                    return a(e)
                }
            })
        },
        8559: function (e, t, n) {
            var r = n(2109),
                a = n(408),
                i = n(6135);
            r({
                target: 'Object',
                stat: !0
            }, {
                fromEntries: function (e) {
                    var t = {
                    };
                    return a(e, (function (e, n) {
                        i(t, e, n)
                    }), {
                        AS_ENTRIES: !0
                    }),
                        t
                }
            })
        },
        5003: function (e, t, n) {
            var r = n(2109),
                a = n(7293),
                i = n(5656),
                o = n(1236).f,
                s = n(9781),
                u = a((function () {
                    o(1)
                }));
            r({
                target: 'Object',
                stat: !0,
                forced: !s || u,
                sham: !s
            }, {
                getOwnPropertyDescriptor: function (e, t) {
                    return o(i(e), t)
                }
            })
        },
        9337: function (e, t, n) {
            var r = n(2109),
                a = n(9781),
                i = n(3887),
                o = n(5656),
                s = n(1236),
                u = n(6135);
            r({
                target: 'Object',
                stat: !0,
                sham: !a
            }, {
                getOwnPropertyDescriptors: function (e) {
                    for (var t, n, r = o(e), a = s.f, l = i(r), d = {
                    }, c = 0; l.length > c;) void 0 !== (n = a(r, t = l[c++])) && u(d, t, n);
                    return d
                }
            })
        },
        7941: function (e, t, n) {
            var r = n(2109),
                a = n(7908),
                i = n(1956);
            r({
                target: 'Object',
                stat: !0,
                forced: n(7293)((function () {
                    i(1)
                }))
            }, {
                keys: function (e) {
                    return i(a(e))
                }
            })
        },
        1539: function (e, t, n) {
            var r = n(1694),
                a = n(1320),
                i = n(288);
            r || a(Object.prototype, 'toString', i, {
                unsafe: !0
            })
        },
        2479: function (e, t, n) {
            var r = n(2109),
                a = n(4699).values;
            r({
                target: 'Object',
                stat: !0
            }, {
                values: function (e) {
                    return a(e)
                }
            })
        },
        8674: function (e, t, n) {
            'use strict';
            var r,
                a,
                i,
                o,
                s = n(2109),
                u = n(1913),
                l = n(7854),
                d = n(5005),
                c = n(6916),
                m = n(3366),
                f = n(1320),
                h = n(2248),
                p = n(7674),
                g = n(8003),
                v = n(6340),
                y = n(9662),
                w = n(614),
                b = n(111),
                k = n(5787),
                M = n(2788),
                E = n(408),
                P = n(7072),
                x = n(6707),
                S = n(261).set,
                T = n(5948),
                C = n(9478),
                W = n(842),
                j = n(8523),
                D = n(2534),
                N = n(8572),
                I = n(9909),
                z = n(4705),
                R = n(5112),
                A = n(7871),
                O = n(5268),
                H = n(7392),
                _ = R('species'),
                L = 'Promise',
                F = I.getterFor(L),
                X = I.set,
                U = I.getterFor(L),
                q = m && m.prototype,
                G = m,
                V = q,
                Y = l.TypeError,
                B = l.document,
                $ = l.process,
                Q = j.f,
                K = Q,
                J = !!(B && B.createEvent && l.dispatchEvent),
                Z = w(l.PromiseRejectionEvent),
                ee = 'unhandledrejection',
                te = !1,
                ne = z(L, (function () {
                    var e = M(G),
                        t = e !== String(G);
                    if (!t && 66 === H) return !0;
                    if (u && !V.finally) return !0;
                    if (H >= 51 && /native code/.test(e)) return !1;
                    var n = new G((function (e) {
                        e(1)
                    })),
                        r = function (e) {
                            e((function () {
                            }), (function () {
                            }))
                        };
                    return (n.constructor = {
                    })[_] = r,
                        !(te = n.then((function () {
                        })) instanceof r) || !t && A && !Z
                })),
                re = ne || !P((function (e) {
                    G.all(e).catch((function () {
                    }))
                })),
                ae = function (e) {
                    var t;
                    return !(!b(e) || !w(t = e.then)) && t
                },
                ie = function (e, t) {
                    var n,
                        r,
                        a,
                        i = t.value,
                        o = 1 == t.state,
                        s = o ? e.ok : e.fail,
                        u = e.resolve,
                        l = e.reject,
                        d = e.domain;
                    try {
                        s ? (o || (2 === t.rejection && de(t), t.rejection = 1), !0 === s ? n = i : (d && d.enter(), n = s(i), d && (d.exit(), a = !0)), n === e.promise ? l(Y('Promise-chain cycle')) : (r = ae(n)) ? c(r, n, u, l) : u(n)) : l(i)
                    } catch (e) {
                        d && !a && d.exit(),
                            l(e)
                    }
                },
                oe = function (e, t) {
                    e.notified || (e.notified = !0, T((function () {
                        for (var n, r = e.reactions; n = r.get();) ie(n, e);
                        e.notified = !1,
                            t && !e.rejection && ue(e)
                    })))
                },
                se = function (e, t, n) {
                    var r,
                        a;
                    J ? ((r = B.createEvent('Event')).promise = t, r.reason = n, r.initEvent(e, !1, !0), l.dispatchEvent(r)) : r = {
                        promise: t,
                        reason: n
                    },
                        !Z && (a = l['on' + e]) ? a(r) : e === ee && W('Unhandled promise rejection', n)
                },
                ue = function (e) {
                    c(S, l, (function () {
                        var t,
                            n = e.facade,
                            r = e.value;
                        if (le(e) && (t = D((function () {
                            O ? $.emit('unhandledRejection', r, n) : se(ee, n, r)
                        })), e.rejection = O || le(e) ? 2 : 1, t.error)) throw t.value
                    }))
                },
                le = function (e) {
                    return 1 !== e.rejection && !e.parent
                },
                de = function (e) {
                    c(S, l, (function () {
                        var t = e.facade;
                        O ? $.emit('rejectionHandled', t) : se('rejectionhandled', t, e.value)
                    }))
                },
                ce = function (e, t, n) {
                    return function (r) {
                        e(t, r, n)
                    }
                },
                me = function (e, t, n) {
                    e.done || (e.done = !0, n && (e = n), e.value = t, e.state = 2, oe(e, !0))
                },
                fe = function (e, t, n) {
                    if (!e.done) {
                        e.done = !0,
                            n && (e = n);
                        try {
                            if (e.facade === t) throw Y('Promise can\'t be resolved itself');
                            var r = ae(t);
                            r ? T((function () {
                                var n = {
                                    done: !1
                                };
                                try {
                                    c(r, t, ce(fe, n, e), ce(me, n, e))
                                } catch (t) {
                                    me(n, t, e)
                                }
                            })) : (e.value = t, e.state = 1, oe(e, !1))
                        } catch (t) {
                            me({
                                done: !1
                            }, t, e)
                        }
                    }
                };
            if (ne && (V = (G = function (e) {
                k(this, V),
                    y(e),
                    c(r, this);
                var t = F(this);
                try {
                    e(ce(fe, t), ce(me, t))
                } catch (e) {
                    me(t, e)
                }
            }).prototype, (r = function (e) {
                X(this, {
                    type: L,
                    done: !1,
                    notified: !1,
                    parent: !1,
                    reactions: new N,
                    rejection: !1,
                    state: 0,
                    value: void 0
                })
            }).prototype = h(V, {
                then: function (e, t) {
                    var n = U(this),
                        r = Q(x(this, G));
                    return n.parent = !0,
                        r.ok = !w(e) || e,
                        r.fail = w(t) && t,
                        r.domain = O ? $.domain : void 0,
                        0 == n.state ? n.reactions.add(r) : T((function () {
                            ie(r, n)
                        })),
                        r.promise
                },
                catch: function (e) {
                    return this.then(void 0, e)
                }
            }), a = function () {
                var e = new r,
                    t = F(e);
                this.promise = e,
                    this.resolve = ce(fe, t),
                    this.reject = ce(me, t)
            }, j.f = Q = function (e) {
                return e === G || e === i ? new a(e) : K(e)
            }, !u && w(m) && q !== Object.prototype)) {
                o = q.then,
                    te || (f(q, 'then', (function (e, t) {
                        var n = this;
                        return new G((function (e, t) {
                            c(o, n, e, t)
                        })).then(e, t)
                    }), {
                        unsafe: !0
                    }), f(q, 'catch', V.catch, {
                        unsafe: !0
                    }));
                try {
                    delete q.constructor
                } catch (e) {
                }
                p && p(q, V)
            }
            s({
                global: !0,
                wrap: !0,
                forced: ne
            }, {
                Promise: G
            }),
                g(G, L, !1, !0),
                v(L),
                i = d(L),
                s({
                    target: L,
                    stat: !0,
                    forced: ne
                }, {
                    reject: function (e) {
                        var t = Q(this);
                        return c(t.reject, void 0, e),
                            t.promise
                    }
                }),
                s({
                    target: L,
                    stat: !0,
                    forced: u || ne
                }, {
                    resolve: function (e) {
                        return C(u && this === i ? G : this, e)
                    }
                }),
                s({
                    target: L,
                    stat: !0,
                    forced: re
                }, {
                    all: function (e) {
                        var t = this,
                            n = Q(t),
                            r = n.resolve,
                            a = n.reject,
                            i = D((function () {
                                var n = y(t.resolve),
                                    i = [
                                    ],
                                    o = 0,
                                    s = 1;
                                E(e, (function (e) {
                                    var u = o++,
                                        l = !1;
                                    s++,
                                        c(n, t, e).then((function (e) {
                                            l || (l = !0, i[u] = e, --s || r(i))
                                        }), a)
                                })),
                                    --s || r(i)
                            }));
                        return i.error && a(i.value),
                            n.promise
                    },
                    race: function (e) {
                        var t = this,
                            n = Q(t),
                            r = n.reject,
                            a = D((function () {
                                var a = y(t.resolve);
                                E(e, (function (e) {
                                    c(a, t, e).then(n.resolve, r)
                                }))
                            }));
                        return a.error && r(a.value),
                            n.promise
                    }
                })
        },
        2419: function (e, t, n) {
            var r = n(2109),
                a = n(5005),
                i = n(2104),
                o = n(7065),
                s = n(9483),
                u = n(9670),
                l = n(111),
                d = n(30),
                c = n(7293),
                m = a('Reflect', 'construct'),
                f = Object.prototype,
                h = [
                ].push,
                p = c((function () {
                    function e() {
                    }
                    return !(m((function () {
                    }), [
                    ], e) instanceof e)
                })),
                g = !c((function () {
                    m((function () {
                    }))
                })),
                v = p || g;
            r({
                target: 'Reflect',
                stat: !0,
                forced: v,
                sham: v
            }, {
                construct: function (e, t) {
                    s(e),
                        u(t);
                    var n = arguments.length < 3 ? e : s(arguments[2]);
                    if (g && !p) return m(e, t, n);
                    if (e == n) {
                        switch (t.length) {
                            case 0:
                                return new e;
                            case 1:
                                return new e(t[0]);
                            case 2:
                                return new e(t[0], t[1]);
                            case 3:
                                return new e(t[0], t[1], t[2]);
                            case 4:
                                return new e(t[0], t[1], t[2], t[3])
                        }
                        var r = [
                            null
                        ];
                        return i(h, r, t),
                            new (i(o, e, r))
                    }
                    var a = n.prototype,
                        c = d(l(a) ? a : f),
                        v = i(e, c, t);
                    return l(v) ? v : c
                }
            })
        },
        1299: function (e, t, n) {
            var r = n(2109),
                a = n(7854),
                i = n(8003);
            r({
                global: !0
            }, {
                Reflect: {
                }
            }),
                i(a.Reflect, 'Reflect', !0)
        },
        4916: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(2261);
            r({
                target: 'RegExp',
                proto: !0,
                forced: /./.exec !== a
            }, {
                exec: a
            })
        },
        7601: function (e, t, n) {
            'use strict';
            n(4916);
            var r,
                a,
                i = n(2109),
                o = n(7854),
                s = n(6916),
                u = n(1702),
                l = n(614),
                d = n(111),
                c = (r = !1, (a = /[ac]/).exec = function () {
                    return r = !0,
                        /./.exec.apply(this, arguments)
                }, !0 === a.test('abc') && r),
                m = o.Error,
                f = u(/./.test);
            i({
                target: 'RegExp',
                proto: !0,
                forced: !c
            }, {
                test: function (e) {
                    var t = this.exec;
                    if (!l(t)) return f(this, e);
                    var n = s(t, this, e);
                    if (null !== n && !d(n)) throw new m('RegExp exec method returned something other than an Object or null');
                    return !!n
                }
            })
        },
        9714: function (e, t, n) {
            'use strict';
            var r = n(1702),
                a = n(6530).PROPER,
                i = n(1320),
                o = n(9670),
                s = n(7976),
                u = n(1340),
                l = n(7293),
                d = n(7066),
                c = 'toString',
                m = RegExp.prototype,
                f = m.toString,
                h = r(d),
                p = l((function () {
                    return '/a/b' != f.call({
                        source: 'a',
                        flags: 'b'
                    })
                })),
                g = a && f.name != c;
            (p || g) && i(RegExp.prototype, c, (function () {
                var e = o(this),
                    t = u(e.source),
                    n = e.flags;
                return '/' + t + '/' + u(void 0 === n && s(m, e) && !('flags' in m) ? h(e) : n)
            }), {
                unsafe: !0
            })
        },
        4506: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(1702),
                i = n(4488),
                o = n(9303),
                s = n(1340),
                u = n(7293),
                l = a(''.charAt);
            r({
                target: 'String',
                proto: !0,
                forced: u((function () {
                    return '�' !== '𠮷'.at(- 2)
                }))
            }, {
                at: function (e) {
                    var t = s(i(this)),
                        n = t.length,
                        r = o(e),
                        a = r >= 0 ? r : n + r;
                    return a < 0 || a >= n ? void 0 : l(t, a)
                }
            })
        },
        7852: function (e, t, n) {
            'use strict';
            var r,
                a = n(2109),
                i = n(1702),
                o = n(1236).f,
                s = n(7466),
                u = n(1340),
                l = n(3929),
                d = n(4488),
                c = n(4964),
                m = n(1913),
                f = i(''.endsWith),
                h = i(''.slice),
                p = Math.min,
                g = c('endsWith');
            a({
                target: 'String',
                proto: !0,
                forced: !(!m && !g && (r = o(String.prototype, 'endsWith'), r && !r.writable) || g)
            }, {
                endsWith: function (e) {
                    var t = u(d(this));
                    l(e);
                    var n = arguments.length > 1 ? arguments[1] : void 0,
                        r = t.length,
                        a = void 0 === n ? r : p(s(n), r),
                        i = u(e);
                    return f ? f(t, i, a) : h(t, a - i.length, a) === i
                }
            })
        },
        2023: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(1702),
                i = n(3929),
                o = n(4488),
                s = n(1340),
                u = n(4964),
                l = a(''.indexOf);
            r({
                target: 'String',
                proto: !0,
                forced: !u('includes')
            }, {
                includes: function (e) {
                    return !!~l(s(o(this)), s(i(e)), arguments.length > 1 ? arguments[1] : void 0)
                }
            })
        },
        8783: function (e, t, n) {
            'use strict';
            var r = n(8710).charAt,
                a = n(1340),
                i = n(9909),
                o = n(654),
                s = 'String Iterator',
                u = i.set,
                l = i.getterFor(s);
            o(String, 'String', (function (e) {
                u(this, {
                    type: s,
                    string: a(e),
                    index: 0
                })
            }), (function () {
                var e,
                    t = l(this),
                    n = t.string,
                    a = t.index;
                return a >= n.length ? {
                    value: void 0,
                    done: !0
                }
                    : (e = r(n, a), t.index += e.length, {
                        value: e,
                        done: !1
                    })
            }))
        },
        3112: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(6650).start;
            r({
                target: 'String',
                proto: !0,
                forced: n(4986)
            }, {
                padStart: function (e) {
                    return a(this, e, arguments.length > 1 ? arguments[1] : void 0)
                }
            })
        },
        8757: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(7854),
                i = n(6916),
                o = n(1702),
                s = n(4488),
                u = n(614),
                l = n(7850),
                d = n(1340),
                c = n(8173),
                m = n(7066),
                f = n(647),
                h = n(5112),
                p = n(1913),
                g = h('replace'),
                v = RegExp.prototype,
                y = a.TypeError,
                w = o(m),
                b = o(''.indexOf),
                k = o(''.replace),
                M = o(''.slice),
                E = Math.max,
                P = function (e, t, n) {
                    return n > e.length ? - 1 : '' === t ? n : b(e, t, n)
                };
            r({
                target: 'String',
                proto: !0
            }, {
                replaceAll: function (e, t) {
                    var n,
                        r,
                        a,
                        o,
                        m,
                        h,
                        x,
                        S,
                        T,
                        C = s(this),
                        W = 0,
                        j = 0,
                        D = '';
                    if (null != e) {
                        if ((n = l(e)) && (r = d(s('flags' in v ? e.flags : w(e))), !~b(r, 'g'))) throw y('`.replaceAll` does not allow non-global regexes');
                        if (a = c(e, g)) return i(a, e, C, t);
                        if (p && n) return k(d(C), e, t)
                    }
                    for (o = d(C), m = d(e), (h = u(t)) || (t = d(t)), x = m.length, S = E(1, x), W = P(o, m, 0); - 1 !== W;) T = h ? d(t(m, W, o)) : f(m, o, W, [
                    ], void 0, t),
                        D += M(o, j, W) + T,
                        j = W + x,
                        W = P(o, m, W + S);
                    return j < o.length && (D += M(o, j)),
                        D
                }
            })
        },
        5306: function (e, t, n) {
            'use strict';
            var r = n(2104),
                a = n(6916),
                i = n(1702),
                o = n(7007),
                s = n(7293),
                u = n(9670),
                l = n(614),
                d = n(9303),
                c = n(7466),
                m = n(1340),
                f = n(4488),
                h = n(1530),
                p = n(8173),
                g = n(647),
                v = n(7651),
                y = n(5112)('replace'),
                w = Math.max,
                b = Math.min,
                k = i([].concat),
                M = i([].push),
                E = i(''.indexOf),
                P = i(''.slice),
                x = '$0' === 'a'.replace(/./, '$0'),
                S = !!/./[y] && '' === /./[y]('a', '$0');
            o('replace', (function (e, t, n) {
                var i = S ? '$' : '$0';
                return [function (e, n) {
                    var r = f(this),
                        i = null == e ? void 0 : p(e, y);
                    return i ? a(i, e, r, n) : a(t, m(r), e, n)
                },
                function (e, a) {
                    var o = u(this),
                        s = m(e);
                    if ('string' == typeof a && - 1 === E(a, i) && - 1 === E(a, '$<')) {
                        var f = n(t, o, s, a);
                        if (f.done) return f.value
                    }
                    var p = l(a);
                    p || (a = m(a));
                    var y = o.global;
                    if (y) {
                        var x = o.unicode;
                        o.lastIndex = 0
                    }
                    for (var S = [
                    ]; ;) {
                        var T = v(o, s);
                        if (null === T) break;
                        if (M(S, T), !y) break;
                        '' === m(T[0]) && (o.lastIndex = h(s, c(o.lastIndex), x))
                    }
                    for (var C, W = '', j = 0, D = 0; D < S.length; D++) {
                        for (var N = m((T = S[D])[0]), I = w(b(d(T.index), s.length), 0), z = [
                        ], R = 1; R < T.length; R++) M(z, void 0 === (C = T[R]) ? C : String(C));
                        var A = T.groups;
                        if (p) {
                            var O = k([N], z, I, s);
                            void 0 !== A && M(O, A);
                            var H = m(r(a, void 0, O))
                        } else H = g(N, s, I, z, A, a);
                        I >= j && (W += P(s, j, I) + H, j = I + N.length)
                    }
                    return W + P(s, j)
                }
                ]
            }), !!s((function () {
                var e = /./;
                return e.exec = function () {
                    var e = [
                    ];
                    return e.groups = {
                        a: '7'
                    },
                        e
                },
                    '7' !== ''.replace(e, '$<a>')
            })) || !x || S)
        },
        4765: function (e, t, n) {
            'use strict';
            var r = n(6916),
                a = n(7007),
                i = n(9670),
                o = n(4488),
                s = n(1150),
                u = n(1340),
                l = n(8173),
                d = n(7651);
            a('search', (function (e, t, n) {
                return [function (t) {
                    var n = o(this),
                        a = null == t ? void 0 : l(t, e);
                    return a ? r(a, t, n) : new RegExp(t)[e](u(n))
                },
                function (e) {
                    var r = i(this),
                        a = u(e),
                        o = n(t, r, a);
                    if (o.done) return o.value;
                    var l = r.lastIndex;
                    s(l, 0) || (r.lastIndex = 0);
                    var c = d(r, a);
                    return s(r.lastIndex, l) || (r.lastIndex = l),
                        null === c ? - 1 : c.index
                }
                ]
            }))
        },
        3123: function (e, t, n) {
            'use strict';
            var r = n(2104),
                a = n(6916),
                i = n(1702),
                o = n(7007),
                s = n(7850),
                u = n(9670),
                l = n(4488),
                d = n(6707),
                c = n(1530),
                m = n(7466),
                f = n(1340),
                h = n(8173),
                p = n(1589),
                g = n(7651),
                v = n(2261),
                y = n(2999),
                w = n(7293),
                b = y.UNSUPPORTED_Y,
                k = 4294967295,
                M = Math.min,
                E = [
                ].push,
                P = i(/./.exec),
                x = i(E),
                S = i(''.slice),
                T = !w((function () {
                    var e = /(?:)/,
                        t = e.exec;
                    e.exec = function () {
                        return t.apply(this, arguments)
                    };
                    var n = 'ab'.split(e);
                    return 2 !== n.length || 'a' !== n[0] || 'b' !== n[1]
                }));
            o('split', (function (e, t, n) {
                var i;
                return i = 'c' == 'abbc'.split(/(b)*/)[1] || 4 != 'test'.split(/(?:)/, - 1).length || 2 != 'ab'.split(/(?:ab)*/).length || 4 != '.'.split(/(.?)(.?)/).length || '.'.split(/()()/).length > 1 || ''.split(/.?/).length ? function (e, n) {
                    var i = f(l(this)),
                        o = void 0 === n ? k : n >>> 0;
                    if (0 === o) return [];
                    if (void 0 === e) return [i];
                    if (!s(e)) return a(t, i, e, o);
                    for (var u, d, c, m = [
                    ], h = (e.ignoreCase ? 'i' : '') + (e.multiline ? 'm' : '') + (e.unicode ? 'u' : '') + (e.sticky ? 'y' : ''), g = 0, y = new RegExp(e.source, h + 'g'); (u = a(v, y, i)) && !((d = y.lastIndex) > g && (x(m, S(i, g, u.index)), u.length > 1 && u.index < i.length && r(E, m, p(u, 1)), c = u[0].length, g = d, m.length >= o));) y.lastIndex === u.index && y.lastIndex++;
                    return g === i.length ? !c && P(y, '') || x(m, '') : x(m, S(i, g)),
                        m.length > o ? p(m, 0, o) : m
                }
                    : '0'.split(void 0, 0).length ? function (e, n) {
                        return void 0 === e && 0 === n ? [
                        ] : a(t, this, e, n)
                    }
                        : t,
                    [
                        function (t, n) {
                            var r = l(this),
                                o = null == t ? void 0 : h(t, e);
                            return o ? a(o, t, r, n) : a(i, f(r), t, n)
                        },
                        function (e, r) {
                            var a = u(this),
                                o = f(e),
                                s = n(i, a, o, r, i !== t);
                            if (s.done) return s.value;
                            var l = d(a, RegExp),
                                h = a.unicode,
                                p = (a.ignoreCase ? 'i' : '') + (a.multiline ? 'm' : '') + (a.unicode ? 'u' : '') + (b ? 'g' : 'y'),
                                v = new l(b ? '^(?:' + a.source + ')' : a, p),
                                y = void 0 === r ? k : r >>> 0;
                            if (0 === y) return [];
                            if (0 === o.length) return null === g(v, o) ? [
                                o
                            ] : [
                            ];
                            for (var w = 0, E = 0, P = [
                            ]; E < o.length;) {
                                v.lastIndex = b ? 0 : E;
                                var T,
                                    C = g(v, b ? S(o, E) : o);
                                if (null === C || (T = M(m(v.lastIndex + (b ? E : 0)), o.length)) === w) E = c(o, E, h);
                                else {
                                    if (x(P, S(o, w, E)), P.length === y) return P;
                                    for (var W = 1; W <= C.length - 1; W++) if (x(P, C[W]), P.length === y) return P;
                                    E = w = T
                                }
                            }
                            return x(P, S(o, w)),
                                P
                        }
                    ]
            }), !T, b)
        },
        3210: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(3111).trim;
            r({
                target: 'String',
                proto: !0,
                forced: n(6091)('trim')
            }, {
                trim: function () {
                    return a(this)
                }
            })
        },
        1817: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(9781),
                i = n(7854),
                o = n(1702),
                s = n(2597),
                u = n(614),
                l = n(7976),
                d = n(1340),
                c = n(3070).f,
                m = n(9920),
                f = i.Symbol,
                h = f && f.prototype;
            if (a && u(f) && (!('description' in h) || void 0 !== f().description)) {
                var p = {
                },
                    g = function () {
                        var e = arguments.length < 1 || void 0 === arguments[0] ? void 0 : d(arguments[0]),
                            t = l(h, this) ? new f(e) : void 0 === e ? f() : f(e);
                        return '' === e && (p[t] = !0),
                            t
                    };
                m(g, f),
                    g.prototype = h,
                    h.constructor = g;
                var v = 'Symbol(test)' == String(f('test')),
                    y = o(h.toString),
                    w = o(h.valueOf),
                    b = /^Symbol\((.*)\)[^)]+$/,
                    k = o(''.replace),
                    M = o(''.slice);
                c(h, 'description', {
                    configurable: !0,
                    get: function () {
                        var e = w(this),
                            t = y(e);
                        if (s(p, e)) return '';
                        var n = v ? M(t, 7, - 1) : k(t, b, '$1');
                        return '' === n ? void 0 : n
                    }
                }),
                    r({
                        global: !0,
                        forced: !0
                    }, {
                        Symbol: g
                    })
            }
        },
        2165: function (e, t, n) {
            n(7235)('iterator')
        },
        2526: function (e, t, n) {
            'use strict';
            var r = n(2109),
                a = n(7854),
                i = n(5005),
                o = n(2104),
                s = n(6916),
                u = n(1702),
                l = n(1913),
                d = n(9781),
                c = n(133),
                m = n(7293),
                f = n(2597),
                h = n(3157),
                p = n(614),
                g = n(111),
                v = n(7976),
                y = n(2190),
                w = n(9670),
                b = n(7908),
                k = n(5656),
                M = n(4948),
                E = n(1340),
                P = n(9114),
                x = n(30),
                S = n(1956),
                T = n(8006),
                C = n(1156),
                W = n(5181),
                j = n(1236),
                D = n(3070),
                N = n(6048),
                I = n(5296),
                z = n(206),
                R = n(1320),
                A = n(2309),
                O = n(6200),
                H = n(3501),
                _ = n(9711),
                L = n(5112),
                F = n(6061),
                X = n(7235),
                U = n(8003),
                q = n(9909),
                G = n(2092).forEach,
                V = O('hidden'),
                Y = 'Symbol',
                B = L('toPrimitive'),
                $ = q.set,
                Q = q.getterFor(Y),
                K = Object.prototype,
                J = a.Symbol,
                Z = J && J.prototype,
                ee = a.TypeError,
                te = a.QObject,
                ne = i('JSON', 'stringify'),
                re = j.f,
                ae = D.f,
                ie = C.f,
                oe = I.f,
                se = u([].push),
                ue = A('symbols'),
                le = A('op-symbols'),
                de = A('string-to-symbol-registry'),
                ce = A('symbol-to-string-registry'),
                me = A('wks'),
                fe = !te || !te.prototype || !te.prototype.findChild,
                he = d && m((function () {
                    return 7 != x(ae({
                    }, 'a', {
                        get: function () {
                            return ae(this, 'a', {
                                value: 7
                            }).a
                        }
                    })).a
                })) ? function (e, t, n) {
                    var r = re(K, t);
                    r && delete K[t],
                        ae(e, t, n),
                        r && e !== K && ae(K, t, r)
                }
                    : ae,
                pe = function (e, t) {
                    var n = ue[e] = x(Z);
                    return $(n, {
                        type: Y,
                        tag: e,
                        description: t
                    }),
                        d || (n.description = t),
                        n
                },
                ge = function (e, t, n) {
                    e === K && ge(le, t, n),
                        w(e);
                    var r = M(t);
                    return w(n),
                        f(ue, r) ? (n.enumerable ? (f(e, V) && e[V][r] && (e[V][r] = !1), n = x(n, {
                            enumerable: P(0, !1)
                        })) : (f(e, V) || ae(e, V, P(1, {
                        })), e[V][r] = !0), he(e, r, n)) : ae(e, r, n)
                },
                ve = function (e, t) {
                    w(e);
                    var n = k(t),
                        r = S(n).concat(ke(n));
                    return G(r, (function (t) {
                        d && !s(ye, n, t) || ge(e, t, n[t])
                    })),
                        e
                },
                ye = function (e) {
                    var t = M(e),
                        n = s(oe, this, t);
                    return !(this === K && f(ue, t) && !f(le, t)) && (!(n || !f(this, t) || !f(ue, t) || f(this, V) && this[V][t]) || n)
                },
                we = function (e, t) {
                    var n = k(e),
                        r = M(t);
                    if (n !== K || !f(ue, r) || f(le, r)) {
                        var a = re(n, r);
                        return !a || !f(ue, r) || f(n, V) && n[V][r] || (a.enumerable = !0),
                            a
                    }
                },
                be = function (e) {
                    var t = ie(k(e)),
                        n = [
                        ];
                    return G(t, (function (e) {
                        f(ue, e) || f(H, e) || se(n, e)
                    })),
                        n
                },
                ke = function (e) {
                    var t = e === K,
                        n = ie(t ? le : k(e)),
                        r = [
                        ];
                    return G(n, (function (e) {
                        !f(ue, e) || t && !f(K, e) || se(r, ue[e])
                    })),
                        r
                };
            if (c || (J = function () {
                if (v(Z, this)) throw ee('Symbol is not a constructor');
                var e = arguments.length && void 0 !== arguments[0] ? E(arguments[0]) : void 0,
                    t = _(e),
                    n = function (e) {
                        this === K && s(n, le, e),
                            f(this, V) && f(this[V], t) && (this[V][t] = !1),
                            he(this, t, P(1, e))
                    };
                return d && fe && he(K, t, {
                    configurable: !0,
                    set: n
                }),
                    pe(t, e)
            }, R(Z = J.prototype, 'toString', (function () {
                return Q(this).tag
            })), R(J, 'withoutSetter', (function (e) {
                return pe(_(e), e)
            })), I.f = ye, D.f = ge, N.f = ve, j.f = we, T.f = C.f = be, W.f = ke, F.f = function (e) {
                return pe(L(e), e)
            }, d && (ae(Z, 'description', {
                configurable: !0,
                get: function () {
                    return Q(this).description
                }
            }), l || R(K, 'propertyIsEnumerable', ye, {
                unsafe: !0
            }))), r({
                global: !0,
                wrap: !0,
                forced: !c,
                sham: !c
            }, {
                Symbol: J
            }), G(S(me), (function (e) {
                X(e)
            })), r({
                target: Y,
                stat: !0,
                forced: !c
            }, {
                for: function (e) {
                    var t = E(e);
                    if (f(de, t)) return de[t];
                    var n = J(t);
                    return de[t] = n,
                        ce[n] = t,
                        n
                },
                keyFor: function (e) {
                    if (!y(e)) throw ee(e + ' is not a symbol');
                    if (f(ce, e)) return ce[e]
                },
                useSetter: function () {
                    fe = !0
                },
                useSimple: function () {
                    fe = !1
                }
            }), r({
                target: 'Object',
                stat: !0,
                forced: !c,
                sham: !d
            }, {
                create: function (e, t) {
                    return void 0 === t ? x(e) : ve(x(e), t)
                },
                defineProperty: ge,
                defineProperties: ve,
                getOwnPropertyDescriptor: we
            }), r({
                target: 'Object',
                stat: !0,
                forced: !c
            }, {
                getOwnPropertyNames: be,
                getOwnPropertySymbols: ke
            }), r({
                target: 'Object',
                stat: !0,
                forced: m((function () {
                    W.f(1)
                }))
            }, {
                getOwnPropertySymbols: function (e) {
                    return W.f(b(e))
                }
            }), ne && r({
                target: 'JSON',
                stat: !0,
                forced: !c || m((function () {
                    var e = J();
                    return '[null]' != ne([e]) || '{}' != ne({
                        a: e
                    }) || '{}' != ne(Object(e))
                }))
            }, {
                stringify: function (e, t, n) {
                    var r = z(arguments),
                        a = t;
                    if ((g(t) || void 0 !== e) && !y(e)) return h(t) || (t = function (e, t) {
                        if (p(a) && (t = s(a, this, e, t)), !y(t)) return t
                    }),
                        r[1] = t,
                        o(ne, null, r)
                }
            }), !Z[B]) {
                var Me = Z.valueOf;
                R(Z, B, (function (e) {
                    return s(Me, this)
                }))
            }
            U(J, Y),
                H[V] = !0
        },
        4747: function (e, t, n) {
            var r = n(7854),
                a = n(8324),
                i = n(8509),
                o = n(8533),
                s = n(8880),
                u = function (e) {
                    if (e && e.forEach !== o) try {
                        s(e, 'forEach', o)
                    } catch (t) {
                        e.forEach = o
                    }
                };
            for (var l in a) a[l] && u(r[l] && r[l].prototype);
            u(i)
        },
        3948: function (e, t, n) {
            var r = n(7854),
                a = n(8324),
                i = n(8509),
                o = n(6992),
                s = n(8880),
                u = n(5112),
                l = u('iterator'),
                d = u('toStringTag'),
                c = o.values,
                m = function (e, t) {
                    if (e) {
                        if (e[l] !== c) try {
                            s(e, l, c)
                        } catch (t) {
                            e[l] = c
                        }
                        if (e[d] || s(e, d, t), a[t]) for (var n in o) if (e[n] !== o[n]) try {
                            s(e, n, o[n])
                        } catch (t) {
                            e[n] = o[n]
                        }
                    }
                };
            for (var f in a) m(r[f] && r[f].prototype, f);
            m(i, 'DOMTokenList')
        },
        9211: function (e, t, n) {
            var r = n(6456);
            e.exports = r
        },
        8679: function (e, t, n) {
            'use strict';
            var r = n(1296),
                a = {
                    childContextTypes: !0,
                    contextType: !0,
                    contextTypes: !0,
                    defaultProps: !0,
                    displayName: !0,
                    getDefaultProps: !0,
                    getDerivedStateFromError: !0,
                    getDerivedStateFromProps: !0,
                    mixins: !0,
                    propTypes: !0,
                    type: !0
                },
                i = {
                    name: !0,
                    length: !0,
                    prototype: !0,
                    caller: !0,
                    callee: !0,
                    arguments: !0,
                    arity: !0
                },
                o = {
                    $$typeof: !0,
                    compare: !0,
                    defaultProps: !0,
                    displayName: !0,
                    propTypes: !0,
                    type: !0
                },
                s = {
                };
            function u(e) {
                return r.isMemo(e) ? o : s[e.$$typeof] || a
            }
            s[r.ForwardRef] = {
                $$typeof: !0,
                render: !0,
                defaultProps: !0,
                displayName: !0,
                propTypes: !0
            },
                s[r.Memo] = o;
            var l = Object.defineProperty,
                d = Object.getOwnPropertyNames,
                c = Object.getOwnPropertySymbols,
                m = Object.getOwnPropertyDescriptor,
                f = Object.getPrototypeOf,
                h = Object.prototype;
            e.exports = function e(t, n, r) {
                if ('string' != typeof n) {
                    if (h) {
                        var a = f(n);
                        a && a !== h && e(t, a, r)
                    }
                    var o = d(n);
                    c && (o = o.concat(c(n)));
                    for (var s = u(t), p = u(n), g = 0; g < o.length; ++g) {
                        var v = o[g];
                        if (!(i[v] || r && r[v] || p && p[v] || s && s[v])) {
                            var y = m(n, v);
                            try {
                                l(t, v, y)
                            } catch (e) {
                            }
                        }
                    }
                }
                return t
            }
        },
        6103: function (e, t) {
            'use strict';
            var n = 'function' == typeof Symbol && Symbol.for,
                r = n ? Symbol.for('react.element') : 60103,
                a = n ? Symbol.for('react.portal') : 60106,
                i = n ? Symbol.for('react.fragment') : 60107,
                o = n ? Symbol.for('react.strict_mode') : 60108,
                s = n ? Symbol.for('react.profiler') : 60114,
                u = n ? Symbol.for('react.provider') : 60109,
                l = n ? Symbol.for('react.context') : 60110,
                d = n ? Symbol.for('react.async_mode') : 60111,
                c = n ? Symbol.for('react.concurrent_mode') : 60111,
                m = n ? Symbol.for('react.forward_ref') : 60112,
                f = n ? Symbol.for('react.suspense') : 60113,
                h = n ? Symbol.for('react.suspense_list') : 60120,
                p = n ? Symbol.for('react.memo') : 60115,
                g = n ? Symbol.for('react.lazy') : 60116,
                v = n ? Symbol.for('react.block') : 60121,
                y = n ? Symbol.for('react.fundamental') : 60117,
                w = n ? Symbol.for('react.responder') : 60118,
                b = n ? Symbol.for('react.scope') : 60119;
            function k(e) {
                if ('object' == typeof e && null !== e) {
                    var t = e.$$typeof;
                    switch (t) {
                        case r:
                            switch (e = e.type) {
                                case d:
                                case c:
                                case i:
                                case s:
                                case o:
                                case f:
                                    return e;
                                default:
                                    switch (e = e && e.$$typeof) {
                                        case l:
                                        case m:
                                        case g:
                                        case p:
                                        case u:
                                            return e;
                                        default:
                                            return t
                                    }
                            }
                        case a:
                            return t
                    }
                }
            }
            function M(e) {
                return k(e) === c
            }
            t.AsyncMode = d,
                t.ConcurrentMode = c,
                t.ContextConsumer = l,
                t.ContextProvider = u,
                t.Element = r,
                t.ForwardRef = m,
                t.Fragment = i,
                t.Lazy = g,
                t.Memo = p,
                t.Portal = a,
                t.Profiler = s,
                t.StrictMode = o,
                t.Suspense = f,
                t.isAsyncMode = function (e) {
                    return M(e) || k(e) === d
                },
                t.isConcurrentMode = M,
                t.isContextConsumer = function (e) {
                    return k(e) === l
                },
                t.isContextProvider = function (e) {
                    return k(e) === u
                },
                t.isElement = function (e) {
                    return 'object' == typeof e && null !== e && e.$$typeof === r
                },
                t.isForwardRef = function (e) {
                    return k(e) === m
                },
                t.isFragment = function (e) {
                    return k(e) === i
                },
                t.isLazy = function (e) {
                    return k(e) === g
                },
                t.isMemo = function (e) {
                    return k(e) === p
                },
                t.isPortal = function (e) {
                    return k(e) === a
                },
                t.isProfiler = function (e) {
                    return k(e) === s
                },
                t.isStrictMode = function (e) {
                    return k(e) === o
                },
                t.isSuspense = function (e) {
                    return k(e) === f
                },
                t.isValidElementType = function (e) {
                    return 'string' == typeof e || 'function' == typeof e || e === i || e === c || e === s || e === o || e === f || e === h || 'object' == typeof e && null !== e && (e.$$typeof === g || e.$$typeof === p || e.$$typeof === u || e.$$typeof === l || e.$$typeof === m || e.$$typeof === y || e.$$typeof === w || e.$$typeof === b || e.$$typeof === v)
                },
                t.typeOf = k
        },
        1296: function (e, t, n) {
            'use strict';
            e.exports = n(6103)
        },
        7418: function (e) {
            'use strict';
            var t = Object.getOwnPropertySymbols,
                n = Object.prototype.hasOwnProperty,
                r = Object.prototype.propertyIsEnumerable;
            function a(e) {
                if (null == e) throw new TypeError('Object.assign cannot be called with null or undefined');
                return Object(e)
            }
            e.exports = function () {
                try {
                    if (!Object.assign) return !1;
                    var e = new String('abc');
                    if (e[5] = 'de', '5' === Object.getOwnPropertyNames(e)[0]) return !1;
                    for (var t = {
                    }, n = 0; n < 10; n++) t['_' + String.fromCharCode(n)] = n;
                    if ('0123456789' !== Object.getOwnPropertyNames(t).map((function (e) {
                        return t[e]
                    })).join('')) return !1;
                    var r = {
                    };
                    return 'abcdefghijklmnopqrst'.split('').forEach((function (e) {
                        r[e] = e
                    })),
                        'abcdefghijklmnopqrst' === Object.keys(Object.assign({
                        }, r)).join('')
                } catch (e) {
                    return !1
                }
            }() ? Object.assign : function (e, i) {
                for (var o, s, u = a(e), l = 1; l < arguments.length; l++) {
                    for (var d in o = Object(arguments[l])) n.call(o, d) && (u[d] = o[d]);
                    if (t) {
                        s = t(o);
                        for (var c = 0; c < s.length; c++) r.call(o, s[c]) && (u[s[c]] = o[s[c]])
                    }
                }
                return u
            }
        },
        4448: function (e, t, n) {
            'use strict';
            var r = n(7294),
                a = n(7418),
                i = n(3840);
            function o(e) {
                for (var t = 'https://reactjs.org/docs/error-decoder.html?invariant=' + e, n = 1; n < arguments.length; n++) t += '&args[]=' + encodeURIComponent(arguments[n]);
                return 'Minified React error #' + e + '; visit ' + t + ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
            }
            if (!r) throw Error(o(227));
            var s = new Set,
                u = {
                };
            function l(e, t) {
                d(e, t),
                    d(e + 'Capture', t)
            }
            function d(e, t) {
                for (u[e] = t, e = 0; e < t.length; e++) s.add(t[e])
            }
            var c = !('undefined' == typeof window || void 0 === window.document || void 0 === window.document.createElement),
                m = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
                f = Object.prototype.hasOwnProperty,
                h = {
                },
                p = {
                };
            function g(e, t, n, r, a, i, o) {
                this.acceptsBooleans = 2 === t || 3 === t || 4 === t,
                    this.attributeName = r,
                    this.attributeNamespace = a,
                    this.mustUseProperty = n,
                    this.propertyName = e,
                    this.type = t,
                    this.sanitizeURL = i,
                    this.removeEmptyString = o
            }
            var v = {
            };
            'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'.split(' ').forEach((function (e) {
                v[e] = new g(e, 0, !1, e, null, !1, !1)
            })),
                [
                    ['acceptCharset',
                        'accept-charset'],
                    [
                        'className',
                        'class'
                    ],
                    [
                        'htmlFor',
                        'for'
                    ],
                    [
                        'httpEquiv',
                        'http-equiv'
                    ]
                ].forEach((function (e) {
                    var t = e[0];
                    v[t] = new g(t, 1, !1, e[1], null, !1, !1)
                })),
                [
                    'contentEditable',
                    'draggable',
                    'spellCheck',
                    'value'
                ].forEach((function (e) {
                    v[e] = new g(e, 2, !1, e.toLowerCase(), null, !1, !1)
                })),
                [
                    'autoReverse',
                    'externalResourcesRequired',
                    'focusable',
                    'preserveAlpha'
                ].forEach((function (e) {
                    v[e] = new g(e, 2, !1, e, null, !1, !1)
                })),
                'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'.split(' ').forEach((function (e) {
                    v[e] = new g(e, 3, !1, e.toLowerCase(), null, !1, !1)
                })),
                [
                    'checked',
                    'multiple',
                    'muted',
                    'selected'
                ].forEach((function (e) {
                    v[e] = new g(e, 3, !0, e, null, !1, !1)
                })),
                [
                    'capture',
                    'download'
                ].forEach((function (e) {
                    v[e] = new g(e, 4, !1, e, null, !1, !1)
                })),
                [
                    'cols',
                    'rows',
                    'size',
                    'span'
                ].forEach((function (e) {
                    v[e] = new g(e, 6, !1, e, null, !1, !1)
                })),
                [
                    'rowSpan',
                    'start'
                ].forEach((function (e) {
                    v[e] = new g(e, 5, !1, e.toLowerCase(), null, !1, !1)
                }));
            var y = /[\-:]([a-z])/g;
            function w(e) {
                return e[1].toUpperCase()
            }
            function b(e, t, n, r) {
                var a = v.hasOwnProperty(t) ? v[t] : null;
                (null !== a ? 0 === a.type : !r && 2 < t.length && ('o' === t[0] || 'O' === t[0]) && ('n' === t[1] || 'N' === t[1])) || (function (e, t, n, r) {
                    if (null == t || function (e, t, n, r) {
                        if (null !== n && 0 === n.type) return !1;
                        switch (typeof t) {
                            case 'function':
                            case 'symbol':
                                return !0;
                            case 'boolean':
                                return !r && (null !== n ? !n.acceptsBooleans : 'data-' !== (e = e.toLowerCase().slice(0, 5)) && 'aria-' !== e);
                            default:
                                return !1
                        }
                    }(e, t, n, r)) return !0;
                    if (r) return !1;
                    if (null !== n) switch (n.type) {
                        case 3:
                            return !t;
                        case 4:
                            return !1 === t;
                        case 5:
                            return isNaN(t);
                        case 6:
                            return isNaN(t) || 1 > t
                    }
                    return !1
                }(t, n, a, r) && (n = null), r || null === a ? function (e) {
                    return !!f.call(p, e) || !f.call(h, e) && (m.test(e) ? p[e] = !0 : (h[e] = !0, !1))
                }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, '' + n)) : a.mustUseProperty ? e[a.propertyName] = null === n ? 3 !== a.type && '' : n : (t = a.attributeName, r = a.attributeNamespace, null === n ? e.removeAttribute(t) : (n = 3 === (a = a.type) || 4 === a && !0 === n ? '' : '' + n, r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))))
            }
            'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'.split(' ').forEach((function (e) {
                var t = e.replace(y, w);
                v[t] = new g(t, 1, !1, e, null, !1, !1)
            })),
                'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'.split(' ').forEach((function (e) {
                    var t = e.replace(y, w);
                    v[t] = new g(t, 1, !1, e, 'http://www.w3.org/1999/xlink', !1, !1)
                })),
                [
                    'xml:base',
                    'xml:lang',
                    'xml:space'
                ].forEach((function (e) {
                    var t = e.replace(y, w);
                    v[t] = new g(t, 1, !1, e, 'http://www.w3.org/XML/1998/namespace', !1, !1)
                })),
                [
                    'tabIndex',
                    'crossOrigin'
                ].forEach((function (e) {
                    v[e] = new g(e, 1, !1, e.toLowerCase(), null, !1, !1)
                })),
                v.xlinkHref = new g('xlinkHref', 1, !1, 'xlink:href', 'http://www.w3.org/1999/xlink', !0, !1),
                [
                    'src',
                    'href',
                    'action',
                    'formAction'
                ].forEach((function (e) {
                    v[e] = new g(e, 1, !1, e.toLowerCase(), null, !0, !0)
                }));
            var k = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
                M = 60103,
                E = 60106,
                P = 60107,
                x = 60108,
                S = 60114,
                T = 60109,
                C = 60110,
                W = 60112,
                j = 60113,
                D = 60120,
                N = 60115,
                I = 60116,
                z = 60121,
                R = 60128,
                A = 60129,
                O = 60130,
                H = 60131;
            if ('function' == typeof Symbol && Symbol.for) {
                var _ = Symbol.for;
                M = _('react.element'),
                    E = _('react.portal'),
                    P = _('react.fragment'),
                    x = _('react.strict_mode'),
                    S = _('react.profiler'),
                    T = _('react.provider'),
                    C = _('react.context'),
                    W = _('react.forward_ref'),
                    j = _('react.suspense'),
                    D = _('react.suspense_list'),
                    N = _('react.memo'),
                    I = _('react.lazy'),
                    z = _('react.block'),
                    _('react.scope'),
                    R = _('react.opaque.id'),
                    A = _('react.debug_trace_mode'),
                    O = _('react.offscreen'),
                    H = _('react.legacy_hidden')
            }
            var L,
                F = 'function' == typeof Symbol && Symbol.iterator;
            function X(e) {
                return null === e || 'object' != typeof e ? null : 'function' == typeof (e = F && e[F] || e['@@iterator']) ? e : null
            }
            function U(e) {
                if (void 0 === L) try {
                    throw Error()
                } catch (e) {
                    var t = e.stack.trim().match(/\n( *(at )?)/);
                    L = t && t[1] || ''
                }
                return '\n' + L + e
            }
            var q = !1;
            function G(e, t) {
                if (!e || q) return '';
                q = !0;
                var n = Error.prepareStackTrace;
                Error.prepareStackTrace = void 0;
                try {
                    if (t) if (t = function () {
                        throw Error()
                    }, Object.defineProperty(t.prototype, 'props', {
                        set: function () {
                            throw Error()
                        }
                    }), 'object' == typeof Reflect && Reflect.construct) {
                        try {
                            Reflect.construct(t, [
                            ])
                        } catch (e) {
                            var r = e
                        }
                        Reflect.construct(e, [
                        ], t)
                    } else {
                        try {
                            t.call()
                        } catch (e) {
                            r = e
                        }
                        e.call(t.prototype)
                    } else {
                        try {
                            throw Error()
                        } catch (e) {
                            r = e
                        }
                        e()
                    }
                } catch (e) {
                    if (e && r && 'string' == typeof e.stack) {
                        for (var a = e.stack.split('\n'), i = r.stack.split('\n'), o = a.length - 1, s = i.length - 1; 1 <= o && 0 <= s && a[o] !== i[s];) s--;
                        for (; 1 <= o && 0 <= s; o--, s--) if (a[o] !== i[s]) {
                            if (1 !== o || 1 !== s) do {
                                if (o--, 0 > --s || a[o] !== i[s]) return '\n' + a[o].replace(' at new ', ' at ')
                            } while (1 <= o && 0 <= s);
                            break
                        }
                    }
                } finally {
                    q = !1,
                        Error.prepareStackTrace = n
                }
                return (e = e ? e.displayName || e.name : '') ? U(e) : ''
            }
            function V(e) {
                switch (e.tag) {
                    case 5:
                        return U(e.type);
                    case 16:
                        return U('Lazy');
                    case 13:
                        return U('Suspense');
                    case 19:
                        return U('SuspenseList');
                    case 0:
                    case 2:
                    case 15:
                        return G(e.type, !1);
                    case 11:
                        return G(e.type.render, !1);
                    case 22:
                        return G(e.type._render, !1);
                    case 1:
                        return G(e.type, !0);
                    default:
                        return ''
                }
            }
            function Y(e) {
                if (null == e) return null;
                if ('function' == typeof e) return e.displayName || e.name || null;
                if ('string' == typeof e) return e;
                switch (e) {
                    case P:
                        return 'Fragment';
                    case E:
                        return 'Portal';
                    case S:
                        return 'Profiler';
                    case x:
                        return 'StrictMode';
                    case j:
                        return 'Suspense';
                    case D:
                        return 'SuspenseList'
                }
                if ('object' == typeof e) switch (e.$$typeof) {
                    case C:
                        return (e.displayName || 'Context') + '.Consumer';
                    case T:
                        return (e._context.displayName || 'Context') + '.Provider';
                    case W:
                        var t = e.render;
                        return t = t.displayName || t.name || '',
                            e.displayName || ('' !== t ? 'ForwardRef(' + t + ')' : 'ForwardRef');
                    case N:
                        return Y(e.type);
                    case z:
                        return Y(e._render);
                    case I:
                        t = e._payload,
                            e = e._init;
                        try {
                            return Y(e(t))
                        } catch (e) {
                        }
                }
                return null
            }
            function B(e) {
                switch (typeof e) {
                    case 'boolean':
                    case 'number':
                    case 'object':
                    case 'string':
                    case 'undefined':
                        return e;
                    default:
                        return ''
                }
            }
            function $(e) {
                var t = e.type;
                return (e = e.nodeName) && 'input' === e.toLowerCase() && ('checkbox' === t || 'radio' === t)
            }
            function Q(e) {
                e._valueTracker || (e._valueTracker = function (e) {
                    var t = $(e) ? 'checked' : 'value',
                        n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                        r = '' + e[t];
                    if (!e.hasOwnProperty(t) && void 0 !== n && 'function' == typeof n.get && 'function' == typeof n.set) {
                        var a = n.get,
                            i = n.set;
                        return Object.defineProperty(e, t, {
                            configurable: !0,
                            get: function () {
                                return a.call(this)
                            },
                            set: function (e) {
                                r = '' + e,
                                    i.call(this, e)
                            }
                        }),
                            Object.defineProperty(e, t, {
                                enumerable: n.enumerable
                            }),
                        {
                            getValue: function () {
                                return r
                            },
                            setValue: function (e) {
                                r = '' + e
                            },
                            stopTracking: function () {
                                e._valueTracker = null,
                                    delete e[t]
                            }
                        }
                    }
                }(e))
            }
            function K(e) {
                if (!e) return !1;
                var t = e._valueTracker;
                if (!t) return !0;
                var n = t.getValue(),
                    r = '';
                return e && (r = $(e) ? e.checked ? 'true' : 'false' : e.value),
                    (e = r) !== n && (t.setValue(e), !0)
            }
            function J(e) {
                if (void 0 === (e = e || ('undefined' != typeof document ? document : void 0))) return null;
                try {
                    return e.activeElement || e.body
                } catch (t) {
                    return e.body
                }
            }
            function Z(e, t) {
                var n = t.checked;
                return a({
                }, t, {
                    defaultChecked: void 0,
                    defaultValue: void 0,
                    value: void 0,
                    checked: null != n ? n : e._wrapperState.initialChecked
                })
            }
            function ee(e, t) {
                var n = null == t.defaultValue ? '' : t.defaultValue,
                    r = null != t.checked ? t.checked : t.defaultChecked;
                n = B(null != t.value ? t.value : n),
                    e._wrapperState = {
                        initialChecked: r,
                        initialValue: n,
                        controlled: 'checkbox' === t.type || 'radio' === t.type ? null != t.checked : null != t.value
                    }
            }
            function te(e, t) {
                null != (t = t.checked) && b(e, 'checked', t, !1)
            }
            function ne(e, t) {
                te(e, t);
                var n = B(t.value),
                    r = t.type;
                if (null != n) 'number' === r ? (0 === n && '' === e.value || e.value != n) && (e.value = '' + n) : e.value !== '' + n && (e.value = '' + n);
                else if ('submit' === r || 'reset' === r) return void e.removeAttribute('value');
                t.hasOwnProperty('value') ? ae(e, t.type, n) : t.hasOwnProperty('defaultValue') && ae(e, t.type, B(t.defaultValue)),
                    null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
            }
            function re(e, t, n) {
                if (t.hasOwnProperty('value') || t.hasOwnProperty('defaultValue')) {
                    var r = t.type;
                    if (!('submit' !== r && 'reset' !== r || void 0 !== t.value && null !== t.value)) return;
                    t = '' + e._wrapperState.initialValue,
                        n || t === e.value || (e.value = t),
                        e.defaultValue = t
                }
                '' !== (n = e.name) && (e.name = ''),
                    e.defaultChecked = !!e._wrapperState.initialChecked,
                    '' !== n && (e.name = n)
            }
            function ae(e, t, n) {
                'number' === t && J(e.ownerDocument) === e || (null == n ? e.defaultValue = '' + e._wrapperState.initialValue : e.defaultValue !== '' + n && (e.defaultValue = '' + n))
            }
            function ie(e, t) {
                return e = a({
                    children: void 0
                }, t),
                    (t = function (e) {
                        var t = '';
                        return r.Children.forEach(e, (function (e) {
                            null != e && (t += e)
                        })),
                            t
                    }(t.children)) && (e.children = t),
                    e
            }
            function oe(e, t, n, r) {
                if (e = e.options, t) {
                    t = {
                    };
                    for (var a = 0; a < n.length; a++) t['$' + n[a]] = !0;
                    for (n = 0; n < e.length; n++) a = t.hasOwnProperty('$' + e[n].value),
                        e[n].selected !== a && (e[n].selected = a),
                        a && r && (e[n].defaultSelected = !0)
                } else {
                    for (n = '' + B(n), t = null, a = 0; a < e.length; a++) {
                        if (e[a].value === n) return e[a].selected = !0,
                            void (r && (e[a].defaultSelected = !0));
                        null !== t || e[a].disabled || (t = e[a])
                    }
                    null !== t && (t.selected = !0)
                }
            }
            function se(e, t) {
                if (null != t.dangerouslySetInnerHTML) throw Error(o(91));
                return a({
                }, t, {
                    value: void 0,
                    defaultValue: void 0,
                    children: '' + e._wrapperState.initialValue
                })
            }
            function ue(e, t) {
                var n = t.value;
                if (null == n) {
                    if (n = t.children, t = t.defaultValue, null != n) {
                        if (null != t) throw Error(o(92));
                        if (Array.isArray(n)) {
                            if (!(1 >= n.length)) throw Error(o(93));
                            n = n[0]
                        }
                        t = n
                    }
                    null == t && (t = ''),
                        n = t
                }
                e._wrapperState = {
                    initialValue: B(n)
                }
            }
            function le(e, t) {
                var n = B(t.value),
                    r = B(t.defaultValue);
                null != n && ((n = '' + n) !== e.value && (e.value = n), null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)),
                    null != r && (e.defaultValue = '' + r)
            }
            function de(e) {
                var t = e.textContent;
                t === e._wrapperState.initialValue && '' !== t && null !== t && (e.value = t)
            }
            var ce = 'http://www.w3.org/1999/xhtml';
            function me(e) {
                switch (e) {
                    case 'svg':
                        return 'http://www.w3.org/2000/svg';
                    case 'math':
                        return 'http://www.w3.org/1998/Math/MathML';
                    default:
                        return 'http://www.w3.org/1999/xhtml'
                }
            }
            function fe(e, t) {
                return null == e || 'http://www.w3.org/1999/xhtml' === e ? me(t) : 'http://www.w3.org/2000/svg' === e && 'foreignObject' === t ? 'http://www.w3.org/1999/xhtml' : e
            }
            var he,
                pe,
                ge = (pe = function (e, t) {
                    if ('http://www.w3.org/2000/svg' !== e.namespaceURI || 'innerHTML' in e) e.innerHTML = t;
                    else {
                        for ((he = he || document.createElement('div')).innerHTML = '<svg>' + t.valueOf().toString() + '</svg>', t = he.firstChild; e.firstChild;) e.removeChild(e.firstChild);
                        for (; t.firstChild;) e.appendChild(t.firstChild)
                    }
                }, 'undefined' != typeof MSApp && MSApp.execUnsafeLocalFunction ? function (e, t, n, r) {
                    MSApp.execUnsafeLocalFunction((function () {
                        return pe(e, t)
                    }))
                }
                        : pe);
            function ve(e, t) {
                if (t) {
                    var n = e.firstChild;
                    if (n && n === e.lastChild && 3 === n.nodeType) return void (n.nodeValue = t)
                }
                e.textContent = t
            }
            var ye = {
                animationIterationCount: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                columns: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridArea: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowSpan: !0,
                gridRowStart: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnSpan: !0,
                gridColumnStart: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0
            },
                we = [
                    'Webkit',
                    'ms',
                    'Moz',
                    'O'
                ];
            function be(e, t, n) {
                return null == t || 'boolean' == typeof t || '' === t ? '' : n || 'number' != typeof t || 0 === t || ye.hasOwnProperty(e) && ye[e] ? ('' + t).trim() : t + 'px'
            }
            function ke(e, t) {
                for (var n in e = e.style, t) if (t.hasOwnProperty(n)) {
                    var r = 0 === n.indexOf('--'),
                        a = be(n, t[n], r);
                    'float' === n && (n = 'cssFloat'),
                        r ? e.setProperty(n, a) : e[n] = a
                }
            }
            Object.keys(ye).forEach((function (e) {
                we.forEach((function (t) {
                    t = t + e.charAt(0).toUpperCase() + e.substring(1),
                        ye[t] = ye[e]
                }))
            }));
            var Me = a({
                menuitem: !0
            }, {
                area: !0,
                base: !0,
                br: !0,
                col: !0,
                embed: !0,
                hr: !0,
                img: !0,
                input: !0,
                keygen: !0,
                link: !0,
                meta: !0,
                param: !0,
                source: !0,
                track: !0,
                wbr: !0
            });
            function Ee(e, t) {
                if (t) {
                    if (Me[e] && (null != t.children || null != t.dangerouslySetInnerHTML)) throw Error(o(137, e));
                    if (null != t.dangerouslySetInnerHTML) {
                        if (null != t.children) throw Error(o(60));
                        if ('object' != typeof t.dangerouslySetInnerHTML || !('__html' in t.dangerouslySetInnerHTML)) throw Error(o(61))
                    }
                    if (null != t.style && 'object' != typeof t.style) throw Error(o(62))
                }
            }
            function Pe(e, t) {
                if (- 1 === e.indexOf('-')) return 'string' == typeof t.is;
                switch (e) {
                    case 'annotation-xml':
                    case 'color-profile':
                    case 'font-face':
                    case 'font-face-src':
                    case 'font-face-uri':
                    case 'font-face-format':
                    case 'font-face-name':
                    case 'missing-glyph':
                        return !1;
                    default:
                        return !0
                }
            }
            function xe(e) {
                return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement),
                    3 === e.nodeType ? e.parentNode : e
            }
            var Se = null,
                Te = null,
                Ce = null;
            function We(e) {
                if (e = na(e)) {
                    if ('function' != typeof Se) throw Error(o(280));
                    var t = e.stateNode;
                    t && (t = aa(t), Se(e.stateNode, e.type, t))
                }
            }
            function je(e) {
                Te ? Ce ? Ce.push(e) : Ce = [
                    e
                ] : Te = e
            }
            function De() {
                if (Te) {
                    var e = Te,
                        t = Ce;
                    if (Ce = Te = null, We(e), t) for (e = 0; e < t.length; e++) We(t[e])
                }
            }
            function Ne(e, t) {
                return e(t)
            }
            function Ie(e, t, n, r, a) {
                return e(t, n, r, a)
            }
            function ze() {
            }
            var Re = Ne,
                Ae = !1,
                Oe = !1;
            function He() {
                null === Te && null === Ce || (ze(), De())
            }
            function _e(e, t) {
                var n = e.stateNode;
                if (null === n) return null;
                var r = aa(n);
                if (null === r) return null;
                n = r[t];
                e: switch (t) {
                    case 'onClick':
                    case 'onClickCapture':
                    case 'onDoubleClick':
                    case 'onDoubleClickCapture':
                    case 'onMouseDown':
                    case 'onMouseDownCapture':
                    case 'onMouseMove':
                    case 'onMouseMoveCapture':
                    case 'onMouseUp':
                    case 'onMouseUpCapture':
                    case 'onMouseEnter':
                        (r = !r.disabled) || (r = !('button' === (e = e.type) || 'input' === e || 'select' === e || 'textarea' === e)),
                            e = !r;
                        break e;
                    default:
                        e = !1
                }
                if (e) return null;
                if (n && 'function' != typeof n) throw Error(o(231, t, typeof n));
                return n
            }
            var Le = !1;
            if (c) try {
                var Fe = {
                };
                Object.defineProperty(Fe, 'passive', {
                    get: function () {
                        Le = !0
                    }
                }),
                    window.addEventListener('test', Fe, Fe),
                    window.removeEventListener('test', Fe, Fe)
            } catch (pe) {
                Le = !1
            }
            function Xe(e, t, n, r, a, i, o, s, u) {
                var l = Array.prototype.slice.call(arguments, 3);
                try {
                    t.apply(n, l)
                } catch (e) {
                    this.onError(e)
                }
            }
            var Ue = !1,
                qe = null,
                Ge = !1,
                Ve = null,
                Ye = {
                    onError: function (e) {
                        Ue = !0,
                            qe = e
                    }
                };
            function Be(e, t, n, r, a, i, o, s, u) {
                Ue = !1,
                    qe = null,
                    Xe.apply(Ye, arguments)
            }
            function $e(e) {
                var t = e,
                    n = e;
                if (e.alternate) for (; t.return;) t = t.return;
                else {
                    e = t;
                    do {
                        0 != (1026 & (t = e).flags) && (n = t.return),
                            e = t.return
                    } while (e)
                }
                return 3 === t.tag ? n : null
            }
            function Qe(e) {
                if (13 === e.tag) {
                    var t = e.memoizedState;
                    if (null === t && null !== (e = e.alternate) && (t = e.memoizedState), null !== t) return t.dehydrated
                }
                return null
            }
            function Ke(e) {
                if ($e(e) !== e) throw Error(o(188))
            }
            function Je(e) {
                if (e = function (e) {
                    var t = e.alternate;
                    if (!t) {
                        if (null === (t = $e(e))) throw Error(o(188));
                        return t !== e ? null : e
                    }
                    for (var n = e, r = t; ;) {
                        var a = n.return;
                        if (null === a) break;
                        var i = a.alternate;
                        if (null === i) {
                            if (null !== (r = a.return)) {
                                n = r;
                                continue
                            }
                            break
                        }
                        if (a.child === i.child) {
                            for (i = a.child; i;) {
                                if (i === n) return Ke(a),
                                    e;
                                if (i === r) return Ke(a),
                                    t;
                                i = i.sibling
                            }
                            throw Error(o(188))
                        }
                        if (n.return !== r.return) n = a,
                            r = i;
                        else {
                            for (var s = !1, u = a.child; u;) {
                                if (u === n) {
                                    s = !0,
                                        n = a,
                                        r = i;
                                    break
                                }
                                if (u === r) {
                                    s = !0,
                                        r = a,
                                        n = i;
                                    break
                                }
                                u = u.sibling
                            }
                            if (!s) {
                                for (u = i.child; u;) {
                                    if (u === n) {
                                        s = !0,
                                            n = i,
                                            r = a;
                                        break
                                    }
                                    if (u === r) {
                                        s = !0,
                                            r = i,
                                            n = a;
                                        break
                                    }
                                    u = u.sibling
                                }
                                if (!s) throw Error(o(189))
                            }
                        }
                        if (n.alternate !== r) throw Error(o(190))
                    }
                    if (3 !== n.tag) throw Error(o(188));
                    return n.stateNode.current === n ? e : t
                }(e), !e) return null;
                for (var t = e; ;) {
                    if (5 === t.tag || 6 === t.tag) return t;
                    if (t.child) t.child.return = t,
                        t = t.child;
                    else {
                        if (t === e) break;
                        for (; !t.sibling;) {
                            if (!t.return || t.return === e) return null;
                            t = t.return
                        }
                        t.sibling.return = t.return,
                            t = t.sibling
                    }
                }
                return null
            }
            function Ze(e, t) {
                for (var n = e.alternate; null !== t;) {
                    if (t === e || t === n) return !0;
                    t = t.return
                }
                return !1
            }
            var et,
                tt,
                nt,
                rt,
                at = !1,
                it = [
                ],
                ot = null,
                st = null,
                ut = null,
                lt = new Map,
                dt = new Map,
                ct = [
                ],
                mt = 'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(' ');
            function ft(e, t, n, r, a) {
                return {
                    blockedOn: e,
                    domEventName: t,
                    eventSystemFlags: 16 | n,
                    nativeEvent: a,
                    targetContainers: [
                        r
                    ]
                }
            }
            function ht(e, t) {
                switch (e) {
                    case 'focusin':
                    case 'focusout':
                        ot = null;
                        break;
                    case 'dragenter':
                    case 'dragleave':
                        st = null;
                        break;
                    case 'mouseover':
                    case 'mouseout':
                        ut = null;
                        break;
                    case 'pointerover':
                    case 'pointerout':
                        lt.delete(t.pointerId);
                        break;
                    case 'gotpointercapture':
                    case 'lostpointercapture':
                        dt.delete(t.pointerId)
                }
            }
            function pt(e, t, n, r, a, i) {
                return null === e || e.nativeEvent !== i ? (e = ft(t, n, r, a, i), null !== t && null !== (t = na(t)) && tt(t), e) : (e.eventSystemFlags |= r, t = e.targetContainers, null !== a && - 1 === t.indexOf(a) && t.push(a), e)
            }
            function gt(e) {
                var t = ta(e.target);
                if (null !== t) {
                    var n = $e(t);
                    if (null !== n) if (13 === (t = n.tag)) {
                        if (null !== (t = Qe(n))) return e.blockedOn = t,
                            void rt(e.lanePriority, (function () {
                                i.unstable_runWithPriority(e.priority, (function () {
                                    nt(n)
                                }))
                            }))
                    } else if (3 === t && n.stateNode.hydrate) return void (e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
                }
                e.blockedOn = null
            }
            function vt(e) {
                if (null !== e.blockedOn) return !1;
                for (var t = e.targetContainers; 0 < t.length;) {
                    var n = Jt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                    if (null !== n) return null !== (t = na(n)) && tt(t),
                        e.blockedOn = n,
                        !1;
                    t.shift()
                }
                return !0
            }
            function yt(e, t, n) {
                vt(e) && n.delete(t)
            }
            function wt() {
                for (at = !1; 0 < it.length;) {
                    var e = it[0];
                    if (null !== e.blockedOn) {
                        null !== (e = na(e.blockedOn)) && et(e);
                        break
                    }
                    for (var t = e.targetContainers; 0 < t.length;) {
                        var n = Jt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                        if (null !== n) {
                            e.blockedOn = n;
                            break
                        }
                        t.shift()
                    }
                    null === e.blockedOn && it.shift()
                }
                null !== ot && vt(ot) && (ot = null),
                    null !== st && vt(st) && (st = null),
                    null !== ut && vt(ut) && (ut = null),
                    lt.forEach(yt),
                    dt.forEach(yt)
            }
            function bt(e, t) {
                e.blockedOn === t && (e.blockedOn = null, at || (at = !0, i.unstable_scheduleCallback(i.unstable_NormalPriority, wt)))
            }
            function kt(e) {
                function t(t) {
                    return bt(t, e)
                }
                if (0 < it.length) {
                    bt(it[0], e);
                    for (var n = 1; n < it.length; n++) {
                        var r = it[n];
                        r.blockedOn === e && (r.blockedOn = null)
                    }
                }
                for (null !== ot && bt(ot, e), null !== st && bt(st, e), null !== ut && bt(ut, e), lt.forEach(t), dt.forEach(t), n = 0; n < ct.length; n++) (r = ct[n]).blockedOn === e && (r.blockedOn = null);
                for (; 0 < ct.length && null === (n = ct[0]).blockedOn;) gt(n),
                    null === n.blockedOn && ct.shift()
            }
            function Mt(e, t) {
                var n = {
                };
                return n[e.toLowerCase()] = t.toLowerCase(),
                    n['Webkit' + e] = 'webkit' + t,
                    n['Moz' + e] = 'moz' + t,
                    n
            }
            var Et = {
                animationend: Mt('Animation', 'AnimationEnd'),
                animationiteration: Mt('Animation', 'AnimationIteration'),
                animationstart: Mt('Animation', 'AnimationStart'),
                transitionend: Mt('Transition', 'TransitionEnd')
            },
                Pt = {
                },
                xt = {
                };
            function St(e) {
                if (Pt[e]) return Pt[e];
                if (!Et[e]) return e;
                var t,
                    n = Et[e];
                for (t in n) if (n.hasOwnProperty(t) && t in xt) return Pt[e] = n[t];
                return e
            }
            c && (xt = document.createElement('div').style, 'AnimationEvent' in window || (delete Et.animationend.animation, delete Et.animationiteration.animation, delete Et.animationstart.animation), 'TransitionEvent' in window || delete Et.transitionend.transition);
            var Tt = St('animationend'),
                Ct = St('animationiteration'),
                Wt = St('animationstart'),
                jt = St('transitionend'),
                Dt = new Map,
                Nt = new Map,
                It = [
                    'abort',
                    'abort',
                    Tt,
                    'animationEnd',
                    Ct,
                    'animationIteration',
                    Wt,
                    'animationStart',
                    'canplay',
                    'canPlay',
                    'canplaythrough',
                    'canPlayThrough',
                    'durationchange',
                    'durationChange',
                    'emptied',
                    'emptied',
                    'encrypted',
                    'encrypted',
                    'ended',
                    'ended',
                    'error',
                    'error',
                    'gotpointercapture',
                    'gotPointerCapture',
                    'load',
                    'load',
                    'loadeddata',
                    'loadedData',
                    'loadedmetadata',
                    'loadedMetadata',
                    'loadstart',
                    'loadStart',
                    'lostpointercapture',
                    'lostPointerCapture',
                    'playing',
                    'playing',
                    'progress',
                    'progress',
                    'seeking',
                    'seeking',
                    'stalled',
                    'stalled',
                    'suspend',
                    'suspend',
                    'timeupdate',
                    'timeUpdate',
                    jt,
                    'transitionEnd',
                    'waiting',
                    'waiting'
                ];
            function zt(e, t) {
                for (var n = 0; n < e.length; n += 2) {
                    var r = e[n],
                        a = e[n + 1];
                    a = 'on' + (a[0].toUpperCase() + a.slice(1)),
                        Nt.set(r, t),
                        Dt.set(r, a),
                        l(a, [
                            r
                        ])
                }
            } (0, i.unstable_now)();
            var Rt = 8;
            function At(e) {
                if (0 != (1 & e)) return Rt = 15,
                    1;
                if (0 != (2 & e)) return Rt = 14,
                    2;
                if (0 != (4 & e)) return Rt = 13,
                    4;
                var t = 24 & e;
                return 0 !== t ? (Rt = 12, t) : 0 != (32 & e) ? (Rt = 11, 32) : 0 != (t = 192 & e) ? (Rt = 10, t) : 0 != (256 & e) ? (Rt = 9, 256) : 0 != (t = 3584 & e) ? (Rt = 8, t) : 0 != (4096 & e) ? (Rt = 7, 4096) : 0 != (t = 4186112 & e) ? (Rt = 6, t) : 0 != (t = 62914560 & e) ? (Rt = 5, t) : 67108864 & e ? (Rt = 4, 67108864) : 0 != (134217728 & e) ? (Rt = 3, 134217728) : 0 != (t = 805306368 & e) ? (Rt = 2, t) : 0 != (1073741824 & e) ? (Rt = 1, 1073741824) : (Rt = 8, e)
            }
            function Ot(e, t) {
                var n = e.pendingLanes;
                if (0 === n) return Rt = 0;
                var r = 0,
                    a = 0,
                    i = e.expiredLanes,
                    o = e.suspendedLanes,
                    s = e.pingedLanes;
                if (0 !== i) r = i,
                    a = Rt = 15;
                else if (0 != (i = 134217727 & n)) {
                    var u = i & ~o;
                    0 !== u ? (r = At(u), a = Rt) : 0 != (s &= i) && (r = At(s), a = Rt)
                } else 0 != (i = n & ~o) ? (r = At(i), a = Rt) : 0 !== s && (r = At(s), a = Rt);
                if (0 === r) return 0;
                if (r = n & ((0 > (r = 31 - Ut(r)) ? 0 : 1 << r) << 1) - 1, 0 !== t && t !== r && 0 == (t & o)) {
                    if (At(t), a <= Rt) return t;
                    Rt = a
                }
                if (0 !== (t = e.entangledLanes)) for (e = e.entanglements, t &= r; 0 < t;) a = 1 << (n = 31 - Ut(t)),
                    r |= e[n],
                    t &= ~a;
                return r
            }
            function Ht(e) {
                return 0 != (e = - 1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0
            }
            function _t(e, t) {
                switch (e) {
                    case 15:
                        return 1;
                    case 14:
                        return 2;
                    case 12:
                        return 0 === (e = Lt(24 & ~t)) ? _t(10, t) : e;
                    case 10:
                        return 0 === (e = Lt(192 & ~t)) ? _t(8, t) : e;
                    case 8:
                        return 0 === (e = Lt(3584 & ~t)) && 0 === (e = Lt(4186112 & ~t)) && (e = 512),
                            e;
                    case 2:
                        return 0 === (t = Lt(805306368 & ~t)) && (t = 268435456),
                            t
                }
                throw Error(o(358, e))
            }
            function Lt(e) {
                return e & - e
            }
            function Ft(e) {
                for (var t = [
                ], n = 0; 31 > n; n++) t.push(e);
                return t
            }
            function Xt(e, t, n) {
                e.pendingLanes |= t;
                var r = t - 1;
                e.suspendedLanes &= r,
                    e.pingedLanes &= r,
                    (e = e.eventTimes)[t = 31 - Ut(t)] = n
            }
            var Ut = Math.clz32 ? Math.clz32 : function (e) {
                return 0 === e ? 32 : 31 - (qt(e) / Gt | 0) | 0
            },
                qt = Math.log,
                Gt = Math.LN2,
                Vt = i.unstable_UserBlockingPriority,
                Yt = i.unstable_runWithPriority,
                Bt = !0;
            function $t(e, t, n, r) {
                Ae || ze();
                var a = Kt,
                    i = Ae;
                Ae = !0;
                try {
                    Ie(a, e, t, n, r)
                } finally {
                    (Ae = i) || He()
                }
            }
            function Qt(e, t, n, r) {
                Yt(Vt, Kt.bind(null, e, t, n, r))
            }
            function Kt(e, t, n, r) {
                var a;
                if (Bt) if ((a = 0 == (4 & t)) && 0 < it.length && - 1 < mt.indexOf(e)) e = ft(null, e, t, n, r),
                    it.push(e);
                else {
                    var i = Jt(e, t, n, r);
                    if (null === i) a && ht(e, r);
                    else {
                        if (a) {
                            if (- 1 < mt.indexOf(e)) return e = ft(i, e, t, n, r),
                                void it.push(e);
                            if (function (e, t, n, r, a) {
                                switch (t) {
                                    case 'focusin':
                                        return ot = pt(ot, e, t, n, r, a),
                                            !0;
                                    case 'dragenter':
                                        return st = pt(st, e, t, n, r, a),
                                            !0;
                                    case 'mouseover':
                                        return ut = pt(ut, e, t, n, r, a),
                                            !0;
                                    case 'pointerover':
                                        var i = a.pointerId;
                                        return lt.set(i, pt(lt.get(i) || null, e, t, n, r, a)),
                                            !0;
                                    case 'gotpointercapture':
                                        return i = a.pointerId,
                                            dt.set(i, pt(dt.get(i) || null, e, t, n, r, a)),
                                            !0
                                }
                                return !1
                            }(i, e, t, n, r)) return;
                            ht(e, r)
                        }
                        zr(e, t, r, null, n)
                    }
                }
            }
            function Jt(e, t, n, r) {
                var a = xe(r);
                if (null !== (a = ta(a))) {
                    var i = $e(a);
                    if (null === i) a = null;
                    else {
                        var o = i.tag;
                        if (13 === o) {
                            if (null !== (a = Qe(i))) return a;
                            a = null
                        } else if (3 === o) {
                            if (i.stateNode.hydrate) return 3 === i.tag ? i.stateNode.containerInfo : null;
                            a = null
                        } else i !== a && (a = null)
                    }
                }
                return zr(e, t, r, a, n),
                    null
            }
            var Zt = null,
                en = null,
                tn = null;
            function nn() {
                if (tn) return tn;
                var e,
                    t,
                    n = en,
                    r = n.length,
                    a = 'value' in Zt ? Zt.value : Zt.textContent,
                    i = a.length;
                for (e = 0; e < r && n[e] === a[e]; e++);
                var o = r - e;
                for (t = 1; t <= o && n[r - t] === a[i - t]; t++);
                return tn = a.slice(e, 1 < t ? 1 - t : void 0)
            }
            function rn(e) {
                var t = e.keyCode;
                return 'charCode' in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t,
                    10 === e && (e = 13),
                    32 <= e || 13 === e ? e : 0
            }
            function an() {
                return !0
            }
            function on() {
                return !1
            }
            function sn(e) {
                function t(t, n, r, a, i) {
                    for (var o in this._reactName = t, this._targetInst = r, this.type = n, this.nativeEvent = a, this.target = i, this.currentTarget = null, e) e.hasOwnProperty(o) && (t = e[o], this[o] = t ? t(a) : a[o]);
                    return this.isDefaultPrevented = (null != a.defaultPrevented ? a.defaultPrevented : !1 === a.returnValue) ? an : on,
                        this.isPropagationStopped = on,
                        this
                }
                return a(t.prototype, {
                    preventDefault: function () {
                        this.defaultPrevented = !0;
                        var e = this.nativeEvent;
                        e && (e.preventDefault ? e.preventDefault() : 'unknown' != typeof e.returnValue && (e.returnValue = !1), this.isDefaultPrevented = an)
                    },
                    stopPropagation: function () {
                        var e = this.nativeEvent;
                        e && (e.stopPropagation ? e.stopPropagation() : 'unknown' != typeof e.cancelBubble && (e.cancelBubble = !0), this.isPropagationStopped = an)
                    },
                    persist: function () {
                    },
                    isPersistent: an
                }),
                    t
            }
            var un,
                ln,
                dn,
                cn = {
                    eventPhase: 0,
                    bubbles: 0,
                    cancelable: 0,
                    timeStamp: function (e) {
                        return e.timeStamp || Date.now()
                    },
                    defaultPrevented: 0,
                    isTrusted: 0
                },
                mn = sn(cn),
                fn = a({
                }, cn, {
                    view: 0,
                    detail: 0
                }),
                hn = sn(fn),
                pn = a({
                }, fn, {
                    screenX: 0,
                    screenY: 0,
                    clientX: 0,
                    clientY: 0,
                    pageX: 0,
                    pageY: 0,
                    ctrlKey: 0,
                    shiftKey: 0,
                    altKey: 0,
                    metaKey: 0,
                    getModifierState: Tn,
                    button: 0,
                    buttons: 0,
                    relatedTarget: function (e) {
                        return void 0 === e.relatedTarget ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget
                    },
                    movementX: function (e) {
                        return 'movementX' in e ? e.movementX : (e !== dn && (dn && 'mousemove' === e.type ? (un = e.screenX - dn.screenX, ln = e.screenY - dn.screenY) : ln = un = 0, dn = e), un)
                    },
                    movementY: function (e) {
                        return 'movementY' in e ? e.movementY : ln
                    }
                }),
                gn = sn(pn),
                vn = sn(a({
                }, pn, {
                    dataTransfer: 0
                })),
                yn = sn(a({
                }, fn, {
                    relatedTarget: 0
                })),
                wn = sn(a({
                }, cn, {
                    animationName: 0,
                    elapsedTime: 0,
                    pseudoElement: 0
                })),
                bn = a({
                }, cn, {
                    clipboardData: function (e) {
                        return 'clipboardData' in e ? e.clipboardData : window.clipboardData
                    }
                }),
                kn = sn(bn),
                Mn = sn(a({
                }, cn, {
                    data: 0
                })),
                En = {
                    Esc: 'Escape',
                    Spacebar: ' ',
                    Left: 'ArrowLeft',
                    Up: 'ArrowUp',
                    Right: 'ArrowRight',
                    Down: 'ArrowDown',
                    Del: 'Delete',
                    Win: 'OS',
                    Menu: 'ContextMenu',
                    Apps: 'ContextMenu',
                    Scroll: 'ScrollLock',
                    MozPrintableKey: 'Unidentified'
                },
                Pn = {
                    8: 'Backspace',
                    9: 'Tab',
                    12: 'Clear',
                    13: 'Enter',
                    16: 'Shift',
                    17: 'Control',
                    18: 'Alt',
                    19: 'Pause',
                    20: 'CapsLock',
                    27: 'Escape',
                    32: ' ',
                    33: 'PageUp',
                    34: 'PageDown',
                    35: 'End',
                    36: 'Home',
                    37: 'ArrowLeft',
                    38: 'ArrowUp',
                    39: 'ArrowRight',
                    40: 'ArrowDown',
                    45: 'Insert',
                    46: 'Delete',
                    112: 'F1',
                    113: 'F2',
                    114: 'F3',
                    115: 'F4',
                    116: 'F5',
                    117: 'F6',
                    118: 'F7',
                    119: 'F8',
                    120: 'F9',
                    121: 'F10',
                    122: 'F11',
                    123: 'F12',
                    144: 'NumLock',
                    145: 'ScrollLock',
                    224: 'Meta'
                },
                xn = {
                    Alt: 'altKey',
                    Control: 'ctrlKey',
                    Meta: 'metaKey',
                    Shift: 'shiftKey'
                };
            function Sn(e) {
                var t = this.nativeEvent;
                return t.getModifierState ? t.getModifierState(e) : !!(e = xn[e]) && !!t[e]
            }
            function Tn() {
                return Sn
            }
            var Cn = a({
            }, fn, {
                key: function (e) {
                    if (e.key) {
                        var t = En[e.key] || e.key;
                        if ('Unidentified' !== t) return t
                    }
                    return 'keypress' === e.type ? 13 === (e = rn(e)) ? 'Enter' : String.fromCharCode(e) : 'keydown' === e.type || 'keyup' === e.type ? Pn[e.keyCode] || 'Unidentified' : ''
                },
                code: 0,
                location: 0,
                ctrlKey: 0,
                shiftKey: 0,
                altKey: 0,
                metaKey: 0,
                repeat: 0,
                locale: 0,
                getModifierState: Tn,
                charCode: function (e) {
                    return 'keypress' === e.type ? rn(e) : 0
                },
                keyCode: function (e) {
                    return 'keydown' === e.type || 'keyup' === e.type ? e.keyCode : 0
                },
                which: function (e) {
                    return 'keypress' === e.type ? rn(e) : 'keydown' === e.type || 'keyup' === e.type ? e.keyCode : 0
                }
            }),
                Wn = sn(Cn),
                jn = sn(a({
                }, pn, {
                    pointerId: 0,
                    width: 0,
                    height: 0,
                    pressure: 0,
                    tangentialPressure: 0,
                    tiltX: 0,
                    tiltY: 0,
                    twist: 0,
                    pointerType: 0,
                    isPrimary: 0
                })),
                Dn = sn(a({
                }, fn, {
                    touches: 0,
                    targetTouches: 0,
                    changedTouches: 0,
                    altKey: 0,
                    metaKey: 0,
                    ctrlKey: 0,
                    shiftKey: 0,
                    getModifierState: Tn
                })),
                Nn = sn(a({
                }, cn, {
                    propertyName: 0,
                    elapsedTime: 0,
                    pseudoElement: 0
                })),
                In = a({
                }, pn, {
                    deltaX: function (e) {
                        return 'deltaX' in e ? e.deltaX : 'wheelDeltaX' in e ? - e.wheelDeltaX : 0
                    },
                    deltaY: function (e) {
                        return 'deltaY' in e ? e.deltaY : 'wheelDeltaY' in e ? - e.wheelDeltaY : 'wheelDelta' in e ? - e.wheelDelta : 0
                    },
                    deltaZ: 0,
                    deltaMode: 0
                }),
                zn = sn(In),
                Rn = [
                    9,
                    13,
                    27,
                    32
                ],
                An = c && 'CompositionEvent' in window,
                On = null;
            c && 'documentMode' in document && (On = document.documentMode);
            var Hn = c && 'TextEvent' in window && !On,
                _n = c && (!An || On && 8 < On && 11 >= On),
                Ln = String.fromCharCode(32),
                Fn = !1;
            function Xn(e, t) {
                switch (e) {
                    case 'keyup':
                        return - 1 !== Rn.indexOf(t.keyCode);
                    case 'keydown':
                        return 229 !== t.keyCode;
                    case 'keypress':
                    case 'mousedown':
                    case 'focusout':
                        return !0;
                    default:
                        return !1
                }
            }
            function Un(e) {
                return 'object' == typeof (e = e.detail) && 'data' in e ? e.data : null
            }
            var qn = !1,
                Gn = {
                    color: !0,
                    date: !0,
                    datetime: !0,
                    'datetime-local': !0,
                    email: !0,
                    month: !0,
                    number: !0,
                    password: !0,
                    range: !0,
                    search: !0,
                    tel: !0,
                    text: !0,
                    time: !0,
                    url: !0,
                    week: !0
                };
            function Vn(e) {
                var t = e && e.nodeName && e.nodeName.toLowerCase();
                return 'input' === t ? !!Gn[e.type] : 'textarea' === t
            }
            function Yn(e, t, n, r) {
                je(r),
                    0 < (t = Ar(t, 'onChange')).length && (n = new mn('onChange', 'change', null, n, r), e.push({
                        event: n,
                        listeners: t
                    }))
            }
            var Bn = null,
                $n = null;
            function Qn(e) {
                Cr(e, 0)
            }
            function Kn(e) {
                if (K(ra(e))) return e
            }
            function Jn(e, t) {
                if ('change' === e) return t
            }
            var Zn = !1;
            if (c) {
                var er;
                if (c) {
                    var tr = 'oninput' in document;
                    if (!tr) {
                        var nr = document.createElement('div');
                        nr.setAttribute('oninput', 'return;'),
                            tr = 'function' == typeof nr.oninput
                    }
                    er = tr
                } else er = !1;
                Zn = er && (!document.documentMode || 9 < document.documentMode)
            }
            function rr() {
                Bn && (Bn.detachEvent('onpropertychange', ar), $n = Bn = null)
            }
            function ar(e) {
                if ('value' === e.propertyName && Kn($n)) {
                    var t = [
                    ];
                    if (Yn(t, $n, e, xe(e)), e = Qn, Ae) e(t);
                    else {
                        Ae = !0;
                        try {
                            Ne(e, t)
                        } finally {
                            Ae = !1,
                                He()
                        }
                    }
                }
            }
            function ir(e, t, n) {
                'focusin' === e ? (rr(), $n = n, (Bn = t).attachEvent('onpropertychange', ar)) : 'focusout' === e && rr()
            }
            function or(e) {
                if ('selectionchange' === e || 'keyup' === e || 'keydown' === e) return Kn($n)
            }
            function sr(e, t) {
                if ('click' === e) return Kn(t)
            }
            function ur(e, t) {
                if ('input' === e || 'change' === e) return Kn(t)
            }
            var lr = 'function' == typeof Object.is ? Object.is : function (e, t) {
                return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
            },
                dr = Object.prototype.hasOwnProperty;
            function cr(e, t) {
                if (lr(e, t)) return !0;
                if ('object' != typeof e || null === e || 'object' != typeof t || null === t) return !1;
                var n = Object.keys(e),
                    r = Object.keys(t);
                if (n.length !== r.length) return !1;
                for (r = 0; r < n.length; r++) if (!dr.call(t, n[r]) || !lr(e[n[r]], t[n[r]])) return !1;
                return !0
            }
            function mr(e) {
                for (; e && e.firstChild;) e = e.firstChild;
                return e
            }
            function fr(e, t) {
                var n,
                    r = mr(e);
                for (e = 0; r;) {
                    if (3 === r.nodeType) {
                        if (n = e + r.textContent.length, e <= t && n >= t) return {
                            node: r,
                            offset: t - e
                        };
                        e = n
                    }
                    e: {
                        for (; r;) {
                            if (r.nextSibling) {
                                r = r.nextSibling;
                                break e
                            }
                            r = r.parentNode
                        }
                        r = void 0
                    }
                    r = mr(r)
                }
            }
            function hr(e, t) {
                return !(!e || !t) && (e === t || (!e || 3 !== e.nodeType) && (t && 3 === t.nodeType ? hr(e, t.parentNode) : 'contains' in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t))))
            }
            function pr() {
                for (var e = window, t = J(); t instanceof e.HTMLIFrameElement;) {
                    try {
                        var n = 'string' == typeof t.contentWindow.location.href
                    } catch (e) {
                        n = !1
                    }
                    if (!n) break;
                    t = J((e = t.contentWindow).document)
                }
                return t
            }
            function gr(e) {
                var t = e && e.nodeName && e.nodeName.toLowerCase();
                return t && ('input' === t && ('text' === e.type || 'search' === e.type || 'tel' === e.type || 'url' === e.type || 'password' === e.type) || 'textarea' === t || 'true' === e.contentEditable)
            }
            var vr = c && 'documentMode' in document && 11 >= document.documentMode,
                yr = null,
                wr = null,
                br = null,
                kr = !1;
            function Mr(e, t, n) {
                var r = n.window === n ? n.document : 9 === n.nodeType ? n : n.ownerDocument;
                kr || null == yr || yr !== J(r) || (r = 'selectionStart' in (r = yr) && gr(r) ? {
                    start: r.selectionStart,
                    end: r.selectionEnd
                }
                    : {
                        anchorNode: (r = (r.ownerDocument && r.ownerDocument.defaultView || window).getSelection()).anchorNode,
                        anchorOffset: r.anchorOffset,
                        focusNode: r.focusNode,
                        focusOffset: r.focusOffset
                    }, br && cr(br, r) || (br = r, 0 < (r = Ar(wr, 'onSelect')).length && (t = new mn('onSelect', 'select', null, t, n), e.push({
                        event: t,
                        listeners: r
                    }), t.target = yr)))
            }
            zt('cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange'.split(' '), 0),
                zt('drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel'.split(' '), 1),
                zt(It, 2);
            for (var Er = 'change selectionchange textInput compositionstart compositionend compositionupdate'.split(' '), Pr = 0; Pr < Er.length; Pr++) Nt.set(Er[Pr], 0);
            d('onMouseEnter', [
                'mouseout',
                'mouseover'
            ]),
                d('onMouseLeave', [
                    'mouseout',
                    'mouseover'
                ]),
                d('onPointerEnter', [
                    'pointerout',
                    'pointerover'
                ]),
                d('onPointerLeave', [
                    'pointerout',
                    'pointerover'
                ]),
                l('onChange', 'change click focusin focusout input keydown keyup selectionchange'.split(' ')),
                l('onSelect', 'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(' ')),
                l('onBeforeInput', [
                    'compositionend',
                    'keypress',
                    'textInput',
                    'paste'
                ]),
                l('onCompositionEnd', 'compositionend focusout keydown keypress keyup mousedown'.split(' ')),
                l('onCompositionStart', 'compositionstart focusout keydown keypress keyup mousedown'.split(' ')),
                l('onCompositionUpdate', 'compositionupdate focusout keydown keypress keyup mousedown'.split(' '));
            var xr = 'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting'.split(' '),
                Sr = new Set('cancel close invalid load scroll toggle'.split(' ').concat(xr));
            function Tr(e, t, n) {
                var r = e.type || 'unknown-event';
                e.currentTarget = n,
                    function (e, t, n, r, a, i, s, u, l) {
                        if (Be.apply(this, arguments), Ue) {
                            if (!Ue) throw Error(o(198));
                            var d = qe;
                            Ue = !1,
                                qe = null,
                                Ge || (Ge = !0, Ve = d)
                        }
                    }(r, t, void 0, e),
                    e.currentTarget = null
            }
            function Cr(e, t) {
                t = 0 != (4 & t);
                for (var n = 0; n < e.length; n++) {
                    var r = e[n],
                        a = r.event;
                    r = r.listeners;
                    e: {
                        var i = void 0;
                        if (t) for (var o = r.length - 1; 0 <= o; o--) {
                            var s = r[o],
                                u = s.instance,
                                l = s.currentTarget;
                            if (s = s.listener, u !== i && a.isPropagationStopped()) break e;
                            Tr(a, s, l),
                                i = u
                        } else for (o = 0; o < r.length; o++) {
                            if (u = (s = r[o]).instance, l = s.currentTarget, s = s.listener, u !== i && a.isPropagationStopped()) break e;
                            Tr(a, s, l),
                                i = u
                        }
                    }
                }
                if (Ge) throw e = Ve,
                    Ge = !1,
                    Ve = null,
                    e
            }
            function Wr(e, t) {
                var n = ia(t),
                    r = e + '__bubble';
                n.has(r) || (Ir(t, e, 2, !1), n.add(r))
            }
            var jr = '_reactListening' + Math.random().toString(36).slice(2);
            function Dr(e) {
                e[jr] || (e[jr] = !0, s.forEach((function (t) {
                    Sr.has(t) || Nr(t, !1, e, null),
                        Nr(t, !0, e, null)
                })))
            }
            function Nr(e, t, n, r) {
                var a = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 0,
                    i = n;
                if ('selectionchange' === e && 9 !== n.nodeType && (i = n.ownerDocument), null !== r && !t && Sr.has(e)) {
                    if ('scroll' !== e) return;
                    a |= 2,
                        i = r
                }
                var o = ia(i),
                    s = e + '__' + (t ? 'capture' : 'bubble');
                o.has(s) || (t && (a |= 4), Ir(i, e, a, t), o.add(s))
            }
            function Ir(e, t, n, r) {
                var a = Nt.get(t);
                switch (void 0 === a ? 2 : a) {
                    case 0:
                        a = $t;
                        break;
                    case 1:
                        a = Qt;
                        break;
                    default:
                        a = Kt
                }
                n = a.bind(null, t, n, e),
                    a = void 0,
                    !Le || 'touchstart' !== t && 'touchmove' !== t && 'wheel' !== t || (a = !0),
                    r ? void 0 !== a ? e.addEventListener(t, n, {
                        capture: !0,
                        passive: a
                    }) : e.addEventListener(t, n, !0) : void 0 !== a ? e.addEventListener(t, n, {
                        passive: a
                    }) : e.addEventListener(t, n, !1)
            }
            function zr(e, t, n, r, a) {
                var i = r;
                if (0 == (1 & t) && 0 == (2 & t) && null !== r) e: for (; ;) {
                    if (null === r) return;
                    var o = r.tag;
                    if (3 === o || 4 === o) {
                        var s = r.stateNode.containerInfo;
                        if (s === a || 8 === s.nodeType && s.parentNode === a) break;
                        if (4 === o) for (o = r.return; null !== o;) {
                            var u = o.tag;
                            if ((3 === u || 4 === u) && ((u = o.stateNode.containerInfo) === a || 8 === u.nodeType && u.parentNode === a)) return;
                            o = o.return
                        }
                        for (; null !== s;) {
                            if (null === (o = ta(s))) return;
                            if (5 === (u = o.tag) || 6 === u) {
                                r = i = o;
                                continue e
                            }
                            s = s.parentNode
                        }
                    }
                    r = r.return
                }
                !function (e, t, n) {
                    if (Oe) return e();
                    Oe = !0;
                    try {
                        Re(e, t, n)
                    } finally {
                        Oe = !1,
                            He()
                    }
                }((function () {
                    var r = i,
                        a = xe(n),
                        o = [
                        ];
                    e: {
                        var s = Dt.get(e);
                        if (void 0 !== s) {
                            var u = mn,
                                l = e;
                            switch (e) {
                                case 'keypress':
                                    if (0 === rn(n)) break e;
                                case 'keydown':
                                case 'keyup':
                                    u = Wn;
                                    break;
                                case 'focusin':
                                    l = 'focus',
                                        u = yn;
                                    break;
                                case 'focusout':
                                    l = 'blur',
                                        u = yn;
                                    break;
                                case 'beforeblur':
                                case 'afterblur':
                                    u = yn;
                                    break;
                                case 'click':
                                    if (2 === n.button) break e;
                                case 'auxclick':
                                case 'dblclick':
                                case 'mousedown':
                                case 'mousemove':
                                case 'mouseup':
                                case 'mouseout':
                                case 'mouseover':
                                case 'contextmenu':
                                    u = gn;
                                    break;
                                case 'drag':
                                case 'dragend':
                                case 'dragenter':
                                case 'dragexit':
                                case 'dragleave':
                                case 'dragover':
                                case 'dragstart':
                                case 'drop':
                                    u = vn;
                                    break;
                                case 'touchcancel':
                                case 'touchend':
                                case 'touchmove':
                                case 'touchstart':
                                    u = Dn;
                                    break;
                                case Tt:
                                case Ct:
                                case Wt:
                                    u = wn;
                                    break;
                                case jt:
                                    u = Nn;
                                    break;
                                case 'scroll':
                                    u = hn;
                                    break;
                                case 'wheel':
                                    u = zn;
                                    break;
                                case 'copy':
                                case 'cut':
                                case 'paste':
                                    u = kn;
                                    break;
                                case 'gotpointercapture':
                                case 'lostpointercapture':
                                case 'pointercancel':
                                case 'pointerdown':
                                case 'pointermove':
                                case 'pointerout':
                                case 'pointerover':
                                case 'pointerup':
                                    u = jn
                            }
                            var d = 0 != (4 & t),
                                c = !d && 'scroll' === e,
                                m = d ? null !== s ? s + 'Capture' : null : s;
                            d = [
                            ];
                            for (var f, h = r; null !== h;) {
                                var p = (f = h).stateNode;
                                if (5 === f.tag && null !== p && (f = p, null !== m && null != (p = _e(h, m)) && d.push(Rr(h, p, f))), c) break;
                                h = h.return
                            }
                            0 < d.length && (s = new u(s, l, null, n, a), o.push({
                                event: s,
                                listeners: d
                            }))
                        }
                    }
                    if (0 == (7 & t)) {
                        if (u = 'mouseout' === e || 'pointerout' === e, (!(s = 'mouseover' === e || 'pointerover' === e) || 0 != (16 & t) || !(l = n.relatedTarget || n.fromElement) || !ta(l) && !l[Zr]) && (u || s) && (s = a.window === a ? a : (s = a.ownerDocument) ? s.defaultView || s.parentWindow : window, u ? (u = r, null !== (l = (l = n.relatedTarget || n.toElement) ? ta(l) : null) && (l !== (c = $e(l)) || 5 !== l.tag && 6 !== l.tag) && (l = null)) : (u = null, l = r), u !== l)) {
                            if (d = gn, p = 'onMouseLeave', m = 'onMouseEnter', h = 'mouse', 'pointerout' !== e && 'pointerover' !== e || (d = jn, p = 'onPointerLeave', m = 'onPointerEnter', h = 'pointer'), c = null == u ? s : ra(u), f = null == l ? s : ra(l), (s = new d(p, h + 'leave', u, n, a)).target = c, s.relatedTarget = f, p = null, ta(a) === r && ((d = new d(m, h + 'enter', l, n, a)).target = f, d.relatedTarget = c, p = d), c = p, u && l) e: {
                                for (m = l, h = 0, f = d = u; f; f = Or(f)) h++;
                                for (f = 0, p = m; p; p = Or(p)) f++;
                                for (; 0 < h - f;) d = Or(d),
                                    h--;
                                for (; 0 < f - h;) m = Or(m),
                                    f--;
                                for (; h--;) {
                                    if (d === m || null !== m && d === m.alternate) break e;
                                    d = Or(d),
                                        m = Or(m)
                                }
                                d = null
                            } else d = null;
                            null !== u && Hr(o, s, u, d, !1),
                                null !== l && null !== c && Hr(o, c, l, d, !0)
                        }
                        if ('select' === (u = (s = r ? ra(r) : window).nodeName && s.nodeName.toLowerCase()) || 'input' === u && 'file' === s.type) var g = Jn;
                        else if (Vn(s)) if (Zn) g = ur;
                        else {
                            g = or;
                            var v = ir
                        } else (u = s.nodeName) && 'input' === u.toLowerCase() && ('checkbox' === s.type || 'radio' === s.type) && (g = sr);
                        switch (g && (g = g(e, r)) ? Yn(o, g, n, a) : (v && v(e, s, r), 'focusout' === e && (v = s._wrapperState) && v.controlled && 'number' === s.type && ae(s, 'number', s.value)), v = r ? ra(r) : window, e) {
                            case 'focusin':
                                (Vn(v) || 'true' === v.contentEditable) && (yr = v, wr = r, br = null);
                                break;
                            case 'focusout':
                                br = wr = yr = null;
                                break;
                            case 'mousedown':
                                kr = !0;
                                break;
                            case 'contextmenu':
                            case 'mouseup':
                            case 'dragend':
                                kr = !1,
                                    Mr(o, n, a);
                                break;
                            case 'selectionchange':
                                if (vr) break;
                            case 'keydown':
                            case 'keyup':
                                Mr(o, n, a)
                        }
                        var y;
                        if (An) e: {
                            switch (e) {
                                case 'compositionstart':
                                    var w = 'onCompositionStart';
                                    break e;
                                case 'compositionend':
                                    w = 'onCompositionEnd';
                                    break e;
                                case 'compositionupdate':
                                    w = 'onCompositionUpdate';
                                    break e
                            }
                            w = void 0
                        } else qn ? Xn(e, n) && (w = 'onCompositionEnd') : 'keydown' === e && 229 === n.keyCode && (w = 'onCompositionStart');
                        w && (_n && 'ko' !== n.locale && (qn || 'onCompositionStart' !== w ? 'onCompositionEnd' === w && qn && (y = nn()) : (en = 'value' in (Zt = a) ? Zt.value : Zt.textContent, qn = !0)), 0 < (v = Ar(r, w)).length && (w = new Mn(w, e, null, n, a), o.push({
                            event: w,
                            listeners: v
                        }), (y || null !== (y = Un(n))) && (w.data = y))),
                            (y = Hn ? function (e, t) {
                                switch (e) {
                                    case 'compositionend':
                                        return Un(t);
                                    case 'keypress':
                                        return 32 !== t.which ? null : (Fn = !0, Ln);
                                    case 'textInput':
                                        return (e = t.data) === Ln && Fn ? null : e;
                                    default:
                                        return null
                                }
                            }(e, n) : function (e, t) {
                                if (qn) return 'compositionend' === e || !An && Xn(e, t) ? (e = nn(), tn = en = Zt = null, qn = !1, e) : null;
                                switch (e) {
                                    case 'paste':
                                    default:
                                        return null;
                                    case 'keypress':
                                        if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                                            if (t.char && 1 < t.char.length) return t.char;
                                            if (t.which) return String.fromCharCode(t.which)
                                        }
                                        return null;
                                    case 'compositionend':
                                        return _n && 'ko' !== t.locale ? null : t.data
                                }
                            }(e, n)) && 0 < (r = Ar(r, 'onBeforeInput')).length && (a = new Mn('onBeforeInput', 'beforeinput', null, n, a), o.push({
                                event: a,
                                listeners: r
                            }), a.data = y)
                    }
                    Cr(o, t)
                }))
            }
            function Rr(e, t, n) {
                return {
                    instance: e,
                    listener: t,
                    currentTarget: n
                }
            }
            function Ar(e, t) {
                for (var n = t + 'Capture', r = [
                ]; null !== e;) {
                    var a = e,
                        i = a.stateNode;
                    5 === a.tag && null !== i && (a = i, null != (i = _e(e, n)) && r.unshift(Rr(e, i, a)), null != (i = _e(e, t)) && r.push(Rr(e, i, a))),
                        e = e.return
                }
                return r
            }
            function Or(e) {
                if (null === e) return null;
                do {
                    e = e.return
                } while (e && 5 !== e.tag);
                return e || null
            }
            function Hr(e, t, n, r, a) {
                for (var i = t._reactName, o = [
                ]; null !== n && n !== r;) {
                    var s = n,
                        u = s.alternate,
                        l = s.stateNode;
                    if (null !== u && u === r) break;
                    5 === s.tag && null !== l && (s = l, a ? null != (u = _e(n, i)) && o.unshift(Rr(n, u, s)) : a || null != (u = _e(n, i)) && o.push(Rr(n, u, s))),
                        n = n.return
                }
                0 !== o.length && e.push({
                    event: t,
                    listeners: o
                })
            }
            function _r() {
            }
            var Lr = null,
                Fr = null;
            function Xr(e, t) {
                switch (e) {
                    case 'button':
                    case 'input':
                    case 'select':
                    case 'textarea':
                        return !!t.autoFocus
                }
                return !1
            }
            function Ur(e, t) {
                return 'textarea' === e || 'option' === e || 'noscript' === e || 'string' == typeof t.children || 'number' == typeof t.children || 'object' == typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
            }
            var qr = 'function' == typeof setTimeout ? setTimeout : void 0,
                Gr = 'function' == typeof clearTimeout ? clearTimeout : void 0;
            function Vr(e) {
                (1 === e.nodeType || 9 === e.nodeType && null != (e = e.body)) && (e.textContent = '')
            }
            function Yr(e) {
                for (; null != e; e = e.nextSibling) {
                    var t = e.nodeType;
                    if (1 === t || 3 === t) break
                }
                return e
            }
            function Br(e) {
                e = e.previousSibling;
                for (var t = 0; e;) {
                    if (8 === e.nodeType) {
                        var n = e.data;
                        if ('$' === n || '$!' === n || '$?' === n) {
                            if (0 === t) return e;
                            t--
                        } else '/$' === n && t++
                    }
                    e = e.previousSibling
                }
                return null
            }
            var $r = 0,
                Qr = Math.random().toString(36).slice(2),
                Kr = '__reactFiber$' + Qr,
                Jr = '__reactProps$' + Qr,
                Zr = '__reactContainer$' + Qr,
                ea = '__reactEvents$' + Qr;
            function ta(e) {
                var t = e[Kr];
                if (t) return t;
                for (var n = e.parentNode; n;) {
                    if (t = n[Zr] || n[Kr]) {
                        if (n = t.alternate, null !== t.child || null !== n && null !== n.child) for (e = Br(e); null !== e;) {
                            if (n = e[Kr]) return n;
                            e = Br(e)
                        }
                        return t
                    }
                    n = (e = n).parentNode
                }
                return null
            }
            function na(e) {
                return !(e = e[Kr] || e[Zr]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
            }
            function ra(e) {
                if (5 === e.tag || 6 === e.tag) return e.stateNode;
                throw Error(o(33))
            }
            function aa(e) {
                return e[Jr] || null
            }
            function ia(e) {
                var t = e[ea];
                return void 0 === t && (t = e[ea] = new Set),
                    t
            }
            var oa = [
            ],
                sa = - 1;
            function ua(e) {
                return {
                    current: e
                }
            }
            function la(e) {
                0 > sa || (e.current = oa[sa], oa[sa] = null, sa--)
            }
            function da(e, t) {
                sa++,
                    oa[sa] = e.current,
                    e.current = t
            }
            var ca = {
            },
                ma = ua(ca),
                fa = ua(!1),
                ha = ca;
            function pa(e, t) {
                var n = e.type.contextTypes;
                if (!n) return ca;
                var r = e.stateNode;
                if (r && r.__reactInternalMemoizedUnmaskedChildContext === t) return r.__reactInternalMemoizedMaskedChildContext;
                var a,
                    i = {
                    };
                for (a in n) i[a] = t[a];
                return r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t, e.__reactInternalMemoizedMaskedChildContext = i),
                    i
            }
            function ga(e) {
                return null != e.childContextTypes
            }
            function va() {
                la(fa),
                    la(ma)
            }
            function ya(e, t, n) {
                if (ma.current !== ca) throw Error(o(168));
                da(ma, t),
                    da(fa, n)
            }
            function wa(e, t, n) {
                var r = e.stateNode;
                if (e = t.childContextTypes, 'function' != typeof r.getChildContext) return n;
                for (var i in r = r.getChildContext()) if (!(i in e)) throw Error(o(108, Y(t) || 'Unknown', i));
                return a({
                }, n, r)
            }
            function ba(e) {
                return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || ca,
                    ha = ma.current,
                    da(ma, e),
                    da(fa, fa.current),
                    !0
            }
            function ka(e, t, n) {
                var r = e.stateNode;
                if (!r) throw Error(o(169));
                n ? (e = wa(e, t, ha), r.__reactInternalMemoizedMergedChildContext = e, la(fa), la(ma), da(ma, e)) : la(fa),
                    da(fa, n)
            }
            var Ma = null,
                Ea = null,
                Pa = i.unstable_runWithPriority,
                xa = i.unstable_scheduleCallback,
                Sa = i.unstable_cancelCallback,
                Ta = i.unstable_shouldYield,
                Ca = i.unstable_requestPaint,
                Wa = i.unstable_now,
                ja = i.unstable_getCurrentPriorityLevel,
                Da = i.unstable_ImmediatePriority,
                Na = i.unstable_UserBlockingPriority,
                Ia = i.unstable_NormalPriority,
                za = i.unstable_LowPriority,
                Ra = i.unstable_IdlePriority,
                Aa = {
                },
                Oa = void 0 !== Ca ? Ca : function () {
                },
                Ha = null,
                _a = null,
                La = !1,
                Fa = Wa(),
                Xa = 10000 > Fa ? Wa : function () {
                    return Wa() - Fa
                };
            function Ua() {
                switch (ja()) {
                    case Da:
                        return 99;
                    case Na:
                        return 98;
                    case Ia:
                        return 97;
                    case za:
                        return 96;
                    case Ra:
                        return 95;
                    default:
                        throw Error(o(332))
                }
            }
            function qa(e) {
                switch (e) {
                    case 99:
                        return Da;
                    case 98:
                        return Na;
                    case 97:
                        return Ia;
                    case 96:
                        return za;
                    case 95:
                        return Ra;
                    default:
                        throw Error(o(332))
                }
            }
            function Ga(e, t) {
                return e = qa(e),
                    Pa(e, t)
            }
            function Va(e, t, n) {
                return e = qa(e),
                    xa(e, t, n)
            }
            function Ya() {
                if (null !== _a) {
                    var e = _a;
                    _a = null,
                        Sa(e)
                }
                Ba()
            }
            function Ba() {
                if (!La && null !== Ha) {
                    La = !0;
                    var e = 0;
                    try {
                        var t = Ha;
                        Ga(99, (function () {
                            for (; e < t.length; e++) {
                                var n = t[e];
                                do {
                                    n = n(!0)
                                } while (null !== n)
                            }
                        })),
                            Ha = null
                    } catch (t) {
                        throw null !== Ha && (Ha = Ha.slice(e + 1)),
                        xa(Da, Ya),
                        t
                    } finally {
                        La = !1
                    }
                }
            }
            var $a = k.ReactCurrentBatchConfig;
            function Qa(e, t) {
                if (e && e.defaultProps) {
                    for (var n in t = a({
                    }, t), e = e.defaultProps) void 0 === t[n] && (t[n] = e[n]);
                    return t
                }
                return t
            }
            var Ka = ua(null),
                Ja = null,
                Za = null,
                ei = null;
            function ti() {
                ei = Za = Ja = null
            }
            function ni(e) {
                var t = Ka.current;
                la(Ka),
                    e.type._context._currentValue = t
            }
            function ri(e, t) {
                for (; null !== e;) {
                    var n = e.alternate;
                    if ((e.childLanes & t) === t) {
                        if (null === n || (n.childLanes & t) === t) break;
                        n.childLanes |= t
                    } else e.childLanes |= t,
                        null !== n && (n.childLanes |= t);
                    e = e.return
                }
            }
            function ai(e, t) {
                Ja = e,
                    ei = Za = null,
                    null !== (e = e.dependencies) && null !== e.firstContext && (0 != (e.lanes & t) && (Ao = !0), e.firstContext = null)
            }
            function ii(e, t) {
                if (ei !== e && !1 !== t && 0 !== t) if ('number' == typeof t && 1073741823 !== t || (ei = e, t = 1073741823), t = {
                    context: e,
                    observedBits: t,
                    next: null
                }, null === Za) {
                    if (null === Ja) throw Error(o(308));
                    Za = t,
                        Ja.dependencies = {
                            lanes: 0,
                            firstContext: t,
                            responders: null
                        }
                } else Za = Za.next = t;
                return e._currentValue
            }
            var oi = !1;
            function si(e) {
                e.updateQueue = {
                    baseState: e.memoizedState,
                    firstBaseUpdate: null,
                    lastBaseUpdate: null,
                    shared: {
                        pending: null
                    },
                    effects: null
                }
            }
            function ui(e, t) {
                e = e.updateQueue,
                    t.updateQueue === e && (t.updateQueue = {
                        baseState: e.baseState,
                        firstBaseUpdate: e.firstBaseUpdate,
                        lastBaseUpdate: e.lastBaseUpdate,
                        shared: e.shared,
                        effects: e.effects
                    })
            }
            function li(e, t) {
                return {
                    eventTime: e,
                    lane: t,
                    tag: 0,
                    payload: null,
                    callback: null,
                    next: null
                }
            }
            function di(e, t) {
                if (null !== (e = e.updateQueue)) {
                    var n = (e = e.shared).pending;
                    null === n ? t.next = t : (t.next = n.next, n.next = t),
                        e.pending = t
                }
            }
            function ci(e, t) {
                var n = e.updateQueue,
                    r = e.alternate;
                if (null !== r && n === (r = r.updateQueue)) {
                    var a = null,
                        i = null;
                    if (null !== (n = n.firstBaseUpdate)) {
                        do {
                            var o = {
                                eventTime: n.eventTime,
                                lane: n.lane,
                                tag: n.tag,
                                payload: n.payload,
                                callback: n.callback,
                                next: null
                            };
                            null === i ? a = i = o : i = i.next = o,
                                n = n.next
                        } while (null !== n);
                        null === i ? a = i = t : i = i.next = t
                    } else a = i = t;
                    return n = {
                        baseState: r.baseState,
                        firstBaseUpdate: a,
                        lastBaseUpdate: i,
                        shared: r.shared,
                        effects: r.effects
                    },
                        void (e.updateQueue = n)
                }
                null === (e = n.lastBaseUpdate) ? n.firstBaseUpdate = t : e.next = t,
                    n.lastBaseUpdate = t
            }
            function mi(e, t, n, r) {
                var i = e.updateQueue;
                oi = !1;
                var o = i.firstBaseUpdate,
                    s = i.lastBaseUpdate,
                    u = i.shared.pending;
                if (null !== u) {
                    i.shared.pending = null;
                    var l = u,
                        d = l.next;
                    l.next = null,
                        null === s ? o = d : s.next = d,
                        s = l;
                    var c = e.alternate;
                    if (null !== c) {
                        var m = (c = c.updateQueue).lastBaseUpdate;
                        m !== s && (null === m ? c.firstBaseUpdate = d : m.next = d, c.lastBaseUpdate = l)
                    }
                }
                if (null !== o) {
                    for (m = i.baseState, s = 0, c = d = l = null; ;) {
                        u = o.lane;
                        var f = o.eventTime;
                        if ((r & u) === u) {
                            null !== c && (c = c.next = {
                                eventTime: f,
                                lane: 0,
                                tag: o.tag,
                                payload: o.payload,
                                callback: o.callback,
                                next: null
                            });
                            e: {
                                var h = e,
                                    p = o;
                                switch (u = t, f = n, p.tag) {
                                    case 1:
                                        if ('function' == typeof (h = p.payload)) {
                                            m = h.call(f, m, u);
                                            break e
                                        }
                                        m = h;
                                        break e;
                                    case 3:
                                        h.flags = - 4097 & h.flags | 64;
                                    case 0:
                                        if (null == (u = 'function' == typeof (h = p.payload) ? h.call(f, m, u) : h)) break e;
                                        m = a({
                                        }, m, u);
                                        break e;
                                    case 2:
                                        oi = !0
                                }
                            }
                            null !== o.callback && (e.flags |= 32, null === (u = i.effects) ? i.effects = [
                                o
                            ] : u.push(o))
                        } else f = {
                            eventTime: f,
                            lane: u,
                            tag: o.tag,
                            payload: o.payload,
                            callback: o.callback,
                            next: null
                        },
                            null === c ? (d = c = f, l = m) : c = c.next = f,
                            s |= u;
                        if (null === (o = o.next)) {
                            if (null === (u = i.shared.pending)) break;
                            o = u.next,
                                u.next = null,
                                i.lastBaseUpdate = u,
                                i.shared.pending = null
                        }
                    }
                    null === c && (l = m),
                        i.baseState = l,
                        i.firstBaseUpdate = d,
                        i.lastBaseUpdate = c,
                        Hs |= s,
                        e.lanes = s,
                        e.memoizedState = m
                }
            }
            function fi(e, t, n) {
                if (e = t.effects, t.effects = null, null !== e) for (t = 0; t < e.length; t++) {
                    var r = e[t],
                        a = r.callback;
                    if (null !== a) {
                        if (r.callback = null, r = n, 'function' != typeof a) throw Error(o(191, a));
                        a.call(r)
                    }
                }
            }
            var hi = (new r.Component).refs;
            function pi(e, t, n, r) {
                n = null == (n = n(r, t = e.memoizedState)) ? t : a({
                }, t, n),
                    e.memoizedState = n,
                    0 === e.lanes && (e.updateQueue.baseState = n)
            }
            var gi = {
                isMounted: function (e) {
                    return !!(e = e._reactInternals) && $e(e) === e
                },
                enqueueSetState: function (e, t, n) {
                    e = e._reactInternals;
                    var r = lu(),
                        a = du(e),
                        i = li(r, a);
                    i.payload = t,
                        null != n && (i.callback = n),
                        di(e, i),
                        cu(e, a, r)
                },
                enqueueReplaceState: function (e, t, n) {
                    e = e._reactInternals;
                    var r = lu(),
                        a = du(e),
                        i = li(r, a);
                    i.tag = 1,
                        i.payload = t,
                        null != n && (i.callback = n),
                        di(e, i),
                        cu(e, a, r)
                },
                enqueueForceUpdate: function (e, t) {
                    e = e._reactInternals;
                    var n = lu(),
                        r = du(e),
                        a = li(n, r);
                    a.tag = 2,
                        null != t && (a.callback = t),
                        di(e, a),
                        cu(e, r, n)
                }
            };
            function vi(e, t, n, r, a, i, o) {
                return 'function' == typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(r, i, o) : !(t.prototype && t.prototype.isPureReactComponent && cr(n, r) && cr(a, i))
            }
            function yi(e, t, n) {
                var r = !1,
                    a = ca,
                    i = t.contextType;
                return 'object' == typeof i && null !== i ? i = ii(i) : (a = ga(t) ? ha : ma.current, i = (r = null != (r = t.contextTypes)) ? pa(e, a) : ca),
                    t = new t(n, i),
                    e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null,
                    t.updater = gi,
                    e.stateNode = t,
                    t._reactInternals = e,
                    r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = a, e.__reactInternalMemoizedMaskedChildContext = i),
                    t
            }
            function wi(e, t, n, r) {
                e = t.state,
                    'function' == typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r),
                    'function' == typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r),
                    t.state !== e && gi.enqueueReplaceState(t, t.state, null)
            }
            function bi(e, t, n, r) {
                var a = e.stateNode;
                a.props = n,
                    a.state = e.memoizedState,
                    a.refs = hi,
                    si(e);
                var i = t.contextType;
                'object' == typeof i && null !== i ? a.context = ii(i) : (i = ga(t) ? ha : ma.current, a.context = pa(e, i)),
                    mi(e, n, a, r),
                    a.state = e.memoizedState,
                    'function' == typeof (i = t.getDerivedStateFromProps) && (pi(e, t, i, n), a.state = e.memoizedState),
                    'function' == typeof t.getDerivedStateFromProps || 'function' == typeof a.getSnapshotBeforeUpdate || 'function' != typeof a.UNSAFE_componentWillMount && 'function' != typeof a.componentWillMount || (t = a.state, 'function' == typeof a.componentWillMount && a.componentWillMount(), 'function' == typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount(), t !== a.state && gi.enqueueReplaceState(a, a.state, null), mi(e, n, a, r), a.state = e.memoizedState),
                    'function' == typeof a.componentDidMount && (e.flags |= 4)
            }
            var ki = Array.isArray;
            function Mi(e, t, n) {
                if (null !== (e = n.ref) && 'function' != typeof e && 'object' != typeof e) {
                    if (n._owner) {
                        if (n = n._owner) {
                            if (1 !== n.tag) throw Error(o(309));
                            var r = n.stateNode
                        }
                        if (!r) throw Error(o(147, e));
                        var a = '' + e;
                        return null !== t && null !== t.ref && 'function' == typeof t.ref && t.ref._stringRef === a ? t.ref : (t = function (e) {
                            var t = r.refs;
                            t === hi && (t = r.refs = {
                            }),
                                null === e ? delete t[a] : t[a] = e
                        }, t._stringRef = a, t)
                    }
                    if ('string' != typeof e) throw Error(o(284));
                    if (!n._owner) throw Error(o(290, e))
                }
                return e
            }
            function Ei(e, t) {
                if ('textarea' !== e.type) throw Error(o(31, '[object Object]' === Object.prototype.toString.call(t) ? 'object with keys {' + Object.keys(t).join(', ') + '}' : t))
            }
            function Pi(e) {
                function t(t, n) {
                    if (e) {
                        var r = t.lastEffect;
                        null !== r ? (r.nextEffect = n, t.lastEffect = n) : t.firstEffect = t.lastEffect = n,
                            n.nextEffect = null,
                            n.flags = 8
                    }
                }
                function n(n, r) {
                    if (!e) return null;
                    for (; null !== r;) t(n, r),
                        r = r.sibling;
                    return null
                }
                function r(e, t) {
                    for (e = new Map; null !== t;) null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                        t = t.sibling;
                    return e
                }
                function a(e, t) {
                    return (e = Uu(e, t)).index = 0,
                        e.sibling = null,
                        e
                }
                function i(t, n, r) {
                    return t.index = r,
                        e ? null !== (r = t.alternate) ? (r = r.index) < n ? (t.flags = 2, n) : r : (t.flags = 2, n) : n
                }
                function s(t) {
                    return e && null === t.alternate && (t.flags = 2),
                        t
                }
                function u(e, t, n, r) {
                    return null === t || 6 !== t.tag ? ((t = Yu(n, e.mode, r)).return = e, t) : ((t = a(t, n)).return = e, t)
                }
                function l(e, t, n, r) {
                    return null !== t && t.elementType === n.type ? ((r = a(t, n.props)).ref = Mi(e, t, n), r.return = e, r) : ((r = qu(n.type, n.key, n.props, null, e.mode, r)).ref = Mi(e, t, n), r.return = e, r)
                }
                function d(e, t, n, r) {
                    return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = Bu(n, e.mode, r)).return = e, t) : ((t = a(t, n.children || [
                    ])).return = e, t)
                }
                function c(e, t, n, r, i) {
                    return null === t || 7 !== t.tag ? ((t = Gu(n, e.mode, r, i)).return = e, t) : ((t = a(t, n)).return = e, t)
                }
                function m(e, t, n) {
                    if ('string' == typeof t || 'number' == typeof t) return (t = Yu('' + t, e.mode, n)).return = e,
                        t;
                    if ('object' == typeof t && null !== t) {
                        switch (t.$$typeof) {
                            case M:
                                return (n = qu(t.type, t.key, t.props, null, e.mode, n)).ref = Mi(e, null, t),
                                    n.return = e,
                                    n;
                            case E:
                                return (t = Bu(t, e.mode, n)).return = e,
                                    t
                        }
                        if (ki(t) || X(t)) return (t = Gu(t, e.mode, n, null)).return = e,
                            t;
                        Ei(e, t)
                    }
                    return null
                }
                function f(e, t, n, r) {
                    var a = null !== t ? t.key : null;
                    if ('string' == typeof n || 'number' == typeof n) return null !== a ? null : u(e, t, '' + n, r);
                    if ('object' == typeof n && null !== n) {
                        switch (n.$$typeof) {
                            case M:
                                return n.key === a ? n.type === P ? c(e, t, n.props.children, r, a) : l(e, t, n, r) : null;
                            case E:
                                return n.key === a ? d(e, t, n, r) : null
                        }
                        if (ki(n) || X(n)) return null !== a ? null : c(e, t, n, r, null);
                        Ei(e, n)
                    }
                    return null
                }
                function h(e, t, n, r, a) {
                    if ('string' == typeof r || 'number' == typeof r) return u(t, e = e.get(n) || null, '' + r, a);
                    if ('object' == typeof r && null !== r) {
                        switch (r.$$typeof) {
                            case M:
                                return e = e.get(null === r.key ? n : r.key) || null,
                                    r.type === P ? c(t, e, r.props.children, a, r.key) : l(t, e, r, a);
                            case E:
                                return d(t, e = e.get(null === r.key ? n : r.key) || null, r, a)
                        }
                        if (ki(r) || X(r)) return c(t, e = e.get(n) || null, r, a, null);
                        Ei(t, r)
                    }
                    return null
                }
                function p(a, o, s, u) {
                    for (var l = null, d = null, c = o, p = o = 0, g = null; null !== c && p < s.length; p++) {
                        c.index > p ? (g = c, c = null) : g = c.sibling;
                        var v = f(a, c, s[p], u);
                        if (null === v) {
                            null === c && (c = g);
                            break
                        }
                        e && c && null === v.alternate && t(a, c),
                            o = i(v, o, p),
                            null === d ? l = v : d.sibling = v,
                            d = v,
                            c = g
                    }
                    if (p === s.length) return n(a, c),
                        l;
                    if (null === c) {
                        for (; p < s.length; p++) null !== (c = m(a, s[p], u)) && (o = i(c, o, p), null === d ? l = c : d.sibling = c, d = c);
                        return l
                    }
                    for (c = r(a, c); p < s.length; p++) null !== (g = h(c, a, p, s[p], u)) && (e && null !== g.alternate && c.delete(null === g.key ? p : g.key), o = i(g, o, p), null === d ? l = g : d.sibling = g, d = g);
                    return e && c.forEach((function (e) {
                        return t(a, e)
                    })),
                        l
                }
                function g(a, s, u, l) {
                    var d = X(u);
                    if ('function' != typeof d) throw Error(o(150));
                    if (null == (u = d.call(u))) throw Error(o(151));
                    for (var c = d = null, p = s, g = s = 0, v = null, y = u.next(); null !== p && !y.done; g++, y = u.next()) {
                        p.index > g ? (v = p, p = null) : v = p.sibling;
                        var w = f(a, p, y.value, l);
                        if (null === w) {
                            null === p && (p = v);
                            break
                        }
                        e && p && null === w.alternate && t(a, p),
                            s = i(w, s, g),
                            null === c ? d = w : c.sibling = w,
                            c = w,
                            p = v
                    }
                    if (y.done) return n(a, p),
                        d;
                    if (null === p) {
                        for (; !y.done; g++, y = u.next()) null !== (y = m(a, y.value, l)) && (s = i(y, s, g), null === c ? d = y : c.sibling = y, c = y);
                        return d
                    }
                    for (p = r(a, p); !y.done; g++, y = u.next()) null !== (y = h(p, a, g, y.value, l)) && (e && null !== y.alternate && p.delete(null === y.key ? g : y.key), s = i(y, s, g), null === c ? d = y : c.sibling = y, c = y);
                    return e && p.forEach((function (e) {
                        return t(a, e)
                    })),
                        d
                }
                return function (e, r, i, u) {
                    var l = 'object' == typeof i && null !== i && i.type === P && null === i.key;
                    l && (i = i.props.children);
                    var d = 'object' == typeof i && null !== i;
                    if (d) switch (i.$$typeof) {
                        case M:
                            e: {
                                for (d = i.key, l = r; null !== l;) {
                                    if (l.key === d) {
                                        if (7 === l.tag) {
                                            if (i.type === P) {
                                                n(e, l.sibling),
                                                    (r = a(l, i.props.children)).return = e,
                                                    e = r;
                                                break e
                                            }
                                        } else if (l.elementType === i.type) {
                                            n(e, l.sibling),
                                                (r = a(l, i.props)).ref = Mi(e, l, i),
                                                r.return = e,
                                                e = r;
                                            break e
                                        }
                                        n(e, l);
                                        break
                                    }
                                    t(e, l),
                                        l = l.sibling
                                }
                                i.type === P ? ((r = Gu(i.props.children, e.mode, u, i.key)).return = e, e = r) : ((u = qu(i.type, i.key, i.props, null, e.mode, u)).ref = Mi(e, r, i), u.return = e, e = u)
                            }
                            return s(e);
                        case E:
                            e: {
                                for (l = i.key; null !== r;) {
                                    if (r.key === l) {
                                        if (4 === r.tag && r.stateNode.containerInfo === i.containerInfo && r.stateNode.implementation === i.implementation) {
                                            n(e, r.sibling),
                                                (r = a(r, i.children || [
                                                ])).return = e,
                                                e = r;
                                            break e
                                        }
                                        n(e, r);
                                        break
                                    }
                                    t(e, r),
                                        r = r.sibling
                                } (r = Bu(i, e.mode, u)).return = e,
                                    e = r
                            }
                            return s(e)
                    }
                    if ('string' == typeof i || 'number' == typeof i) return i = '' + i,
                        null !== r && 6 === r.tag ? (n(e, r.sibling), (r = a(r, i)).return = e, e = r) : (n(e, r), (r = Yu(i, e.mode, u)).return = e, e = r),
                        s(e);
                    if (ki(i)) return p(e, r, i, u);
                    if (X(i)) return g(e, r, i, u);
                    if (d && Ei(e, i), void 0 === i && !l) switch (e.tag) {
                        case 1:
                        case 22:
                        case 0:
                        case 11:
                        case 15:
                            throw Error(o(152, Y(e.type) || 'Component'))
                    }
                    return n(e, r)
                }
            }
            var xi = Pi(!0),
                Si = Pi(!1),
                Ti = {
                },
                Ci = ua(Ti),
                Wi = ua(Ti),
                ji = ua(Ti);
            function Di(e) {
                if (e === Ti) throw Error(o(174));
                return e
            }
            function Ni(e, t) {
                switch (da(ji, t), da(Wi, e), da(Ci, Ti), e = t.nodeType) {
                    case 9:
                    case 11:
                        t = (t = t.documentElement) ? t.namespaceURI : fe(null, '');
                        break;
                    default:
                        t = fe(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
                }
                la(Ci),
                    da(Ci, t)
            }
            function Ii() {
                la(Ci),
                    la(Wi),
                    la(ji)
            }
            function zi(e) {
                Di(ji.current);
                var t = Di(Ci.current),
                    n = fe(t, e.type);
                t !== n && (da(Wi, e), da(Ci, n))
            }
            function Ri(e) {
                Wi.current === e && (la(Ci), la(Wi))
            }
            var Ai = ua(0);
            function Oi(e) {
                for (var t = e; null !== t;) {
                    if (13 === t.tag) {
                        var n = t.memoizedState;
                        if (null !== n && (null === (n = n.dehydrated) || '$?' === n.data || '$!' === n.data)) return t
                    } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                        if (0 != (64 & t.flags)) return t
                    } else if (null !== t.child) {
                        t.child.return = t,
                            t = t.child;
                        continue
                    }
                    if (t === e) break;
                    for (; null === t.sibling;) {
                        if (null === t.return || t.return === e) return null;
                        t = t.return
                    }
                    t.sibling.return = t.return,
                        t = t.sibling
                }
                return null
            }
            var Hi = null,
                _i = null,
                Li = !1;
            function Fi(e, t) {
                var n = Fu(5, null, null, 0);
                n.elementType = 'DELETED',
                    n.type = 'DELETED',
                    n.stateNode = t,
                    n.return = e,
                    n.flags = 8,
                    null !== e.lastEffect ? (e.lastEffect.nextEffect = n, e.lastEffect = n) : e.firstEffect = e.lastEffect = n
            }
            function Xi(e, t) {
                switch (e.tag) {
                    case 5:
                        var n = e.type;
                        return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t, !0);
                    case 6:
                        return null !== (t = '' === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t, !0);
                    default:
                        return !1
                }
            }
            function Ui(e) {
                if (Li) {
                    var t = _i;
                    if (t) {
                        var n = t;
                        if (!Xi(e, t)) {
                            if (!(t = Yr(n.nextSibling)) || !Xi(e, t)) return e.flags = - 1025 & e.flags | 2,
                                Li = !1,
                                void (Hi = e);
                            Fi(Hi, n)
                        }
                        Hi = e,
                            _i = Yr(t.firstChild)
                    } else e.flags = - 1025 & e.flags | 2,
                        Li = !1,
                        Hi = e
                }
            }
            function qi(e) {
                for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;) e = e.return;
                Hi = e
            }
            function Gi(e) {
                if (e !== Hi) return !1;
                if (!Li) return qi(e),
                    Li = !0,
                    !1;
                var t = e.type;
                if (5 !== e.tag || 'head' !== t && 'body' !== t && !Ur(t, e.memoizedProps)) for (t = _i; t;) Fi(e, t),
                    t = Yr(t.nextSibling);
                if (qi(e), 13 === e.tag) {
                    if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null)) throw Error(o(317));
                    e: {
                        for (e = e.nextSibling, t = 0; e;) {
                            if (8 === e.nodeType) {
                                var n = e.data;
                                if ('/$' === n) {
                                    if (0 === t) {
                                        _i = Yr(e.nextSibling);
                                        break e
                                    }
                                    t--
                                } else '$' !== n && '$!' !== n && '$?' !== n || t++
                            }
                            e = e.nextSibling
                        }
                        _i = null
                    }
                } else _i = Hi ? Yr(e.stateNode.nextSibling) : null;
                return !0
            }
            function Vi() {
                _i = Hi = null,
                    Li = !1
            }
            var Yi = [
            ];
            function Bi() {
                for (var e = 0; e < Yi.length; e++) Yi[e]._workInProgressVersionPrimary = null;
                Yi.length = 0
            }
            var $i = k.ReactCurrentDispatcher,
                Qi = k.ReactCurrentBatchConfig,
                Ki = 0,
                Ji = null,
                Zi = null,
                eo = null,
                to = !1,
                no = !1;
            function ro() {
                throw Error(o(321))
            }
            function ao(e, t) {
                if (null === t) return !1;
                for (var n = 0; n < t.length && n < e.length; n++) if (!lr(e[n], t[n])) return !1;
                return !0
            }
            function io(e, t, n, r, a, i) {
                if (Ki = i, Ji = t, t.memoizedState = null, t.updateQueue = null, t.lanes = 0, $i.current = null === e || null === e.memoizedState ? No : Io, e = n(r, a), no) {
                    i = 0;
                    do {
                        if (no = !1, !(25 > i)) throw Error(o(301));
                        i += 1,
                            eo = Zi = null,
                            t.updateQueue = null,
                            $i.current = zo,
                            e = n(r, a)
                    } while (no)
                }
                if ($i.current = Do, t = null !== Zi && null !== Zi.next, Ki = 0, eo = Zi = Ji = null, to = !1, t) throw Error(o(300));
                return e
            }
            function oo() {
                var e = {
                    memoizedState: null,
                    baseState: null,
                    baseQueue: null,
                    queue: null,
                    next: null
                };
                return null === eo ? Ji.memoizedState = eo = e : eo = eo.next = e,
                    eo
            }
            function so() {
                if (null === Zi) {
                    var e = Ji.alternate;
                    e = null !== e ? e.memoizedState : null
                } else e = Zi.next;
                var t = null === eo ? Ji.memoizedState : eo.next;
                if (null !== t) eo = t,
                    Zi = e;
                else {
                    if (null === e) throw Error(o(310));
                    e = {
                        memoizedState: (Zi = e).memoizedState,
                        baseState: Zi.baseState,
                        baseQueue: Zi.baseQueue,
                        queue: Zi.queue,
                        next: null
                    },
                        null === eo ? Ji.memoizedState = eo = e : eo = eo.next = e
                }
                return eo
            }
            function uo(e, t) {
                return 'function' == typeof t ? t(e) : t
            }
            function lo(e) {
                var t = so(),
                    n = t.queue;
                if (null === n) throw Error(o(311));
                n.lastRenderedReducer = e;
                var r = Zi,
                    a = r.baseQueue,
                    i = n.pending;
                if (null !== i) {
                    if (null !== a) {
                        var s = a.next;
                        a.next = i.next,
                            i.next = s
                    }
                    r.baseQueue = a = i,
                        n.pending = null
                }
                if (null !== a) {
                    a = a.next,
                        r = r.baseState;
                    var u = s = i = null,
                        l = a;
                    do {
                        var d = l.lane;
                        if ((Ki & d) === d) null !== u && (u = u.next = {
                            lane: 0,
                            action: l.action,
                            eagerReducer: l.eagerReducer,
                            eagerState: l.eagerState,
                            next: null
                        }),
                            r = l.eagerReducer === e ? l.eagerState : e(r, l.action);
                        else {
                            var c = {
                                lane: d,
                                action: l.action,
                                eagerReducer: l.eagerReducer,
                                eagerState: l.eagerState,
                                next: null
                            };
                            null === u ? (s = u = c, i = r) : u = u.next = c,
                                Ji.lanes |= d,
                                Hs |= d
                        }
                        l = l.next
                    } while (null !== l && l !== a);
                    null === u ? i = r : u.next = s,
                        lr(r, t.memoizedState) || (Ao = !0),
                        t.memoizedState = r,
                        t.baseState = i,
                        t.baseQueue = u,
                        n.lastRenderedState = r
                }
                return [t.memoizedState,
                n.dispatch]
            }
            function co(e) {
                var t = so(),
                    n = t.queue;
                if (null === n) throw Error(o(311));
                n.lastRenderedReducer = e;
                var r = n.dispatch,
                    a = n.pending,
                    i = t.memoizedState;
                if (null !== a) {
                    n.pending = null;
                    var s = a = a.next;
                    do {
                        i = e(i, s.action),
                            s = s.next
                    } while (s !== a);
                    lr(i, t.memoizedState) || (Ao = !0),
                        t.memoizedState = i,
                        null === t.baseQueue && (t.baseState = i),
                        n.lastRenderedState = i
                }
                return [i,
                    r]
            }
            function mo(e, t, n) {
                var r = t._getVersion;
                r = r(t._source);
                var a = t._workInProgressVersionPrimary;
                if (null !== a ? e = a === r : (e = e.mutableReadLanes, (e = (Ki & e) === e) && (t._workInProgressVersionPrimary = r, Yi.push(t))), e) return n(t._source);
                throw Yi.push(t),
                Error(o(350))
            }
            function fo(e, t, n, r) {
                var a = js;
                if (null === a) throw Error(o(349));
                var i = t._getVersion,
                    s = i(t._source),
                    u = $i.current,
                    l = u.useState((function () {
                        return mo(a, t, n)
                    })),
                    d = l[1],
                    c = l[0];
                l = eo;
                var m = e.memoizedState,
                    f = m.refs,
                    h = f.getSnapshot,
                    p = m.source;
                m = m.subscribe;
                var g = Ji;
                return e.memoizedState = {
                    refs: f,
                    source: t,
                    subscribe: r
                },
                    u.useEffect((function () {
                        f.getSnapshot = n,
                            f.setSnapshot = d;
                        var e = i(t._source);
                        if (!lr(s, e)) {
                            e = n(t._source),
                                lr(c, e) || (d(e), e = du(g), a.mutableReadLanes |= e & a.pendingLanes),
                                e = a.mutableReadLanes,
                                a.entangledLanes |= e;
                            for (var r = a.entanglements, o = e; 0 < o;) {
                                var u = 31 - Ut(o),
                                    l = 1 << u;
                                r[u] |= e,
                                    o &= ~l
                            }
                        }
                    }), [
                        n,
                        t,
                        r
                    ]),
                    u.useEffect((function () {
                        return r(t._source, (function () {
                            var e = f.getSnapshot,
                                n = f.setSnapshot;
                            try {
                                n(e(t._source));
                                var r = du(g);
                                a.mutableReadLanes |= r & a.pendingLanes
                            } catch (e) {
                                n((function () {
                                    throw e
                                }))
                            }
                        }))
                    }), [
                        t,
                        r
                    ]),
                    lr(h, n) && lr(p, t) && lr(m, r) || ((e = {
                        pending: null,
                        dispatch: null,
                        lastRenderedReducer: uo,
                        lastRenderedState: c
                    }).dispatch = d = jo.bind(null, Ji, e), l.queue = e, l.baseQueue = null, c = mo(a, t, n), l.memoizedState = l.baseState = c),
                    c
            }
            function ho(e, t, n) {
                return fo(so(), e, t, n)
            }
            function po(e) {
                var t = oo();
                return 'function' == typeof e && (e = e()),
                    t.memoizedState = t.baseState = e,
                    e = (e = t.queue = {
                        pending: null,
                        dispatch: null,
                        lastRenderedReducer: uo,
                        lastRenderedState: e
                    }).dispatch = jo.bind(null, Ji, e),
                    [
                        t.memoizedState,
                        e
                    ]
            }
            function go(e, t, n, r) {
                return e = {
                    tag: e,
                    create: t,
                    destroy: n,
                    deps: r,
                    next: null
                },
                    null === (t = Ji.updateQueue) ? (t = {
                        lastEffect: null
                    }, Ji.updateQueue = t, t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (r = n.next, n.next = e, e.next = r, t.lastEffect = e),
                    e
            }
            function vo(e) {
                return e = {
                    current: e
                },
                    oo().memoizedState = e
            }
            function yo() {
                return so().memoizedState
            }
            function wo(e, t, n, r) {
                var a = oo();
                Ji.flags |= e,
                    a.memoizedState = go(1 | t, n, void 0, void 0 === r ? null : r)
            }
            function bo(e, t, n, r) {
                var a = so();
                r = void 0 === r ? null : r;
                var i = void 0;
                if (null !== Zi) {
                    var o = Zi.memoizedState;
                    if (i = o.destroy, null !== r && ao(r, o.deps)) return void go(t, n, i, r)
                }
                Ji.flags |= e,
                    a.memoizedState = go(1 | t, n, i, r)
            }
            function ko(e, t) {
                return wo(516, 4, e, t)
            }
            function Mo(e, t) {
                return bo(516, 4, e, t)
            }
            function Eo(e, t) {
                return bo(4, 2, e, t)
            }
            function Po(e, t) {
                return 'function' == typeof t ? (e = e(), t(e), function () {
                    t(null)
                }) : null != t ? (e = e(), t.current = e, function () {
                    t.current = null
                }) : void 0
            }
            function xo(e, t, n) {
                return n = null != n ? n.concat([e]) : null,
                    bo(4, 2, Po.bind(null, t, e), n)
            }
            function So() {
            }
            function To(e, t) {
                var n = so();
                t = void 0 === t ? null : t;
                var r = n.memoizedState;
                return null !== r && null !== t && ao(t, r[1]) ? r[0] : (n.memoizedState = [
                    e,
                    t
                ], e)
            }
            function Co(e, t) {
                var n = so();
                t = void 0 === t ? null : t;
                var r = n.memoizedState;
                return null !== r && null !== t && ao(t, r[1]) ? r[0] : (e = e(), n.memoizedState = [
                    e,
                    t
                ], e)
            }
            function Wo(e, t) {
                var n = Ua();
                Ga(98 > n ? 98 : n, (function () {
                    e(!0)
                })),
                    Ga(97 < n ? 97 : n, (function () {
                        var n = Qi.transition;
                        Qi.transition = 1;
                        try {
                            e(!1),
                                t()
                        } finally {
                            Qi.transition = n
                        }
                    }))
            }
            function jo(e, t, n) {
                var r = lu(),
                    a = du(e),
                    i = {
                        lane: a,
                        action: n,
                        eagerReducer: null,
                        eagerState: null,
                        next: null
                    },
                    o = t.pending;
                if (null === o ? i.next = i : (i.next = o.next, o.next = i), t.pending = i, o = e.alternate, e === Ji || null !== o && o === Ji) no = to = !0;
                else {
                    if (0 === e.lanes && (null === o || 0 === o.lanes) && null !== (o = t.lastRenderedReducer)) try {
                        var s = t.lastRenderedState,
                            u = o(s, n);
                        if (i.eagerReducer = o, i.eagerState = u, lr(u, s)) return
                    } catch (e) {
                    }
                    cu(e, a, r)
                }
            }
            var Do = {
                readContext: ii,
                useCallback: ro,
                useContext: ro,
                useEffect: ro,
                useImperativeHandle: ro,
                useLayoutEffect: ro,
                useMemo: ro,
                useReducer: ro,
                useRef: ro,
                useState: ro,
                useDebugValue: ro,
                useDeferredValue: ro,
                useTransition: ro,
                useMutableSource: ro,
                useOpaqueIdentifier: ro,
                unstable_isNewReconciler: !1
            },
                No = {
                    readContext: ii,
                    useCallback: function (e, t) {
                        return oo().memoizedState = [
                            e,
                            void 0 === t ? null : t
                        ],
                            e
                    },
                    useContext: ii,
                    useEffect: ko,
                    useImperativeHandle: function (e, t, n) {
                        return n = null != n ? n.concat([e]) : null,
                            wo(4, 2, Po.bind(null, t, e), n)
                    },
                    useLayoutEffect: function (e, t) {
                        return wo(4, 2, e, t)
                    },
                    useMemo: function (e, t) {
                        var n = oo();
                        return t = void 0 === t ? null : t,
                            e = e(),
                            n.memoizedState = [
                                e,
                                t
                            ],
                            e
                    },
                    useReducer: function (e, t, n) {
                        var r = oo();
                        return t = void 0 !== n ? n(t) : t,
                            r.memoizedState = r.baseState = t,
                            e = (e = r.queue = {
                                pending: null,
                                dispatch: null,
                                lastRenderedReducer: e,
                                lastRenderedState: t
                            }).dispatch = jo.bind(null, Ji, e),
                            [
                                r.memoizedState,
                                e
                            ]
                    },
                    useRef: vo,
                    useState: po,
                    useDebugValue: So,
                    useDeferredValue: function (e) {
                        var t = po(e),
                            n = t[0],
                            r = t[1];
                        return ko((function () {
                            var t = Qi.transition;
                            Qi.transition = 1;
                            try {
                                r(e)
                            } finally {
                                Qi.transition = t
                            }
                        }), [
                            e
                        ]),
                            n
                    },
                    useTransition: function () {
                        var e = po(!1),
                            t = e[0];
                        return vo(e = Wo.bind(null, e[1])),
                            [
                                e,
                                t
                            ]
                    },
                    useMutableSource: function (e, t, n) {
                        var r = oo();
                        return r.memoizedState = {
                            refs: {
                                getSnapshot: t,
                                setSnapshot: null
                            },
                            source: e,
                            subscribe: n
                        },
                            fo(r, e, t, n)
                    },
                    useOpaqueIdentifier: function () {
                        if (Li) {
                            var e = !1,
                                t = function (e) {
                                    return {
                                        $$typeof: R,
                                        toString: e,
                                        valueOf: e
                                    }
                                }((function () {
                                    throw e || (e = !0, n('r:' + ($r++).toString(36))),
                                    Error(o(355))
                                })),
                                n = po(t)[1];
                            return 0 == (2 & Ji.mode) && (Ji.flags |= 516, go(5, (function () {
                                n('r:' + ($r++).toString(36))
                            }), void 0, null)),
                                t
                        }
                        return po(t = 'r:' + ($r++).toString(36)),
                            t
                    },
                    unstable_isNewReconciler: !1
                },
                Io = {
                    readContext: ii,
                    useCallback: To,
                    useContext: ii,
                    useEffect: Mo,
                    useImperativeHandle: xo,
                    useLayoutEffect: Eo,
                    useMemo: Co,
                    useReducer: lo,
                    useRef: yo,
                    useState: function () {
                        return lo(uo)
                    },
                    useDebugValue: So,
                    useDeferredValue: function (e) {
                        var t = lo(uo),
                            n = t[0],
                            r = t[1];
                        return Mo((function () {
                            var t = Qi.transition;
                            Qi.transition = 1;
                            try {
                                r(e)
                            } finally {
                                Qi.transition = t
                            }
                        }), [
                            e
                        ]),
                            n
                    },
                    useTransition: function () {
                        var e = lo(uo)[0];
                        return [yo().current,
                            e]
                    },
                    useMutableSource: ho,
                    useOpaqueIdentifier: function () {
                        return lo(uo)[0]
                    },
                    unstable_isNewReconciler: !1
                },
                zo = {
                    readContext: ii,
                    useCallback: To,
                    useContext: ii,
                    useEffect: Mo,
                    useImperativeHandle: xo,
                    useLayoutEffect: Eo,
                    useMemo: Co,
                    useReducer: co,
                    useRef: yo,
                    useState: function () {
                        return co(uo)
                    },
                    useDebugValue: So,
                    useDeferredValue: function (e) {
                        var t = co(uo),
                            n = t[0],
                            r = t[1];
                        return Mo((function () {
                            var t = Qi.transition;
                            Qi.transition = 1;
                            try {
                                r(e)
                            } finally {
                                Qi.transition = t
                            }
                        }), [
                            e
                        ]),
                            n
                    },
                    useTransition: function () {
                        var e = co(uo)[0];
                        return [yo().current,
                            e]
                    },
                    useMutableSource: ho,
                    useOpaqueIdentifier: function () {
                        return co(uo)[0]
                    },
                    unstable_isNewReconciler: !1
                },
                Ro = k.ReactCurrentOwner,
                Ao = !1;
            function Oo(e, t, n, r) {
                t.child = null === e ? Si(t, null, n, r) : xi(t, e.child, n, r)
            }
            function Ho(e, t, n, r, a) {
                n = n.render;
                var i = t.ref;
                return ai(t, a),
                    r = io(e, t, n, r, i, a),
                    null === e || Ao ? (t.flags |= 1, Oo(e, t, r, a), t.child) : (t.updateQueue = e.updateQueue, t.flags &= - 517, e.lanes &= ~a, ns(e, t, a))
            }
            function _o(e, t, n, r, a, i) {
                if (null === e) {
                    var o = n.type;
                    return 'function' != typeof o || Xu(o) || void 0 !== o.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = qu(n.type, null, r, t, t.mode, i)).ref = t.ref, e.return = t, t.child = e) : (t.tag = 15, t.type = o, Lo(e, t, o, r, a, i))
                }
                return o = e.child,
                    0 == (a & i) && (a = o.memoizedProps, (n = null !== (n = n.compare) ? n : cr)(a, r) && e.ref === t.ref) ? ns(e, t, i) : (t.flags |= 1, (e = Uu(o, r)).ref = t.ref, e.return = t, t.child = e)
            }
            function Lo(e, t, n, r, a, i) {
                if (null !== e && cr(e.memoizedProps, r) && e.ref === t.ref) {
                    if (Ao = !1, 0 == (i & a)) return t.lanes = e.lanes,
                        ns(e, t, i);
                    0 != (16384 & e.flags) && (Ao = !0)
                }
                return Uo(e, t, n, r, i)
            }
            function Fo(e, t, n) {
                var r = t.pendingProps,
                    a = r.children,
                    i = null !== e ? e.memoizedState : null;
                if ('hidden' === r.mode || 'unstable-defer-without-hiding' === r.mode) if (0 == (4 & t.mode)) t.memoizedState = {
                    baseLanes: 0
                },
                    wu(0, n);
                else {
                    if (0 == (1073741824 & n)) return e = null !== i ? i.baseLanes | n : n,
                        t.lanes = t.childLanes = 1073741824,
                        t.memoizedState = {
                            baseLanes: e
                        },
                        wu(0, e),
                        null;
                    t.memoizedState = {
                        baseLanes: 0
                    },
                        wu(0, null !== i ? i.baseLanes : n)
                } else null !== i ? (r = i.baseLanes | n, t.memoizedState = null) : r = n,
                    wu(0, r);
                return Oo(e, t, a, n),
                    t.child
            }
            function Xo(e, t) {
                var n = t.ref;
                (null === e && null !== n || null !== e && e.ref !== n) && (t.flags |= 128)
            }
            function Uo(e, t, n, r, a) {
                var i = ga(n) ? ha : ma.current;
                return i = pa(t, i),
                    ai(t, a),
                    n = io(e, t, n, r, i, a),
                    null === e || Ao ? (t.flags |= 1, Oo(e, t, n, a), t.child) : (t.updateQueue = e.updateQueue, t.flags &= - 517, e.lanes &= ~a, ns(e, t, a))
            }
            function qo(e, t, n, r, a) {
                if (ga(n)) {
                    var i = !0;
                    ba(t)
                } else i = !1;
                if (ai(t, a), null === t.stateNode) null !== e && (e.alternate = null, t.alternate = null, t.flags |= 2),
                    yi(t, n, r),
                    bi(t, n, r, a),
                    r = !0;
                else if (null === e) {
                    var o = t.stateNode,
                        s = t.memoizedProps;
                    o.props = s;
                    var u = o.context,
                        l = n.contextType;
                    l = 'object' == typeof l && null !== l ? ii(l) : pa(t, l = ga(n) ? ha : ma.current);
                    var d = n.getDerivedStateFromProps,
                        c = 'function' == typeof d || 'function' == typeof o.getSnapshotBeforeUpdate;
                    c || 'function' != typeof o.UNSAFE_componentWillReceiveProps && 'function' != typeof o.componentWillReceiveProps || (s !== r || u !== l) && wi(t, o, r, l),
                        oi = !1;
                    var m = t.memoizedState;
                    o.state = m,
                        mi(t, r, o, a),
                        u = t.memoizedState,
                        s !== r || m !== u || fa.current || oi ? ('function' == typeof d && (pi(t, n, d, r), u = t.memoizedState), (s = oi || vi(t, n, s, r, m, u, l)) ? (c || 'function' != typeof o.UNSAFE_componentWillMount && 'function' != typeof o.componentWillMount || ('function' == typeof o.componentWillMount && o.componentWillMount(), 'function' == typeof o.UNSAFE_componentWillMount && o.UNSAFE_componentWillMount()), 'function' == typeof o.componentDidMount && (t.flags |= 4)) : ('function' == typeof o.componentDidMount && (t.flags |= 4), t.memoizedProps = r, t.memoizedState = u), o.props = r, o.state = u, o.context = l, r = s) : ('function' == typeof o.componentDidMount && (t.flags |= 4), r = !1)
                } else {
                    o = t.stateNode,
                        ui(e, t),
                        s = t.memoizedProps,
                        l = t.type === t.elementType ? s : Qa(t.type, s),
                        o.props = l,
                        c = t.pendingProps,
                        m = o.context,
                        u = 'object' == typeof (u = n.contextType) && null !== u ? ii(u) : pa(t, u = ga(n) ? ha : ma.current);
                    var f = n.getDerivedStateFromProps;
                    (d = 'function' == typeof f || 'function' == typeof o.getSnapshotBeforeUpdate) || 'function' != typeof o.UNSAFE_componentWillReceiveProps && 'function' != typeof o.componentWillReceiveProps || (s !== c || m !== u) && wi(t, o, r, u),
                        oi = !1,
                        m = t.memoizedState,
                        o.state = m,
                        mi(t, r, o, a);
                    var h = t.memoizedState;
                    s !== c || m !== h || fa.current || oi ? ('function' == typeof f && (pi(t, n, f, r), h = t.memoizedState), (l = oi || vi(t, n, l, r, m, h, u)) ? (d || 'function' != typeof o.UNSAFE_componentWillUpdate && 'function' != typeof o.componentWillUpdate || ('function' == typeof o.componentWillUpdate && o.componentWillUpdate(r, h, u), 'function' == typeof o.UNSAFE_componentWillUpdate && o.UNSAFE_componentWillUpdate(r, h, u)), 'function' == typeof o.componentDidUpdate && (t.flags |= 4), 'function' == typeof o.getSnapshotBeforeUpdate && (t.flags |= 256)) : ('function' != typeof o.componentDidUpdate || s === e.memoizedProps && m === e.memoizedState || (t.flags |= 4), 'function' != typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && m === e.memoizedState || (t.flags |= 256), t.memoizedProps = r, t.memoizedState = h), o.props = r, o.state = h, o.context = u, r = l) : ('function' != typeof o.componentDidUpdate || s === e.memoizedProps && m === e.memoizedState || (t.flags |= 4), 'function' != typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && m === e.memoizedState || (t.flags |= 256), r = !1)
                }
                return Go(e, t, n, r, i, a)
            }
            function Go(e, t, n, r, a, i) {
                Xo(e, t);
                var o = 0 != (64 & t.flags);
                if (!r && !o) return a && ka(t, n, !1),
                    ns(e, t, i);
                r = t.stateNode,
                    Ro.current = t;
                var s = o && 'function' != typeof n.getDerivedStateFromError ? null : r.render();
                return t.flags |= 1,
                    null !== e && o ? (t.child = xi(t, e.child, null, i), t.child = xi(t, null, s, i)) : Oo(e, t, s, i),
                    t.memoizedState = r.state,
                    a && ka(t, n, !0),
                    t.child
            }
            function Vo(e) {
                var t = e.stateNode;
                t.pendingContext ? ya(0, t.pendingContext, t.pendingContext !== t.context) : t.context && ya(0, t.context, !1),
                    Ni(e, t.containerInfo)
            }
            var Yo,
                Bo,
                $o,
                Qo = {
                    dehydrated: null,
                    retryLane: 0
                };
            function Ko(e, t, n) {
                var r,
                    a = t.pendingProps,
                    i = Ai.current,
                    o = !1;
                return (r = 0 != (64 & t.flags)) || (r = (null === e || null !== e.memoizedState) && 0 != (2 & i)),
                    r ? (o = !0, t.flags &= - 65) : null !== e && null === e.memoizedState || void 0 === a.fallback || !0 === a.unstable_avoidThisFallback || (i |= 1),
                    da(Ai, 1 & i),
                    null === e ? (void 0 !== a.fallback && Ui(t), e = a.children, i = a.fallback, o ? (e = Jo(t, e, i, n), t.child.memoizedState = {
                        baseLanes: n
                    }, t.memoizedState = Qo, e) : 'number' == typeof a.unstable_expectedLoadTime ? (e = Jo(t, e, i, n), t.child.memoizedState = {
                        baseLanes: n
                    }, t.memoizedState = Qo, t.lanes = 33554432, e) : ((n = Vu({
                        mode: 'visible',
                        children: e
                    }, t.mode, n, null)).return = t, t.child = n)) : (e.memoizedState, o ? (a = function (e, t, n, r, a) {
                        var i = t.mode,
                            o = e.child;
                        e = o.sibling;
                        var s = {
                            mode: 'hidden',
                            children: n
                        };
                        return 0 == (2 & i) && t.child !== o ? ((n = t.child).childLanes = 0, n.pendingProps = s, null !== (o = n.lastEffect) ? (t.firstEffect = n.firstEffect, t.lastEffect = o, o.nextEffect = null) : t.firstEffect = t.lastEffect = null) : n = Uu(o, s),
                            null !== e ? r = Uu(e, r) : (r = Gu(r, i, a, null)).flags |= 2,
                            r.return = t,
                            n.return = t,
                            n.sibling = r,
                            t.child = n,
                            r
                    }(e, t, a.children, a.fallback, n), o = t.child, i = e.child.memoizedState, o.memoizedState = null === i ? {
                        baseLanes: n
                    }
                        : {
                            baseLanes: i.baseLanes | n
                        }, o.childLanes = e.childLanes & ~n, t.memoizedState = Qo, a) : (n = function (e, t, n, r) {
                            var a = e.child;
                            return e = a.sibling,
                                n = Uu(a, {
                                    mode: 'visible',
                                    children: n
                                }),
                                0 == (2 & t.mode) && (n.lanes = r),
                                n.return = t,
                                n.sibling = null,
                                null !== e && (e.nextEffect = null, e.flags = 8, t.firstEffect = t.lastEffect = e),
                                t.child = n
                        }(e, t, a.children, n), t.memoizedState = null, n))
            }
            function Jo(e, t, n, r) {
                var a = e.mode,
                    i = e.child;
                return t = {
                    mode: 'hidden',
                    children: t
                },
                    0 == (2 & a) && null !== i ? (i.childLanes = 0, i.pendingProps = t) : i = Vu(t, a, 0, null),
                    n = Gu(n, a, r, null),
                    i.return = e,
                    n.return = e,
                    i.sibling = n,
                    e.child = i,
                    n
            }
            function Zo(e, t) {
                e.lanes |= t;
                var n = e.alternate;
                null !== n && (n.lanes |= t),
                    ri(e.return, t)
            }
            function es(e, t, n, r, a, i) {
                var o = e.memoizedState;
                null === o ? e.memoizedState = {
                    isBackwards: t,
                    rendering: null,
                    renderingStartTime: 0,
                    last: r,
                    tail: n,
                    tailMode: a,
                    lastEffect: i
                }
                    : (o.isBackwards = t, o.rendering = null, o.renderingStartTime = 0, o.last = r, o.tail = n, o.tailMode = a, o.lastEffect = i)
            }
            function ts(e, t, n) {
                var r = t.pendingProps,
                    a = r.revealOrder,
                    i = r.tail;
                if (Oo(e, t, r.children, n), 0 != (2 & (r = Ai.current))) r = 1 & r | 2,
                    t.flags |= 64;
                else {
                    if (null !== e && 0 != (64 & e.flags)) e: for (e = t.child; null !== e;) {
                        if (13 === e.tag) null !== e.memoizedState && Zo(e, n);
                        else if (19 === e.tag) Zo(e, n);
                        else if (null !== e.child) {
                            e.child.return = e,
                                e = e.child;
                            continue
                        }
                        if (e === t) break e;
                        for (; null === e.sibling;) {
                            if (null === e.return || e.return === t) break e;
                            e = e.return
                        }
                        e.sibling.return = e.return,
                            e = e.sibling
                    }
                    r &= 1
                }
                if (da(Ai, r), 0 == (2 & t.mode)) t.memoizedState = null;
                else switch (a) {
                    case 'forwards':
                        for (n = t.child, a = null; null !== n;) null !== (e = n.alternate) && null === Oi(e) && (a = n),
                            n = n.sibling;
                        null === (n = a) ? (a = t.child, t.child = null) : (a = n.sibling, n.sibling = null),
                            es(t, !1, a, n, i, t.lastEffect);
                        break;
                    case 'backwards':
                        for (n = null, a = t.child, t.child = null; null !== a;) {
                            if (null !== (e = a.alternate) && null === Oi(e)) {
                                t.child = a;
                                break
                            }
                            e = a.sibling,
                                a.sibling = n,
                                n = a,
                                a = e
                        }
                        es(t, !0, n, null, i, t.lastEffect);
                        break;
                    case 'together':
                        es(t, !1, null, null, void 0, t.lastEffect);
                        break;
                    default:
                        t.memoizedState = null
                }
                return t.child
            }
            function ns(e, t, n) {
                if (null !== e && (t.dependencies = e.dependencies), Hs |= t.lanes, 0 != (n & t.childLanes)) {
                    if (null !== e && t.child !== e.child) throw Error(o(153));
                    if (null !== t.child) {
                        for (n = Uu(e = t.child, e.pendingProps), t.child = n, n.return = t; null !== e.sibling;) e = e.sibling,
                            (n = n.sibling = Uu(e, e.pendingProps)).return = t;
                        n.sibling = null
                    }
                    return t.child
                }
                return null
            }
            function rs(e, t) {
                if (!Li) switch (e.tailMode) {
                    case 'hidden':
                        t = e.tail;
                        for (var n = null; null !== t;) null !== t.alternate && (n = t),
                            t = t.sibling;
                        null === n ? e.tail = null : n.sibling = null;
                        break;
                    case 'collapsed':
                        n = e.tail;
                        for (var r = null; null !== n;) null !== n.alternate && (r = n),
                            n = n.sibling;
                        null === r ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : r.sibling = null
                }
            }
            function as(e, t, n) {
                var r = t.pendingProps;
                switch (t.tag) {
                    case 2:
                    case 16:
                    case 15:
                    case 0:
                    case 11:
                    case 7:
                    case 8:
                    case 12:
                    case 9:
                    case 14:
                        return null;
                    case 1:
                    case 17:
                        return ga(t.type) && va(),
                            null;
                    case 3:
                        return Ii(),
                            la(fa),
                            la(ma),
                            Bi(),
                            (r = t.stateNode).pendingContext && (r.context = r.pendingContext, r.pendingContext = null),
                            null !== e && null !== e.child || (Gi(t) ? t.flags |= 4 : r.hydrate || (t.flags |= 256)),
                            null;
                    case 5:
                        Ri(t);
                        var i = Di(ji.current);
                        if (n = t.type, null !== e && null != t.stateNode) Bo(e, t, n, r),
                            e.ref !== t.ref && (t.flags |= 128);
                        else {
                            if (!r) {
                                if (null === t.stateNode) throw Error(o(166));
                                return null
                            }
                            if (e = Di(Ci.current), Gi(t)) {
                                r = t.stateNode,
                                    n = t.type;
                                var s = t.memoizedProps;
                                switch (r[Kr] = t, r[Jr] = s, n) {
                                    case 'dialog':
                                        Wr('cancel', r),
                                            Wr('close', r);
                                        break;
                                    case 'iframe':
                                    case 'object':
                                    case 'embed':
                                        Wr('load', r);
                                        break;
                                    case 'video':
                                    case 'audio':
                                        for (e = 0; e < xr.length; e++) Wr(xr[e], r);
                                        break;
                                    case 'source':
                                        Wr('error', r);
                                        break;
                                    case 'img':
                                    case 'image':
                                    case 'link':
                                        Wr('error', r),
                                            Wr('load', r);
                                        break;
                                    case 'details':
                                        Wr('toggle', r);
                                        break;
                                    case 'input':
                                        ee(r, s),
                                            Wr('invalid', r);
                                        break;
                                    case 'select':
                                        r._wrapperState = {
                                            wasMultiple: !!s.multiple
                                        },
                                            Wr('invalid', r);
                                        break;
                                    case 'textarea':
                                        ue(r, s),
                                            Wr('invalid', r)
                                }
                                for (var l in Ee(n, s), e = null, s) s.hasOwnProperty(l) && (i = s[l], 'children' === l ? 'string' == typeof i ? r.textContent !== i && (e = [
                                    'children',
                                    i
                                ]) : 'number' == typeof i && r.textContent !== '' + i && (e = [
                                    'children',
                                    '' + i
                                ]) : u.hasOwnProperty(l) && null != i && 'onScroll' === l && Wr('scroll', r));
                                switch (n) {
                                    case 'input':
                                        Q(r),
                                            re(r, s, !0);
                                        break;
                                    case 'textarea':
                                        Q(r),
                                            de(r);
                                        break;
                                    case 'select':
                                    case 'option':
                                        break;
                                    default:
                                        'function' == typeof s.onClick && (r.onclick = _r)
                                }
                                r = e,
                                    t.updateQueue = r,
                                    null !== r && (t.flags |= 4)
                            } else {
                                switch (l = 9 === i.nodeType ? i : i.ownerDocument, e === ce && (e = me(n)), e === ce ? 'script' === n ? ((e = l.createElement('div')).innerHTML = '<script></script>', e = e.removeChild(e.firstChild)) : 'string' == typeof r.is ? e = l.createElement(n, {
                                    is: r.is
                                }) : (e = l.createElement(n), 'select' === n && (l = e, r.multiple ? l.multiple = !0 : r.size && (l.size = r.size))) : e = l.createElementNS(e, n), e[Kr] = t, e[Jr] = r, Yo(e, t), t.stateNode = e, l = Pe(n, r), n) {
                                    case 'dialog':
                                        Wr('cancel', e),
                                            Wr('close', e),
                                            i = r;
                                        break;
                                    case 'iframe':
                                    case 'object':
                                    case 'embed':
                                        Wr('load', e),
                                            i = r;
                                        break;
                                    case 'video':
                                    case 'audio':
                                        for (i = 0; i < xr.length; i++) Wr(xr[i], e);
                                        i = r;
                                        break;
                                    case 'source':
                                        Wr('error', e),
                                            i = r;
                                        break;
                                    case 'img':
                                    case 'image':
                                    case 'link':
                                        Wr('error', e),
                                            Wr('load', e),
                                            i = r;
                                        break;
                                    case 'details':
                                        Wr('toggle', e),
                                            i = r;
                                        break;
                                    case 'input':
                                        ee(e, r),
                                            i = Z(e, r),
                                            Wr('invalid', e);
                                        break;
                                    case 'option':
                                        i = ie(e, r);
                                        break;
                                    case 'select':
                                        e._wrapperState = {
                                            wasMultiple: !!r.multiple
                                        },
                                            i = a({
                                            }, r, {
                                                value: void 0
                                            }),
                                            Wr('invalid', e);
                                        break;
                                    case 'textarea':
                                        ue(e, r),
                                            i = se(e, r),
                                            Wr('invalid', e);
                                        break;
                                    default:
                                        i = r
                                }
                                Ee(n, i);
                                var d = i;
                                for (s in d) if (d.hasOwnProperty(s)) {
                                    var c = d[s];
                                    'style' === s ? ke(e, c) : 'dangerouslySetInnerHTML' === s ? null != (c = c ? c.__html : void 0) && ge(e, c) : 'children' === s ? 'string' == typeof c ? ('textarea' !== n || '' !== c) && ve(e, c) : 'number' == typeof c && ve(e, '' + c) : 'suppressContentEditableWarning' !== s && 'suppressHydrationWarning' !== s && 'autoFocus' !== s && (u.hasOwnProperty(s) ? null != c && 'onScroll' === s && Wr('scroll', e) : null != c && b(e, s, c, l))
                                }
                                switch (n) {
                                    case 'input':
                                        Q(e),
                                            re(e, r, !1);
                                        break;
                                    case 'textarea':
                                        Q(e),
                                            de(e);
                                        break;
                                    case 'option':
                                        null != r.value && e.setAttribute('value', '' + B(r.value));
                                        break;
                                    case 'select':
                                        e.multiple = !!r.multiple,
                                            null != (s = r.value) ? oe(e, !!r.multiple, s, !1) : null != r.defaultValue && oe(e, !!r.multiple, r.defaultValue, !0);
                                        break;
                                    default:
                                        'function' == typeof i.onClick && (e.onclick = _r)
                                }
                                Xr(n, r) && (t.flags |= 4)
                            }
                            null !== t.ref && (t.flags |= 128)
                        }
                        return null;
                    case 6:
                        if (e && null != t.stateNode) $o(0, t, e.memoizedProps, r);
                        else {
                            if ('string' != typeof r && null === t.stateNode) throw Error(o(166));
                            n = Di(ji.current),
                                Di(Ci.current),
                                Gi(t) ? (r = t.stateNode, n = t.memoizedProps, r[Kr] = t, r.nodeValue !== n && (t.flags |= 4)) : ((r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[Kr] = t, t.stateNode = r)
                        }
                        return null;
                    case 13:
                        return la(Ai),
                            r = t.memoizedState,
                            0 != (64 & t.flags) ? (t.lanes = n, t) : (r = null !== r, n = !1, null === e ? void 0 !== t.memoizedProps.fallback && Gi(t) : n = null !== e.memoizedState, r && !n && 0 != (2 & t.mode) && (null === e && !0 !== t.memoizedProps.unstable_avoidThisFallback || 0 != (1 & Ai.current) ? 0 === Rs && (Rs = 3) : (0 !== Rs && 3 !== Rs || (Rs = 4), null === js || 0 == (134217727 & Hs) && 0 == (134217727 & _s) || pu(js, Ns))), (r || n) && (t.flags |= 4), null);
                    case 4:
                        return Ii(),
                            null === e && Dr(t.stateNode.containerInfo),
                            null;
                    case 10:
                        return ni(t),
                            null;
                    case 19:
                        if (la(Ai), null === (r = t.memoizedState)) return null;
                        if (s = 0 != (64 & t.flags), null === (l = r.rendering)) if (s) rs(r, !1);
                        else {
                            if (0 !== Rs || null !== e && 0 != (64 & e.flags)) for (e = t.child; null !== e;) {
                                if (null !== (l = Oi(e))) {
                                    for (t.flags |= 64, rs(r, !1), null !== (s = l.updateQueue) && (t.updateQueue = s, t.flags |= 4), null === r.lastEffect && (t.firstEffect = null), t.lastEffect = r.lastEffect, r = n, n = t.child; null !== n;) e = r,
                                        (s = n).flags &= 2,
                                        s.nextEffect = null,
                                        s.firstEffect = null,
                                        s.lastEffect = null,
                                        null === (l = s.alternate) ? (s.childLanes = 0, s.lanes = e, s.child = null, s.memoizedProps = null, s.memoizedState = null, s.updateQueue = null, s.dependencies = null, s.stateNode = null) : (s.childLanes = l.childLanes, s.lanes = l.lanes, s.child = l.child, s.memoizedProps = l.memoizedProps, s.memoizedState = l.memoizedState, s.updateQueue = l.updateQueue, s.type = l.type, e = l.dependencies, s.dependencies = null === e ? null : {
                                            lanes: e.lanes,
                                            firstContext: e.firstContext
                                        }),
                                        n = n.sibling;
                                    return da(Ai, 1 & Ai.current | 2),
                                        t.child
                                }
                                e = e.sibling
                            }
                            null !== r.tail && Xa() > Us && (t.flags |= 64, s = !0, rs(r, !1), t.lanes = 33554432)
                        } else {
                            if (!s) if (null !== (e = Oi(l))) {
                                if (t.flags |= 64, s = !0, null !== (n = e.updateQueue) && (t.updateQueue = n, t.flags |= 4), rs(r, !0), null === r.tail && 'hidden' === r.tailMode && !l.alternate && !Li) return null !== (t = t.lastEffect = r.lastEffect) && (t.nextEffect = null),
                                    null
                            } else 2 * Xa() - r.renderingStartTime > Us && 1073741824 !== n && (t.flags |= 64, s = !0, rs(r, !1), t.lanes = 33554432);
                            r.isBackwards ? (l.sibling = t.child, t.child = l) : (null !== (n = r.last) ? n.sibling = l : t.child = l, r.last = l)
                        }
                        return null !== r.tail ? (n = r.tail, r.rendering = n, r.tail = n.sibling, r.lastEffect = t.lastEffect, r.renderingStartTime = Xa(), n.sibling = null, t = Ai.current, da(Ai, s ? 1 & t | 2 : 1 & t), n) : null;
                    case 23:
                    case 24:
                        return bu(),
                            null !== e && null !== e.memoizedState != (null !== t.memoizedState) && 'unstable-defer-without-hiding' !== r.mode && (t.flags |= 4),
                            null
                }
                throw Error(o(156, t.tag))
            }
            function is(e) {
                switch (e.tag) {
                    case 1:
                        ga(e.type) && va();
                        var t = e.flags;
                        return 4096 & t ? (e.flags = - 4097 & t | 64, e) : null;
                    case 3:
                        if (Ii(), la(fa), la(ma), Bi(), 0 != (64 & (t = e.flags))) throw Error(o(285));
                        return e.flags = - 4097 & t | 64,
                            e;
                    case 5:
                        return Ri(e),
                            null;
                    case 13:
                        return la(Ai),
                            4096 & (t = e.flags) ? (e.flags = - 4097 & t | 64, e) : null;
                    case 19:
                        return la(Ai),
                            null;
                    case 4:
                        return Ii(),
                            null;
                    case 10:
                        return ni(e),
                            null;
                    case 23:
                    case 24:
                        return bu(),
                            null;
                    default:
                        return null
                }
            }
            function os(e, t) {
                try {
                    var n = '',
                        r = t;
                    do {
                        n += V(r),
                            r = r.return
                    } while (r);
                    var a = n
                } catch (e) {
                    a = '\nError generating stack: ' + e.message + '\n' + e.stack
                }
                return {
                    value: e,
                    source: t,
                    stack: a
                }
            }
            function ss(e, t) {
                try {
                    console.error(t.value)
                } catch (e) {
                    setTimeout((function () {
                        throw e
                    }))
                }
            }
            Yo = function (e, t) {
                for (var n = t.child; null !== n;) {
                    if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
                    else if (4 !== n.tag && null !== n.child) {
                        n.child.return = n,
                            n = n.child;
                        continue
                    }
                    if (n === t) break;
                    for (; null === n.sibling;) {
                        if (null === n.return || n.return === t) return;
                        n = n.return
                    }
                    n.sibling.return = n.return,
                        n = n.sibling
                }
            },
                Bo = function (e, t, n, r) {
                    var i = e.memoizedProps;
                    if (i !== r) {
                        e = t.stateNode,
                            Di(Ci.current);
                        var o,
                            s = null;
                        switch (n) {
                            case 'input':
                                i = Z(e, i),
                                    r = Z(e, r),
                                    s = [
                                    ];
                                break;
                            case 'option':
                                i = ie(e, i),
                                    r = ie(e, r),
                                    s = [
                                    ];
                                break;
                            case 'select':
                                i = a({
                                }, i, {
                                    value: void 0
                                }),
                                    r = a({
                                    }, r, {
                                        value: void 0
                                    }),
                                    s = [
                                    ];
                                break;
                            case 'textarea':
                                i = se(e, i),
                                    r = se(e, r),
                                    s = [
                                    ];
                                break;
                            default:
                                'function' != typeof i.onClick && 'function' == typeof r.onClick && (e.onclick = _r)
                        }
                        for (c in Ee(n, r), n = null, i) if (!r.hasOwnProperty(c) && i.hasOwnProperty(c) && null != i[c]) if ('style' === c) {
                            var l = i[c];
                            for (o in l) l.hasOwnProperty(o) && (n || (n = {
                            }), n[o] = '')
                        } else 'dangerouslySetInnerHTML' !== c && 'children' !== c && 'suppressContentEditableWarning' !== c && 'suppressHydrationWarning' !== c && 'autoFocus' !== c && (u.hasOwnProperty(c) ? s || (s = [
                        ]) : (s = s || [
                        ]).push(c, null));
                        for (c in r) {
                            var d = r[c];
                            if (l = null != i ? i[c] : void 0, r.hasOwnProperty(c) && d !== l && (null != d || null != l)) if ('style' === c) if (l) {
                                for (o in l) !l.hasOwnProperty(o) || d && d.hasOwnProperty(o) || (n || (n = {
                                }), n[o] = '');
                                for (o in d) d.hasOwnProperty(o) && l[o] !== d[o] && (n || (n = {
                                }), n[o] = d[o])
                            } else n || (s || (s = [
                            ]), s.push(c, n)),
                                n = d;
                            else 'dangerouslySetInnerHTML' === c ? (d = d ? d.__html : void 0, l = l ? l.__html : void 0, null != d && l !== d && (s = s || [
                            ]).push(c, d)) : 'children' === c ? 'string' != typeof d && 'number' != typeof d || (s = s || [
                            ]).push(c, '' + d) : 'suppressContentEditableWarning' !== c && 'suppressHydrationWarning' !== c && (u.hasOwnProperty(c) ? (null != d && 'onScroll' === c && Wr('scroll', e), s || l === d || (s = [
                            ])) : 'object' == typeof d && null !== d && d.$$typeof === R ? d.toString() : (s = s || [
                            ]).push(c, d))
                        }
                        n && (s = s || [
                        ]).push('style', n);
                        var c = s;
                        (t.updateQueue = c) && (t.flags |= 4)
                    }
                },
                $o = function (e, t, n, r) {
                    n !== r && (t.flags |= 4)
                };
            var us = 'function' == typeof WeakMap ? WeakMap : Map;
            function ls(e, t, n) {
                (n = li(- 1, n)).tag = 3,
                    n.payload = {
                        element: null
                    };
                var r = t.value;
                return n.callback = function () {
                    Ys || (Ys = !0, Bs = r),
                        ss(0, t)
                },
                    n
            }
            function ds(e, t, n) {
                (n = li(- 1, n)).tag = 3;
                var r = e.type.getDerivedStateFromError;
                if ('function' == typeof r) {
                    var a = t.value;
                    n.payload = function () {
                        return ss(0, t),
                            r(a)
                    }
                }
                var i = e.stateNode;
                return null !== i && 'function' == typeof i.componentDidCatch && (n.callback = function () {
                    'function' != typeof r && (null === $s ? $s = new Set([this]) : $s.add(this), ss(0, t));
                    var e = t.stack;
                    this.componentDidCatch(t.value, {
                        componentStack: null !== e ? e : ''
                    })
                }),
                    n
            }
            var cs = 'function' == typeof WeakSet ? WeakSet : Set;
            function ms(e) {
                var t = e.ref;
                if (null !== t) if ('function' == typeof t) try {
                    t(null)
                } catch (t) {
                    Ou(e, t)
                } else t.current = null
            }
            function fs(e, t) {
                switch (t.tag) {
                    case 0:
                    case 11:
                    case 15:
                    case 22:
                    case 5:
                    case 6:
                    case 4:
                    case 17:
                        return;
                    case 1:
                        if (256 & t.flags && null !== e) {
                            var n = e.memoizedProps,
                                r = e.memoizedState;
                            t = (e = t.stateNode).getSnapshotBeforeUpdate(t.elementType === t.type ? n : Qa(t.type, n), r),
                                e.__reactInternalSnapshotBeforeUpdate = t
                        }
                        return;
                    case 3:
                        return void (256 & t.flags && Vr(t.stateNode.containerInfo))
                }
                throw Error(o(163))
            }
            function hs(e, t, n) {
                switch (n.tag) {
                    case 0:
                    case 11:
                    case 15:
                    case 22:
                        if (null !== (t = null !== (t = n.updateQueue) ? t.lastEffect : null)) {
                            e = t = t.next;
                            do {
                                if (3 == (3 & e.tag)) {
                                    var r = e.create;
                                    e.destroy = r()
                                }
                                e = e.next
                            } while (e !== t)
                        }
                        if (null !== (t = null !== (t = n.updateQueue) ? t.lastEffect : null)) {
                            e = t = t.next;
                            do {
                                var a = e;
                                r = a.next,
                                    0 != (4 & (a = a.tag)) && 0 != (1 & a) && (zu(n, e), Iu(n, e)),
                                    e = r
                            } while (e !== t)
                        }
                        return;
                    case 1:
                        return e = n.stateNode,
                            4 & n.flags && (null === t ? e.componentDidMount() : (r = n.elementType === n.type ? t.memoizedProps : Qa(n.type, t.memoizedProps), e.componentDidUpdate(r, t.memoizedState, e.__reactInternalSnapshotBeforeUpdate))),
                            void (null !== (t = n.updateQueue) && fi(n, t, e));
                    case 3:
                        if (null !== (t = n.updateQueue)) {
                            if (e = null, null !== n.child) switch (n.child.tag) {
                                case 5:
                                case 1:
                                    e = n.child.stateNode
                            }
                            fi(n, t, e)
                        }
                        return;
                    case 5:
                        return e = n.stateNode,
                            void (null === t && 4 & n.flags && Xr(n.type, n.memoizedProps) && e.focus());
                    case 6:
                    case 4:
                    case 12:
                    case 19:
                    case 17:
                    case 20:
                    case 21:
                    case 23:
                    case 24:
                        return;
                    case 13:
                        return void (null === n.memoizedState && (n = n.alternate, null !== n && (n = n.memoizedState, null !== n && (n = n.dehydrated, null !== n && kt(n)))))
                }
                throw Error(o(163))
            }
            function ps(e, t) {
                for (var n = e; ;) {
                    if (5 === n.tag) {
                        var r = n.stateNode;
                        if (t) 'function' == typeof (r = r.style).setProperty ? r.setProperty('display', 'none', 'important') : r.display = 'none';
                        else {
                            r = n.stateNode;
                            var a = n.memoizedProps.style;
                            a = null != a && a.hasOwnProperty('display') ? a.display : null,
                                r.style.display = be('display', a)
                        }
                    } else if (6 === n.tag) n.stateNode.nodeValue = t ? '' : n.memoizedProps;
                    else if ((23 !== n.tag && 24 !== n.tag || null === n.memoizedState || n === e) && null !== n.child) {
                        n.child.return = n,
                            n = n.child;
                        continue
                    }
                    if (n === e) break;
                    for (; null === n.sibling;) {
                        if (null === n.return || n.return === e) return;
                        n = n.return
                    }
                    n.sibling.return = n.return,
                        n = n.sibling
                }
            }
            function gs(e, t) {
                if (Ea && 'function' == typeof Ea.onCommitFiberUnmount) try {
                    Ea.onCommitFiberUnmount(Ma, t)
                } catch (e) {
                }
                switch (t.tag) {
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                    case 22:
                        if (null !== (e = t.updateQueue) && null !== (e = e.lastEffect)) {
                            var n = e = e.next;
                            do {
                                var r = n,
                                    a = r.destroy;
                                if (r = r.tag, void 0 !== a) if (0 != (4 & r)) zu(t, n);
                                else {
                                    r = t;
                                    try {
                                        a()
                                    } catch (e) {
                                        Ou(r, e)
                                    }
                                }
                                n = n.next
                            } while (n !== e)
                        }
                        break;
                    case 1:
                        if (ms(t), 'function' == typeof (e = t.stateNode).componentWillUnmount) try {
                            e.props = t.memoizedProps,
                                e.state = t.memoizedState,
                                e.componentWillUnmount()
                        } catch (e) {
                            Ou(t, e)
                        }
                        break;
                    case 5:
                        ms(t);
                        break;
                    case 4:
                        Ms(e, t)
                }
            }
            function vs(e) {
                e.alternate = null,
                    e.child = null,
                    e.dependencies = null,
                    e.firstEffect = null,
                    e.lastEffect = null,
                    e.memoizedProps = null,
                    e.memoizedState = null,
                    e.pendingProps = null,
                    e.return = null,
                    e.updateQueue = null
            }
            function ys(e) {
                return 5 === e.tag || 3 === e.tag || 4 === e.tag
            }
            function ws(e) {
                e: {
                    for (var t = e.return; null !== t;) {
                        if (ys(t)) break e;
                        t = t.return
                    }
                    throw Error(o(160))
                }
                var n = t;
                switch (t = n.stateNode, n.tag) {
                    case 5:
                        var r = !1;
                        break;
                    case 3:
                    case 4:
                        t = t.containerInfo,
                            r = !0;
                        break;
                    default:
                        throw Error(o(161))
                }
                16 & n.flags && (ve(t, ''), n.flags &= - 17);
                e: t: for (n = e; ;) {
                    for (; null === n.sibling;) {
                        if (null === n.return || ys(n.return)) {
                            n = null;
                            break e
                        }
                        n = n.return
                    }
                    for (n.sibling.return = n.return, n = n.sibling; 5 !== n.tag && 6 !== n.tag && 18 !== n.tag;) {
                        if (2 & n.flags) continue t;
                        if (null === n.child || 4 === n.tag) continue t;
                        n.child.return = n,
                            n = n.child
                    }
                    if (!(2 & n.flags)) {
                        n = n.stateNode;
                        break e
                    }
                }
                r ? bs(e, n, t) : ks(e, n, t)
            }
            function bs(e, t, n) {
                var r = e.tag,
                    a = 5 === r || 6 === r;
                if (a) e = a ? e.stateNode : e.stateNode.instance,
                    t ? 8 === n.nodeType ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e), null != (n = n._reactRootContainer) || null !== t.onclick || (t.onclick = _r));
                else if (4 !== r && null !== (e = e.child)) for (bs(e, t, n), e = e.sibling; null !== e;) bs(e, t, n),
                    e = e.sibling
            }
            function ks(e, t, n) {
                var r = e.tag,
                    a = 5 === r || 6 === r;
                if (a) e = a ? e.stateNode : e.stateNode.instance,
                    t ? n.insertBefore(e, t) : n.appendChild(e);
                else if (4 !== r && null !== (e = e.child)) for (ks(e, t, n), e = e.sibling; null !== e;) ks(e, t, n),
                    e = e.sibling
            }
            function Ms(e, t) {
                for (var n, r, a = t, i = !1; ;) {
                    if (!i) {
                        i = a.return;
                        e: for (; ;) {
                            if (null === i) throw Error(o(160));
                            switch (n = i.stateNode, i.tag) {
                                case 5:
                                    r = !1;
                                    break e;
                                case 3:
                                case 4:
                                    n = n.containerInfo,
                                        r = !0;
                                    break e
                            }
                            i = i.return
                        }
                        i = !0
                    }
                    if (5 === a.tag || 6 === a.tag) {
                        e: for (var s = e, u = a, l = u; ;) if (gs(s, l), null !== l.child && 4 !== l.tag) l.child.return = l,
                            l = l.child;
                        else {
                            if (l === u) break e;
                            for (; null === l.sibling;) {
                                if (null === l.return || l.return === u) break e;
                                l = l.return
                            }
                            l.sibling.return = l.return,
                                l = l.sibling
                        }
                        r ? (s = n, u = a.stateNode, 8 === s.nodeType ? s.parentNode.removeChild(u) : s.removeChild(u)) : n.removeChild(a.stateNode)
                    } else if (4 === a.tag) {
                        if (null !== a.child) {
                            n = a.stateNode.containerInfo,
                                r = !0,
                                a.child.return = a,
                                a = a.child;
                            continue
                        }
                    } else if (gs(e, a), null !== a.child) {
                        a.child.return = a,
                            a = a.child;
                        continue
                    }
                    if (a === t) break;
                    for (; null === a.sibling;) {
                        if (null === a.return || a.return === t) return;
                        4 === (a = a.return).tag && (i = !1)
                    }
                    a.sibling.return = a.return,
                        a = a.sibling
                }
            }
            function Es(e, t) {
                switch (t.tag) {
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                    case 22:
                        var n = t.updateQueue;
                        if (null !== (n = null !== n ? n.lastEffect : null)) {
                            var r = n = n.next;
                            do {
                                3 == (3 & r.tag) && (e = r.destroy, r.destroy = void 0, void 0 !== e && e()),
                                    r = r.next
                            } while (r !== n)
                        }
                        return;
                    case 1:
                    case 12:
                    case 17:
                        return;
                    case 5:
                        if (null != (n = t.stateNode)) {
                            r = t.memoizedProps;
                            var a = null !== e ? e.memoizedProps : r;
                            e = t.type;
                            var i = t.updateQueue;
                            if (t.updateQueue = null, null !== i) {
                                for (n[Jr] = r, 'input' === e && 'radio' === r.type && null != r.name && te(n, r), Pe(e, a), t = Pe(e, r), a = 0; a < i.length; a += 2) {
                                    var s = i[a],
                                        u = i[a + 1];
                                    'style' === s ? ke(n, u) : 'dangerouslySetInnerHTML' === s ? ge(n, u) : 'children' === s ? ve(n, u) : b(n, s, u, t)
                                }
                                switch (e) {
                                    case 'input':
                                        ne(n, r);
                                        break;
                                    case 'textarea':
                                        le(n, r);
                                        break;
                                    case 'select':
                                        e = n._wrapperState.wasMultiple,
                                            n._wrapperState.wasMultiple = !!r.multiple,
                                            null != (i = r.value) ? oe(n, !!r.multiple, i, !1) : e !== !!r.multiple && (null != r.defaultValue ? oe(n, !!r.multiple, r.defaultValue, !0) : oe(n, !!r.multiple, r.multiple ? [
                                            ] : '', !1))
                                }
                            }
                        }
                        return;
                    case 6:
                        if (null === t.stateNode) throw Error(o(162));
                        return void (t.stateNode.nodeValue = t.memoizedProps);
                    case 3:
                        return void ((n = t.stateNode).hydrate && (n.hydrate = !1, kt(n.containerInfo)));
                    case 13:
                        return null !== t.memoizedState && (Xs = Xa(), ps(t.child, !0)),
                            void Ps(t);
                    case 19:
                        return void Ps(t);
                    case 23:
                    case 24:
                        return void ps(t, null !== t.memoizedState)
                }
                throw Error(o(163))
            }
            function Ps(e) {
                var t = e.updateQueue;
                if (null !== t) {
                    e.updateQueue = null;
                    var n = e.stateNode;
                    null === n && (n = e.stateNode = new cs),
                        t.forEach((function (t) {
                            var r = _u.bind(null, e, t);
                            n.has(t) || (n.add(t), t.then(r, r))
                        }))
                }
            }
            function xs(e, t) {
                return null !== e && (null === (e = e.memoizedState) || null !== e.dehydrated) && null !== (t = t.memoizedState) && null === t.dehydrated
            }
            var Ss = Math.ceil,
                Ts = k.ReactCurrentDispatcher,
                Cs = k.ReactCurrentOwner,
                Ws = 0,
                js = null,
                Ds = null,
                Ns = 0,
                Is = 0,
                zs = ua(0),
                Rs = 0,
                As = null,
                Os = 0,
                Hs = 0,
                _s = 0,
                Ls = 0,
                Fs = null,
                Xs = 0,
                Us = 1 / 0;
            function qs() {
                Us = Xa() + 500
            }
            var Gs,
                Vs = null,
                Ys = !1,
                Bs = null,
                $s = null,
                Qs = !1,
                Ks = null,
                Js = 90,
                Zs = [
                ],
                eu = [
                ],
                tu = null,
                nu = 0,
                ru = null,
                au = - 1,
                iu = 0,
                ou = 0,
                su = null,
                uu = !1;
            function lu() {
                return 0 != (48 & Ws) ? Xa() : - 1 !== au ? au : au = Xa()
            }
            function du(e) {
                if (0 == (2 & (e = e.mode))) return 1;
                if (0 == (4 & e)) return 99 === Ua() ? 1 : 2;
                if (0 === iu && (iu = Os), 0 !== $a.transition) {
                    0 !== ou && (ou = null !== Fs ? Fs.pendingLanes : 0),
                        e = iu;
                    var t = 4186112 & ~ou;
                    return 0 == (t &= - t) && 0 == (t = (e = 4186112 & ~e) & - e) && (t = 8192),
                        t
                }
                return e = Ua(),
                    e = _t(0 != (4 & Ws) && 98 === e ? 12 : e = function (e) {
                        switch (e) {
                            case 99:
                                return 15;
                            case 98:
                                return 10;
                            case 97:
                            case 96:
                                return 8;
                            case 95:
                                return 2;
                            default:
                                return 0
                        }
                    }(e), iu)
            }
            function cu(e, t, n) {
                if (50 < nu) throw nu = 0,
                    ru = null,
                    Error(o(185));
                if (null === (e = mu(e, t))) return null;
                Xt(e, t, n),
                    e === js && (_s |= t, 4 === Rs && pu(e, Ns));
                var r = Ua();
                1 === t ? 0 != (8 & Ws) && 0 == (48 & Ws) ? gu(e) : (fu(e, n), 0 === Ws && (qs(), Ya())) : (0 == (4 & Ws) || 98 !== r && 99 !== r || (null === tu ? tu = new Set([e]) : tu.add(e)), fu(e, n)),
                    Fs = e
            }
            function mu(e, t) {
                e.lanes |= t;
                var n = e.alternate;
                for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e;) e.childLanes |= t,
                    null !== (n = e.alternate) && (n.childLanes |= t),
                    n = e,
                    e = e.return;
                return 3 === n.tag ? n.stateNode : null
            }
            function fu(e, t) {
                for (var n = e.callbackNode, r = e.suspendedLanes, a = e.pingedLanes, i = e.expirationTimes, s = e.pendingLanes; 0 < s;) {
                    var u = 31 - Ut(s),
                        l = 1 << u,
                        d = i[u];
                    if (- 1 === d) {
                        if (0 == (l & r) || 0 != (l & a)) {
                            d = t,
                                At(l);
                            var c = Rt;
                            i[u] = 10 <= c ? d + 250 : 6 <= c ? d + 5000 : - 1
                        }
                    } else d <= t && (e.expiredLanes |= l);
                    s &= ~l
                }
                if (r = Ot(e, e === js ? Ns : 0), t = Rt, 0 === r) null !== n && (n !== Aa && Sa(n), e.callbackNode = null, e.callbackPriority = 0);
                else {
                    if (null !== n) {
                        if (e.callbackPriority === t) return;
                        n !== Aa && Sa(n)
                    }
                    15 === t ? (n = gu.bind(null, e), null === Ha ? (Ha = [
                        n
                    ], _a = xa(Da, Ba)) : Ha.push(n), n = Aa) : 14 === t ? n = Va(99, gu.bind(null, e)) : (n = function (e) {
                        switch (e) {
                            case 15:
                            case 14:
                                return 99;
                            case 13:
                            case 12:
                            case 11:
                            case 10:
                                return 98;
                            case 9:
                            case 8:
                            case 7:
                            case 6:
                            case 4:
                            case 5:
                                return 97;
                            case 3:
                            case 2:
                            case 1:
                                return 95;
                            case 0:
                                return 90;
                            default:
                                throw Error(o(358, e))
                        }
                    }(t), n = Va(n, hu.bind(null, e))),
                        e.callbackPriority = t,
                        e.callbackNode = n
                }
            }
            function hu(e) {
                if (au = - 1, ou = iu = 0, 0 != (48 & Ws)) throw Error(o(327));
                var t = e.callbackNode;
                if (Nu() && e.callbackNode !== t) return null;
                var n = Ot(e, e === js ? Ns : 0);
                if (0 === n) return null;
                var r = n,
                    a = Ws;
                Ws |= 16;
                var i = Eu();
                for (js === e && Ns === r || (qs(), ku(e, r)); ;) try {
                    Su();
                    break
                } catch (t) {
                    Mu(e, t)
                }
                if (ti(), Ts.current = i, Ws = a, null !== Ds ? r = 0 : (js = null, Ns = 0, r = Rs), 0 != (Os & _s)) ku(e, 0);
                else if (0 !== r) {
                    if (2 === r && (Ws |= 64, e.hydrate && (e.hydrate = !1, Vr(e.containerInfo)), 0 !== (n = Ht(e)) && (r = Pu(e, n))), 1 === r) throw t = As,
                        ku(e, 0),
                        pu(e, n),
                        fu(e, Xa()),
                        t;
                    switch (e.finishedWork = e.current.alternate, e.finishedLanes = n, r) {
                        case 0:
                        case 1:
                            throw Error(o(345));
                        case 2:
                        case 5:
                            Wu(e);
                            break;
                        case 3:
                            if (pu(e, n), (62914560 & n) === n && 10 < (r = Xs + 500 - Xa())) {
                                if (0 !== Ot(e, 0)) break;
                                if (((a = e.suspendedLanes) & n) !== n) {
                                    lu(),
                                        e.pingedLanes |= e.suspendedLanes & a;
                                    break
                                }
                                e.timeoutHandle = qr(Wu.bind(null, e), r);
                                break
                            }
                            Wu(e);
                            break;
                        case 4:
                            if (pu(e, n), (4186112 & n) === n) break;
                            for (r = e.eventTimes, a = - 1; 0 < n;) {
                                var s = 31 - Ut(n);
                                i = 1 << s,
                                    (s = r[s]) > a && (a = s),
                                    n &= ~i
                            }
                            if (n = a, 10 < (n = (120 > (n = Xa() - n) ? 120 : 480 > n ? 480 : 1080 > n ? 1080 : 1920 > n ? 1920 : 3000 > n ? 3000 : 4320 > n ? 4320 : 1960 * Ss(n / 1960)) - n)) {
                                e.timeoutHandle = qr(Wu.bind(null, e), n);
                                break
                            }
                            Wu(e);
                            break;
                        default:
                            throw Error(o(329))
                    }
                }
                return fu(e, Xa()),
                    e.callbackNode === t ? hu.bind(null, e) : null
            }
            function pu(e, t) {
                for (t &= ~Ls, t &= ~_s, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t;) {
                    var n = 31 - Ut(t),
                        r = 1 << n;
                    e[n] = - 1,
                        t &= ~r
                }
            }
            function gu(e) {
                if (0 != (48 & Ws)) throw Error(o(327));
                if (Nu(), e === js && 0 != (e.expiredLanes & Ns)) {
                    var t = Ns,
                        n = Pu(e, t);
                    0 != (Os & _s) && (n = Pu(e, t = Ot(e, t)))
                } else n = Pu(e, t = Ot(e, 0));
                if (0 !== e.tag && 2 === n && (Ws |= 64, e.hydrate && (e.hydrate = !1, Vr(e.containerInfo)), 0 !== (t = Ht(e)) && (n = Pu(e, t))), 1 === n) throw n = As,
                    ku(e, 0),
                    pu(e, t),
                    fu(e, Xa()),
                    n;
                return e.finishedWork = e.current.alternate,
                    e.finishedLanes = t,
                    Wu(e),
                    fu(e, Xa()),
                    null
            }
            function vu(e, t) {
                var n = Ws;
                Ws |= 1;
                try {
                    return e(t)
                } finally {
                    0 === (Ws = n) && (qs(), Ya())
                }
            }
            function yu(e, t) {
                var n = Ws;
                Ws &= - 2,
                    Ws |= 8;
                try {
                    return e(t)
                } finally {
                    0 === (Ws = n) && (qs(), Ya())
                }
            }
            function wu(e, t) {
                da(zs, Is),
                    Is |= t,
                    Os |= t
            }
            function bu() {
                Is = zs.current,
                    la(zs)
            }
            function ku(e, t) {
                e.finishedWork = null,
                    e.finishedLanes = 0;
                var n = e.timeoutHandle;
                if (- 1 !== n && (e.timeoutHandle = - 1, Gr(n)), null !== Ds) for (n = Ds.return; null !== n;) {
                    var r = n;
                    switch (r.tag) {
                        case 1:
                            null != (r = r.type.childContextTypes) && va();
                            break;
                        case 3:
                            Ii(),
                                la(fa),
                                la(ma),
                                Bi();
                            break;
                        case 5:
                            Ri(r);
                            break;
                        case 4:
                            Ii();
                            break;
                        case 13:
                        case 19:
                            la(Ai);
                            break;
                        case 10:
                            ni(r);
                            break;
                        case 23:
                        case 24:
                            bu()
                    }
                    n = n.return
                }
                js = e,
                    Ds = Uu(e.current, null),
                    Ns = Is = Os = t,
                    Rs = 0,
                    As = null,
                    Ls = _s = Hs = 0
            }
            function Mu(e, t) {
                for (; ;) {
                    var n = Ds;
                    try {
                        if (ti(), $i.current = Do, to) {
                            for (var r = Ji.memoizedState; null !== r;) {
                                var a = r.queue;
                                null !== a && (a.pending = null),
                                    r = r.next
                            }
                            to = !1
                        }
                        if (Ki = 0, eo = Zi = Ji = null, no = !1, Cs.current = null, null === n || null === n.return) {
                            Rs = 1,
                                As = t,
                                Ds = null;
                            break
                        }
                        e: {
                            var i = e,
                                o = n.return,
                                s = n,
                                u = t;
                            if (t = Ns, s.flags |= 2048, s.firstEffect = s.lastEffect = null, null !== u && 'object' == typeof u && 'function' == typeof u.then) {
                                var l = u;
                                if (0 == (2 & s.mode)) {
                                    var d = s.alternate;
                                    d ? (s.updateQueue = d.updateQueue, s.memoizedState = d.memoizedState, s.lanes = d.lanes) : (s.updateQueue = null, s.memoizedState = null)
                                }
                                var c = 0 != (1 & Ai.current),
                                    m = o;
                                do {
                                    var f;
                                    if (f = 13 === m.tag) {
                                        var h = m.memoizedState;
                                        if (null !== h) f = null !== h.dehydrated;
                                        else {
                                            var p = m.memoizedProps;
                                            f = void 0 !== p.fallback && (!0 !== p.unstable_avoidThisFallback || !c)
                                        }
                                    }
                                    if (f) {
                                        var g = m.updateQueue;
                                        if (null === g) {
                                            var v = new Set;
                                            v.add(l),
                                                m.updateQueue = v
                                        } else g.add(l);
                                        if (0 == (2 & m.mode)) {
                                            if (m.flags |= 64, s.flags |= 16384, s.flags &= - 2981, 1 === s.tag) if (null === s.alternate) s.tag = 17;
                                            else {
                                                var y = li(- 1, 1);
                                                y.tag = 2,
                                                    di(s, y)
                                            }
                                            s.lanes |= 1;
                                            break e
                                        }
                                        u = void 0,
                                            s = t;
                                        var w = i.pingCache;
                                        if (null === w ? (w = i.pingCache = new us, u = new Set, w.set(l, u)) : void 0 === (u = w.get(l)) && (u = new Set, w.set(l, u)), !u.has(s)) {
                                            u.add(s);
                                            var b = Hu.bind(null, i, l, s);
                                            l.then(b, b)
                                        }
                                        m.flags |= 4096,
                                            m.lanes = t;
                                        break e
                                    }
                                    m = m.return
                                } while (null !== m);
                                u = Error((Y(s.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.')
                            }
                            5 !== Rs && (Rs = 2),
                                u = os(u, s),
                                m = o;
                            do {
                                switch (m.tag) {
                                    case 3:
                                        i = u,
                                            m.flags |= 4096,
                                            t &= - t,
                                            m.lanes |= t,
                                            ci(m, ls(0, i, t));
                                        break e;
                                    case 1:
                                        i = u;
                                        var k = m.type,
                                            M = m.stateNode;
                                        if (0 == (64 & m.flags) && ('function' == typeof k.getDerivedStateFromError || null !== M && 'function' == typeof M.componentDidCatch && (null === $s || !$s.has(M)))) {
                                            m.flags |= 4096,
                                                t &= - t,
                                                m.lanes |= t,
                                                ci(m, ds(m, i, t));
                                            break e
                                        }
                                }
                                m = m.return
                            } while (null !== m)
                        }
                        Cu(n)
                    } catch (e) {
                        t = e,
                            Ds === n && null !== n && (Ds = n = n.return);
                        continue
                    }
                    break
                }
            }
            function Eu() {
                var e = Ts.current;
                return Ts.current = Do,
                    null === e ? Do : e
            }
            function Pu(e, t) {
                var n = Ws;
                Ws |= 16;
                var r = Eu();
                for (js === e && Ns === t || ku(e, t); ;) try {
                    xu();
                    break
                } catch (t) {
                    Mu(e, t)
                }
                if (ti(), Ws = n, Ts.current = r, null !== Ds) throw Error(o(261));
                return js = null,
                    Ns = 0,
                    Rs
            }
            function xu() {
                for (; null !== Ds;) Tu(Ds)
            }
            function Su() {
                for (; null !== Ds && !Ta();) Tu(Ds)
            }
            function Tu(e) {
                var t = Gs(e.alternate, e, Is);
                e.memoizedProps = e.pendingProps,
                    null === t ? Cu(e) : Ds = t,
                    Cs.current = null
            }
            function Cu(e) {
                var t = e;
                do {
                    var n = t.alternate;
                    if (e = t.return, 0 == (2048 & t.flags)) {
                        if (null !== (n = as(n, t, Is))) return void (Ds = n);
                        if (24 !== (n = t).tag && 23 !== n.tag || null === n.memoizedState || 0 != (1073741824 & Is) || 0 == (4 & n.mode)) {
                            for (var r = 0, a = n.child; null !== a;) r |= a.lanes | a.childLanes,
                                a = a.sibling;
                            n.childLanes = r
                        }
                        null !== e && 0 == (2048 & e.flags) && (null === e.firstEffect && (e.firstEffect = t.firstEffect), null !== t.lastEffect && (null !== e.lastEffect && (e.lastEffect.nextEffect = t.firstEffect), e.lastEffect = t.lastEffect), 1 < t.flags && (null !== e.lastEffect ? e.lastEffect.nextEffect = t : e.firstEffect = t, e.lastEffect = t))
                    } else {
                        if (null !== (n = is(t))) return n.flags &= 2047,
                            void (Ds = n);
                        null !== e && (e.firstEffect = e.lastEffect = null, e.flags |= 2048)
                    }
                    if (null !== (t = t.sibling)) return void (Ds = t);
                    Ds = t = e
                } while (null !== t);
                0 === Rs && (Rs = 5)
            }
            function Wu(e) {
                var t = Ua();
                return Ga(99, ju.bind(null, e, t)),
                    null
            }
            function ju(e, t) {
                do {
                    Nu()
                } while (null !== Ks);
                if (0 != (48 & Ws)) throw Error(o(327));
                var n = e.finishedWork;
                if (null === n) return null;
                if (e.finishedWork = null, e.finishedLanes = 0, n === e.current) throw Error(o(177));
                e.callbackNode = null;
                var r = n.lanes | n.childLanes,
                    a = r,
                    i = e.pendingLanes & ~a;
                e.pendingLanes = a,
                    e.suspendedLanes = 0,
                    e.pingedLanes = 0,
                    e.expiredLanes &= a,
                    e.mutableReadLanes &= a,
                    e.entangledLanes &= a,
                    a = e.entanglements;
                for (var s = e.eventTimes, u = e.expirationTimes; 0 < i;) {
                    var l = 31 - Ut(i),
                        d = 1 << l;
                    a[l] = 0,
                        s[l] = - 1,
                        u[l] = - 1,
                        i &= ~d
                }
                if (null !== tu && 0 == (24 & r) && tu.has(e) && tu.delete(e), e === js && (Ds = js = null, Ns = 0), 1 < n.flags ? null !== n.lastEffect ? (n.lastEffect.nextEffect = n, r = n.firstEffect) : r = n : r = n.firstEffect, null !== r) {
                    if (a = Ws, Ws |= 32, Cs.current = null, Lr = Bt, gr(s = pr())) {
                        if ('selectionStart' in s) u = {
                            start: s.selectionStart,
                            end: s.selectionEnd
                        };
                        else e: if (u = (u = s.ownerDocument) && u.defaultView || window, (d = u.getSelection && u.getSelection()) && 0 !== d.rangeCount) {
                            u = d.anchorNode,
                                i = d.anchorOffset,
                                l = d.focusNode,
                                d = d.focusOffset;
                            try {
                                u.nodeType,
                                    l.nodeType
                            } catch (e) {
                                u = null;
                                break e
                            }
                            var c = 0,
                                m = - 1,
                                f = - 1,
                                h = 0,
                                p = 0,
                                g = s,
                                v = null;
                            t: for (; ;) {
                                for (var y; g !== u || 0 !== i && 3 !== g.nodeType || (m = c + i), g !== l || 0 !== d && 3 !== g.nodeType || (f = c + d), 3 === g.nodeType && (c += g.nodeValue.length), null !== (y = g.firstChild);) v = g,
                                    g = y;
                                for (; ;) {
                                    if (g === s) break t;
                                    if (v === u && ++h === i && (m = c), v === l && ++p === d && (f = c), null !== (y = g.nextSibling)) break;
                                    v = (g = v).parentNode
                                }
                                g = y
                            }
                            u = - 1 === m || - 1 === f ? null : {
                                start: m,
                                end: f
                            }
                        } else u = null;
                        u = u || {
                            start: 0,
                            end: 0
                        }
                    } else u = null;
                    Fr = {
                        focusedElem: s,
                        selectionRange: u
                    },
                        Bt = !1,
                        su = null,
                        uu = !1,
                        Vs = r;
                    do {
                        try {
                            Du()
                        } catch (e) {
                            if (null === Vs) throw Error(o(330));
                            Ou(Vs, e),
                                Vs = Vs.nextEffect
                        }
                    } while (null !== Vs);
                    su = null,
                        Vs = r;
                    do {
                        try {
                            for (s = e; null !== Vs;) {
                                var w = Vs.flags;
                                if (16 & w && ve(Vs.stateNode, ''), 128 & w) {
                                    var b = Vs.alternate;
                                    if (null !== b) {
                                        var k = b.ref;
                                        null !== k && ('function' == typeof k ? k(null) : k.current = null)
                                    }
                                }
                                switch (1038 & w) {
                                    case 2:
                                        ws(Vs),
                                            Vs.flags &= - 3;
                                        break;
                                    case 6:
                                        ws(Vs),
                                            Vs.flags &= - 3,
                                            Es(Vs.alternate, Vs);
                                        break;
                                    case 1024:
                                        Vs.flags &= - 1025;
                                        break;
                                    case 1028:
                                        Vs.flags &= - 1025,
                                            Es(Vs.alternate, Vs);
                                        break;
                                    case 4:
                                        Es(Vs.alternate, Vs);
                                        break;
                                    case 8:
                                        Ms(s, u = Vs);
                                        var M = u.alternate;
                                        vs(u),
                                            null !== M && vs(M)
                                }
                                Vs = Vs.nextEffect
                            }
                        } catch (e) {
                            if (null === Vs) throw Error(o(330));
                            Ou(Vs, e),
                                Vs = Vs.nextEffect
                        }
                    } while (null !== Vs);
                    if (k = Fr, b = pr(), w = k.focusedElem, s = k.selectionRange, b !== w && w && w.ownerDocument && hr(w.ownerDocument.documentElement, w)) {
                        null !== s && gr(w) && (b = s.start, void 0 === (k = s.end) && (k = b), 'selectionStart' in w ? (w.selectionStart = b, w.selectionEnd = Math.min(k, w.value.length)) : (k = (b = w.ownerDocument || document) && b.defaultView || window).getSelection && (k = k.getSelection(), u = w.textContent.length, M = Math.min(s.start, u), s = void 0 === s.end ? M : Math.min(s.end, u), !k.extend && M > s && (u = s, s = M, M = u), u = fr(w, M), i = fr(w, s), u && i && (1 !== k.rangeCount || k.anchorNode !== u.node || k.anchorOffset !== u.offset || k.focusNode !== i.node || k.focusOffset !== i.offset) && ((b = b.createRange()).setStart(u.node, u.offset), k.removeAllRanges(), M > s ? (k.addRange(b), k.extend(i.node, i.offset)) : (b.setEnd(i.node, i.offset), k.addRange(b))))),
                            b = [
                            ];
                        for (k = w; k = k.parentNode;) 1 === k.nodeType && b.push({
                            element: k,
                            left: k.scrollLeft,
                            top: k.scrollTop
                        });
                        for ('function' == typeof w.focus && w.focus(), w = 0; w < b.length; w++) (k = b[w]).element.scrollLeft = k.left,
                            k.element.scrollTop = k.top
                    }
                    Bt = !!Lr,
                        Fr = Lr = null,
                        e.current = n,
                        Vs = r;
                    do {
                        try {
                            for (w = e; null !== Vs;) {
                                var E = Vs.flags;
                                if (36 & E && hs(w, Vs.alternate, Vs), 128 & E) {
                                    b = void 0;
                                    var P = Vs.ref;
                                    if (null !== P) {
                                        var x = Vs.stateNode;
                                        Vs.tag,
                                            b = x,
                                            'function' == typeof P ? P(b) : P.current = b
                                    }
                                }
                                Vs = Vs.nextEffect
                            }
                        } catch (e) {
                            if (null === Vs) throw Error(o(330));
                            Ou(Vs, e),
                                Vs = Vs.nextEffect
                        }
                    } while (null !== Vs);
                    Vs = null,
                        Oa(),
                        Ws = a
                } else e.current = n;
                if (Qs) Qs = !1,
                    Ks = e,
                    Js = t;
                else for (Vs = r; null !== Vs;) t = Vs.nextEffect,
                    Vs.nextEffect = null,
                    8 & Vs.flags && ((E = Vs).sibling = null, E.stateNode = null),
                    Vs = t;
                if (0 === (r = e.pendingLanes) && ($s = null), 1 === r ? e === ru ? nu++ : (nu = 0, ru = e) : nu = 0, n = n.stateNode, Ea && 'function' == typeof Ea.onCommitFiberRoot) try {
                    Ea.onCommitFiberRoot(Ma, n, void 0, 64 == (64 & n.current.flags))
                } catch (e) {
                }
                if (fu(e, Xa()), Ys) throw Ys = !1,
                    e = Bs,
                    Bs = null,
                    e;
                return 0 != (8 & Ws) || Ya(),
                    null
            }
            function Du() {
                for (; null !== Vs;) {
                    var e = Vs.alternate;
                    uu || null === su || (0 != (8 & Vs.flags) ? Ze(Vs, su) && (uu = !0) : 13 === Vs.tag && xs(e, Vs) && Ze(Vs, su) && (uu = !0));
                    var t = Vs.flags;
                    0 != (256 & t) && fs(e, Vs),
                        0 == (512 & t) || Qs || (Qs = !0, Va(97, (function () {
                            return Nu(),
                                null
                        }))),
                        Vs = Vs.nextEffect
                }
            }
            function Nu() {
                if (90 !== Js) {
                    var e = 97 < Js ? 97 : Js;
                    return Js = 90,
                        Ga(e, Ru)
                }
                return !1
            }
            function Iu(e, t) {
                Zs.push(t, e),
                    Qs || (Qs = !0, Va(97, (function () {
                        return Nu(),
                            null
                    })))
            }
            function zu(e, t) {
                eu.push(t, e),
                    Qs || (Qs = !0, Va(97, (function () {
                        return Nu(),
                            null
                    })))
            }
            function Ru() {
                if (null === Ks) return !1;
                var e = Ks;
                if (Ks = null, 0 != (48 & Ws)) throw Error(o(331));
                var t = Ws;
                Ws |= 32;
                var n = eu;
                eu = [
                ];
                for (var r = 0; r < n.length; r += 2) {
                    var a = n[r],
                        i = n[r + 1],
                        s = a.destroy;
                    if (a.destroy = void 0, 'function' == typeof s) try {
                        s()
                    } catch (e) {
                        if (null === i) throw Error(o(330));
                        Ou(i, e)
                    }
                }
                for (n = Zs, Zs = [
                ], r = 0; r < n.length; r += 2) {
                    a = n[r],
                        i = n[r + 1];
                    try {
                        var u = a.create;
                        a.destroy = u()
                    } catch (e) {
                        if (null === i) throw Error(o(330));
                        Ou(i, e)
                    }
                }
                for (u = e.current.firstEffect; null !== u;) e = u.nextEffect,
                    u.nextEffect = null,
                    8 & u.flags && (u.sibling = null, u.stateNode = null),
                    u = e;
                return Ws = t,
                    Ya(),
                    !0
            }
            function Au(e, t, n) {
                di(e, t = ls(0, t = os(n, t), 1)),
                    t = lu(),
                    null !== (e = mu(e, 1)) && (Xt(e, 1, t), fu(e, t))
            }
            function Ou(e, t) {
                if (3 === e.tag) Au(e, e, t);
                else for (var n = e.return; null !== n;) {
                    if (3 === n.tag) {
                        Au(n, e, t);
                        break
                    }
                    if (1 === n.tag) {
                        var r = n.stateNode;
                        if ('function' == typeof n.type.getDerivedStateFromError || 'function' == typeof r.componentDidCatch && (null === $s || !$s.has(r))) {
                            var a = ds(n, e = os(t, e), 1);
                            if (di(n, a), a = lu(), null !== (n = mu(n, 1))) Xt(n, 1, a),
                                fu(n, a);
                            else if ('function' == typeof r.componentDidCatch && (null === $s || !$s.has(r))) try {
                                r.componentDidCatch(t, e)
                            } catch (e) {
                            }
                            break
                        }
                    }
                    n = n.return
                }
            }
            function Hu(e, t, n) {
                var r = e.pingCache;
                null !== r && r.delete(t),
                    t = lu(),
                    e.pingedLanes |= e.suspendedLanes & n,
                    js === e && (Ns & n) === n && (4 === Rs || 3 === Rs && (62914560 & Ns) === Ns && 500 > Xa() - Xs ? ku(e, 0) : Ls |= n),
                    fu(e, t)
            }
            function _u(e, t) {
                var n = e.stateNode;
                null !== n && n.delete(t),
                    0 == (t = 0) && (0 == (2 & (t = e.mode)) ? t = 1 : 0 == (4 & t) ? t = 99 === Ua() ? 1 : 2 : (0 === iu && (iu = Os), 0 === (t = Lt(62914560 & ~iu)) && (t = 4194304))),
                    n = lu(),
                    null !== (e = mu(e, t)) && (Xt(e, t, n), fu(e, n))
            }
            function Lu(e, t, n, r) {
                this.tag = e,
                    this.key = n,
                    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null,
                    this.index = 0,
                    this.ref = null,
                    this.pendingProps = t,
                    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null,
                    this.mode = r,
                    this.flags = 0,
                    this.lastEffect = this.firstEffect = this.nextEffect = null,
                    this.childLanes = this.lanes = 0,
                    this.alternate = null
            }
            function Fu(e, t, n, r) {
                return new Lu(e, t, n, r)
            }
            function Xu(e) {
                return !(!(e = e.prototype) || !e.isReactComponent)
            }
            function Uu(e, t) {
                var n = e.alternate;
                return null === n ? ((n = Fu(e.tag, t, e.key, e.mode)).elementType = e.elementType, n.type = e.type, n.stateNode = e.stateNode, n.alternate = e, e.alternate = n) : (n.pendingProps = t, n.type = e.type, n.flags = 0, n.nextEffect = null, n.firstEffect = null, n.lastEffect = null),
                    n.childLanes = e.childLanes,
                    n.lanes = e.lanes,
                    n.child = e.child,
                    n.memoizedProps = e.memoizedProps,
                    n.memoizedState = e.memoizedState,
                    n.updateQueue = e.updateQueue,
                    t = e.dependencies,
                    n.dependencies = null === t ? null : {
                        lanes: t.lanes,
                        firstContext: t.firstContext
                    },
                    n.sibling = e.sibling,
                    n.index = e.index,
                    n.ref = e.ref,
                    n
            }
            function qu(e, t, n, r, a, i) {
                var s = 2;
                if (r = e, 'function' == typeof e) Xu(e) && (s = 1);
                else if ('string' == typeof e) s = 5;
                else e: switch (e) {
                    case P:
                        return Gu(n.children, a, i, t);
                    case A:
                        s = 8,
                            a |= 16;
                        break;
                    case x:
                        s = 8,
                            a |= 1;
                        break;
                    case S:
                        return (e = Fu(12, n, t, 8 | a)).elementType = S,
                            e.type = S,
                            e.lanes = i,
                            e;
                    case j:
                        return (e = Fu(13, n, t, a)).type = j,
                            e.elementType = j,
                            e.lanes = i,
                            e;
                    case D:
                        return (e = Fu(19, n, t, a)).elementType = D,
                            e.lanes = i,
                            e;
                    case O:
                        return Vu(n, a, i, t);
                    case H:
                        return (e = Fu(24, n, t, a)).elementType = H,
                            e.lanes = i,
                            e;
                    default:
                        if ('object' == typeof e && null !== e) switch (e.$$typeof) {
                            case T:
                                s = 10;
                                break e;
                            case C:
                                s = 9;
                                break e;
                            case W:
                                s = 11;
                                break e;
                            case N:
                                s = 14;
                                break e;
                            case I:
                                s = 16,
                                    r = null;
                                break e;
                            case z:
                                s = 22;
                                break e
                        }
                        throw Error(o(130, null == e ? e : typeof e, ''))
                }
                return (t = Fu(s, n, t, a)).elementType = e,
                    t.type = r,
                    t.lanes = i,
                    t
            }
            function Gu(e, t, n, r) {
                return (e = Fu(7, e, r, t)).lanes = n,
                    e
            }
            function Vu(e, t, n, r) {
                return (e = Fu(23, e, r, t)).elementType = O,
                    e.lanes = n,
                    e
            }
            function Yu(e, t, n) {
                return (e = Fu(6, e, null, t)).lanes = n,
                    e
            }
            function Bu(e, t, n) {
                return (t = Fu(4, null !== e.children ? e.children : [
                ], e.key, t)).lanes = n,
                    t.stateNode = {
                        containerInfo: e.containerInfo,
                        pendingChildren: null,
                        implementation: e.implementation
                    },
                    t
            }
            function $u(e, t, n) {
                this.tag = t,
                    this.containerInfo = e,
                    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null,
                    this.timeoutHandle = - 1,
                    this.pendingContext = this.context = null,
                    this.hydrate = n,
                    this.callbackNode = null,
                    this.callbackPriority = 0,
                    this.eventTimes = Ft(0),
                    this.expirationTimes = Ft(- 1),
                    this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0,
                    this.entanglements = Ft(0),
                    this.mutableSourceEagerHydrationData = null
            }
            function Qu(e, t, n) {
                var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
                return {
                    $$typeof: E,
                    key: null == r ? null : '' + r,
                    children: e,
                    containerInfo: t,
                    implementation: n
                }
            }
            function Ku(e, t, n, r) {
                var a = t.current,
                    i = lu(),
                    s = du(a);
                e: if (n) {
                    t: {
                        if ($e(n = n._reactInternals) !== n || 1 !== n.tag) throw Error(o(170));
                        var u = n;
                        do {
                            switch (u.tag) {
                                case 3:
                                    u = u.stateNode.context;
                                    break t;
                                case 1:
                                    if (ga(u.type)) {
                                        u = u.stateNode.__reactInternalMemoizedMergedChildContext;
                                        break t
                                    }
                            }
                            u = u.return
                        } while (null !== u);
                        throw Error(o(171))
                    }
                    if (1 === n.tag) {
                        var l = n.type;
                        if (ga(l)) {
                            n = wa(n, l, u);
                            break e
                        }
                    }
                    n = u
                } else n = ca;
                return null === t.context ? t.context = n : t.pendingContext = n,
                    (t = li(i, s)).payload = {
                        element: e
                    },
                    null !== (r = void 0 === r ? null : r) && (t.callback = r),
                    di(a, t),
                    cu(a, s, i),
                    s
            }
            function Ju(e) {
                return (e = e.current).child ? (e.child.tag, e.child.stateNode) : null
            }
            function Zu(e, t) {
                if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
                    var n = e.retryLane;
                    e.retryLane = 0 !== n && n < t ? n : t
                }
            }
            function el(e, t) {
                Zu(e, t),
                    (e = e.alternate) && Zu(e, t)
            }
            function tl(e, t, n) {
                var r = null != n && null != n.hydrationOptions && n.hydrationOptions.mutableSources || null;
                if (n = new $u(e, t, null != n && !0 === n.hydrate), t = Fu(3, null, null, 2 === t ? 7 : 1 === t ? 3 : 0), n.current = t, t.stateNode = n, si(t), e[Zr] = n.current, Dr(8 === e.nodeType ? e.parentNode : e), r) for (e = 0; e < r.length; e++) {
                    var a = (t = r[e])._getVersion;
                    a = a(t._source),
                        null == n.mutableSourceEagerHydrationData ? n.mutableSourceEagerHydrationData = [
                            t,
                            a
                        ] : n.mutableSourceEagerHydrationData.push(t, a)
                }
                this._internalRoot = n
            }
            function nl(e) {
                return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || ' react-mount-point-unstable ' !== e.nodeValue))
            }
            function rl(e, t, n, r, a) {
                var i = n._reactRootContainer;
                if (i) {
                    var o = i._internalRoot;
                    if ('function' == typeof a) {
                        var s = a;
                        a = function () {
                            var e = Ju(o);
                            s.call(e)
                        }
                    }
                    Ku(t, o, e, a)
                } else {
                    if (i = n._reactRootContainer = function (e, t) {
                        if (t || (t = !(!(t = e ? 9 === e.nodeType ? e.documentElement : e.firstChild : null) || 1 !== t.nodeType || !t.hasAttribute('data-reactroot'))), !t) for (var n; n = e.lastChild;) e.removeChild(n);
                        return new tl(e, 0, t ? {
                            hydrate: !0
                        }
                            : void 0)
                    }(n, r), o = i._internalRoot, 'function' == typeof a) {
                        var u = a;
                        a = function () {
                            var e = Ju(o);
                            u.call(e)
                        }
                    }
                    yu((function () {
                        Ku(t, o, e, a)
                    }))
                }
                return Ju(o)
            }
            function al(e, t) {
                var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
                if (!nl(t)) throw Error(o(200));
                return Qu(e, t, null, n)
            }
            Gs = function (e, t, n) {
                var r = t.lanes;
                if (null !== e) if (e.memoizedProps !== t.pendingProps || fa.current) Ao = !0;
                else {
                    if (0 == (n & r)) {
                        switch (Ao = !1, t.tag) {
                            case 3:
                                Vo(t),
                                    Vi();
                                break;
                            case 5:
                                zi(t);
                                break;
                            case 1:
                                ga(t.type) && ba(t);
                                break;
                            case 4:
                                Ni(t, t.stateNode.containerInfo);
                                break;
                            case 10:
                                r = t.memoizedProps.value;
                                var a = t.type._context;
                                da(Ka, a._currentValue),
                                    a._currentValue = r;
                                break;
                            case 13:
                                if (null !== t.memoizedState) return 0 != (n & t.child.childLanes) ? Ko(e, t, n) : (da(Ai, 1 & Ai.current), null !== (t = ns(e, t, n)) ? t.sibling : null);
                                da(Ai, 1 & Ai.current);
                                break;
                            case 19:
                                if (r = 0 != (n & t.childLanes), 0 != (64 & e.flags)) {
                                    if (r) return ts(e, t, n);
                                    t.flags |= 64
                                }
                                if (null !== (a = t.memoizedState) && (a.rendering = null, a.tail = null, a.lastEffect = null), da(Ai, Ai.current), r) break;
                                return null;
                            case 23:
                            case 24:
                                return t.lanes = 0,
                                    Fo(e, t, n)
                        }
                        return ns(e, t, n)
                    }
                    Ao = 0 != (16384 & e.flags)
                } else Ao = !1;
                switch (t.lanes = 0, t.tag) {
                    case 2:
                        if (r = t.type, null !== e && (e.alternate = null, t.alternate = null, t.flags |= 2), e = t.pendingProps, a = pa(t, ma.current), ai(t, n), a = io(null, t, r, e, a, n), t.flags |= 1, 'object' == typeof a && null !== a && 'function' == typeof a.render && void 0 === a.$$typeof) {
                            if (t.tag = 1, t.memoizedState = null, t.updateQueue = null, ga(r)) {
                                var i = !0;
                                ba(t)
                            } else i = !1;
                            t.memoizedState = null !== a.state && void 0 !== a.state ? a.state : null,
                                si(t);
                            var s = r.getDerivedStateFromProps;
                            'function' == typeof s && pi(t, r, s, e),
                                a.updater = gi,
                                t.stateNode = a,
                                a._reactInternals = t,
                                bi(t, r, e, n),
                                t = Go(null, t, r, !0, i, n)
                        } else t.tag = 0,
                            Oo(null, t, a, n),
                            t = t.child;
                        return t;
                    case 16:
                        a = t.elementType;
                        e: {
                            switch (null !== e && (e.alternate = null, t.alternate = null, t.flags |= 2), e = t.pendingProps, a = (i = a._init)(a._payload), t.type = a, i = t.tag = function (e) {
                                if ('function' == typeof e) return Xu(e) ? 1 : 0;
                                if (null != e) {
                                    if ((e = e.$$typeof) === W) return 11;
                                    if (e === N) return 14
                                }
                                return 2
                            }(a), e = Qa(a, e), i) {
                                case 0:
                                    t = Uo(null, t, a, e, n);
                                    break e;
                                case 1:
                                    t = qo(null, t, a, e, n);
                                    break e;
                                case 11:
                                    t = Ho(null, t, a, e, n);
                                    break e;
                                case 14:
                                    t = _o(null, t, a, Qa(a.type, e), r, n);
                                    break e
                            }
                            throw Error(o(306, a, ''))
                        }
                        return t;
                    case 0:
                        return r = t.type,
                            a = t.pendingProps,
                            Uo(e, t, r, a = t.elementType === r ? a : Qa(r, a), n);
                    case 1:
                        return r = t.type,
                            a = t.pendingProps,
                            qo(e, t, r, a = t.elementType === r ? a : Qa(r, a), n);
                    case 3:
                        if (Vo(t), r = t.updateQueue, null === e || null === r) throw Error(o(282));
                        if (r = t.pendingProps, a = null !== (a = t.memoizedState) ? a.element : null, ui(e, t), mi(t, r, null, n), (r = t.memoizedState.element) === a) Vi(),
                            t = ns(e, t, n);
                        else {
                            if ((i = (a = t.stateNode).hydrate) && (_i = Yr(t.stateNode.containerInfo.firstChild), Hi = t, i = Li = !0), i) {
                                if (null != (e = a.mutableSourceEagerHydrationData)) for (a = 0; a < e.length; a += 2) (i = e[a])._workInProgressVersionPrimary = e[a + 1],
                                    Yi.push(i);
                                for (n = Si(t, null, r, n), t.child = n; n;) n.flags = - 3 & n.flags | 1024,
                                    n = n.sibling
                            } else Oo(e, t, r, n),
                                Vi();
                            t = t.child
                        }
                        return t;
                    case 5:
                        return zi(t),
                            null === e && Ui(t),
                            r = t.type,
                            a = t.pendingProps,
                            i = null !== e ? e.memoizedProps : null,
                            s = a.children,
                            Ur(r, a) ? s = null : null !== i && Ur(r, i) && (t.flags |= 16),
                            Xo(e, t),
                            Oo(e, t, s, n),
                            t.child;
                    case 6:
                        return null === e && Ui(t),
                            null;
                    case 13:
                        return Ko(e, t, n);
                    case 4:
                        return Ni(t, t.stateNode.containerInfo),
                            r = t.pendingProps,
                            null === e ? t.child = xi(t, null, r, n) : Oo(e, t, r, n),
                            t.child;
                    case 11:
                        return r = t.type,
                            a = t.pendingProps,
                            Ho(e, t, r, a = t.elementType === r ? a : Qa(r, a), n);
                    case 7:
                        return Oo(e, t, t.pendingProps, n),
                            t.child;
                    case 8:
                    case 12:
                        return Oo(e, t, t.pendingProps.children, n),
                            t.child;
                    case 10:
                        e: {
                            r = t.type._context,
                                a = t.pendingProps,
                                s = t.memoizedProps,
                                i = a.value;
                            var u = t.type._context;
                            if (da(Ka, u._currentValue), u._currentValue = i, null !== s) if (u = s.value, 0 == (i = lr(u, i) ? 0 : 0 | ('function' == typeof r._calculateChangedBits ? r._calculateChangedBits(u, i) : 1073741823))) {
                                if (s.children === a.children && !fa.current) {
                                    t = ns(e, t, n);
                                    break e
                                }
                            } else for (null !== (u = t.child) && (u.return = t); null !== u;) {
                                var l = u.dependencies;
                                if (null !== l) {
                                    s = u.child;
                                    for (var d = l.firstContext; null !== d;) {
                                        if (d.context === r && 0 != (d.observedBits & i)) {
                                            1 === u.tag && ((d = li(- 1, n & - n)).tag = 2, di(u, d)),
                                                u.lanes |= n,
                                                null !== (d = u.alternate) && (d.lanes |= n),
                                                ri(u.return, n),
                                                l.lanes |= n;
                                            break
                                        }
                                        d = d.next
                                    }
                                } else s = 10 === u.tag && u.type === t.type ? null : u.child;
                                if (null !== s) s.return = u;
                                else for (s = u; null !== s;) {
                                    if (s === t) {
                                        s = null;
                                        break
                                    }
                                    if (null !== (u = s.sibling)) {
                                        u.return = s.return,
                                            s = u;
                                        break
                                    }
                                    s = s.return
                                }
                                u = s
                            }
                            Oo(e, t, a.children, n),
                                t = t.child
                        }
                        return t;
                    case 9:
                        return a = t.type,
                            r = (i = t.pendingProps).children,
                            ai(t, n),
                            r = r(a = ii(a, i.unstable_observedBits)),
                            t.flags |= 1,
                            Oo(e, t, r, n),
                            t.child;
                    case 14:
                        return i = Qa(a = t.type, t.pendingProps),
                            _o(e, t, a, i = Qa(a.type, i), r, n);
                    case 15:
                        return Lo(e, t, t.type, t.pendingProps, r, n);
                    case 17:
                        return r = t.type,
                            a = t.pendingProps,
                            a = t.elementType === r ? a : Qa(r, a),
                            null !== e && (e.alternate = null, t.alternate = null, t.flags |= 2),
                            t.tag = 1,
                            ga(r) ? (e = !0, ba(t)) : e = !1,
                            ai(t, n),
                            yi(t, r, a),
                            bi(t, r, a, n),
                            Go(null, t, r, !0, e, n);
                    case 19:
                        return ts(e, t, n);
                    case 23:
                    case 24:
                        return Fo(e, t, n)
                }
                throw Error(o(156, t.tag))
            },
                tl.prototype.render = function (e) {
                    Ku(e, this._internalRoot, null, null)
                },
                tl.prototype.unmount = function () {
                    var e = this._internalRoot,
                        t = e.containerInfo;
                    Ku(null, e, null, (function () {
                        t[Zr] = null
                    }))
                },
                et = function (e) {
                    13 === e.tag && (cu(e, 4, lu()), el(e, 4))
                },
                tt = function (e) {
                    13 === e.tag && (cu(e, 67108864, lu()), el(e, 67108864))
                },
                nt = function (e) {
                    if (13 === e.tag) {
                        var t = lu(),
                            n = du(e);
                        cu(e, n, t),
                            el(e, n)
                    }
                },
                rt = function (e, t) {
                    return t()
                },
                Se = function (e, t, n) {
                    switch (t) {
                        case 'input':
                            if (ne(e, n), t = n.name, 'radio' === n.type && null != t) {
                                for (n = e; n.parentNode;) n = n.parentNode;
                                for (n = n.querySelectorAll('input[name=' + JSON.stringify('' + t) + '][type="radio"]'), t = 0; t < n.length; t++) {
                                    var r = n[t];
                                    if (r !== e && r.form === e.form) {
                                        var a = aa(r);
                                        if (!a) throw Error(o(90));
                                        K(r),
                                            ne(r, a)
                                    }
                                }
                            }
                            break;
                        case 'textarea':
                            le(e, n);
                            break;
                        case 'select':
                            null != (t = n.value) && oe(e, !!n.multiple, t, !1)
                    }
                },
                Ne = vu,
                Ie = function (e, t, n, r, a) {
                    var i = Ws;
                    Ws |= 4;
                    try {
                        return Ga(98, e.bind(null, t, n, r, a))
                    } finally {
                        0 === (Ws = i) && (qs(), Ya())
                    }
                },
                ze = function () {
                    0 == (49 & Ws) && (function () {
                        if (null !== tu) {
                            var e = tu;
                            tu = null,
                                e.forEach((function (e) {
                                    e.expiredLanes |= 24 & e.pendingLanes,
                                        fu(e, Xa())
                                }))
                        }
                        Ya()
                    }(), Nu())
                },
                Re = function (e, t) {
                    var n = Ws;
                    Ws |= 2;
                    try {
                        return e(t)
                    } finally {
                        0 === (Ws = n) && (qs(), Ya())
                    }
                };
            var il = {
                Events: [
                    na,
                    ra,
                    aa,
                    je,
                    De,
                    Nu,
                    {
                        current: !1
                    }
                ]
            },
                ol = {
                    findFiberByHostInstance: ta,
                    bundleType: 0,
                    version: '17.0.2',
                    rendererPackageName: 'react-dom'
                },
                sl = {
                    bundleType: ol.bundleType,
                    version: ol.version,
                    rendererPackageName: ol.rendererPackageName,
                    rendererConfig: ol.rendererConfig,
                    overrideHookState: null,
                    overrideHookStateDeletePath: null,
                    overrideHookStateRenamePath: null,
                    overrideProps: null,
                    overridePropsDeletePath: null,
                    overridePropsRenamePath: null,
                    setSuspenseHandler: null,
                    scheduleUpdate: null,
                    currentDispatcherRef: k.ReactCurrentDispatcher,
                    findHostInstanceByFiber: function (e) {
                        return null === (e = Je(e)) ? null : e.stateNode
                    },
                    findFiberByHostInstance: ol.findFiberByHostInstance || function () {
                        return null
                    },
                    findHostInstancesForRefresh: null,
                    scheduleRefresh: null,
                    scheduleRoot: null,
                    setRefreshHandler: null,
                    getCurrentFiber: null
                };
            if ('undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
                var ul = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                if (!ul.isDisabled && ul.supportsFiber) try {
                    Ma = ul.inject(sl),
                        Ea = ul
                } catch (pe) {
                }
            }
            t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = il,
                t.createPortal = al,
                t.findDOMNode = function (e) {
                    if (null == e) return null;
                    if (1 === e.nodeType) return e;
                    var t = e._reactInternals;
                    if (void 0 === t) {
                        if ('function' == typeof e.render) throw Error(o(188));
                        throw Error(o(268, Object.keys(e)))
                    }
                    return null === (e = Je(t)) ? null : e.stateNode
                },
                t.flushSync = function (e, t) {
                    var n = Ws;
                    if (0 != (48 & n)) return e(t);
                    Ws |= 1;
                    try {
                        if (e) return Ga(99, e.bind(null, t))
                    } finally {
                        Ws = n,
                            Ya()
                    }
                },
                t.hydrate = function (e, t, n) {
                    if (!nl(t)) throw Error(o(200));
                    return rl(null, e, t, !0, n)
                },
                t.render = function (e, t, n) {
                    if (!nl(t)) throw Error(o(200));
                    return rl(null, e, t, !1, n)
                },
                t.unmountComponentAtNode = function (e) {
                    if (!nl(e)) throw Error(o(40));
                    return !!e._reactRootContainer && (yu((function () {
                        rl(null, null, e, !1, (function () {
                            e._reactRootContainer = null,
                                e[Zr] = null
                        }))
                    })), !0)
                },
                t.unstable_batchedUpdates = vu,
                t.unstable_createPortal = function (e, t) {
                    return al(e, t, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null)
                },
                t.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
                    if (!nl(n)) throw Error(o(200));
                    if (null == e || void 0 === e._reactInternals) throw Error(o(38));
                    return rl(e, t, n, !1, r)
                },
                t.version = '17.0.2'
        },
        3935: function (e, t, n) {
            'use strict';
            !function e() {
                if ('undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && 'function' == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) try {
                    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
                } catch (e) {
                    console.error(e)
                }
            }(),
                e.exports = n(4448)
        },
        9921: function (e, t) {
            'use strict';
            var n = 60103,
                r = 60106,
                a = 60107,
                i = 60108,
                o = 60114,
                s = 60109,
                u = 60110,
                l = 60112,
                d = 60113,
                c = 60120,
                m = 60115,
                f = 60116,
                h = 60121,
                p = 60122,
                g = 60117,
                v = 60129,
                y = 60131;
            if ('function' == typeof Symbol && Symbol.for) {
                var w = Symbol.for;
                n = w('react.element'),
                    r = w('react.portal'),
                    a = w('react.fragment'),
                    i = w('react.strict_mode'),
                    o = w('react.profiler'),
                    s = w('react.provider'),
                    u = w('react.context'),
                    l = w('react.forward_ref'),
                    d = w('react.suspense'),
                    c = w('react.suspense_list'),
                    m = w('react.memo'),
                    f = w('react.lazy'),
                    h = w('react.block'),
                    p = w('react.server.block'),
                    g = w('react.fundamental'),
                    v = w('react.debug_trace_mode'),
                    y = w('react.legacy_hidden')
            }
            t.isValidElementType = function (e) {
                return 'string' == typeof e || 'function' == typeof e || e === a || e === o || e === v || e === i || e === d || e === c || e === y || 'object' == typeof e && null !== e && (e.$$typeof === f || e.$$typeof === m || e.$$typeof === s || e.$$typeof === u || e.$$typeof === l || e.$$typeof === g || e.$$typeof === h || e[0] === p)
            },
                t.typeOf = function (e) {
                    if ('object' == typeof e && null !== e) {
                        var t = e.$$typeof;
                        switch (t) {
                            case n:
                                switch (e = e.type) {
                                    case a:
                                    case o:
                                    case i:
                                    case d:
                                    case c:
                                        return e;
                                    default:
                                        switch (e = e && e.$$typeof) {
                                            case u:
                                            case l:
                                            case f:
                                            case m:
                                            case s:
                                                return e;
                                            default:
                                                return t
                                        }
                                }
                            case r:
                                return t
                        }
                    }
                }
        },
        9864: function (e, t, n) {
            'use strict';
            e.exports = n(9921)
        },
        9852: function (e, t, n) {
            'use strict';
            n.d(t, {
                j: function () {
                    return o
                }
            });
            var r = n(4578),
                a = n(2943),
                i = n(2288),
                o = new (function (e) {
                    function t() {
                        var t;
                        return (t = e.call(this) || this).setup = function (e) {
                            var t;
                            if (!i.sk && (null == (t = window) ? void 0 : t.addEventListener)) {
                                var n = function () {
                                    return e()
                                };
                                return window.addEventListener('visibilitychange', n, !1),
                                    window.addEventListener('focus', n, !1),
                                    function () {
                                        window.removeEventListener('visibilitychange', n),
                                            window.removeEventListener('focus', n)
                                    }
                            }
                        },
                            t
                    } (0, r.Z)(t, e);
                    var n = t.prototype;
                    return n.onSubscribe = function () {
                        this.cleanup || this.setEventListener(this.setup)
                    },
                        n.onUnsubscribe = function () {
                            var e;
                            this.hasListeners() || (null == (e = this.cleanup) || e.call(this), this.cleanup = void 0)
                        },
                        n.setEventListener = function (e) {
                            var t,
                                n = this;
                            this.setup = e,
                                null == (t = this.cleanup) || t.call(this),
                                this.cleanup = e((function (e) {
                                    'boolean' == typeof e ? n.setFocused(e) : n.onFocus()
                                }))
                        },
                        n.setFocused = function (e) {
                            this.focused = e,
                                e && this.onFocus()
                        },
                        n.onFocus = function () {
                            this.listeners.forEach((function (e) {
                                e()
                            }))
                        },
                        n.isFocused = function () {
                            return 'boolean' == typeof this.focused ? this.focused : 'undefined' == typeof document || [
                                void 0,
                                'visible',
                                'prerender'
                            ].includes(document.visibilityState)
                        },
                        t
                }(a.l))
        },
        6747: function (e, t, n) {
            'use strict';
            n.d(t, {
                QueryCache: function () {
                    return r.t
                },
                QueryClient: function () {
                    return a.S
                }
            });
            var r = n(2122),
                a = n(1386),
                i = n(6755);
            n.o(i, 'QueryClientProvider') && n.d(t, {
                QueryClientProvider: function () {
                    return i.QueryClientProvider
                }
            }),
                n.o(i, 'useInfiniteQuery') && n.d(t, {
                    useInfiniteQuery: function () {
                        return i.useInfiniteQuery
                    }
                }),
                n.o(i, 'useMutation') && n.d(t, {
                    useMutation: function () {
                        return i.useMutation
                    }
                }),
                n.o(i, 'useQuery') && n.d(t, {
                    useQuery: function () {
                        return i.useQuery
                    }
                })
        },
        6997: function (e, t, n) {
            'use strict';
            n.d(t, {
                Gm: function () {
                    return i
                },
                Qy: function () {
                    return u
                },
                ZF: function () {
                    return l
                }
            });
            var r = n(1216),
                a = n(2288);
            function i() {
                return {
                    onFetch: function (e) {
                        e.fetchFn = function () {
                            var t,
                                n,
                                i,
                                u,
                                l,
                                d,
                                c,
                                m = null == (t = e.fetchOptions) || null == (n = t.meta) ? void 0 : n.refetchPage,
                                f = null == (i = e.fetchOptions) || null == (u = i.meta) ? void 0 : u.fetchMore,
                                h = null == f ? void 0 : f.pageParam,
                                p = 'forward' === (null == f ? void 0 : f.direction),
                                g = 'backward' === (null == f ? void 0 : f.direction),
                                v = (null == (l = e.state.data) ? void 0 : l.pages) || [
                                ],
                                y = (null == (d = e.state.data) ? void 0 : d.pageParams) || [
                                ],
                                w = (0, a.G9)(),
                                b = null == w ? void 0 : w.signal,
                                k = y,
                                M = !1,
                                E = e.options.queryFn || function () {
                                    return Promise.reject('Missing queryFn')
                                },
                                P = function (e, t, n, r) {
                                    return k = r ? [
                                        t
                                    ].concat(k) : [
                                    ].concat(k, [
                                        t
                                    ]),
                                        r ? [
                                            n
                                        ].concat(e) : [
                                        ].concat(e, [
                                            n
                                        ])
                                },
                                x = function (t, n, a, i) {
                                    if (M) return Promise.reject('Cancelled');
                                    if (void 0 === a && !n && t.length) return Promise.resolve(t);
                                    var o = {
                                        queryKey: e.queryKey,
                                        signal: b,
                                        pageParam: a,
                                        meta: e.meta
                                    },
                                        s = E(o),
                                        u = Promise.resolve(s).then((function (e) {
                                            return P(t, a, e, i)
                                        }));
                                    return (0, r.LE)(s) && (u.cancel = s.cancel),
                                        u
                                };
                            if (v.length) if (p) {
                                var S = void 0 !== h,
                                    T = S ? h : o(e.options, v);
                                c = x(v, S, T)
                            } else if (g) {
                                var C = void 0 !== h,
                                    W = C ? h : s(e.options, v);
                                c = x(v, C, W, !0)
                            } else !function () {
                                k = [
                                ];
                                var t = void 0 === e.options.getNextPageParam,
                                    n = !m || !v[0] || m(v[0], 0, v);
                                c = n ? x([], t, y[0]) : Promise.resolve(P([], y[0], v[0]));
                                for (var r = function (n) {
                                    c = c.then((function (r) {
                                        if (!m || !v[n] || m(v[n], n, v)) {
                                            var a = t ? y[n] : o(e.options, r);
                                            return x(r, t, a)
                                        }
                                        return Promise.resolve(P(r, y[n], v[n]))
                                    }))
                                }, a = 1; a < v.length; a++) r(a)
                            }();
                            else c = x([]);
                            var j = c.then((function (e) {
                                return {
                                    pages: e,
                                    pageParams: k
                                }
                            }));
                            return j.cancel = function () {
                                M = !0,
                                    null == w || w.abort(),
                                    (0, r.LE)(c) && c.cancel()
                            },
                                j
                        }
                    }
                }
            }
            function o(e, t) {
                return null == e.getNextPageParam ? void 0 : e.getNextPageParam(t[t.length - 1], t)
            }
            function s(e, t) {
                return null == e.getPreviousPageParam ? void 0 : e.getPreviousPageParam(t[0], t)
            }
            function u(e, t) {
                if (e.getNextPageParam && Array.isArray(t)) {
                    var n = o(e, t);
                    return null != n && !1 !== n
                }
            }
            function l(e, t) {
                if (e.getPreviousPageParam && Array.isArray(t)) {
                    var n = s(e, t);
                    return null != n && !1 !== n
                }
            }
        },
        1909: function (e, t, n) {
            'use strict';
            n.d(t, {
                E: function () {
                    return i
                },
                j: function () {
                    return a
                }
            });
            var r = console;
            function a() {
                return r
            }
            function i(e) {
                r = e
            }
        },
        1262: function (e, t, n) {
            'use strict';
            n.d(t, {
                R: function () {
                    return l
                },
                m: function () {
                    return u
                }
            });
            var r = n(7462),
                a = n(1909),
                i = n(101),
                o = n(1216),
                s = n(2288),
                u = function () {
                    function e(e) {
                        this.options = (0, r.Z)({
                        }, e.defaultOptions, e.options),
                            this.mutationId = e.mutationId,
                            this.mutationCache = e.mutationCache,
                            this.observers = [
                            ],
                            this.state = e.state || {
                                context: void 0,
                                data: void 0,
                                error: null,
                                failureCount: 0,
                                isPaused: !1,
                                status: 'idle',
                                variables: void 0
                            },
                            this.meta = e.meta
                    }
                    var t = e.prototype;
                    return t.setState = function (e) {
                        this.dispatch({
                            type: 'setState',
                            state: e
                        })
                    },
                        t.addObserver = function (e) {
                            - 1 === this.observers.indexOf(e) && this.observers.push(e)
                        },
                        t.removeObserver = function (e) {
                            this.observers = this.observers.filter((function (t) {
                                return t !== e
                            }))
                        },
                        t.cancel = function () {
                            return this.retryer ? (this.retryer.cancel(), this.retryer.promise.then(s.ZT).catch(s.ZT)) : Promise.resolve()
                        },
                        t.continue = function () {
                            return this.retryer ? (this.retryer.continue(), this.retryer.promise) : this.execute()
                        },
                        t.execute = function () {
                            var e,
                                t = this,
                                n = 'loading' === this.state.status,
                                r = Promise.resolve();
                            return n || (this.dispatch({
                                type: 'loading',
                                variables: this.options.variables
                            }), r = r.then((function () {
                                null == t.mutationCache.config.onMutate || t.mutationCache.config.onMutate(t.state.variables, t)
                            })).then((function () {
                                return null == t.options.onMutate ? void 0 : t.options.onMutate(t.state.variables)
                            })).then((function (e) {
                                e !== t.state.context && t.dispatch({
                                    type: 'loading',
                                    context: e,
                                    variables: t.state.variables
                                })
                            }))),
                                r.then((function () {
                                    return t.executeMutation()
                                })).then((function (n) {
                                    e = n,
                                        null == t.mutationCache.config.onSuccess || t.mutationCache.config.onSuccess(e, t.state.variables, t.state.context, t)
                                })).then((function () {
                                    return null == t.options.onSuccess ? void 0 : t.options.onSuccess(e, t.state.variables, t.state.context)
                                })).then((function () {
                                    return null == t.options.onSettled ? void 0 : t.options.onSettled(e, null, t.state.variables, t.state.context)
                                })).then((function () {
                                    return t.dispatch({
                                        type: 'success',
                                        data: e
                                    }),
                                        e
                                })).catch((function (e) {
                                    return null == t.mutationCache.config.onError || t.mutationCache.config.onError(e, t.state.variables, t.state.context, t),
                                        (0, a.j)().error(e),
                                        Promise.resolve().then((function () {
                                            return null == t.options.onError ? void 0 : t.options.onError(e, t.state.variables, t.state.context)
                                        })).then((function () {
                                            return null == t.options.onSettled ? void 0 : t.options.onSettled(void 0, e, t.state.variables, t.state.context)
                                        })).then((function () {
                                            throw t.dispatch({
                                                type: 'error',
                                                error: e
                                            }),
                                            e
                                        }))
                                }))
                        },
                        t.executeMutation = function () {
                            var e,
                                t = this;
                            return this.retryer = new o.m4({
                                fn: function () {
                                    return t.options.mutationFn ? t.options.mutationFn(t.state.variables) : Promise.reject('No mutationFn found')
                                },
                                onFail: function () {
                                    t.dispatch({
                                        type: 'failed'
                                    })
                                },
                                onPause: function () {
                                    t.dispatch({
                                        type: 'pause'
                                    })
                                },
                                onContinue: function () {
                                    t.dispatch({
                                        type: 'continue'
                                    })
                                },
                                retry: null != (e = this.options.retry) ? e : 0,
                                retryDelay: this.options.retryDelay
                            }),
                                this.retryer.promise
                        },
                        t.dispatch = function (e) {
                            var t = this;
                            this.state = function (e, t) {
                                switch (t.type) {
                                    case 'failed':
                                        return (0, r.Z)({
                                        }, e, {
                                            failureCount: e.failureCount + 1
                                        });
                                    case 'pause':
                                        return (0, r.Z)({
                                        }, e, {
                                            isPaused: !0
                                        });
                                    case 'continue':
                                        return (0, r.Z)({
                                        }, e, {
                                            isPaused: !1
                                        });
                                    case 'loading':
                                        return (0, r.Z)({
                                        }, e, {
                                            context: t.context,
                                            data: void 0,
                                            error: null,
                                            isPaused: !1,
                                            status: 'loading',
                                            variables: t.variables
                                        });
                                    case 'success':
                                        return (0, r.Z)({
                                        }, e, {
                                            data: t.data,
                                            error: null,
                                            status: 'success',
                                            isPaused: !1
                                        });
                                    case 'error':
                                        return (0, r.Z)({
                                        }, e, {
                                            data: void 0,
                                            error: t.error,
                                            failureCount: e.failureCount + 1,
                                            isPaused: !1,
                                            status: 'error'
                                        });
                                    case 'setState':
                                        return (0, r.Z)({
                                        }, e, t.state);
                                    default:
                                        return e
                                }
                            }(this.state, e),
                                i.V.batch((function () {
                                    t.observers.forEach((function (t) {
                                        t.onMutationUpdate(e)
                                    })),
                                        t.mutationCache.notify(t)
                                }))
                        },
                        e
                }();
            function l() {
                return {
                    context: void 0,
                    data: void 0,
                    error: null,
                    failureCount: 0,
                    isPaused: !1,
                    status: 'idle',
                    variables: void 0
                }
            }
        },
        101: function (e, t, n) {
            'use strict';
            n.d(t, {
                V: function () {
                    return i
                }
            });
            var r = n(2288),
                a = function () {
                    function e() {
                        this.queue = [
                        ],
                            this.transactions = 0,
                            this.notifyFn = function (e) {
                                e()
                            },
                            this.batchNotifyFn = function (e) {
                                e()
                            }
                    }
                    var t = e.prototype;
                    return t.batch = function (e) {
                        var t;
                        this.transactions++;
                        try {
                            t = e()
                        } finally {
                            this.transactions--,
                                this.transactions || this.flush()
                        }
                        return t
                    },
                        t.schedule = function (e) {
                            var t = this;
                            this.transactions ? this.queue.push(e) : (0, r.A4)((function () {
                                t.notifyFn(e)
                            }))
                        },
                        t.batchCalls = function (e) {
                            var t = this;
                            return function () {
                                for (var n = arguments.length, r = new Array(n), a = 0; a < n; a++) r[a] = arguments[a];
                                t.schedule((function () {
                                    e.apply(void 0, r)
                                }))
                            }
                        },
                        t.flush = function () {
                            var e = this,
                                t = this.queue;
                            this.queue = [
                            ],
                                t.length && (0, r.A4)((function () {
                                    e.batchNotifyFn((function () {
                                        t.forEach((function (t) {
                                            e.notifyFn(t)
                                        }))
                                    }))
                                }))
                        },
                        t.setNotifyFunction = function (e) {
                            this.notifyFn = e
                        },
                        t.setBatchNotifyFunction = function (e) {
                            this.batchNotifyFn = e
                        },
                        e
                }(),
                i = new a
        },
        68: function (e, t, n) {
            'use strict';
            n.d(t, {
                N: function () {
                    return o
                }
            });
            var r = n(4578),
                a = n(2943),
                i = n(2288),
                o = new (function (e) {
                    function t() {
                        var t;
                        return (t = e.call(this) || this).setup = function (e) {
                            var t;
                            if (!i.sk && (null == (t = window) ? void 0 : t.addEventListener)) {
                                var n = function () {
                                    return e()
                                };
                                return window.addEventListener('online', n, !1),
                                    window.addEventListener('offline', n, !1),
                                    function () {
                                        window.removeEventListener('online', n),
                                            window.removeEventListener('offline', n)
                                    }
                            }
                        },
                            t
                    } (0, r.Z)(t, e);
                    var n = t.prototype;
                    return n.onSubscribe = function () {
                        this.cleanup || this.setEventListener(this.setup)
                    },
                        n.onUnsubscribe = function () {
                            var e;
                            this.hasListeners() || (null == (e = this.cleanup) || e.call(this), this.cleanup = void 0)
                        },
                        n.setEventListener = function (e) {
                            var t,
                                n = this;
                            this.setup = e,
                                null == (t = this.cleanup) || t.call(this),
                                this.cleanup = e((function (e) {
                                    'boolean' == typeof e ? n.setOnline(e) : n.onOnline()
                                }))
                        },
                        n.setOnline = function (e) {
                            this.online = e,
                                e && this.onOnline()
                        },
                        n.onOnline = function () {
                            this.listeners.forEach((function (e) {
                                e()
                            }))
                        },
                        n.isOnline = function () {
                            return 'boolean' == typeof this.online ? this.online : 'undefined' == typeof navigator || void 0 === navigator.onLine || navigator.onLine
                        },
                        t
                }(a.l))
        },
        2122: function (e, t, n) {
            'use strict';
            n.d(t, {
                t: function () {
                    return d
                }
            });
            var r = n(4578),
                a = n(2288),
                i = n(7462),
                o = n(101),
                s = n(1909),
                u = n(1216),
                l = function () {
                    function e(e) {
                        this.abortSignalConsumed = !1,
                            this.hadObservers = !1,
                            this.defaultOptions = e.defaultOptions,
                            this.setOptions(e.options),
                            this.observers = [
                            ],
                            this.cache = e.cache,
                            this.queryKey = e.queryKey,
                            this.queryHash = e.queryHash,
                            this.initialState = e.state || this.getDefaultState(this.options),
                            this.state = this.initialState,
                            this.meta = e.meta,
                            this.scheduleGc()
                    }
                    var t = e.prototype;
                    return t.setOptions = function (e) {
                        var t;
                        this.options = (0, i.Z)({
                        }, this.defaultOptions, e),
                            this.meta = null == e ? void 0 : e.meta,
                            this.cacheTime = Math.max(this.cacheTime || 0, null != (t = this.options.cacheTime) ? t : 300000)
                    },
                        t.setDefaultOptions = function (e) {
                            this.defaultOptions = e
                        },
                        t.scheduleGc = function () {
                            var e = this;
                            this.clearGcTimeout(),
                                (0, a.PN)(this.cacheTime) && (this.gcTimeout = setTimeout((function () {
                                    e.optionalRemove()
                                }), this.cacheTime))
                        },
                        t.clearGcTimeout = function () {
                            clearTimeout(this.gcTimeout),
                                this.gcTimeout = void 0
                        },
                        t.optionalRemove = function () {
                            this.observers.length || (this.state.isFetching ? this.hadObservers && this.scheduleGc() : this.cache.remove(this))
                        },
                        t.setData = function (e, t) {
                            var n,
                                r,
                                i = this.state.data,
                                o = (0, a.SE)(e, i);
                            return (null == (n = (r = this.options).isDataEqual) ? void 0 : n.call(r, i, o)) ? o = i : !1 !== this.options.structuralSharing && (o = (0, a.Q$)(i, o)),
                                this.dispatch({
                                    data: o,
                                    type: 'success',
                                    dataUpdatedAt: null == t ? void 0 : t.updatedAt
                                }),
                                o
                        },
                        t.setState = function (e, t) {
                            this.dispatch({
                                type: 'setState',
                                state: e,
                                setStateOptions: t
                            })
                        },
                        t.cancel = function (e) {
                            var t,
                                n = this.promise;
                            return null == (t = this.retryer) || t.cancel(e),
                                n ? n.then(a.ZT).catch(a.ZT) : Promise.resolve()
                        },
                        t.destroy = function () {
                            this.clearGcTimeout(),
                                this.cancel({
                                    silent: !0
                                })
                        },
                        t.reset = function () {
                            this.destroy(),
                                this.setState(this.initialState)
                        },
                        t.isActive = function () {
                            return this.observers.some((function (e) {
                                return !1 !== e.options.enabled
                            }))
                        },
                        t.isFetching = function () {
                            return this.state.isFetching
                        },
                        t.isStale = function () {
                            return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some((function (e) {
                                return e.getCurrentResult().isStale
                            }))
                        },
                        t.isStaleByTime = function (e) {
                            return void 0 === e && (e = 0),
                                this.state.isInvalidated || !this.state.dataUpdatedAt || !(0, a.Kp)(this.state.dataUpdatedAt, e)
                        },
                        t.onFocus = function () {
                            var e,
                                t = this.observers.find((function (e) {
                                    return e.shouldFetchOnWindowFocus()
                                }));
                            t && t.refetch(),
                                null == (e = this.retryer) || e.continue()
                        },
                        t.onOnline = function () {
                            var e,
                                t = this.observers.find((function (e) {
                                    return e.shouldFetchOnReconnect()
                                }));
                            t && t.refetch(),
                                null == (e = this.retryer) || e.continue()
                        },
                        t.addObserver = function (e) {
                            - 1 === this.observers.indexOf(e) && (this.observers.push(e), this.hadObservers = !0, this.clearGcTimeout(), this.cache.notify({
                                type: 'observerAdded',
                                query: this,
                                observer: e
                            }))
                        },
                        t.removeObserver = function (e) {
                            - 1 !== this.observers.indexOf(e) && (this.observers = this.observers.filter((function (t) {
                                return t !== e
                            })), this.observers.length || (this.retryer && (this.retryer.isTransportCancelable || this.abortSignalConsumed ? this.retryer.cancel({
                                revert: !0
                            }) : this.retryer.cancelRetry()), this.cacheTime ? this.scheduleGc() : this.cache.remove(this)), this.cache.notify({
                                type: 'observerRemoved',
                                query: this,
                                observer: e
                            }))
                        },
                        t.getObserversCount = function () {
                            return this.observers.length
                        },
                        t.invalidate = function () {
                            this.state.isInvalidated || this.dispatch({
                                type: 'invalidate'
                            })
                        },
                        t.fetch = function (e, t) {
                            var n,
                                r,
                                i,
                                o = this;
                            if (this.state.isFetching) if (this.state.dataUpdatedAt && (null == t ? void 0 : t.cancelRefetch)) this.cancel({
                                silent: !0
                            });
                            else if (this.promise) {
                                var l;
                                return null == (l = this.retryer) || l.continueRetry(),
                                    this.promise
                            }
                            if (e && this.setOptions(e), !this.options.queryFn) {
                                var d = this.observers.find((function (e) {
                                    return e.options.queryFn
                                }));
                                d && this.setOptions(d.options)
                            }
                            var c = (0, a.mc)(this.queryKey),
                                m = (0, a.G9)(),
                                f = {
                                    queryKey: c,
                                    pageParam: void 0,
                                    meta: this.meta
                                };
                            Object.defineProperty(f, 'signal', {
                                enumerable: !0,
                                get: function () {
                                    if (m) return o.abortSignalConsumed = !0,
                                        m.signal
                                }
                            });
                            var h,
                                p,
                                g = {
                                    fetchOptions: t,
                                    options: this.options,
                                    queryKey: c,
                                    state: this.state,
                                    fetchFn: function () {
                                        return o.options.queryFn ? (o.abortSignalConsumed = !1, o.options.queryFn(f)) : Promise.reject('Missing queryFn')
                                    },
                                    meta: this.meta
                                };
                            return (null == (n = this.options.behavior) ? void 0 : n.onFetch) && (null == (h = this.options.behavior) || h.onFetch(g)),
                                this.revertState = this.state,
                                this.state.isFetching && this.state.fetchMeta === (null == (r = g.fetchOptions) ? void 0 : r.meta) || this.dispatch({
                                    type: 'fetch',
                                    meta: null == (p = g.fetchOptions) ? void 0 : p.meta
                                }),
                                this.retryer = new u.m4({
                                    fn: g.fetchFn,
                                    abort: null == m || null == (i = m.abort) ? void 0 : i.bind(m),
                                    onSuccess: function (e) {
                                        o.setData(e),
                                            null == o.cache.config.onSuccess || o.cache.config.onSuccess(e, o),
                                            0 === o.cacheTime && o.optionalRemove()
                                    },
                                    onError: function (e) {
                                        (0, u.DV)(e) && e.silent || o.dispatch({
                                            type: 'error',
                                            error: e
                                        }),
                                            (0, u.DV)(e) || (null == o.cache.config.onError || o.cache.config.onError(e, o), (0, s.j)().error(e)),
                                            0 === o.cacheTime && o.optionalRemove()
                                    },
                                    onFail: function () {
                                        o.dispatch({
                                            type: 'failed'
                                        })
                                    },
                                    onPause: function () {
                                        o.dispatch({
                                            type: 'pause'
                                        })
                                    },
                                    onContinue: function () {
                                        o.dispatch({
                                            type: 'continue'
                                        })
                                    },
                                    retry: g.options.retry,
                                    retryDelay: g.options.retryDelay
                                }),
                                this.promise = this.retryer.promise,
                                this.promise
                        },
                        t.dispatch = function (e) {
                            var t = this;
                            this.state = this.reducer(this.state, e),
                                o.V.batch((function () {
                                    t.observers.forEach((function (t) {
                                        t.onQueryUpdate(e)
                                    })),
                                        t.cache.notify({
                                            query: t,
                                            type: 'queryUpdated',
                                            action: e
                                        })
                                }))
                        },
                        t.getDefaultState = function (e) {
                            var t = 'function' == typeof e.initialData ? e.initialData() : e.initialData,
                                n = void 0 !== e.initialData ? 'function' == typeof e.initialDataUpdatedAt ? e.initialDataUpdatedAt() : e.initialDataUpdatedAt : 0,
                                r = void 0 !== t;
                            return {
                                data: t,
                                dataUpdateCount: 0,
                                dataUpdatedAt: r ? null != n ? n : Date.now() : 0,
                                error: null,
                                errorUpdateCount: 0,
                                errorUpdatedAt: 0,
                                fetchFailureCount: 0,
                                fetchMeta: null,
                                isFetching: !1,
                                isInvalidated: !1,
                                isPaused: !1,
                                status: r ? 'success' : 'idle'
                            }
                        },
                        t.reducer = function (e, t) {
                            var n,
                                r;
                            switch (t.type) {
                                case 'failed':
                                    return (0, i.Z)({
                                    }, e, {
                                        fetchFailureCount: e.fetchFailureCount + 1
                                    });
                                case 'pause':
                                    return (0, i.Z)({
                                    }, e, {
                                        isPaused: !0
                                    });
                                case 'continue':
                                    return (0, i.Z)({
                                    }, e, {
                                        isPaused: !1
                                    });
                                case 'fetch':
                                    return (0, i.Z)({
                                    }, e, {
                                        fetchFailureCount: 0,
                                        fetchMeta: null != (n = t.meta) ? n : null,
                                        isFetching: !0,
                                        isPaused: !1
                                    }, !e.dataUpdatedAt && {
                                        error: null,
                                        status: 'loading'
                                    });
                                case 'success':
                                    return (0, i.Z)({
                                    }, e, {
                                        data: t.data,
                                        dataUpdateCount: e.dataUpdateCount + 1,
                                        dataUpdatedAt: null != (r = t.dataUpdatedAt) ? r : Date.now(),
                                        error: null,
                                        fetchFailureCount: 0,
                                        isFetching: !1,
                                        isInvalidated: !1,
                                        isPaused: !1,
                                        status: 'success'
                                    });
                                case 'error':
                                    var a = t.error;
                                    return (0, u.DV)(a) && a.revert && this.revertState ? (0, i.Z)({
                                    }, this.revertState) : (0, i.Z)({
                                    }, e, {
                                        error: a,
                                        errorUpdateCount: e.errorUpdateCount + 1,
                                        errorUpdatedAt: Date.now(),
                                        fetchFailureCount: e.fetchFailureCount + 1,
                                        isFetching: !1,
                                        isPaused: !1,
                                        status: 'error'
                                    });
                                case 'invalidate':
                                    return (0, i.Z)({
                                    }, e, {
                                        isInvalidated: !0
                                    });
                                case 'setState':
                                    return (0, i.Z)({
                                    }, e, t.state);
                                default:
                                    return e
                            }
                        },
                        e
                }(),
                d = function (e) {
                    function t(t) {
                        var n;
                        return (n = e.call(this) || this).config = t || {
                        },
                            n.queries = [
                            ],
                            n.queriesMap = {
                            },
                            n
                    } (0, r.Z)(t, e);
                    var n = t.prototype;
                    return n.build = function (e, t, n) {
                        var r,
                            i = t.queryKey,
                            o = null != (r = t.queryHash) ? r : (0, a.Rm)(i, t),
                            s = this.get(o);
                        return s || (s = new l({
                            cache: this,
                            queryKey: i,
                            queryHash: o,
                            options: e.defaultQueryOptions(t),
                            state: n,
                            defaultOptions: e.getQueryDefaults(i),
                            meta: t.meta
                        }), this.add(s)),
                            s
                    },
                        n.add = function (e) {
                            this.queriesMap[e.queryHash] || (this.queriesMap[e.queryHash] = e, this.queries.push(e), this.notify({
                                type: 'queryAdded',
                                query: e
                            }))
                        },
                        n.remove = function (e) {
                            var t = this.queriesMap[e.queryHash];
                            t && (e.destroy(), this.queries = this.queries.filter((function (t) {
                                return t !== e
                            })), t === e && delete this.queriesMap[e.queryHash], this.notify({
                                type: 'queryRemoved',
                                query: e
                            }))
                        },
                        n.clear = function () {
                            var e = this;
                            o.V.batch((function () {
                                e.queries.forEach((function (t) {
                                    e.remove(t)
                                }))
                            }))
                        },
                        n.get = function (e) {
                            return this.queriesMap[e]
                        },
                        n.getAll = function () {
                            return this.queries
                        },
                        n.find = function (e, t) {
                            var n = (0, a.I6)(e, t)[0];
                            return void 0 === n.exact && (n.exact = !0),
                                this.queries.find((function (e) {
                                    return (0, a._x)(n, e)
                                }))
                        },
                        n.findAll = function (e, t) {
                            var n = (0, a.I6)(e, t)[0];
                            return Object.keys(n).length > 0 ? this.queries.filter((function (e) {
                                return (0, a._x)(n, e)
                            })) : this.queries
                        },
                        n.notify = function (e) {
                            var t = this;
                            o.V.batch((function () {
                                t.listeners.forEach((function (t) {
                                    t(e)
                                }))
                            }))
                        },
                        n.onFocus = function () {
                            var e = this;
                            o.V.batch((function () {
                                e.queries.forEach((function (e) {
                                    e.onFocus()
                                }))
                            }))
                        },
                        n.onOnline = function () {
                            var e = this;
                            o.V.batch((function () {
                                e.queries.forEach((function (e) {
                                    e.onOnline()
                                }))
                            }))
                        },
                        t
                }(n(2943).l)
        },
        1386: function (e, t, n) {
            'use strict';
            n.d(t, {
                S: function () {
                    return f
                }
            });
            var r = n(7462),
                a = n(2288),
                i = n(2122),
                o = n(4578),
                s = n(101),
                u = n(1262),
                l = function (e) {
                    function t(t) {
                        var n;
                        return (n = e.call(this) || this).config = t || {
                        },
                            n.mutations = [
                            ],
                            n.mutationId = 0,
                            n
                    } (0, o.Z)(t, e);
                    var n = t.prototype;
                    return n.build = function (e, t, n) {
                        var r = new u.m({
                            mutationCache: this,
                            mutationId: ++this.mutationId,
                            options: e.defaultMutationOptions(t),
                            state: n,
                            defaultOptions: t.mutationKey ? e.getMutationDefaults(t.mutationKey) : void 0,
                            meta: t.meta
                        });
                        return this.add(r),
                            r
                    },
                        n.add = function (e) {
                            this.mutations.push(e),
                                this.notify(e)
                        },
                        n.remove = function (e) {
                            this.mutations = this.mutations.filter((function (t) {
                                return t !== e
                            })),
                                e.cancel(),
                                this.notify(e)
                        },
                        n.clear = function () {
                            var e = this;
                            s.V.batch((function () {
                                e.mutations.forEach((function (t) {
                                    e.remove(t)
                                }))
                            }))
                        },
                        n.getAll = function () {
                            return this.mutations
                        },
                        n.find = function (e) {
                            return void 0 === e.exact && (e.exact = !0),
                                this.mutations.find((function (t) {
                                    return (0, a.X7)(e, t)
                                }))
                        },
                        n.findAll = function (e) {
                            return this.mutations.filter((function (t) {
                                return (0, a.X7)(e, t)
                            }))
                        },
                        n.notify = function (e) {
                            var t = this;
                            s.V.batch((function () {
                                t.listeners.forEach((function (t) {
                                    t(e)
                                }))
                            }))
                        },
                        n.onFocus = function () {
                            this.resumePausedMutations()
                        },
                        n.onOnline = function () {
                            this.resumePausedMutations()
                        },
                        n.resumePausedMutations = function () {
                            var e = this.mutations.filter((function (e) {
                                return e.state.isPaused
                            }));
                            return s.V.batch((function () {
                                return e.reduce((function (e, t) {
                                    return e.then((function () {
                                        return t.continue().catch(a.ZT)
                                    }))
                                }), Promise.resolve())
                            }))
                        },
                        t
                }(n(2943).l),
                d = n(9852),
                c = n(68),
                m = n(6997),
                f = function () {
                    function e(e) {
                        void 0 === e && (e = {
                        }),
                            this.queryCache = e.queryCache || new i.t,
                            this.mutationCache = e.mutationCache || new l,
                            this.defaultOptions = e.defaultOptions || {
                            },
                            this.queryDefaults = [
                            ],
                            this.mutationDefaults = [
                            ]
                    }
                    var t = e.prototype;
                    return t.mount = function () {
                        var e = this;
                        this.unsubscribeFocus = d.j.subscribe((function () {
                            d.j.isFocused() && c.N.isOnline() && (e.mutationCache.onFocus(), e.queryCache.onFocus())
                        })),
                            this.unsubscribeOnline = c.N.subscribe((function () {
                                d.j.isFocused() && c.N.isOnline() && (e.mutationCache.onOnline(), e.queryCache.onOnline())
                            }))
                    },
                        t.unmount = function () {
                            var e,
                                t;
                            null == (e = this.unsubscribeFocus) || e.call(this),
                                null == (t = this.unsubscribeOnline) || t.call(this)
                        },
                        t.isFetching = function (e, t) {
                            var n = (0, a.I6)(e, t)[0];
                            return n.fetching = !0,
                                this.queryCache.findAll(n).length
                        },
                        t.isMutating = function (e) {
                            return this.mutationCache.findAll((0, r.Z)({
                            }, e, {
                                fetching: !0
                            })).length
                        },
                        t.getQueryData = function (e, t) {
                            var n;
                            return null == (n = this.queryCache.find(e, t)) ? void 0 : n.state.data
                        },
                        t.getQueriesData = function (e) {
                            return this.getQueryCache().findAll(e).map((function (e) {
                                return [e.queryKey,
                                e.state.data]
                            }))
                        },
                        t.setQueryData = function (e, t, n) {
                            var r = (0, a._v)(e),
                                i = this.defaultQueryOptions(r);
                            return this.queryCache.build(this, i).setData(t, n)
                        },
                        t.setQueriesData = function (e, t, n) {
                            var r = this;
                            return s.V.batch((function () {
                                return r.getQueryCache().findAll(e).map((function (e) {
                                    var a = e.queryKey;
                                    return [a,
                                        r.setQueryData(a, t, n)]
                                }))
                            }))
                        },
                        t.getQueryState = function (e, t) {
                            var n;
                            return null == (n = this.queryCache.find(e, t)) ? void 0 : n.state
                        },
                        t.removeQueries = function (e, t) {
                            var n = (0, a.I6)(e, t)[0],
                                r = this.queryCache;
                            s.V.batch((function () {
                                r.findAll(n).forEach((function (e) {
                                    r.remove(e)
                                }))
                            }))
                        },
                        t.resetQueries = function (e, t, n) {
                            var i = this,
                                o = (0, a.I6)(e, t, n),
                                u = o[0],
                                l = o[1],
                                d = this.queryCache,
                                c = (0, r.Z)({
                                }, u, {
                                    active: !0
                                });
                            return s.V.batch((function () {
                                return d.findAll(u).forEach((function (e) {
                                    e.reset()
                                })),
                                    i.refetchQueries(c, l)
                            }))
                        },
                        t.cancelQueries = function (e, t, n) {
                            var r = this,
                                i = (0, a.I6)(e, t, n),
                                o = i[0],
                                u = i[1],
                                l = void 0 === u ? {
                                }
                                    : u;
                            void 0 === l.revert && (l.revert = !0);
                            var d = s.V.batch((function () {
                                return r.queryCache.findAll(o).map((function (e) {
                                    return e.cancel(l)
                                }))
                            }));
                            return Promise.all(d).then(a.ZT).catch(a.ZT)
                        },
                        t.invalidateQueries = function (e, t, n) {
                            var i,
                                o,
                                u,
                                l = this,
                                d = (0, a.I6)(e, t, n),
                                c = d[0],
                                m = d[1],
                                f = (0, r.Z)({
                                }, c, {
                                    active: null == (i = null != (o = c.refetchActive) ? o : c.active) || i,
                                    inactive: null != (u = c.refetchInactive) && u
                                });
                            return s.V.batch((function () {
                                return l.queryCache.findAll(c).forEach((function (e) {
                                    e.invalidate()
                                })),
                                    l.refetchQueries(f, m)
                            }))
                        },
                        t.refetchQueries = function (e, t, n) {
                            var i = this,
                                o = (0, a.I6)(e, t, n),
                                u = o[0],
                                l = o[1],
                                d = s.V.batch((function () {
                                    return i.queryCache.findAll(u).map((function (e) {
                                        return e.fetch(void 0, (0, r.Z)({
                                        }, l, {
                                            meta: {
                                                refetchPage: null == u ? void 0 : u.refetchPage
                                            }
                                        }))
                                    }))
                                })),
                                c = Promise.all(d).then(a.ZT);
                            return (null == l ? void 0 : l.throwOnError) || (c = c.catch(a.ZT)),
                                c
                        },
                        t.fetchQuery = function (e, t, n) {
                            var r = (0, a._v)(e, t, n),
                                i = this.defaultQueryOptions(r);
                            void 0 === i.retry && (i.retry = !1);
                            var o = this.queryCache.build(this, i);
                            return o.isStaleByTime(i.staleTime) ? o.fetch(i) : Promise.resolve(o.state.data)
                        },
                        t.prefetchQuery = function (e, t, n) {
                            return this.fetchQuery(e, t, n).then(a.ZT).catch(a.ZT)
                        },
                        t.fetchInfiniteQuery = function (e, t, n) {
                            var r = (0, a._v)(e, t, n);
                            return r.behavior = (0, m.Gm)(),
                                this.fetchQuery(r)
                        },
                        t.prefetchInfiniteQuery = function (e, t, n) {
                            return this.fetchInfiniteQuery(e, t, n).then(a.ZT).catch(a.ZT)
                        },
                        t.cancelMutations = function () {
                            var e = this,
                                t = s.V.batch((function () {
                                    return e.mutationCache.getAll().map((function (e) {
                                        return e.cancel()
                                    }))
                                }));
                            return Promise.all(t).then(a.ZT).catch(a.ZT)
                        },
                        t.resumePausedMutations = function () {
                            return this.getMutationCache().resumePausedMutations()
                        },
                        t.executeMutation = function (e) {
                            return this.mutationCache.build(this, e).execute()
                        },
                        t.getQueryCache = function () {
                            return this.queryCache
                        },
                        t.getMutationCache = function () {
                            return this.mutationCache
                        },
                        t.getDefaultOptions = function () {
                            return this.defaultOptions
                        },
                        t.setDefaultOptions = function (e) {
                            this.defaultOptions = e
                        },
                        t.setQueryDefaults = function (e, t) {
                            var n = this.queryDefaults.find((function (t) {
                                return (0, a.yF)(e) === (0, a.yF)(t.queryKey)
                            }));
                            n ? n.defaultOptions = t : this.queryDefaults.push({
                                queryKey: e,
                                defaultOptions: t
                            })
                        },
                        t.getQueryDefaults = function (e) {
                            var t;
                            return e ? null == (t = this.queryDefaults.find((function (t) {
                                return (0, a.to)(e, t.queryKey)
                            }))) ? void 0 : t.defaultOptions : void 0
                        },
                        t.setMutationDefaults = function (e, t) {
                            var n = this.mutationDefaults.find((function (t) {
                                return (0, a.yF)(e) === (0, a.yF)(t.mutationKey)
                            }));
                            n ? n.defaultOptions = t : this.mutationDefaults.push({
                                mutationKey: e,
                                defaultOptions: t
                            })
                        },
                        t.getMutationDefaults = function (e) {
                            var t;
                            return e ? null == (t = this.mutationDefaults.find((function (t) {
                                return (0, a.to)(e, t.mutationKey)
                            }))) ? void 0 : t.defaultOptions : void 0
                        },
                        t.defaultQueryOptions = function (e) {
                            if (null == e ? void 0 : e._defaulted) return e;
                            var t = (0, r.Z)({
                            }, this.defaultOptions.queries, this.getQueryDefaults(null == e ? void 0 : e.queryKey), e, {
                                _defaulted: !0
                            });
                            return !t.queryHash && t.queryKey && (t.queryHash = (0, a.Rm)(t.queryKey, t)),
                                t
                        },
                        t.defaultQueryObserverOptions = function (e) {
                            return this.defaultQueryOptions(e)
                        },
                        t.defaultMutationOptions = function (e) {
                            return (null == e ? void 0 : e._defaulted) ? e : (0, r.Z)({
                            }, this.defaultOptions.mutations, this.getMutationDefaults(null == e ? void 0 : e.mutationKey), e, {
                                _defaulted: !0
                            })
                        },
                        t.clear = function () {
                            this.queryCache.clear(),
                                this.mutationCache.clear()
                        },
                        e
                }()
        },
        1216: function (e, t, n) {
            'use strict';
            n.d(t, {
                DV: function () {
                    return l
                },
                LE: function () {
                    return s
                },
                m4: function () {
                    return d
                }
            });
            var r = n(9852),
                a = n(68),
                i = n(2288);
            function o(e) {
                return Math.min(1000 * Math.pow(2, e), 30000)
            }
            function s(e) {
                return 'function' == typeof (null == e ? void 0 : e.cancel)
            }
            var u = function (e) {
                this.revert = null == e ? void 0 : e.revert,
                    this.silent = null == e ? void 0 : e.silent
            };
            function l(e) {
                return e instanceof u
            }
            var d = function (e) {
                var t,
                    n,
                    l,
                    d,
                    c = this,
                    m = !1;
                this.abort = e.abort,
                    this.cancel = function (e) {
                        return null == t ? void 0 : t(e)
                    },
                    this.cancelRetry = function () {
                        m = !0
                    },
                    this.continueRetry = function () {
                        m = !1
                    },
                    this.continue = function () {
                        return null == n ? void 0 : n()
                    },
                    this.failureCount = 0,
                    this.isPaused = !1,
                    this.isResolved = !1,
                    this.isTransportCancelable = !1,
                    this.promise = new Promise((function (e, t) {
                        l = e,
                            d = t
                    }));
                var f = function (t) {
                    c.isResolved || (c.isResolved = !0, null == e.onSuccess || e.onSuccess(t), null == n || n(), l(t))
                },
                    h = function (t) {
                        c.isResolved || (c.isResolved = !0, null == e.onError || e.onError(t), null == n || n(), d(t))
                    };
                !function l() {
                    if (!c.isResolved) {
                        var d;
                        try {
                            d = e.fn()
                        } catch (e) {
                            d = Promise.reject(e)
                        }
                        t = function (e) {
                            if (!c.isResolved && (h(new u(e)), null == c.abort || c.abort(), s(d))) try {
                                d.cancel()
                            } catch (e) {
                            }
                        },
                            c.isTransportCancelable = s(d),
                            Promise.resolve(d).then(f).catch((function (t) {
                                var s,
                                    u;
                                if (!c.isResolved) {
                                    var d = null != (s = e.retry) ? s : 3,
                                        f = null != (u = e.retryDelay) ? u : o,
                                        p = 'function' == typeof f ? f(c.failureCount, t) : f,
                                        g = !0 === d || 'number' == typeof d && c.failureCount < d || 'function' == typeof d && d(c.failureCount, t);
                                    !m && g ? (c.failureCount++, null == e.onFail || e.onFail(c.failureCount, t), (0, i.Gh)(p).then((function () {
                                        if (!r.j.isFocused() || !a.N.isOnline()) return new Promise((function (t) {
                                            n = t,
                                                c.isPaused = !0,
                                                null == e.onPause || e.onPause()
                                        })).then((function () {
                                            n = void 0,
                                                c.isPaused = !1,
                                                null == e.onContinue || e.onContinue()
                                        }))
                                    })).then((function () {
                                        m ? h(t) : l()
                                    }))) : h(t)
                                }
                            }))
                    }
                }()
            }
        },
        2943: function (e, t, n) {
            'use strict';
            n.d(t, {
                l: function () {
                    return r
                }
            });
            var r = function () {
                function e() {
                    this.listeners = [
                    ]
                }
                var t = e.prototype;
                return t.subscribe = function (e) {
                    var t = this,
                        n = e || function () {
                        };
                    return this.listeners.push(n),
                        this.onSubscribe(),
                        function () {
                            t.listeners = t.listeners.filter((function (e) {
                                return e !== n
                            })),
                                t.onUnsubscribe()
                        }
                },
                    t.hasListeners = function () {
                        return this.listeners.length > 0
                    },
                    t.onSubscribe = function () {
                    },
                    t.onUnsubscribe = function () {
                    },
                    e
            }()
        },
        6755: function () {
        },
        2288: function (e, t, n) {
            'use strict';
            n.d(t, {
                A4: function () {
                    return x
                },
                G9: function () {
                    return S
                },
                Gh: function () {
                    return P
                },
                I6: function () {
                    return m
                },
                Kp: function () {
                    return l
                },
                PN: function () {
                    return s
                },
                Q$: function () {
                    return w
                },
                Rm: function () {
                    return p
                },
                SE: function () {
                    return o
                },
                VS: function () {
                    return b
                },
                X7: function () {
                    return h
                },
                ZT: function () {
                    return i
                },
                _v: function () {
                    return d
                },
                _x: function () {
                    return f
                },
                lV: function () {
                    return c
                },
                mc: function () {
                    return u
                },
                sk: function () {
                    return a
                },
                to: function () {
                    return v
                },
                yF: function () {
                    return g
                }
            });
            var r = n(7462),
                a = 'undefined' == typeof window;
            function i() {
            }
            function o(e, t) {
                return 'function' == typeof e ? e(t) : e
            }
            function s(e) {
                return 'number' == typeof e && e >= 0 && e !== 1 / 0
            }
            function u(e) {
                return Array.isArray(e) ? e : [
                    e
                ]
            }
            function l(e, t) {
                return Math.max(e + (t || 0) - Date.now(), 0)
            }
            function d(e, t, n) {
                return E(e) ? 'function' == typeof t ? (0, r.Z)({
                }, n, {
                    queryKey: e,
                    queryFn: t
                }) : (0, r.Z)({
                }, t, {
                    queryKey: e
                }) : e
            }
            function c(e, t, n) {
                return E(e) ? 'function' == typeof t ? (0, r.Z)({
                }, n, {
                    mutationKey: e,
                    mutationFn: t
                }) : (0, r.Z)({
                }, t, {
                    mutationKey: e
                }) : 'function' == typeof e ? (0, r.Z)({
                }, t, {
                    mutationFn: e
                }) : (0, r.Z)({
                }, e)
            }
            function m(e, t, n) {
                return E(e) ? [
                    (0, r.Z)({
                    }, t, {
                        queryKey: e
                    }),
                    n
                ] : [
                    e || {
                    },
                    t
                ]
            }
            function f(e, t) {
                var n = e.active,
                    r = e.exact,
                    a = e.fetching,
                    i = e.inactive,
                    o = e.predicate,
                    s = e.queryKey,
                    u = e.stale;
                if (E(s)) if (r) {
                    if (t.queryHash !== p(s, t.options)) return !1
                } else if (!v(t.queryKey, s)) return !1;
                var l = function (e, t) {
                    return !0 === e && !0 === t || null == e && null == t ? 'all' : !1 === e && !1 === t ? 'none' : (null != e ? e : !t) ? 'active' : 'inactive'
                }(n, i);
                if ('none' === l) return !1;
                if ('all' !== l) {
                    var d = t.isActive();
                    if ('active' === l && !d) return !1;
                    if ('inactive' === l && d) return !1
                }
                return !('boolean' == typeof u && t.isStale() !== u || 'boolean' == typeof a && t.isFetching() !== a || o && !o(t))
            }
            function h(e, t) {
                var n = e.exact,
                    r = e.fetching,
                    a = e.predicate,
                    i = e.mutationKey;
                if (E(i)) {
                    if (!t.options.mutationKey) return !1;
                    if (n) {
                        if (g(t.options.mutationKey) !== g(i)) return !1
                    } else if (!v(t.options.mutationKey, i)) return !1
                }
                return !('boolean' == typeof r && 'loading' === t.state.status !== r || a && !a(t))
            }
            function p(e, t) {
                return ((null == t ? void 0 : t.queryKeyHashFn) || g)(e)
            }
            function g(e) {
                var t;
                return t = u(e),
                    JSON.stringify(t, (function (e, t) {
                        return k(t) ? Object.keys(t).sort().reduce((function (e, n) {
                            return e[n] = t[n],
                                e
                        }), {
                        }) : t
                    }))
            }
            function v(e, t) {
                return y(u(e), u(t))
            }
            function y(e, t) {
                return e === t || typeof e == typeof t && !(!e || !t || 'object' != typeof e || 'object' != typeof t) && !Object.keys(t).some((function (n) {
                    return !y(e[n], t[n])
                }))
            }
            function w(e, t) {
                if (e === t) return e;
                var n = Array.isArray(e) && Array.isArray(t);
                if (n || k(e) && k(t)) {
                    for (var r = n ? e.length : Object.keys(e).length, a = n ? t : Object.keys(t), i = a.length, o = n ? [
                    ] : {
                    }, s = 0, u = 0; u < i; u++) {
                        var l = n ? u : a[u];
                        o[l] = w(e[l], t[l]),
                            o[l] === e[l] && s++
                    }
                    return r === i && s === r ? e : o
                }
                return t
            }
            function b(e, t) {
                if (e && !t || t && !e) return !1;
                for (var n in e) if (e[n] !== t[n]) return !1;
                return !0
            }
            function k(e) {
                if (!M(e)) return !1;
                var t = e.constructor;
                if (void 0 === t) return !0;
                var n = t.prototype;
                return !!M(n) && !!n.hasOwnProperty('isPrototypeOf')
            }
            function M(e) {
                return '[object Object]' === Object.prototype.toString.call(e)
            }
            function E(e) {
                return 'string' == typeof e || Array.isArray(e)
            }
            function P(e) {
                return new Promise((function (t) {
                    setTimeout(t, e)
                }))
            }
            function x(e) {
                Promise.resolve().then(e).catch((function (e) {
                    return setTimeout((function () {
                        throw e
                    }))
                }))
            }
            function S() {
                if ('function' == typeof AbortController) return new AbortController
            }
        },
        8767: function (e, t, n) {
            'use strict';
            n.d(t, {
                QueryCache: function () {
                    return r.QueryCache
                },
                QueryClient: function () {
                    return r.QueryClient
                },
                QueryClientProvider: function () {
                    return a.QueryClientProvider
                },
                useInfiniteQuery: function () {
                    return a.useInfiniteQuery
                },
                useMutation: function () {
                    return a.useMutation
                },
                useQuery: function () {
                    return a.useQuery
                }
            });
            var r = n(6747);
            n.o(r, 'QueryClientProvider') && n.d(t, {
                QueryClientProvider: function () {
                    return r.QueryClientProvider
                }
            }),
                n.o(r, 'useInfiniteQuery') && n.d(t, {
                    useInfiniteQuery: function () {
                        return r.useInfiniteQuery
                    }
                }),
                n.o(r, 'useMutation') && n.d(t, {
                    useMutation: function () {
                        return r.useMutation
                    }
                }),
                n.o(r, 'useQuery') && n.d(t, {
                    useQuery: function () {
                        return r.useQuery
                    }
                });
            var a = n(6881)
        },
        6881: function (e, t, n) {
            'use strict';
            n.d(t, {
                QueryClientProvider: function () {
                    return m
                },
                useInfiniteQuery: function () {
                    return I
                },
                useMutation: function () {
                    return b
                },
                useQuery: function () {
                    return j
                }
            });
            var r = n(101),
                a = n(3935).unstable_batchedUpdates;
            r.V.setBatchNotifyFunction(a);
            var i = n(1909),
                o = console;
            (0, i.E)(o);
            var s = n(7294),
                u = s.createContext(void 0),
                l = s.createContext(!1);
            function d(e) {
                return e && 'undefined' != typeof window ? (window.ReactQueryClientContext || (window.ReactQueryClientContext = u), window.ReactQueryClientContext) : u
            }
            var c = function () {
                var e = s.useContext(d(s.useContext(l)));
                if (!e) throw new Error('No QueryClient set, use QueryClientProvider to set one');
                return e
            },
                m = function (e) {
                    var t = e.client,
                        n = e.contextSharing,
                        r = void 0 !== n && n,
                        a = e.children;
                    s.useEffect((function () {
                        return t.mount(),
                            function () {
                                t.unmount()
                            }
                    }), [
                        t
                    ]);
                    var i = d(r);
                    return s.createElement(l.Provider, {
                        value: r
                    }, s.createElement(i.Provider, {
                        value: t
                    }, a))
                },
                f = n(7462),
                h = n(2288),
                p = n(4578),
                g = n(1262),
                v = n(2943),
                y = function (e) {
                    function t(t, n) {
                        var r;
                        return (r = e.call(this) || this).client = t,
                            r.setOptions(n),
                            r.bindMethods(),
                            r.updateResult(),
                            r
                    } (0, p.Z)(t, e);
                    var n = t.prototype;
                    return n.bindMethods = function () {
                        this.mutate = this.mutate.bind(this),
                            this.reset = this.reset.bind(this)
                    },
                        n.setOptions = function (e) {
                            this.options = this.client.defaultMutationOptions(e)
                        },
                        n.onUnsubscribe = function () {
                            var e;
                            this.listeners.length || null == (e = this.currentMutation) || e.removeObserver(this)
                        },
                        n.onMutationUpdate = function (e) {
                            this.updateResult();
                            var t = {
                                listeners: !0
                            };
                            'success' === e.type ? t.onSuccess = !0 : 'error' === e.type && (t.onError = !0),
                                this.notify(t)
                        },
                        n.getCurrentResult = function () {
                            return this.currentResult
                        },
                        n.reset = function () {
                            this.currentMutation = void 0,
                                this.updateResult(),
                                this.notify({
                                    listeners: !0
                                })
                        },
                        n.mutate = function (e, t) {
                            return this.mutateOptions = t,
                                this.currentMutation && this.currentMutation.removeObserver(this),
                                this.currentMutation = this.client.getMutationCache().build(this.client, (0, f.Z)({
                                }, this.options, {
                                    variables: void 0 !== e ? e : this.options.variables
                                })),
                                this.currentMutation.addObserver(this),
                                this.currentMutation.execute()
                        },
                        n.updateResult = function () {
                            var e = this.currentMutation ? this.currentMutation.state : (0, g.R)(),
                                t = (0, f.Z)({
                                }, e, {
                                    isLoading: 'loading' === e.status,
                                    isSuccess: 'success' === e.status,
                                    isError: 'error' === e.status,
                                    isIdle: 'idle' === e.status,
                                    mutate: this.mutate,
                                    reset: this.reset
                                });
                            this.currentResult = t
                        },
                        n.notify = function (e) {
                            var t = this;
                            r.V.batch((function () {
                                t.mutateOptions && (e.onSuccess ? (null == t.mutateOptions.onSuccess || t.mutateOptions.onSuccess(t.currentResult.data, t.currentResult.variables, t.currentResult.context), null == t.mutateOptions.onSettled || t.mutateOptions.onSettled(t.currentResult.data, null, t.currentResult.variables, t.currentResult.context)) : e.onError && (null == t.mutateOptions.onError || t.mutateOptions.onError(t.currentResult.error, t.currentResult.variables, t.currentResult.context), null == t.mutateOptions.onSettled || t.mutateOptions.onSettled(void 0, t.currentResult.error, t.currentResult.variables, t.currentResult.context))),
                                    e.listeners && t.listeners.forEach((function (e) {
                                        e(t.currentResult)
                                    }))
                            }))
                        },
                        t
                }(v.l);
            function w(e, t, n) {
                return 'function' == typeof t ? t.apply(void 0, n) : 'boolean' == typeof t ? t : !!e
            }
            function b(e, t, n) {
                var a = s.useRef(!1),
                    i = s.useState(0)[1],
                    o = (0, h.lV)(e, t, n),
                    u = c(),
                    l = s.useRef();
                l.current ? l.current.setOptions(o) : l.current = new y(u, o);
                var d = l.current.getCurrentResult();
                s.useEffect((function () {
                    a.current = !0;
                    var e = l.current.subscribe(r.V.batchCalls((function () {
                        a.current && i((function (e) {
                            return e + 1
                        }))
                    })));
                    return function () {
                        a.current = !1,
                            e()
                    }
                }), [
                ]);
                var m = s.useCallback((function (e, t) {
                    l.current.mutate(e, t).catch(h.ZT)
                }), [
                ]);
                if (d.error && w(void 0, l.current.options.useErrorBoundary, [
                    d.error
                ])) throw d.error;
                return (0, f.Z)({
                }, d, {
                    mutate: m,
                    mutateAsync: d.mutate
                })
            }
            var k = n(9852),
                M = n(1216),
                E = function (e) {
                    function t(t, n) {
                        var r;
                        return (r = e.call(this) || this).client = t,
                            r.options = n,
                            r.trackedProps = [
                            ],
                            r.previousSelectError = null,
                            r.bindMethods(),
                            r.setOptions(n),
                            r
                    } (0, p.Z)(t, e);
                    var n = t.prototype;
                    return n.bindMethods = function () {
                        this.remove = this.remove.bind(this),
                            this.refetch = this.refetch.bind(this)
                    },
                        n.onSubscribe = function () {
                            1 === this.listeners.length && (this.currentQuery.addObserver(this), P(this.currentQuery, this.options) && this.executeFetch(), this.updateTimers())
                        },
                        n.onUnsubscribe = function () {
                            this.listeners.length || this.destroy()
                        },
                        n.shouldFetchOnReconnect = function () {
                            return e = this.currentQuery,
                                !1 !== (t = this.options).enabled && ('always' === t.refetchOnReconnect || !1 !== t.refetchOnReconnect && S(e, t));
                            var e,
                                t
                        },
                        n.shouldFetchOnWindowFocus = function () {
                            return e = this.currentQuery,
                                !1 !== (t = this.options).enabled && ('always' === t.refetchOnWindowFocus || !1 !== t.refetchOnWindowFocus && S(e, t));
                            var e,
                                t
                        },
                        n.destroy = function () {
                            this.listeners = [
                            ],
                                this.clearTimers(),
                                this.currentQuery.removeObserver(this)
                        },
                        n.setOptions = function (e, t) {
                            var n = this.options,
                                r = this.currentQuery;
                            if (this.options = this.client.defaultQueryObserverOptions(e), void 0 !== this.options.enabled && 'boolean' != typeof this.options.enabled) throw new Error('Expected enabled to be a boolean');
                            this.options.queryKey || (this.options.queryKey = n.queryKey),
                                this.updateQuery();
                            var a = this.hasListeners();
                            a && x(this.currentQuery, r, this.options, n) && this.executeFetch(),
                                this.updateResult(t),
                                !a || this.currentQuery === r && this.options.enabled === n.enabled && this.options.staleTime === n.staleTime || this.updateStaleTimeout();
                            var i = this.computeRefetchInterval();
                            !a || this.currentQuery === r && this.options.enabled === n.enabled && i === this.currentRefetchInterval || this.updateRefetchInterval(i)
                        },
                        n.getOptimisticResult = function (e) {
                            var t = this.client.defaultQueryObserverOptions(e),
                                n = this.client.getQueryCache().build(this.client, t);
                            return this.createResult(n, t)
                        },
                        n.getCurrentResult = function () {
                            return this.currentResult
                        },
                        n.trackResult = function (e, t) {
                            var n = this,
                                r = {
                                },
                                a = function (e) {
                                    n.trackedProps.includes(e) || n.trackedProps.push(e)
                                };
                            return Object.keys(e).forEach((function (t) {
                                Object.defineProperty(r, t, {
                                    configurable: !1,
                                    enumerable: !0,
                                    get: function () {
                                        return a(t),
                                            e[t]
                                    }
                                })
                            })),
                                (t.useErrorBoundary || t.suspense) && a('error'),
                                r
                        },
                        n.getNextResult = function (e) {
                            var t = this;
                            return new Promise((function (n, r) {
                                var a = t.subscribe((function (t) {
                                    t.isFetching || (a(), t.isError && (null == e ? void 0 : e.throwOnError) ? r(t.error) : n(t))
                                }))
                            }))
                        },
                        n.getCurrentQuery = function () {
                            return this.currentQuery
                        },
                        n.remove = function () {
                            this.client.getQueryCache().remove(this.currentQuery)
                        },
                        n.refetch = function (e) {
                            return this.fetch((0, f.Z)({
                            }, e, {
                                meta: {
                                    refetchPage: null == e ? void 0 : e.refetchPage
                                }
                            }))
                        },
                        n.fetchOptimistic = function (e) {
                            var t = this,
                                n = this.client.defaultQueryObserverOptions(e),
                                r = this.client.getQueryCache().build(this.client, n);
                            return r.fetch().then((function () {
                                return t.createResult(r, n)
                            }))
                        },
                        n.fetch = function (e) {
                            var t = this;
                            return this.executeFetch(e).then((function () {
                                return t.updateResult(),
                                    t.currentResult
                            }))
                        },
                        n.executeFetch = function (e) {
                            this.updateQuery();
                            var t = this.currentQuery.fetch(this.options, e);
                            return (null == e ? void 0 : e.throwOnError) || (t = t.catch(h.ZT)),
                                t
                        },
                        n.updateStaleTimeout = function () {
                            var e = this;
                            if (this.clearStaleTimeout(), !h.sk && !this.currentResult.isStale && (0, h.PN)(this.options.staleTime)) {
                                var t = (0, h.Kp)(this.currentResult.dataUpdatedAt, this.options.staleTime) + 1;
                                this.staleTimeoutId = setTimeout((function () {
                                    e.currentResult.isStale || e.updateResult()
                                }), t)
                            }
                        },
                        n.computeRefetchInterval = function () {
                            var e;
                            return 'function' == typeof this.options.refetchInterval ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : null != (e = this.options.refetchInterval) && e
                        },
                        n.updateRefetchInterval = function (e) {
                            var t = this;
                            this.clearRefetchInterval(),
                                this.currentRefetchInterval = e,
                                !h.sk && !1 !== this.options.enabled && (0, h.PN)(this.currentRefetchInterval) && 0 !== this.currentRefetchInterval && (this.refetchIntervalId = setInterval((function () {
                                    (t.options.refetchIntervalInBackground || k.j.isFocused()) && t.executeFetch()
                                }), this.currentRefetchInterval))
                        },
                        n.updateTimers = function () {
                            this.updateStaleTimeout(),
                                this.updateRefetchInterval(this.computeRefetchInterval())
                        },
                        n.clearTimers = function () {
                            this.clearStaleTimeout(),
                                this.clearRefetchInterval()
                        },
                        n.clearStaleTimeout = function () {
                            clearTimeout(this.staleTimeoutId),
                                this.staleTimeoutId = void 0
                        },
                        n.clearRefetchInterval = function () {
                            clearInterval(this.refetchIntervalId),
                                this.refetchIntervalId = void 0
                        },
                        n.createResult = function (e, t) {
                            var n,
                                r = this.currentQuery,
                                a = this.options,
                                o = this.currentResult,
                                s = this.currentResultState,
                                u = this.currentResultOptions,
                                l = e !== r,
                                d = l ? e.state : this.currentQueryInitialState,
                                c = l ? this.currentResult : this.previousQueryResult,
                                m = e.state,
                                f = m.dataUpdatedAt,
                                p = m.error,
                                g = m.errorUpdatedAt,
                                v = m.isFetching,
                                y = m.status,
                                w = !1,
                                b = !1;
                            if (t.optimisticResults) {
                                var k = this.hasListeners(),
                                    M = !k && P(e, t),
                                    E = k && x(e, r, t, a);
                                (M || E) && (v = !0, f || (y = 'loading'))
                            }
                            if (t.keepPreviousData && !m.dataUpdateCount && (null == c ? void 0 : c.isSuccess) && 'error' !== y) n = c.data,
                                f = c.dataUpdatedAt,
                                y = c.status,
                                w = !0;
                            else if (t.select && void 0 !== m.data) {
                                var T;
                                if (o && m.data === (null == s ? void 0 : s.data) && t.select === (null == (T = this.previousSelect) ? void 0 : T.fn) && !this.previousSelectError) n = this.previousSelect.result;
                                else try {
                                    n = t.select(m.data),
                                        !1 !== t.structuralSharing && (n = (0, h.Q$)(null == o ? void 0 : o.data, n)),
                                        this.previousSelect = {
                                            fn: t.select,
                                            result: n
                                        },
                                        this.previousSelectError = null
                                } catch (e) {
                                    (0, i.j)().error(e),
                                        p = e,
                                        this.previousSelectError = e,
                                        g = Date.now(),
                                        y = 'error'
                                }
                            } else n = m.data;
                            if (void 0 !== t.placeholderData && void 0 === n && ('loading' === y || 'idle' === y)) {
                                var C;
                                if ((null == o ? void 0 : o.isPlaceholderData) && t.placeholderData === (null == u ? void 0 : u.placeholderData)) C = o.data;
                                else if (C = 'function' == typeof t.placeholderData ? t.placeholderData() : t.placeholderData, t.select && void 0 !== C) try {
                                    C = t.select(C),
                                        !1 !== t.structuralSharing && (C = (0, h.Q$)(null == o ? void 0 : o.data, C)),
                                        this.previousSelectError = null
                                } catch (e) {
                                    (0, i.j)().error(e),
                                        p = e,
                                        this.previousSelectError = e,
                                        g = Date.now(),
                                        y = 'error'
                                }
                                void 0 !== C && (y = 'success', n = C, b = !0)
                            }
                            return {
                                status: y,
                                isLoading: 'loading' === y,
                                isSuccess: 'success' === y,
                                isError: 'error' === y,
                                isIdle: 'idle' === y,
                                data: n,
                                dataUpdatedAt: f,
                                error: p,
                                errorUpdatedAt: g,
                                failureCount: m.fetchFailureCount,
                                isFetched: m.dataUpdateCount > 0 || m.errorUpdateCount > 0,
                                isFetchedAfterMount: m.dataUpdateCount > d.dataUpdateCount || m.errorUpdateCount > d.errorUpdateCount,
                                isFetching: v,
                                isRefetching: v && 'loading' !== y,
                                isLoadingError: 'error' === y && 0 === m.dataUpdatedAt,
                                isPlaceholderData: b,
                                isPreviousData: w,
                                isRefetchError: 'error' === y && 0 !== m.dataUpdatedAt,
                                isStale: S(e, t),
                                refetch: this.refetch,
                                remove: this.remove
                            }
                        },
                        n.shouldNotifyListeners = function (e, t) {
                            if (!t) return !0;
                            var n = this.options,
                                r = n.notifyOnChangeProps,
                                a = n.notifyOnChangePropsExclusions;
                            if (!r && !a) return !0;
                            if ('tracked' === r && !this.trackedProps.length) return !0;
                            var i = 'tracked' === r ? this.trackedProps : r;
                            return Object.keys(e).some((function (n) {
                                var r = n,
                                    o = e[r] !== t[r],
                                    s = null == i ? void 0 : i.some((function (e) {
                                        return e === n
                                    })),
                                    u = null == a ? void 0 : a.some((function (e) {
                                        return e === n
                                    }));
                                return o && !u && (!i || s)
                            }))
                        },
                        n.updateResult = function (e) {
                            var t = this.currentResult;
                            if (this.currentResult = this.createResult(this.currentQuery, this.options), this.currentResultState = this.currentQuery.state, this.currentResultOptions = this.options, !(0, h.VS)(this.currentResult, t)) {
                                var n = {
                                    cache: !0
                                };
                                !1 !== (null == e ? void 0 : e.listeners) && this.shouldNotifyListeners(this.currentResult, t) && (n.listeners = !0),
                                    this.notify((0, f.Z)({
                                    }, n, e))
                            }
                        },
                        n.updateQuery = function () {
                            var e = this.client.getQueryCache().build(this.client, this.options);
                            if (e !== this.currentQuery) {
                                var t = this.currentQuery;
                                this.currentQuery = e,
                                    this.currentQueryInitialState = e.state,
                                    this.previousQueryResult = this.currentResult,
                                    this.hasListeners() && (null == t || t.removeObserver(this), e.addObserver(this))
                            }
                        },
                        n.onQueryUpdate = function (e) {
                            var t = {
                            };
                            'success' === e.type ? t.onSuccess = !0 : 'error' !== e.type || (0, M.DV)(e.error) || (t.onError = !0),
                                this.updateResult(t),
                                this.hasListeners() && this.updateTimers()
                        },
                        n.notify = function (e) {
                            var t = this;
                            r.V.batch((function () {
                                e.onSuccess ? (null == t.options.onSuccess || t.options.onSuccess(t.currentResult.data), null == t.options.onSettled || t.options.onSettled(t.currentResult.data, null)) : e.onError && (null == t.options.onError || t.options.onError(t.currentResult.error), null == t.options.onSettled || t.options.onSettled(void 0, t.currentResult.error)),
                                    e.listeners && t.listeners.forEach((function (e) {
                                        e(t.currentResult)
                                    })),
                                    e.cache && t.client.getQueryCache().notify({
                                        query: t.currentQuery,
                                        type: 'observerResultsUpdated'
                                    })
                            }))
                        },
                        t
                }(v.l);
            function P(e, t) {
                return function (e, t) {
                    return !(!1 === t.enabled || e.state.dataUpdatedAt || 'error' === e.state.status && !1 === t.retryOnMount)
                }(e, t) || function (e, t) {
                    return !1 !== t.enabled && e.state.dataUpdatedAt > 0 && ('always' === t.refetchOnMount || !1 !== t.refetchOnMount && S(e, t))
                }(e, t)
            }
            function x(e, t, n, r) {
                return !1 !== n.enabled && (e !== t || !1 === r.enabled) && (!n.suspense || 'error' !== e.state.status) && S(e, n)
            }
            function S(e, t) {
                return e.isStaleByTime(t.staleTime)
            }
            var T,
                C = s.createContext((T = !1, {
                    clearReset: function () {
                        T = !1
                    },
                    reset: function () {
                        T = !0
                    },
                    isReset: function () {
                        return T
                    }
                }));
            function W(e, t) {
                var n = s.useRef(!1),
                    a = s.useState(0)[1],
                    i = c(),
                    o = s.useContext(C),
                    u = i.defaultQueryObserverOptions(e);
                u.optimisticResults = !0,
                    u.onError && (u.onError = r.V.batchCalls(u.onError)),
                    u.onSuccess && (u.onSuccess = r.V.batchCalls(u.onSuccess)),
                    u.onSettled && (u.onSettled = r.V.batchCalls(u.onSettled)),
                    u.suspense && ('number' != typeof u.staleTime && (u.staleTime = 1000), 0 === u.cacheTime && (u.cacheTime = 1)),
                    (u.suspense || u.useErrorBoundary) && (o.isReset() || (u.retryOnMount = !1));
                var l = s.useState((function () {
                    return new t(i, u)
                }))[0],
                    d = l.getOptimisticResult(u);
                if (s.useEffect((function () {
                    n.current = !0,
                        o.clearReset();
                    var e = l.subscribe(r.V.batchCalls((function () {
                        n.current && a((function (e) {
                            return e + 1
                        }))
                    })));
                    return l.updateResult(),
                        function () {
                            n.current = !1,
                                e()
                        }
                }), [
                    o,
                    l
                ]), s.useEffect((function () {
                    l.setOptions(u, {
                        listeners: !1
                    })
                }), [
                    u,
                    l
                ]), u.suspense && d.isLoading) throw l.fetchOptimistic(u).then((function (e) {
                    var t = e.data;
                    null == u.onSuccess || u.onSuccess(t),
                        null == u.onSettled || u.onSettled(t, null)
                })).catch((function (e) {
                    o.clearReset(),
                        null == u.onError || u.onError(e),
                        null == u.onSettled || u.onSettled(void 0, e)
                }));
                if (d.isError && !o.isReset() && !d.isFetching && w(u.suspense, u.useErrorBoundary, [
                    d.error,
                    l.getCurrentQuery()
                ])) throw d.error;
                return 'tracked' === u.notifyOnChangeProps && (d = l.trackResult(d, u)),
                    d
            }
            function j(e, t, n) {
                return W((0, h._v)(e, t, n), E)
            }
            var D = n(6997),
                N = function (e) {
                    function t(t, n) {
                        return e.call(this, t, n) || this
                    } (0, p.Z)(t, e);
                    var n = t.prototype;
                    return n.bindMethods = function () {
                        e.prototype.bindMethods.call(this),
                            this.fetchNextPage = this.fetchNextPage.bind(this),
                            this.fetchPreviousPage = this.fetchPreviousPage.bind(this)
                    },
                        n.setOptions = function (t, n) {
                            e.prototype.setOptions.call(this, (0, f.Z)({
                            }, t, {
                                behavior: (0, D.Gm)()
                            }), n)
                        },
                        n.getOptimisticResult = function (t) {
                            return t.behavior = (0, D.Gm)(),
                                e.prototype.getOptimisticResult.call(this, t)
                        },
                        n.fetchNextPage = function (e) {
                            var t;
                            return this.fetch({
                                cancelRefetch: null == (t = null == e ? void 0 : e.cancelRefetch) || t,
                                throwOnError: null == e ? void 0 : e.throwOnError,
                                meta: {
                                    fetchMore: {
                                        direction: 'forward',
                                        pageParam: null == e ? void 0 : e.pageParam
                                    }
                                }
                            })
                        },
                        n.fetchPreviousPage = function (e) {
                            var t;
                            return this.fetch({
                                cancelRefetch: null == (t = null == e ? void 0 : e.cancelRefetch) || t,
                                throwOnError: null == e ? void 0 : e.throwOnError,
                                meta: {
                                    fetchMore: {
                                        direction: 'backward',
                                        pageParam: null == e ? void 0 : e.pageParam
                                    }
                                }
                            })
                        },
                        n.createResult = function (t, n) {
                            var r,
                                a,
                                i,
                                o,
                                s,
                                u,
                                l = t.state,
                                d = e.prototype.createResult.call(this, t, n);
                            return (0, f.Z)({
                            }, d, {
                                fetchNextPage: this.fetchNextPage,
                                fetchPreviousPage: this.fetchPreviousPage,
                                hasNextPage: (0, D.Qy)(n, null == (r = l.data) ? void 0 : r.pages),
                                hasPreviousPage: (0, D.ZF)(n, null == (a = l.data) ? void 0 : a.pages),
                                isFetchingNextPage: l.isFetching && 'forward' === (null == (i = l.fetchMeta) || null == (o = i.fetchMore) ? void 0 : o.direction),
                                isFetchingPreviousPage: l.isFetching && 'backward' === (null == (s = l.fetchMeta) || null == (u = s.fetchMore) ? void 0 : u.direction)
                            })
                        },
                        t
                }(E);
            function I(e, t, n) {
                return W((0, h._v)(e, t, n), N)
            }
        },
        2408: function (e, t, n) {
            'use strict';
            var r = n(7418),
                a = 60103,
                i = 60106;
            t.Fragment = 60107,
                t.StrictMode = 60108,
                t.Profiler = 60114;
            var o = 60109,
                s = 60110,
                u = 60112;
            t.Suspense = 60113;
            var l = 60115,
                d = 60116;
            if ('function' == typeof Symbol && Symbol.for) {
                var c = Symbol.for;
                a = c('react.element'),
                    i = c('react.portal'),
                    t.Fragment = c('react.fragment'),
                    t.StrictMode = c('react.strict_mode'),
                    t.Profiler = c('react.profiler'),
                    o = c('react.provider'),
                    s = c('react.context'),
                    u = c('react.forward_ref'),
                    t.Suspense = c('react.suspense'),
                    l = c('react.memo'),
                    d = c('react.lazy')
            }
            var m = 'function' == typeof Symbol && Symbol.iterator;
            function f(e) {
                for (var t = 'https://reactjs.org/docs/error-decoder.html?invariant=' + e, n = 1; n < arguments.length; n++) t += '&args[]=' + encodeURIComponent(arguments[n]);
                return 'Minified React error #' + e + '; visit ' + t + ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
            }
            var h = {
                isMounted: function () {
                    return !1
                },
                enqueueForceUpdate: function () {
                },
                enqueueReplaceState: function () {
                },
                enqueueSetState: function () {
                }
            },
                p = {
                };
            function g(e, t, n) {
                this.props = e,
                    this.context = t,
                    this.refs = p,
                    this.updater = n || h
            }
            function v() {
            }
            function y(e, t, n) {
                this.props = e,
                    this.context = t,
                    this.refs = p,
                    this.updater = n || h
            }
            g.prototype.isReactComponent = {
            },
                g.prototype.setState = function (e, t) {
                    if ('object' != typeof e && 'function' != typeof e && null != e) throw Error(f(85));
                    this.updater.enqueueSetState(this, e, t, 'setState')
                },
                g.prototype.forceUpdate = function (e) {
                    this.updater.enqueueForceUpdate(this, e, 'forceUpdate')
                },
                v.prototype = g.prototype;
            var w = y.prototype = new v;
            w.constructor = y,
                r(w, g.prototype),
                w.isPureReactComponent = !0;
            var b = {
                current: null
            },
                k = Object.prototype.hasOwnProperty,
                M = {
                    key: !0,
                    ref: !0,
                    __self: !0,
                    __source: !0
                };
            function E(e, t, n) {
                var r,
                    i = {
                    },
                    o = null,
                    s = null;
                if (null != t) for (r in void 0 !== t.ref && (s = t.ref), void 0 !== t.key && (o = '' + t.key), t) k.call(t, r) && !M.hasOwnProperty(r) && (i[r] = t[r]);
                var u = arguments.length - 2;
                if (1 === u) i.children = n;
                else if (1 < u) {
                    for (var l = Array(u), d = 0; d < u; d++) l[d] = arguments[d + 2];
                    i.children = l
                }
                if (e && e.defaultProps) for (r in u = e.defaultProps) void 0 === i[r] && (i[r] = u[r]);
                return {
                    $$typeof: a,
                    type: e,
                    key: o,
                    ref: s,
                    props: i,
                    _owner: b.current
                }
            }
            function P(e) {
                return 'object' == typeof e && null !== e && e.$$typeof === a
            }
            var x = /\/+/g;
            function S(e, t) {
                return 'object' == typeof e && null !== e && null != e.key ? function (e) {
                    var t = {
                        '=': '=0',
                        ':': '=2'
                    };
                    return '$' + e.replace(/[=:]/g, (function (e) {
                        return t[e]
                    }))
                }('' + e.key) : t.toString(36)
            }
            function T(e, t, n, r, o) {
                var s = typeof e;
                'undefined' !== s && 'boolean' !== s || (e = null);
                var u = !1;
                if (null === e) u = !0;
                else switch (s) {
                    case 'string':
                    case 'number':
                        u = !0;
                        break;
                    case 'object':
                        switch (e.$$typeof) {
                            case a:
                            case i:
                                u = !0
                        }
                }
                if (u) return o = o(u = e),
                    e = '' === r ? '.' + S(u, 0) : r,
                    Array.isArray(o) ? (n = '', null != e && (n = e.replace(x, '$&/') + '/'), T(o, t, n, '', (function (e) {
                        return e
                    }))) : null != o && (P(o) && (o = function (e, t) {
                        return {
                            $$typeof: a,
                            type: e.type,
                            key: t,
                            ref: e.ref,
                            props: e.props,
                            _owner: e._owner
                        }
                    }(o, n + (!o.key || u && u.key === o.key ? '' : ('' + o.key).replace(x, '$&/') + '/') + e)), t.push(o)),
                    1;
                if (u = 0, r = '' === r ? '.' : r + ':', Array.isArray(e)) for (var l = 0; l < e.length; l++) {
                    var d = r + S(s = e[l], l);
                    u += T(s, t, n, d, o)
                } else if (d = function (e) {
                    return null === e || 'object' != typeof e ? null : 'function' == typeof (e = m && e[m] || e['@@iterator']) ? e : null
                }(e), 'function' == typeof d) for (e = d.call(e), l = 0; !(s = e.next()).done;) u += T(s = s.value, t, n, d = r + S(s, l++), o);
                else if ('object' === s) throw t = '' + e,
                    Error(f(31, '[object Object]' === t ? 'object with keys {' + Object.keys(e).join(', ') + '}' : t));
                return u
            }
            function C(e, t, n) {
                if (null == e) return e;
                var r = [
                ],
                    a = 0;
                return T(e, r, '', '', (function (e) {
                    return t.call(n, e, a++)
                })),
                    r
            }
            function W(e) {
                if (- 1 === e._status) {
                    var t = e._result;
                    t = t(),
                        e._status = 0,
                        e._result = t,
                        t.then((function (t) {
                            0 === e._status && (t = t.default, e._status = 1, e._result = t)
                        }), (function (t) {
                            0 === e._status && (e._status = 2, e._result = t)
                        }))
                }
                if (1 === e._status) return e._result;
                throw e._result
            }
            var j = {
                current: null
            };
            function D() {
                var e = j.current;
                if (null === e) throw Error(f(321));
                return e
            }
            var N = {
                ReactCurrentDispatcher: j,
                ReactCurrentBatchConfig: {
                    transition: 0
                },
                ReactCurrentOwner: b,
                IsSomeRendererActing: {
                    current: !1
                },
                assign: r
            };
            t.Children = {
                map: C,
                forEach: function (e, t, n) {
                    C(e, (function () {
                        t.apply(this, arguments)
                    }), n)
                },
                count: function (e) {
                    var t = 0;
                    return C(e, (function () {
                        t++
                    })),
                        t
                },
                toArray: function (e) {
                    return C(e, (function (e) {
                        return e
                    })) || [
                        ]
                },
                only: function (e) {
                    if (!P(e)) throw Error(f(143));
                    return e
                }
            },
                t.Component = g,
                t.PureComponent = y,
                t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = N,
                t.cloneElement = function (e, t, n) {
                    if (null == e) throw Error(f(267, e));
                    var i = r({
                    }, e.props),
                        o = e.key,
                        s = e.ref,
                        u = e._owner;
                    if (null != t) {
                        if (void 0 !== t.ref && (s = t.ref, u = b.current), void 0 !== t.key && (o = '' + t.key), e.type && e.type.defaultProps) var l = e.type.defaultProps;
                        for (d in t) k.call(t, d) && !M.hasOwnProperty(d) && (i[d] = void 0 === t[d] && void 0 !== l ? l[d] : t[d])
                    }
                    var d = arguments.length - 2;
                    if (1 === d) i.children = n;
                    else if (1 < d) {
                        l = Array(d);
                        for (var c = 0; c < d; c++) l[c] = arguments[c + 2];
                        i.children = l
                    }
                    return {
                        $$typeof: a,
                        type: e.type,
                        key: o,
                        ref: s,
                        props: i,
                        _owner: u
                    }
                },
                t.createContext = function (e, t) {
                    return void 0 === t && (t = null),
                        (e = {
                            $$typeof: s,
                            _calculateChangedBits: t,
                            _currentValue: e,
                            _currentValue2: e,
                            _threadCount: 0,
                            Provider: null,
                            Consumer: null
                        }).Provider = {
                            $$typeof: o,
                            _context: e
                        },
                        e.Consumer = e
                },
                t.createElement = E,
                t.createFactory = function (e) {
                    var t = E.bind(null, e);
                    return t.type = e,
                        t
                },
                t.createRef = function () {
                    return {
                        current: null
                    }
                },
                t.forwardRef = function (e) {
                    return {
                        $$typeof: u,
                        render: e
                    }
                },
                t.isValidElement = P,
                t.lazy = function (e) {
                    return {
                        $$typeof: d,
                        _payload: {
                            _status: - 1,
                            _result: e
                        },
                        _init: W
                    }
                },
                t.memo = function (e, t) {
                    return {
                        $$typeof: l,
                        type: e,
                        compare: void 0 === t ? null : t
                    }
                },
                t.useCallback = function (e, t) {
                    return D().useCallback(e, t)
                },
                t.useContext = function (e, t) {
                    return D().useContext(e, t)
                },
                t.useDebugValue = function () {
                },
                t.useEffect = function (e, t) {
                    return D().useEffect(e, t)
                },
                t.useImperativeHandle = function (e, t, n) {
                    return D().useImperativeHandle(e, t, n)
                },
                t.useLayoutEffect = function (e, t) {
                    return D().useLayoutEffect(e, t)
                },
                t.useMemo = function (e, t) {
                    return D().useMemo(e, t)
                },
                t.useReducer = function (e, t, n) {
                    return D().useReducer(e, t, n)
                },
                t.useRef = function (e) {
                    return D().useRef(e)
                },
                t.useState = function (e) {
                    return D().useState(e)
                },
                t.version = '17.0.2'
        },
        7294: function (e, t, n) {
            'use strict';
            e.exports = n(2408)
        },
        5666: function (e) {
            var t = function (e) {
                'use strict';
                var t,
                    n = Object.prototype,
                    r = n.hasOwnProperty,
                    a = 'function' == typeof Symbol ? Symbol : {
                    },
                    i = a.iterator || '@@iterator',
                    o = a.asyncIterator || '@@asyncIterator',
                    s = a.toStringTag || '@@toStringTag';
                function u(e, t, n) {
                    return Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }),
                        e[t]
                }
                try {
                    u({
                    }, '')
                } catch (e) {
                    u = function (e, t, n) {
                        return e[t] = n
                    }
                }
                function l(e, t, n, r) {
                    var a = t && t.prototype instanceof g ? t : g,
                        i = Object.create(a.prototype),
                        o = new C(r || [
                        ]);
                    return i._invoke = function (e, t, n) {
                        var r = c;
                        return function (a, i) {
                            if (r === f) throw new Error('Generator is already running');
                            if (r === h) {
                                if ('throw' === a) throw i;
                                return j()
                            }
                            for (n.method = a, n.arg = i; ;) {
                                var o = n.delegate;
                                if (o) {
                                    var s = x(o, n);
                                    if (s) {
                                        if (s === p) continue;
                                        return s
                                    }
                                }
                                if ('next' === n.method) n.sent = n._sent = n.arg;
                                else if ('throw' === n.method) {
                                    if (r === c) throw r = h,
                                        n.arg;
                                    n.dispatchException(n.arg)
                                } else 'return' === n.method && n.abrupt('return', n.arg);
                                r = f;
                                var u = d(e, t, n);
                                if ('normal' === u.type) {
                                    if (r = n.done ? h : m, u.arg === p) continue;
                                    return {
                                        value: u.arg,
                                        done: n.done
                                    }
                                }
                                'throw' === u.type && (r = h, n.method = 'throw', n.arg = u.arg)
                            }
                        }
                    }(e, n, o),
                        i
                }
                function d(e, t, n) {
                    try {
                        return {
                            type: 'normal',
                            arg: e.call(t, n)
                        }
                    } catch (e) {
                        return {
                            type: 'throw',
                            arg: e
                        }
                    }
                }
                e.wrap = l;
                var c = 'suspendedStart',
                    m = 'suspendedYield',
                    f = 'executing',
                    h = 'completed',
                    p = {
                    };
                function g() {
                }
                function v() {
                }
                function y() {
                }
                var w = {
                };
                u(w, i, (function () {
                    return this
                }));
                var b = Object.getPrototypeOf,
                    k = b && b(b(W([])));
                k && k !== n && r.call(k, i) && (w = k);
                var M = y.prototype = g.prototype = Object.create(w);
                function E(e) {
                    [
                        'next',
                        'throw',
                        'return'
                    ].forEach((function (t) {
                        u(e, t, (function (e) {
                            return this._invoke(t, e)
                        }))
                    }))
                }
                function P(e, t) {
                    function n(a, i, o, s) {
                        var u = d(e[a], e, i);
                        if ('throw' !== u.type) {
                            var l = u.arg,
                                c = l.value;
                            return c && 'object' == typeof c && r.call(c, '__await') ? t.resolve(c.__await).then((function (e) {
                                n('next', e, o, s)
                            }), (function (e) {
                                n('throw', e, o, s)
                            })) : t.resolve(c).then((function (e) {
                                l.value = e,
                                    o(l)
                            }), (function (e) {
                                return n('throw', e, o, s)
                            }))
                        }
                        s(u.arg)
                    }
                    var a;
                    this._invoke = function (e, r) {
                        function i() {
                            return new t((function (t, a) {
                                n(e, r, t, a)
                            }))
                        }
                        return a = a ? a.then(i, i) : i()
                    }
                }
                function x(e, n) {
                    var r = e.iterator[n.method];
                    if (r === t) {
                        if (n.delegate = null, 'throw' === n.method) {
                            if (e.iterator.return && (n.method = 'return', n.arg = t, x(e, n), 'throw' === n.method)) return p;
                            n.method = 'throw',
                                n.arg = new TypeError('The iterator does not provide a \'throw\' method')
                        }
                        return p
                    }
                    var a = d(r, e.iterator, n.arg);
                    if ('throw' === a.type) return n.method = 'throw',
                        n.arg = a.arg,
                        n.delegate = null,
                        p;
                    var i = a.arg;
                    return i ? i.done ? (n[e.resultName] = i.value, n.next = e.nextLoc, 'return' !== n.method && (n.method = 'next', n.arg = t), n.delegate = null, p) : i : (n.method = 'throw', n.arg = new TypeError('iterator result is not an object'), n.delegate = null, p)
                }
                function S(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]),
                        2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]),
                        this.tryEntries.push(t)
                }
                function T(e) {
                    var t = e.completion || {
                    };
                    t.type = 'normal',
                        delete t.arg,
                        e.completion = t
                }
                function C(e) {
                    this.tryEntries = [
                        {
                            tryLoc: 'root'
                        }
                    ],
                        e.forEach(S, this),
                        this.reset(!0)
                }
                function W(e) {
                    if (e) {
                        var n = e[i];
                        if (n) return n.call(e);
                        if ('function' == typeof e.next) return e;
                        if (!isNaN(e.length)) {
                            var a = - 1,
                                o = function n() {
                                    for (; ++a < e.length;) if (r.call(e, a)) return n.value = e[a],
                                        n.done = !1,
                                        n;
                                    return n.value = t,
                                        n.done = !0,
                                        n
                                };
                            return o.next = o
                        }
                    }
                    return {
                        next: j
                    }
                }
                function j() {
                    return {
                        value: t,
                        done: !0
                    }
                }
                return v.prototype = y,
                    u(M, 'constructor', y),
                    u(y, 'constructor', v),
                    v.displayName = u(y, s, 'GeneratorFunction'),
                    e.isGeneratorFunction = function (e) {
                        var t = 'function' == typeof e && e.constructor;
                        return !!t && (t === v || 'GeneratorFunction' === (t.displayName || t.name))
                    },
                    e.mark = function (e) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(e, y) : (e.__proto__ = y, u(e, s, 'GeneratorFunction')),
                            e.prototype = Object.create(M),
                            e
                    },
                    e.awrap = function (e) {
                        return {
                            __await: e
                        }
                    },
                    E(P.prototype),
                    u(P.prototype, o, (function () {
                        return this
                    })),
                    e.AsyncIterator = P,
                    e.async = function (t, n, r, a, i) {
                        void 0 === i && (i = Promise);
                        var o = new P(l(t, n, r, a), i);
                        return e.isGeneratorFunction(n) ? o : o.next().then((function (e) {
                            return e.done ? e.value : o.next()
                        }))
                    },
                    E(M),
                    u(M, s, 'Generator'),
                    u(M, i, (function () {
                        return this
                    })),
                    u(M, 'toString', (function () {
                        return '[object Generator]'
                    })),
                    e.keys = function (e) {
                        var t = [
                        ];
                        for (var n in e) t.push(n);
                        return t.reverse(),
                            function n() {
                                for (; t.length;) {
                                    var r = t.pop();
                                    if (r in e) return n.value = r,
                                        n.done = !1,
                                        n
                                }
                                return n.done = !0,
                                    n
                            }
                    },
                    e.values = W,
                    C.prototype = {
                        constructor: C,
                        reset: function (e) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = 'next', this.arg = t, this.tryEntries.forEach(T), !e) for (var n in this) 't' === n.charAt(0) && r.call(this, n) && !isNaN(+ n.slice(1)) && (this[n] = t)
                        },
                        stop: function () {
                            this.done = !0;
                            var e = this.tryEntries[0].completion;
                            if ('throw' === e.type) throw e.arg;
                            return this.rval
                        },
                        dispatchException: function (e) {
                            if (this.done) throw e;
                            var n = this;
                            function a(r, a) {
                                return s.type = 'throw',
                                    s.arg = e,
                                    n.next = r,
                                    a && (n.method = 'next', n.arg = t),
                                    !!a
                            }
                            for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                                var o = this.tryEntries[i],
                                    s = o.completion;
                                if ('root' === o.tryLoc) return a('end');
                                if (o.tryLoc <= this.prev) {
                                    var u = r.call(o, 'catchLoc'),
                                        l = r.call(o, 'finallyLoc');
                                    if (u && l) {
                                        if (this.prev < o.catchLoc) return a(o.catchLoc, !0);
                                        if (this.prev < o.finallyLoc) return a(o.finallyLoc)
                                    } else if (u) {
                                        if (this.prev < o.catchLoc) return a(o.catchLoc, !0)
                                    } else {
                                        if (!l) throw new Error('try statement without catch or finally');
                                        if (this.prev < o.finallyLoc) return a(o.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function (e, t) {
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var a = this.tryEntries[n];
                                if (a.tryLoc <= this.prev && r.call(a, 'finallyLoc') && this.prev < a.finallyLoc) {
                                    var i = a;
                                    break
                                }
                            }
                            i && ('break' === e || 'continue' === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                            var o = i ? i.completion : {
                            };
                            return o.type = e,
                                o.arg = t,
                                i ? (this.method = 'next', this.next = i.finallyLoc, p) : this.complete(o)
                        },
                        complete: function (e, t) {
                            if ('throw' === e.type) throw e.arg;
                            return 'break' === e.type || 'continue' === e.type ? this.next = e.arg : 'return' === e.type ? (this.rval = this.arg = e.arg, this.method = 'return', this.next = 'end') : 'normal' === e.type && t && (this.next = t),
                                p
                        },
                        finish: function (e) {
                            for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                                var n = this.tryEntries[t];
                                if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc),
                                    T(n),
                                    p
                            }
                        },
                        catch: function (e) {
                            for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                                var n = this.tryEntries[t];
                                if (n.tryLoc === e) {
                                    var r = n.completion;
                                    if ('throw' === r.type) {
                                        var a = r.arg;
                                        T(n)
                                    }
                                    return a
                                }
                            }
                            throw new Error('illegal catch attempt')
                        },
                        delegateYield: function (e, n, r) {
                            return this.delegate = {
                                iterator: W(e),
                                resultName: n,
                                nextLoc: r
                            },
                                'next' === this.method && (this.arg = t),
                                p
                        }
                    },
                    e
            }(e.exports);
            try {
                regeneratorRuntime = t
            } catch (e) {
                'object' == typeof globalThis ? globalThis.regeneratorRuntime = t : Function('r', 'regeneratorRuntime = r')(t)
            }
        },
        53: function (e, t) {
            'use strict';
            var n,
                r,
                a,
                i;
            if ('object' == typeof performance && 'function' == typeof performance.now) {
                var o = performance;
                t.unstable_now = function () {
                    return o.now()
                }
            } else {
                var s = Date,
                    u = s.now();
                t.unstable_now = function () {
                    return s.now() - u
                }
            }
            if ('undefined' == typeof window || 'function' != typeof MessageChannel) {
                var l = null,
                    d = null,
                    c = function () {
                        if (null !== l) try {
                            var e = t.unstable_now();
                            l(!0, e),
                                l = null
                        } catch (e) {
                            throw setTimeout(c, 0),
                            e
                        }
                    };
                n = function (e) {
                    null !== l ? setTimeout(n, 0, e) : (l = e, setTimeout(c, 0))
                },
                    r = function (e, t) {
                        d = setTimeout(e, t)
                    },
                    a = function () {
                        clearTimeout(d)
                    },
                    t.unstable_shouldYield = function () {
                        return !1
                    },
                    i = t.unstable_forceFrameRate = function () {
                    }
            } else {
                var m = window.setTimeout,
                    f = window.clearTimeout;
                if ('undefined' != typeof console) {
                    var h = window.cancelAnimationFrame;
                    'function' != typeof window.requestAnimationFrame && console.error('This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills'),
                        'function' != typeof h && console.error('This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills')
                }
                var p = !1,
                    g = null,
                    v = - 1,
                    y = 5,
                    w = 0;
                t.unstable_shouldYield = function () {
                    return t.unstable_now() >= w
                },
                    i = function () {
                    },
                    t.unstable_forceFrameRate = function (e) {
                        0 > e || 125 < e ? console.error('forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported') : y = 0 < e ? Math.floor(1000 / e) : 5
                    };
                var b = new MessageChannel,
                    k = b.port2;
                b.port1.onmessage = function () {
                    if (null !== g) {
                        var e = t.unstable_now();
                        w = e + y;
                        try {
                            g(!0, e) ? k.postMessage(null) : (p = !1, g = null)
                        } catch (e) {
                            throw k.postMessage(null),
                            e
                        }
                    } else p = !1
                },
                    n = function (e) {
                        g = e,
                            p || (p = !0, k.postMessage(null))
                    },
                    r = function (e, n) {
                        v = m((function () {
                            e(t.unstable_now())
                        }), n)
                    },
                    a = function () {
                        f(v),
                            v = - 1
                    }
            }
            function M(e, t) {
                var n = e.length;
                e.push(t);
                e: for (; ;) {
                    var r = n - 1 >>> 1,
                        a = e[r];
                    if (!(void 0 !== a && 0 < x(a, t))) break e;
                    e[r] = t,
                        e[n] = a,
                        n = r
                }
            }
            function E(e) {
                return void 0 === (e = e[0]) ? null : e
            }
            function P(e) {
                var t = e[0];
                if (void 0 !== t) {
                    var n = e.pop();
                    if (n !== t) {
                        e[0] = n;
                        e: for (var r = 0, a = e.length; r < a;) {
                            var i = 2 * (r + 1) - 1,
                                o = e[i],
                                s = i + 1,
                                u = e[s];
                            if (void 0 !== o && 0 > x(o, n)) void 0 !== u && 0 > x(u, o) ? (e[r] = u, e[s] = n, r = s) : (e[r] = o, e[i] = n, r = i);
                            else {
                                if (!(void 0 !== u && 0 > x(u, n))) break e;
                                e[r] = u,
                                    e[s] = n,
                                    r = s
                            }
                        }
                    }
                    return t
                }
                return null
            }
            function x(e, t) {
                var n = e.sortIndex - t.sortIndex;
                return 0 !== n ? n : e.id - t.id
            }
            var S = [
            ],
                T = [
                ],
                C = 1,
                W = null,
                j = 3,
                D = !1,
                N = !1,
                I = !1;
            function z(e) {
                for (var t = E(T); null !== t;) {
                    if (null === t.callback) P(T);
                    else {
                        if (!(t.startTime <= e)) break;
                        P(T),
                            t.sortIndex = t.expirationTime,
                            M(S, t)
                    }
                    t = E(T)
                }
            }
            function R(e) {
                if (I = !1, z(e), !N) if (null !== E(S)) N = !0,
                    n(A);
                else {
                    var t = E(T);
                    null !== t && r(R, t.startTime - e)
                }
            }
            function A(e, n) {
                N = !1,
                    I && (I = !1, a()),
                    D = !0;
                var i = j;
                try {
                    for (z(n), W = E(S); null !== W && (!(W.expirationTime > n) || e && !t.unstable_shouldYield());) {
                        var o = W.callback;
                        if ('function' == typeof o) {
                            W.callback = null,
                                j = W.priorityLevel;
                            var s = o(W.expirationTime <= n);
                            n = t.unstable_now(),
                                'function' == typeof s ? W.callback = s : W === E(S) && P(S),
                                z(n)
                        } else P(S);
                        W = E(S)
                    }
                    if (null !== W) var u = !0;
                    else {
                        var l = E(T);
                        null !== l && r(R, l.startTime - n),
                            u = !1
                    }
                    return u
                } finally {
                    W = null,
                        j = i,
                        D = !1
                }
            }
            var O = i;
            t.unstable_IdlePriority = 5,
                t.unstable_ImmediatePriority = 1,
                t.unstable_LowPriority = 4,
                t.unstable_NormalPriority = 3,
                t.unstable_Profiling = null,
                t.unstable_UserBlockingPriority = 2,
                t.unstable_cancelCallback = function (e) {
                    e.callback = null
                },
                t.unstable_continueExecution = function () {
                    N || D || (N = !0, n(A))
                },
                t.unstable_getCurrentPriorityLevel = function () {
                    return j
                },
                t.unstable_getFirstCallbackNode = function () {
                    return E(S)
                },
                t.unstable_next = function (e) {
                    switch (j) {
                        case 1:
                        case 2:
                        case 3:
                            var t = 3;
                            break;
                        default:
                            t = j
                    }
                    var n = j;
                    j = t;
                    try {
                        return e()
                    } finally {
                        j = n
                    }
                },
                t.unstable_pauseExecution = function () {
                },
                t.unstable_requestPaint = O,
                t.unstable_runWithPriority = function (e, t) {
                    switch (e) {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        default:
                            e = 3
                    }
                    var n = j;
                    j = e;
                    try {
                        return t()
                    } finally {
                        j = n
                    }
                },
                t.unstable_scheduleCallback = function (e, i, o) {
                    var s = t.unstable_now();
                    switch (o = 'object' == typeof o && null !== o && 'number' == typeof (o = o.delay) && 0 < o ? s + o : s, e) {
                        case 1:
                            var u = - 1;
                            break;
                        case 2:
                            u = 250;
                            break;
                        case 5:
                            u = 1073741823;
                            break;
                        case 4:
                            u = 10000;
                            break;
                        default:
                            u = 5000
                    }
                    return e = {
                        id: C++,
                        callback: i,
                        priorityLevel: e,
                        startTime: o,
                        expirationTime: u = o + u,
                        sortIndex: - 1
                    },
                        o > s ? (e.sortIndex = o, M(T, e), null === E(S) && e === E(T) && (I ? a() : I = !0, r(R, o - s))) : (e.sortIndex = u, M(S, e), N || D || (N = !0, n(A))),
                        e
                },
                t.unstable_wrapCallback = function (e) {
                    var t = j;
                    return function () {
                        var n = j;
                        j = t;
                        try {
                            return e.apply(this, arguments)
                        } finally {
                            j = n
                        }
                    }
                }
        },
        3840: function (e, t, n) {
            'use strict';
            e.exports = n(53)
        },
        6774: function (e) {
            e.exports = function (e, t, n, r) {
                var a = n ? n.call(r, e, t) : void 0;
                if (void 0 !== a) return !!a;
                if (e === t) return !0;
                if ('object' != typeof e || !e || 'object' != typeof t || !t) return !1;
                var i = Object.keys(e),
                    o = Object.keys(t);
                if (i.length !== o.length) return !1;
                for (var s = Object.prototype.hasOwnProperty.bind(t), u = 0; u < i.length; u++) {
                    var l = i[u];
                    if (!s(l)) return !1;
                    var d = e[l],
                        c = t[l];
                    if (!1 === (a = n ? n.call(r, d, c, l) : void 0) || void 0 === a && d !== c) return !1
                }
                return !0
            }
        },
        324: function (e, t) {
            'use strict';
            var n;
            t.V0 = t.zc = void 0,
                function (e) {
                    e.Json = 'application/json',
                        e.FormData = 'multipart/form-data',
                        e.UrlEncoded = 'application/x-www-form-urlencoded'
                }(n = t.zc || (t.zc = {
                }));
            t.V0 = class extends class {
                constructor(e = {
                }) {
                    this.baseUrl = '',
                        this.securityData = null,
                        this.abortControllers = new Map,
                        this.customFetch = (...e) => fetch(...e),
                        this.baseApiParams = {
                            credentials: 'same-origin',
                            headers: {
                            },
                            redirect: 'follow',
                            referrerPolicy: 'no-referrer'
                        },
                        this.setSecurityData = e => {
                            this.securityData = e
                        },
                        this.contentFormatters = {
                            [
                                n.Json
                            ]: e => null === e || 'object' != typeof e && 'string' != typeof e ? e : JSON.stringify(e),
                            [
                                n.FormData
                            ]: e => Object.keys(e || {
                            }).reduce(((t, n) => {
                                const r = e[n];
                                return t.append(n, r instanceof Blob ? r : 'object' == typeof r && null !== r ? JSON.stringify(r) : `${r}`),
                                    t
                            }), new FormData),
                            [
                                n.UrlEncoded
                            ]: e => this.toQueryString(e)
                        },
                        this.createAbortSignal = e => {
                            if (this.abortControllers.has(e)) {
                                const t = this.abortControllers.get(e);
                                return t ? t.signal : void 0
                            }
                            const t = new AbortController;
                            return this.abortControllers.set(e, t),
                                t.signal
                        },
                        this.abortRequest = e => {
                            const t = this.abortControllers.get(e);
                            t && (t.abort(), this.abortControllers.delete(e))
                        },
                        this.request = async ({
                            body: e,
                            secure: t,
                            path: r,
                            type: a,
                            query: i,
                            format: o,
                            baseUrl: s,
                            cancelToken: u,
                            ...l
                        }) => {
                            const d = ('boolean' == typeof t ? t : this.baseApiParams.secure) && this.securityWorker && await this.securityWorker(this.securityData) || {
                            },
                                c = this.mergeRequestParams(l, d),
                                m = i && this.toQueryString(i),
                                f = this.contentFormatters[a || n.Json],
                                h = o || c.format;
                            return this.customFetch(`${s || this.baseUrl || ''}${r}${m ? `?${m}` : ''}`, {
                                ...c,
                                headers: {
                                    ...a && a !== n.FormData ? {
                                        'Content-Type': a
                                    }
                                        : {
                                        },
                                    ...c.headers || {
                                    }
                                },
                                signal: u ? this.createAbortSignal(u) : void 0,
                                body: null == e ? null : f(e)
                            }).then((async e => {
                                const t = e;
                                t.data = null,
                                    t.error = null;
                                const n = h ? await e[h]().then((e => (t.ok ? t.data = e : t.error = e, t))).catch((e => (t.error = e, t))) : t;
                                if (u && this.abortControllers.delete(u), !e.ok) throw n;
                                return n.data
                            }))
                        },
                        Object.assign(this, e)
                }
                encodeQueryParam(e, t) {
                    return `${encodeURIComponent(e)}=${encodeURIComponent('number' == typeof t ? t : `${t}`)}`
                }
                addQueryParam(e, t) {
                    return this.encodeQueryParam(t, e[t])
                }
                addArrayQueryParam(e, t) {
                    return e[t].map((e => this.encodeQueryParam(t, e))).join('&')
                }
                toQueryString(e) {
                    const t = e || {
                    };
                    return Object.keys(t).filter((e => void 0 !== t[e])).map((e => Array.isArray(t[e]) ? this.addArrayQueryParam(t, e) : this.addQueryParam(t, e))).join('&')
                }
                addQueryParams(e) {
                    const t = this.toQueryString(e);
                    return t ? `?${t}` : ''
                }
                mergeRequestParams(e, t) {
                    return {
                        ...this.baseApiParams,
                        ...e,
                        ...t || {
                        },
                        headers: {
                            ...this.baseApiParams.headers || {
                            },
                            ...e.headers || {
                            },
                            ...t && t.headers || {
                            }
                        }
                    }
                }
            }
            {
                constructor() {
                    super(...arguments),
                        this.calendar = {
                            get: (e, t = {
                            }) => this.request({
                                path: '/api/calendar',
                                method: 'GET',
                                query: e,
                                secure: !0,
                                format: 'json',
                                ...t
                            })
                        },
                        this.configuration = {
                            update: (e, t = {
                            }) => this.request({
                                path: '/api/configuration',
                                method: 'PATCH',
                                body: e,
                                secure: !0,
                                type: n.Json,
                                ...t
                            }),
                            get: (e = {
                            }) => this.request({
                                path: '/api/configuration',
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...e
                            })
                        },
                        this.id = {
                            getImage: (e, t, n = {
                            }) => this.request({
                                path: `/img/${e}`,
                                method: 'GET',
                                query: t,
                                secure: !0,
                                format: 'json',
                                ...n
                            })
                        },
                        this.details = {
                            get: (e, t = {
                            }) => this.request({
                                path: `/api/details/${e}`,
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...t
                            }),
                            updateMetadata: (e, t = {
                            }) => this.request({
                                path: `/api/details/update-metadata/${e}`,
                                method: 'GET',
                                secure: !0,
                                ...t
                            })
                        },
                        this.items = {
                            paginated: (e, t = {
                            }) => this.request({
                                path: '/api/items/paginated',
                                method: 'GET',
                                query: e,
                                secure: !0,
                                format: 'json',
                                ...t
                            }),
                            get: (e, t = {
                            }) => this.request({
                                path: '/api/items',
                                method: 'GET',
                                query: e,
                                secure: !0,
                                format: 'json',
                                ...t
                            })
                        },
                        this.logs = {
                            get: (e, t = {
                            }) => this.request({
                                path: '/api/logs',
                                method: 'GET',
                                query: e,
                                secure: !0,
                                format: 'json',
                                ...t
                            })
                        },
                        this.progress = {
                            add: (e, t = {
                            }) => this.request({
                                path: '/api/progress',
                                method: 'PUT',
                                query: e,
                                secure: !0,
                                ...t
                            }),
                            deleteById: (e, t = {
                            }) => this.request({
                                path: `/api/progress/${e}`,
                                method: 'DELETE',
                                secure: !0,
                                ...t
                            })
                        },
                        this.rating = {
                            add: (e, t = {
                            }) => this.request({
                                path: '/api/rating',
                                method: 'PUT',
                                body: e,
                                secure: !0,
                                type: n.Json,
                                ...t
                            })
                        },
                        this.search = {
                            search: (e, t = {
                            }) => this.request({
                                path: '/api/search',
                                method: 'GET',
                                query: e,
                                secure: !0,
                                format: 'json',
                                ...t
                            })
                        },
                        this.seen = {
                            add: (e, t = {
                            }) => this.request({
                                path: '/api/seen',
                                method: 'PUT',
                                query: e,
                                secure: !0,
                                ...t
                            }),
                            deleteById: (e, t = {
                            }) => this.request({
                                path: `/api/seen/${e}`,
                                method: 'DELETE',
                                secure: !0,
                                ...t
                            }),
                            delete: (e, t = {
                            }) => this.request({
                                path: '/api/seen/',
                                method: 'DELETE',
                                query: e,
                                secure: !0,
                                ...t
                            })
                        },
                        this.statistics = {
                            summary: (e = {
                            }) => this.request({
                                path: '/api/statistics/summary',
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...e
                            })
                        },
                        this.tokens = {
                            add: (e, t = {
                            }) => this.request({
                                path: '/api/tokens',
                                method: 'PUT',
                                query: e,
                                secure: !0,
                                format: 'json',
                                ...t
                            }),
                            delete: (e, t = {
                            }) => this.request({
                                path: '/api/tokens',
                                method: 'DELETE',
                                query: e,
                                secure: !0,
                                ...t
                            }),
                            get: (e = {
                            }) => this.request({
                                path: '/api/tokens',
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...e
                            })
                        },
                        this.user = {
                            get: (e = {
                            }) => this.request({
                                path: '/api/user',
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...e
                            }),
                            logout: (e = {
                            }) => this.request({
                                path: '/api/user/logout',
                                method: 'GET',
                                secure: !0,
                                ...e
                            }),
                            login: (e, t = {
                            }) => this.request({
                                path: '/api/user/login',
                                method: 'POST',
                                body: e,
                                secure: !0,
                                type: n.Json,
                                ...t
                            }),
                            register: (e, t = {
                            }) => this.request({
                                path: '/api/user/register',
                                method: 'POST',
                                body: e,
                                secure: !0,
                                type: n.Json,
                                format: 'json',
                                ...t
                            }),
                            getNotificationCredentials: (e = {
                            }) => this.request({
                                path: '/api/user/notification-credentials',
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...e
                            }),
                            updateNotificationCredentials: (e, t = {
                            }) => this.request({
                                path: '/api/user/notification-credentials',
                                method: 'PUT',
                                body: e,
                                secure: !0,
                                type: n.Json,
                                ...t
                            }),
                            update: (e, t = {
                            }) => this.request({
                                path: '/api/user/settings',
                                method: 'PUT',
                                body: e,
                                secure: !0,
                                type: n.Json,
                                ...t
                            }),
                            updatePassword: (e, t = {
                            }) => this.request({
                                path: '/api/user/password',
                                method: 'PUT',
                                body: e,
                                secure: !0,
                                type: n.Json,
                                ...t
                            }),
                            getById: (e, t = {
                            }) => this.request({
                                path: `/api/user/${e}`,
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...t
                            })
                        },
                        this.watchlist = {
                            add: (e, t = {
                            }) => this.request({
                                path: '/api/watchlist',
                                method: 'PUT',
                                query: e,
                                secure: !0,
                                ...t
                            }),
                            delete: (e, t = {
                            }) => this.request({
                                path: '/api/watchlist',
                                method: 'DELETE',
                                query: e,
                                secure: !0,
                                ...t
                            })
                        },
                        this.importGoodreads = {
                            import: (e, t = {
                            }) => this.request({
                                path: '/api/import-goodreads',
                                method: 'POST',
                                body: e,
                                secure: !0,
                                type: n.Json,
                                format: 'json',
                                ...t
                            })
                        },
                        this.importTrakttv = {
                            deviceToken: (e = {
                            }) => this.request({
                                path: '/api/import-trakttv/device-token',
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...e
                            }),
                            state: (e = {
                            }) => this.request({
                                path: '/api/import-trakttv/state',
                                method: 'GET',
                                secure: !0,
                                format: 'json',
                                ...e
                            })
                        }
                }
            }
        },
        7462: function (e, t, n) {
            'use strict';
            function r() {
                return r = Object.assign || function (e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                },
                    r.apply(this, arguments)
            }
            n.d(t, {
                Z: function () {
                    return r
                }
            })
        },
        4578: function (e, t, n) {
            'use strict';
            n.d(t, {
                Z: function () {
                    return a
                }
            });
            var r = n(9611);
            function a(e, t) {
                e.prototype = Object.create(t.prototype),
                    e.prototype.constructor = e,
                    (0, r.Z)(e, t)
            }
        },
        9611: function (e, t, n) {
            'use strict';
            function r(e, t) {
                return r = Object.setPrototypeOf || function (e, t) {
                    return e.__proto__ = t,
                        e
                },
                    r(e, t)
            }
            n.d(t, {
                Z: function () {
                    return r
                }
            })
        }
    },
        t = {
        };
    function n(r) {
        var a = t[r];
        if (void 0 !== a) return a.exports;
        var i = t[r] = {
            exports: {
            }
        };
        return e[r](i, i.exports, n),
            i.exports
    }
    n.n = function (e) {
        var t = e && e.__esModule ? function () {
            return e.default
        }
            : function () {
                return e
            };
        return n.d(t, {
            a: t
        }),
            t
    },
        n.d = function (e, t) {
            for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {
                enumerable: !0,
                get: t[r]
            })
        },
        n.g = function () {
            if ('object' == typeof globalThis) return globalThis;
            try {
                return this || new Function('return this')()
            } catch (e) {
                if ('object' == typeof window) return window
            }
        }(),
        n.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        },
        n.r = function (e) {
            'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: 'Module'
            }),
                Object.defineProperty(e, '__esModule', {
                    value: !0
                })
        },
        function () {
            'use strict';
            var e = {
            };
            n.r(e),
                n.d(e, {
                    af: function () {
                        return ku
                    },
                    ar: function () {
                        return xu
                    },
                    arDZ: function () {
                        return Wu
                    },
                    arEG: function () {
                        return Iu
                    },
                    arMA: function () {
                        return Ou
                    },
                    arSA: function () {
                        return Fu
                    },
                    arTN: function () {
                        return Gu
                    },
                    az: function () {
                        return Ku
                    },
                    be: function () {
                        return ol
                    },
                    bg: function () {
                        return hl
                    },
                    bn: function () {
                        return kl
                    },
                    bs: function () {
                        return xl
                    },
                    ca: function () {
                        return jl
                    },
                    cs: function () {
                        return Al
                    },
                    cy: function () {
                        return Ll
                    },
                    da: function () {
                        return ql
                    },
                    de: function () {
                        return ed
                    },
                    deAT: function () {
                        return rd
                    },
                    el: function () {
                        return ud
                    },
                    enAU: function () {
                        return ld
                    },
                    enCA: function () {
                        return cd
                    },
                    enGB: function () {
                        return fd
                    },
                    enIE: function () {
                        return hd
                    },
                    enIN: function () {
                        return pd
                    },
                    enNZ: function () {
                        return gd
                    },
                    enUS: function () {
                        return pt
                    },
                    enZA: function () {
                        return vd
                    },
                    eo: function () {
                        return kd
                    },
                    es: function () {
                        return Sd
                    },
                    et: function () {
                        return Nd
                    },
                    eu: function () {
                        return Od
                    },
                    faIR: function () {
                        return Fd
                    },
                    fi: function () {
                        return tc
                    },
                    fr: function () {
                        return lc
                    },
                    frCA: function () {
                        return dc
                    },
                    frCH: function () {
                        return fc
                    },
                    fy: function () {
                        return vc
                    },
                    gd: function () {
                        return kc
                    },
                    gl: function () {
                        return Sc
                    },
                    gu: function () {
                        return jc
                    },
                    he: function () {
                        return Ac
                    },
                    hi: function () {
                        return qc
                    },
                    hr: function () {
                        return $c
                    },
                    ht: function () {
                        return Zc
                    },
                    hu: function () {
                        return um
                    },
                    hy: function () {
                        return mm
                    },
                    id: function () {
                        return gm
                    },
                    is: function () {
                        return bm
                    },
                    it: function () {
                        return Sm
                    },
                    ja: function () {
                        return jm
                    },
                    jaHira: function () {
                        return zm
                    },
                    ka: function () {
                        return Hm
                    },
                    kk: function () {
                        return Bm
                    },
                    km: function () {
                        return Jm
                    },
                    kn: function () {
                        return nf
                    },
                    ko: function () {
                        return sf
                    },
                    lb: function () {
                        return vf
                    },
                    lt: function () {
                        return Tf
                    },
                    lv: function () {
                        return zf
                    },
                    mk: function () {
                        return Ff
                    },
                    mn: function () {
                        return Gf
                    },
                    ms: function () {
                        return $f
                    },
                    mt: function () {
                        return Zf
                    },
                    nb: function () {
                        return rh
                    },
                    nl: function () {
                        return sh
                    },
                    nlBE: function () {
                        return ch
                    },
                    nn: function () {
                        return gh
                    },
                    pl: function () {
                        return Th
                    },
                    pt: function () {
                        return Dh
                    },
                    ptBR: function () {
                        return Ah
                    },
                    ro: function () {
                        return Lh
                    },
                    ru: function () {
                        return $h
                    },
                    sk: function () {
                        return ap
                    },
                    sl: function () {
                        return cp
                    },
                    sq: function () {
                        return pp
                    },
                    sr: function () {
                        return bp
                    },
                    srLatn: function () {
                        return xp
                    },
                    sv: function () {
                        return jp
                    },
                    ta: function () {
                        return Ap
                    },
                    te: function () {
                        return Lp
                    },
                    th: function () {
                        return qp
                    },
                    tr: function () {
                        return Bp
                    },
                    ug: function () {
                        return Jp
                    },
                    uk: function () {
                        return sg
                    },
                    uz: function () {
                        return cg
                    },
                    uzCyrl: function () {
                        return pg
                    },
                    vi: function () {
                        return wg
                    },
                    zhCN: function () {
                        return xg
                    },
                    zhHK: function () {
                        return Wg
                    },
                    zhTW: function () {
                        return Ig
                    }
                });
            var t = {
            };
            n.r(t),
                n.d(t, {
                    af: function () {
                        return oS
                    },
                    ak: function () {
                        return sS
                    },
                    am: function () {
                        return uS
                    },
                    an: function () {
                        return lS
                    },
                    ar: function () {
                        return dS
                    },
                    ars: function () {
                        return cS
                    },
                    as: function () {
                        return mS
                    },
                    asa: function () {
                        return fS
                    },
                    ast: function () {
                        return hS
                    },
                    az: function () {
                        return pS
                    },
                    bal: function () {
                        return gS
                    },
                    be: function () {
                        return vS
                    },
                    bem: function () {
                        return yS
                    },
                    bez: function () {
                        return wS
                    },
                    bg: function () {
                        return bS
                    },
                    bho: function () {
                        return kS
                    },
                    bm: function () {
                        return MS
                    },
                    bn: function () {
                        return ES
                    },
                    bo: function () {
                        return PS
                    },
                    br: function () {
                        return xS
                    },
                    brx: function () {
                        return SS
                    },
                    bs: function () {
                        return TS
                    },
                    ca: function () {
                        return CS
                    },
                    ce: function () {
                        return WS
                    },
                    ceb: function () {
                        return jS
                    },
                    cgg: function () {
                        return DS
                    },
                    chr: function () {
                        return NS
                    },
                    ckb: function () {
                        return IS
                    },
                    cs: function () {
                        return zS
                    },
                    cy: function () {
                        return RS
                    },
                    da: function () {
                        return AS
                    },
                    de: function () {
                        return OS
                    },
                    doi: function () {
                        return HS
                    },
                    dsb: function () {
                        return _S
                    },
                    dv: function () {
                        return LS
                    },
                    dz: function () {
                        return FS
                    },
                    ee: function () {
                        return XS
                    },
                    el: function () {
                        return US
                    },
                    en: function () {
                        return qS
                    },
                    eo: function () {
                        return GS
                    },
                    es: function () {
                        return VS
                    },
                    et: function () {
                        return YS
                    },
                    eu: function () {
                        return BS
                    },
                    fa: function () {
                        return $S
                    },
                    ff: function () {
                        return QS
                    },
                    fi: function () {
                        return KS
                    },
                    fil: function () {
                        return JS
                    },
                    fo: function () {
                        return ZS
                    },
                    fr: function () {
                        return eT
                    },
                    fur: function () {
                        return tT
                    },
                    fy: function () {
                        return nT
                    },
                    ga: function () {
                        return rT
                    },
                    gd: function () {
                        return aT
                    },
                    gl: function () {
                        return iT
                    },
                    gsw: function () {
                        return oT
                    },
                    gu: function () {
                        return sT
                    },
                    guw: function () {
                        return uT
                    },
                    gv: function () {
                        return lT
                    },
                    ha: function () {
                        return dT
                    },
                    haw: function () {
                        return cT
                    },
                    he: function () {
                        return mT
                    },
                    hi: function () {
                        return fT
                    },
                    hnj: function () {
                        return hT
                    },
                    hr: function () {
                        return pT
                    },
                    hsb: function () {
                        return gT
                    },
                    hu: function () {
                        return vT
                    },
                    hy: function () {
                        return yT
                    },
                    ia: function () {
                        return wT
                    },
                    id: function () {
                        return bT
                    },
                    ig: function () {
                        return kT
                    },
                    ii: function () {
                        return MT
                    },
                    io: function () {
                        return ET
                    },
                    is: function () {
                        return PT
                    },
                    it: function () {
                        return xT
                    },
                    iu: function () {
                        return ST
                    },
                    ja: function () {
                        return TT
                    },
                    jbo: function () {
                        return CT
                    },
                    jgo: function () {
                        return WT
                    },
                    jmc: function () {
                        return jT
                    },
                    jv: function () {
                        return DT
                    },
                    jw: function () {
                        return NT
                    },
                    ka: function () {
                        return IT
                    },
                    kab: function () {
                        return zT
                    },
                    kaj: function () {
                        return RT
                    },
                    kcg: function () {
                        return AT
                    },
                    kde: function () {
                        return OT
                    },
                    kea: function () {
                        return HT
                    },
                    kk: function () {
                        return _T
                    },
                    kkj: function () {
                        return LT
                    },
                    kl: function () {
                        return FT
                    },
                    km: function () {
                        return XT
                    },
                    kn: function () {
                        return UT
                    },
                    ko: function () {
                        return qT
                    },
                    ks: function () {
                        return GT
                    },
                    ksb: function () {
                        return VT
                    },
                    ksh: function () {
                        return YT
                    },
                    ku: function () {
                        return BT
                    },
                    kw: function () {
                        return $T
                    },
                    ky: function () {
                        return QT
                    },
                    lag: function () {
                        return KT
                    },
                    lb: function () {
                        return JT
                    },
                    lg: function () {
                        return ZT
                    },
                    lij: function () {
                        return eC
                    },
                    lkt: function () {
                        return tC
                    },
                    ln: function () {
                        return nC
                    },
                    lo: function () {
                        return rC
                    },
                    lt: function () {
                        return aC
                    },
                    lv: function () {
                        return iC
                    },
                    mas: function () {
                        return oC
                    },
                    mg: function () {
                        return sC
                    },
                    mgo: function () {
                        return uC
                    },
                    mk: function () {
                        return lC
                    },
                    ml: function () {
                        return dC
                    },
                    mn: function () {
                        return cC
                    },
                    mo: function () {
                        return mC
                    },
                    mr: function () {
                        return fC
                    },
                    ms: function () {
                        return hC
                    },
                    mt: function () {
                        return pC
                    },
                    my: function () {
                        return gC
                    },
                    nah: function () {
                        return vC
                    },
                    naq: function () {
                        return yC
                    },
                    nb: function () {
                        return wC
                    },
                    nd: function () {
                        return bC
                    },
                    ne: function () {
                        return kC
                    },
                    nl: function () {
                        return MC
                    },
                    nn: function () {
                        return EC
                    },
                    nnh: function () {
                        return PC
                    },
                    no: function () {
                        return xC
                    },
                    nqo: function () {
                        return SC
                    },
                    nr: function () {
                        return TC
                    },
                    nso: function () {
                        return CC
                    },
                    ny: function () {
                        return WC
                    },
                    nyn: function () {
                        return jC
                    },
                    om: function () {
                        return DC
                    },
                    or: function () {
                        return NC
                    },
                    os: function () {
                        return IC
                    },
                    osa: function () {
                        return zC
                    },
                    pa: function () {
                        return RC
                    },
                    pap: function () {
                        return AC
                    },
                    pcm: function () {
                        return OC
                    },
                    pl: function () {
                        return HC
                    },
                    prg: function () {
                        return _C
                    },
                    ps: function () {
                        return LC
                    },
                    pt: function () {
                        return FC
                    },
                    pt_PT: function () {
                        return XC
                    },
                    rm: function () {
                        return UC
                    },
                    ro: function () {
                        return qC
                    },
                    rof: function () {
                        return GC
                    },
                    ru: function () {
                        return VC
                    },
                    rwk: function () {
                        return YC
                    },
                    sah: function () {
                        return BC
                    },
                    saq: function () {
                        return $C
                    },
                    sat: function () {
                        return QC
                    },
                    sc: function () {
                        return KC
                    },
                    scn: function () {
                        return JC
                    },
                    sd: function () {
                        return ZC
                    },
                    sdh: function () {
                        return eW
                    },
                    se: function () {
                        return tW
                    },
                    seh: function () {
                        return nW
                    },
                    ses: function () {
                        return rW
                    },
                    sg: function () {
                        return aW
                    },
                    sh: function () {
                        return iW
                    },
                    shi: function () {
                        return oW
                    },
                    si: function () {
                        return sW
                    },
                    sk: function () {
                        return uW
                    },
                    sl: function () {
                        return lW
                    },
                    sma: function () {
                        return dW
                    },
                    smi: function () {
                        return cW
                    },
                    smj: function () {
                        return mW
                    },
                    smn: function () {
                        return fW
                    },
                    sms: function () {
                        return hW
                    },
                    sn: function () {
                        return pW
                    },
                    so: function () {
                        return gW
                    },
                    sq: function () {
                        return vW
                    },
                    sr: function () {
                        return yW
                    },
                    ss: function () {
                        return wW
                    },
                    ssy: function () {
                        return bW
                    },
                    st: function () {
                        return kW
                    },
                    su: function () {
                        return MW
                    },
                    sv: function () {
                        return EW
                    },
                    sw: function () {
                        return PW
                    },
                    syr: function () {
                        return xW
                    },
                    ta: function () {
                        return SW
                    },
                    te: function () {
                        return TW
                    },
                    teo: function () {
                        return CW
                    },
                    th: function () {
                        return WW
                    },
                    ti: function () {
                        return jW
                    },
                    tig: function () {
                        return DW
                    },
                    tk: function () {
                        return NW
                    },
                    tl: function () {
                        return IW
                    },
                    tn: function () {
                        return zW
                    },
                    to: function () {
                        return RW
                    },
                    tpi: function () {
                        return AW
                    },
                    tr: function () {
                        return OW
                    },
                    ts: function () {
                        return HW
                    },
                    tzm: function () {
                        return _W
                    },
                    ug: function () {
                        return LW
                    },
                    uk: function () {
                        return FW
                    },
                    und: function () {
                        return XW
                    },
                    ur: function () {
                        return UW
                    },
                    uz: function () {
                        return qW
                    },
                    ve: function () {
                        return GW
                    },
                    vi: function () {
                        return VW
                    },
                    vo: function () {
                        return YW
                    },
                    vun: function () {
                        return BW
                    },
                    wa: function () {
                        return $W
                    },
                    wae: function () {
                        return QW
                    },
                    wo: function () {
                        return KW
                    },
                    xh: function () {
                        return JW
                    },
                    xog: function () {
                        return ZW
                    },
                    yi: function () {
                        return ej
                    },
                    yo: function () {
                        return tj
                    },
                    yue: function () {
                        return nj
                    },
                    zh: function () {
                        return rj
                    },
                    zu: function () {
                        return aj
                    }
                }),
                n(9211);
            var r = n(7294),
                a = n(3935);
            function i(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                return r
            }
            function o(e, t) {
                if (e) {
                    if ('string' == typeof e) return i(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, - 1);
                    return 'Object' === n && e.constructor && (n = e.constructor.name),
                        'Map' === n || 'Set' === n ? Array.from(e) : 'Arguments' === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? i(e, t) : void 0
                }
            }
            function s(e, t) {
                return function (e) {
                    if (Array.isArray(e)) return e
                }(e) || function (e, t) {
                    var n = null == e ? null : 'undefined' != typeof Symbol && e[Symbol.iterator] || e['@@iterator'];
                    if (null != n) {
                        var r,
                            a,
                            i = [
                            ],
                            o = !0,
                            s = !1;
                        try {
                            for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value), !t || i.length !== t); o = !0);
                        } catch (e) {
                            s = !0,
                                a = e
                        } finally {
                            try {
                                o || null == n.return || n.return()
                            } finally {
                                if (s) throw a
                            }
                        }
                        return i
                    }
                }(e, t) || o(e, t) || function () {
                    throw new TypeError('Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.')
                }()
            }
            function u(e) {
                return u = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (e) {
                    return typeof e
                }
                    : function (e) {
                        return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e
                    },
                    u(e)
            }
            n(1703);
            var l,
                d = n(8767),
                c = n(7462);
            !function (e) {
                e.Pop = 'POP',
                    e.Push = 'PUSH',
                    e.Replace = 'REPLACE'
            }(l || (l = {
            }));
            var m = 'beforeunload';
            function f(e) {
                e.preventDefault(),
                    e.returnValue = ''
            }
            function h() {
                var e = [
                ];
                return {
                    get length() {
                        return e.length
                    },
                    push: function (t) {
                        return e.push(t),
                            function () {
                                e = e.filter((function (e) {
                                    return e !== t
                                }))
                            }
                    },
                    call: function (t) {
                        e.forEach((function (e) {
                            return e && e(t)
                        }))
                    }
                }
            }
            function p(e) {
                var t = e.pathname,
                    n = void 0 === t ? '/' : t,
                    r = e.search,
                    a = void 0 === r ? '' : r,
                    i = e.hash,
                    o = void 0 === i ? '' : i;
                return a && '?' !== a && (n += '?' === a.charAt(0) ? a : '?' + a),
                    o && '#' !== o && (n += '#' === o.charAt(0) ? o : '#' + o),
                    n
            }
            function g(e) {
                var t = {
                };
                if (e) {
                    var n = e.indexOf('#');
                    n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));
                    var r = e.indexOf('?');
                    r >= 0 && (t.search = e.substr(r), e = e.substr(0, r)),
                        e && (t.pathname = e)
                }
                return t
            }
            function v(e, t) {
                if (!e) throw new Error(t)
            }
            const y = (0, r.createContext)(null),
                w = (0, r.createContext)(null),
                b = (0, r.createContext)({
                    outlet: null,
                    matches: [
                    ]
                });
            function k(e) {
                let {
                    to: t,
                    replace: n,
                    state: a
                }
                    = e;
                S() || v(!1);
                let i = C();
                return (0, r.useEffect)((() => {
                    i(t, {
                        replace: n,
                        state: a
                    })
                })),
                    null
            }
            function M(e) {
                return function (e) {
                    let t = (0, r.useContext)(b).outlet;
                    return t ? (0, r.createElement)(W.Provider, {
                        value: e
                    }, t) : t
                }(e.context)
            }
            function E(e) {
                v(!1)
            }
            function P(e) {
                let {
                    basename: t = '/',
                    children: n = null,
                    location: a,
                    navigationType: i = l.Pop,
                    navigator: o,
                    static: s = !1
                }
                    = e;
                S() && v(!1);
                let u = X(t),
                    d = (0, r.useMemo)((() => ({
                        basename: u,
                        navigator: o,
                        static: s
                    })), [
                        u,
                        o,
                        s
                    ]);
                'string' == typeof a && (a = g(a));
                let {
                    pathname: c = '/',
                    search: m = '',
                    hash: f = '',
                    state: h = null,
                    key: p = 'default'
                }
                    = a,
                    b = (0, r.useMemo)((() => {
                        let e = L(c, u);
                        return null == e ? null : {
                            pathname: e,
                            search: m,
                            hash: f,
                            state: h,
                            key: p
                        }
                    }), [
                        u,
                        c,
                        m,
                        f,
                        h,
                        p
                    ]);
                return null == b ? null : (0, r.createElement)(y.Provider, {
                    value: d
                }, (0, r.createElement)(w.Provider, {
                    children: n,
                    value: {
                        location: b,
                        navigationType: i
                    }
                }))
            }
            function x(e) {
                let {
                    children: t,
                    location: n
                }
                    = e;
                return function (e, t) {
                    S() || v(!1);
                    let {
                        matches: n
                    }
                        = (0, r.useContext)(b),
                        a = n[n.length - 1],
                        i = a ? a.params : {
                        },
                        o = (a && a.pathname, a ? a.pathnameBase : '/');
                    a && a.route;
                    let s,
                        u = T();
                    if (t) {
                        var l;
                        let e = 'string' == typeof t ? g(t) : t;
                        '/' === o || (null == (l = e.pathname) ? void 0 : l.startsWith(o)) || v(!1),
                            s = e
                    } else s = u;
                    let d = s.pathname || '/',
                        c = function (e, t, n) {
                            void 0 === n && (n = '/');
                            let r = L(('string' == typeof t ? g(t) : t).pathname || '/', n);
                            if (null == r) return null;
                            let a = I(e);
                            !function (e) {
                                e.sort(((e, t) => e.score !== t.score ? t.score - e.score : function (e, t) {
                                    return e.length === t.length && e.slice(0, - 1).every(((e, n) => e === t[n])) ? e[e.length - 1] - t[t.length - 1] : 0
                                }(e.routesMeta.map((e => e.childrenIndex)), t.routesMeta.map((e => e.childrenIndex)))))
                            }(a);
                            let i = null;
                            for (let e = 0; null == i && e < a.length; ++e) i = O(a[e], r);
                            return i
                        }(e, {
                            pathname: '/' === o ? d : d.slice(o.length) || '/'
                        });
                    return function (e, t) {
                        return void 0 === t && (t = [
                        ]),
                            null == e ? null : e.reduceRight(((n, a, i) => (0, r.createElement)(b.Provider, {
                                children: void 0 !== a.route.element ? a.route.element : n,
                                value: {
                                    outlet: n,
                                    matches: t.concat(e.slice(0, i + 1))
                                }
                            })), null)
                    }(c && c.map((e => Object.assign({
                    }, e, {
                        params: Object.assign({
                        }, i, e.params),
                        pathname: F([o,
                            e.pathname]),
                        pathnameBase: '/' === e.pathnameBase ? o : F([o,
                            e.pathnameBase])
                    }))), n)
                }(N(t), n)
            }
            function S() {
                return null != (0, r.useContext)(w)
            }
            function T() {
                return S() || v(!1),
                    (0, r.useContext)(w).location
            }
            function C() {
                S() || v(!1);
                let {
                    basename: e,
                    navigator: t
                }
                    = (0, r.useContext)(y),
                    {
                        matches: n
                    }
                        = (0, r.useContext)(b),
                    {
                        pathname: a
                    }
                        = T(),
                    i = JSON.stringify(n.map((e => e.pathnameBase))),
                    o = (0, r.useRef)(!1);
                (0, r.useEffect)((() => {
                    o.current = !0
                }));
                let s = (0, r.useCallback)((function (n, r) {
                    if (void 0 === r && (r = {
                    }), !o.current) return;
                    if ('number' == typeof n) return void t.go(n);
                    let s = _(n, JSON.parse(i), a);
                    '/' !== e && (s.pathname = F([e,
                        s.pathname])),
                        (r.replace ? t.replace : t.push)(s, r.state)
                }), [
                    e,
                    t,
                    i,
                    a
                ]);
                return s
            }
            const W = (0, r.createContext)(null);
            function j() {
                let {
                    matches: e
                }
                    = (0, r.useContext)(b),
                    t = e[e.length - 1];
                return t ? t.params : {
                }
            }
            function D(e) {
                let {
                    matches: t
                }
                    = (0, r.useContext)(b),
                    {
                        pathname: n
                    }
                        = T(),
                    a = JSON.stringify(t.map((e => e.pathnameBase)));
                return (0, r.useMemo)((() => _(e, JSON.parse(a), n)), [
                    e,
                    a,
                    n
                ])
            }
            function N(e) {
                let t = [
                ];
                return r.Children.forEach(e, (e => {
                    if (!(0, r.isValidElement)(e)) return;
                    if (e.type === r.Fragment) return void t.push.apply(t, N(e.props.children));
                    e.type !== E && v(!1);
                    let n = {
                        caseSensitive: e.props.caseSensitive,
                        element: e.props.element,
                        index: e.props.index,
                        path: e.props.path
                    };
                    e.props.children && (n.children = N(e.props.children)),
                        t.push(n)
                })),
                    t
            }
            function I(e, t, n, r) {
                return void 0 === t && (t = [
                ]),
                    void 0 === n && (n = [
                    ]),
                    void 0 === r && (r = ''),
                    e.forEach(((e, a) => {
                        let i = {
                            relativePath: e.path || '',
                            caseSensitive: !0 === e.caseSensitive,
                            childrenIndex: a,
                            route: e
                        };
                        i.relativePath.startsWith('/') && (i.relativePath.startsWith(r) || v(!1), i.relativePath = i.relativePath.slice(r.length));
                        let o = F([r,
                            i.relativePath]),
                            s = n.concat(i);
                        e.children && e.children.length > 0 && (!0 === e.index && v(!1), I(e.children, t, s, o)),
                            (null != e.path || e.index) && t.push({
                                path: o,
                                score: A(o, e.index),
                                routesMeta: s
                            })
                    })),
                    t
            }
            const z = /^:\w+$/,
                R = e => '*' === e;
            function A(e, t) {
                let n = e.split('/'),
                    r = n.length;
                return n.some(R) && (r += - 2),
                    t && (r += 2),
                    n.filter((e => !R(e))).reduce(((e, t) => e + (z.test(t) ? 3 : '' === t ? 1 : 10)), r)
            }
            function O(e, t) {
                let {
                    routesMeta: n
                }
                    = e,
                    r = {
                    },
                    a = '/',
                    i = [
                    ];
                for (let e = 0; e < n.length; ++e) {
                    let o = n[e],
                        s = e === n.length - 1,
                        u = '/' === a ? t : t.slice(a.length) || '/',
                        l = H({
                            path: o.relativePath,
                            caseSensitive: o.caseSensitive,
                            end: s
                        }, u);
                    if (!l) return null;
                    Object.assign(r, l.params);
                    let d = o.route;
                    i.push({
                        params: r,
                        pathname: F([a,
                            l.pathname]),
                        pathnameBase: X(F([a,
                            l.pathnameBase])),
                        route: d
                    }),
                        '/' !== l.pathnameBase && (a = F([a,
                            l.pathnameBase]))
                }
                return i
            }
            function H(e, t) {
                'string' == typeof e && (e = {
                    path: e,
                    caseSensitive: !1,
                    end: !0
                });
                let [n,
                    r] = function (e, t, n) {
                        void 0 === t && (t = !1),
                            void 0 === n && (n = !0);
                        let r = [
                        ],
                            a = '^' + e.replace(/\/*\*?$/, '').replace(/^\/*/, '/').replace(/[\\.*+^$?{}|()[\]]/g, '\\$&').replace(/:(\w+)/g, ((e, t) => (r.push(t), '([^\\/]+)')));
                        return e.endsWith('*') ? (r.push('*'), a += '*' === e || '/*' === e ? '(.*)$' : '(?:\\/(.+)|\\/*)$') : a += n ? '\\/*$' : '(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)',
                            [
                                new RegExp(a, t ? void 0 : 'i'),
                                r
                            ]
                    }(e.path, e.caseSensitive, e.end),
                    a = t.match(n);
                if (!a) return null;
                let i = a[0],
                    o = i.replace(/(.)\/+$/, '$1'),
                    s = a.slice(1);
                return {
                    params: r.reduce(((e, t, n) => {
                        if ('*' === t) {
                            let e = s[n] || '';
                            o = i.slice(0, i.length - e.length).replace(/(.)\/+$/, '$1')
                        }
                        return e[t] = function (e, t) {
                            try {
                                return decodeURIComponent(e)
                            } catch (t) {
                                return e
                            }
                        }(s[n] || ''),
                            e
                    }), {
                    }),
                    pathname: i,
                    pathnameBase: o,
                    pattern: e
                }
            }
            function _(e, t, n) {
                let r,
                    a = 'string' == typeof e ? g(e) : e,
                    i = '' === e || '' === a.pathname ? '/' : a.pathname;
                if (null == i) r = n;
                else {
                    let e = t.length - 1;
                    if (i.startsWith('..')) {
                        let t = i.split('/');
                        for (; '..' === t[0];) t.shift(),
                            e -= 1;
                        a.pathname = t.join('/')
                    }
                    r = e >= 0 ? t[e] : '/'
                }
                let o = function (e, t) {
                    void 0 === t && (t = '/');
                    let {
                        pathname: n,
                        search: r = '',
                        hash: a = ''
                    }
                        = 'string' == typeof e ? g(e) : e,
                        i = n ? n.startsWith('/') ? n : function (e, t) {
                            let n = t.replace(/\/+$/, '').split('/');
                            return e.split('/').forEach((e => {
                                '..' === e ? n.length > 1 && n.pop() : '.' !== e && n.push(e)
                            })),
                                n.length > 1 ? n.join('/') : '/'
                        }(n, t) : t;
                    return {
                        pathname: i,
                        search: U(r),
                        hash: q(a)
                    }
                }(a, r);
                return i && '/' !== i && i.endsWith('/') && !o.pathname.endsWith('/') && (o.pathname += '/'),
                    o
            }
            function L(e, t) {
                if ('/' === t) return e;
                if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
                let n = e.charAt(t.length);
                return n && '/' !== n ? null : e.slice(t.length) || '/'
            }
            const F = e => e.join('/').replace(/\/\/+/g, '/'),
                X = e => e.replace(/\/+$/, '').replace(/^\/*/, '/'),
                U = e => e && '?' !== e ? e.startsWith('?') ? e : '?' + e : '',
                q = e => e && '#' !== e ? e.startsWith('#') ? e : '#' + e : '';
            function G() {
                return G = Object.assign || function (e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                },
                    G.apply(this, arguments)
            }
            function V(e, t) {
                if (null == e) return {
                };
                var n,
                    r,
                    a = {
                    },
                    i = Object.keys(e);
                for (r = 0; r < i.length; r++) n = i[r],
                    t.indexOf(n) >= 0 || (a[n] = e[n]);
                return a
            }
            const Y = [
                'onClick',
                'reloadDocument',
                'replace',
                'state',
                'target',
                'to'
            ],
                B = [
                    'aria-current',
                    'caseSensitive',
                    'className',
                    'end',
                    'style',
                    'to',
                    'children'
                ];
            function $(e) {
                let {
                    basename: t,
                    children: n,
                    window: a
                }
                    = e,
                    i = (0, r.useRef)();
                null == i.current && (i.current = function (e) {
                    void 0 === e && (e = {
                    });
                    var t = e.window,
                        n = void 0 === t ? document.defaultView : t,
                        r = n.history;
                    function a() {
                        var e = g(n.location.hash.substr(1)),
                            t = e.pathname,
                            a = void 0 === t ? '/' : t,
                            i = e.search,
                            o = void 0 === i ? '' : i,
                            s = e.hash,
                            u = void 0 === s ? '' : s,
                            l = r.state || {
                            };
                        return [l.idx,
                        {
                            pathname: a,
                            search: o,
                            hash: u,
                            state: l.usr || null,
                            key: l.key || 'default'
                        }
                        ]
                    }
                    var i = null;
                    function o() {
                        if (i) w.call(i),
                            i = null;
                        else {
                            var e = l.Pop,
                                t = a(),
                                n = t[0],
                                r = t[1];
                            if (w.length) {
                                if (null != n) {
                                    var o = d - n;
                                    o && (i = {
                                        action: e,
                                        location: r,
                                        retry: function () {
                                            x(- 1 * o)
                                        }
                                    }, x(o))
                                }
                            } else P(e)
                        }
                    }
                    n.addEventListener('popstate', o),
                        n.addEventListener('hashchange', (function () {
                            p(a()[1]) !== p(v) && o()
                        }));
                    var s = l.Pop,
                        u = a(),
                        d = u[0],
                        v = u[1],
                        y = h(),
                        w = h();
                    function b(e) {
                        return function () {
                            var e = document.querySelector('base'),
                                t = '';
                            if (e && e.getAttribute('href')) {
                                var r = n.location.href,
                                    a = r.indexOf('#');
                                t = - 1 === a ? r : r.slice(0, a)
                            }
                            return t
                        }() + '#' + ('string' == typeof e ? e : p(e))
                    }
                    function k(e, t) {
                        return void 0 === t && (t = null),
                            (0, c.Z)({
                                pathname: v.pathname,
                                hash: '',
                                search: ''
                            }, 'string' == typeof e ? g(e) : e, {
                                state: t,
                                key: Math.random().toString(36).substr(2, 8)
                            })
                    }
                    function M(e, t) {
                        return [{
                            usr: e.state,
                            key: e.key,
                            idx: t
                        },
                        b(e)]
                    }
                    function E(e, t, n) {
                        return !w.length || (w.call({
                            action: e,
                            location: t,
                            retry: n
                        }), !1)
                    }
                    function P(e) {
                        s = e;
                        var t = a();
                        d = t[0],
                            v = t[1],
                            y.call({
                                action: s,
                                location: v
                            })
                    }
                    function x(e) {
                        r.go(e)
                    }
                    null == d && (d = 0, r.replaceState((0, c.Z)({
                    }, r.state, {
                        idx: d
                    }), ''));
                    var S = {
                        get action() {
                            return s
                        },
                        get location() {
                            return v
                        },
                        createHref: b,
                        push: function e(t, a) {
                            var i = l.Push,
                                o = k(t, a);
                            if (E(i, o, (function () {
                                e(t, a)
                            }))) {
                                var s = M(o, d + 1),
                                    u = s[0],
                                    c = s[1];
                                try {
                                    r.pushState(u, '', c)
                                } catch (e) {
                                    n.location.assign(c)
                                }
                                P(i)
                            }
                        },
                        replace: function e(t, n) {
                            var a = l.Replace,
                                i = k(t, n);
                            if (E(a, i, (function () {
                                e(t, n)
                            }))) {
                                var o = M(i, d),
                                    s = o[0],
                                    u = o[1];
                                r.replaceState(s, '', u),
                                    P(a)
                            }
                        },
                        go: x,
                        back: function () {
                            x(- 1)
                        },
                        forward: function () {
                            x(1)
                        },
                        listen: function (e) {
                            return y.push(e)
                        },
                        block: function (e) {
                            var t = w.push(e);
                            return 1 === w.length && n.addEventListener(m, f),
                                function () {
                                    t(),
                                        w.length || n.removeEventListener(m, f)
                                }
                        }
                    };
                    return S
                }({
                    window: a
                }));
                let o = i.current,
                    [
                        s,
                        u
                    ] = (0, r.useState)({
                        action: o.action,
                        location: o.location
                    });
                return (0, r.useLayoutEffect)((() => o.listen(u)), [
                    o
                ]),
                    (0, r.createElement)(P, {
                        basename: t,
                        children: n,
                        location: s.location,
                        navigationType: s.action,
                        navigator: o
                    })
            }
            const Q = (0, r.forwardRef)((function (e, t) {
                let {
                    onClick: n,
                    reloadDocument: a,
                    replace: i = !1,
                    state: o,
                    target: s,
                    to: u
                }
                    = e,
                    l = V(e, Y),
                    d = function (e) {
                        S() || v(!1);
                        let {
                            basename: t,
                            navigator: n
                        }
                            = (0, r.useContext)(y),
                            {
                                hash: a,
                                pathname: i,
                                search: o
                            }
                                = D(e),
                            s = i;
                        if ('/' !== t) {
                            let n = function (e) {
                                return '' === e || '' === e.pathname ? '/' : 'string' == typeof e ? g(e).pathname : e.pathname
                            }(e),
                                r = null != n && n.endsWith('/');
                            s = '/' === i ? t + (r ? '/' : '') : F([t,
                                i])
                        }
                        return n.createHref({
                            pathname: s,
                            search: o,
                            hash: a
                        })
                    }(u),
                    c = function (e, t) {
                        let {
                            target: n,
                            replace: a,
                            state: i
                        }
                            = void 0 === t ? {
                            }
                                : t,
                            o = C(),
                            s = T(),
                            u = D(e);
                        return (0, r.useCallback)((t => {
                            if (!(0 !== t.button || n && '_self' !== n || function (e) {
                                return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
                            }(t))) {
                                t.preventDefault();
                                let n = !!a || p(s) === p(u);
                                o(e, {
                                    replace: n,
                                    state: i
                                })
                            }
                        }), [
                            s,
                            o,
                            u,
                            a,
                            i,
                            n,
                            e
                        ])
                    }(u, {
                        replace: i,
                        state: o,
                        target: s
                    });
                return (0, r.createElement)('a', G({
                }, l, {
                    href: d,
                    onClick: function (e) {
                        n && n(e),
                            e.defaultPrevented || a || c(e)
                    },
                    ref: t,
                    target: s
                }))
            })),
                K = (0, r.forwardRef)((function (e, t) {
                    let {
                        'aria-current': n = 'page',
                        caseSensitive: a = !1,
                        className: i = '',
                        end: o = !1,
                        style: s,
                        to: u,
                        children: l
                    }
                        = e,
                        d = V(e, B),
                        c = T(),
                        m = D(u),
                        f = c.pathname,
                        h = m.pathname;
                    a || (f = f.toLowerCase(), h = h.toLowerCase());
                    let p,
                        g = f === h || !o && f.startsWith(h) && '/' === f.charAt(h.length),
                        v = g ? n : void 0;
                    p = 'function' == typeof i ? i({
                        isActive: g
                    }) : [
                        i,
                        g ? 'active' : null
                    ].filter(Boolean).join(' ');
                    let y = 'function' == typeof s ? s({
                        isActive: g
                    }) : s;
                    return (0, r.createElement)(Q, G({
                    }, d, {
                        'aria-current': v,
                        className: p,
                        ref: t,
                        style: y,
                        to: u
                    }), 'function' == typeof l ? l({
                        isActive: g
                    }) : l)
                }));
            function J(e) {
                let t = (0, r.useRef)(Z(e)),
                    n = T(),
                    a = (0, r.useMemo)((() => {
                        let e = Z(n.search);
                        for (let n of t.current.keys()) e.has(n) || t.current.getAll(n).forEach((t => {
                            e.append(n, t)
                        }));
                        return e
                    }), [
                        n.search
                    ]),
                    i = C();
                return [a,
                    (0, r.useCallback)(((e, t) => {
                        i('?' + Z(e), t)
                    }), [
                        i
                    ])]
            }
            function Z(e) {
                return void 0 === e && (e = ''),
                    new URLSearchParams('string' == typeof e || Array.isArray(e) || e instanceof URLSearchParams ? e : Object.keys(e).reduce(((t, n) => {
                        let r = e[n];
                        return t.concat(Array.isArray(r) ? r.map((e => [n,
                            e])) : [
                            [n,
                                r]
                        ])
                    }), [
                    ]))
            }
            function ee(e, t, n, r, a, i, o) {
                try {
                    var s = e[i](o),
                        u = s.value
                } catch (e) {
                    return void n(e)
                }
                s.done ? t(u) : Promise.resolve(u).then(r, a)
            }
            function te(e) {
                return function () {
                    var t = this,
                        n = arguments;
                    return new Promise((function (r, a) {
                        var i = e.apply(t, n);
                        function o(e) {
                            ee(i, r, a, o, s, 'next', e)
                        }
                        function s(e) {
                            ee(i, r, a, o, s, 'throw', e)
                        }
                        o(void 0)
                    }))
                }
            }
            function ne(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var r = t[n];
                    r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        'value' in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                }
            }
            function re(e, t, n) {
                return t && ne(e.prototype, t),
                    n && ne(e, n),
                    Object.defineProperty(e, 'prototype', {
                        writable: !1
                    }),
                    e
            }
            function ae(e, t) {
                if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function')
            }
            n(1299),
                n(2419);
            var ie = n(9611);
            function oe(e, t) {
                if ('function' != typeof t && null !== t) throw new TypeError('Super expression must either be null or a function');
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }),
                    Object.defineProperty(e, 'prototype', {
                        writable: !1
                    }),
                    t && (0, ie.Z)(e, t)
            }
            function se(e, t) {
                if (t && ('object' === u(t) || 'function' == typeof t)) return t;
                if (void 0 !== t) throw new TypeError('Derived constructors may only return object or undefined');
                return function (e) {
                    if (void 0 === e) throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
                    return e
                }(e)
            }
            function ue(e) {
                return ue = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                },
                    ue(e)
            }
            function le() {
                if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ('function' == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [
                    ], (function () {
                    }))),
                        !0
                } catch (e) {
                    return !1
                }
            }
            function de(e, t, n) {
                return de = le() ? Reflect.construct : function (e, t, n) {
                    var r = [
                        null
                    ];
                    r.push.apply(r, t);
                    var a = new (Function.bind.apply(e, r));
                    return n && (0, ie.Z)(a, n.prototype),
                        a
                },
                    de.apply(null, arguments)
            }
            function ce(e) {
                var t = 'function' == typeof Map ? new Map : void 0;
                return ce = function (e) {
                    if (null === e || (n = e, - 1 === Function.toString.call(n).indexOf('[native code]'))) return e;
                    var n;
                    if ('function' != typeof e) throw new TypeError('Super expression must either be null or a function');
                    if (void 0 !== t) {
                        if (t.has(e)) return t.get(e);
                        t.set(e, r)
                    }
                    function r() {
                        return de(e, arguments, ue(this).constructor)
                    }
                    return r.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: r,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                        (0, ie.Z)(r, e)
                },
                    ce(e)
            }
            var me = n(7757),
                fe = n.n(me),
                he = (n(2222), n(1539), n(9714), n(8309), n(8674), n(324));
            var pe,
                ge = function (e) {
                    oe(a, e);
                    var t,
                        n,
                        r = (t = a, n = function () {
                            if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
                            if (Reflect.construct.sham) return !1;
                            if ('function' == typeof Proxy) return !0;
                            try {
                                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [
                                ], (function () {
                                }))),
                                    !0
                            } catch (e) {
                                return !1
                            }
                        }(), function () {
                            var e,
                                r = ue(t);
                            if (n) {
                                var a = ue(this).constructor;
                                e = Reflect.construct(r, arguments, a)
                            } else e = r.apply(this, arguments);
                            return se(this, e)
                        });
                    function a(e) {
                        var t;
                        return ae(this, a),
                            (t = r.call(this, e.statusText ? ''.concat(e.status, ' (').concat(e.statusText, ')') : e.status.toString())).name = t.constructor.name,
                            t.status = e.status,
                            t.statusText = e.statusText,
                            t.body = e.body,
                            t
                    }
                    return re(a)
                }(ce(Error)),
                ve = (Error, new he.V0({
                    customFetch: (pe = te(fe().mark((function e(t, n) {
                        var r;
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                        fetch(t, n);
                                case 2:
                                    if ((r = e.sent).ok) {
                                        e.next = 12;
                                        break
                                    }
                                    return e.t0 = ge,
                                        e.t1 = r.status,
                                        e.t2 = r.statusText,
                                        e.next = 9,
                                        r.text();
                                case 9:
                                    throw e.t3 = e.sent,
                                    e.t4 = {
                                        status: e.t1,
                                        statusText: e.t2,
                                        body: e.t3
                                    },
                                    new e.t0(e.t4);
                                case 12:
                                    return e.abrupt('return', r);
                                case 13:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    }))), function (e, t) {
                        return pe.apply(this, arguments)
                    })
                })),
                ye = function () {
                    var e = te(fe().mark((function e(t) {
                        var n;
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                        t;
                                case 2:
                                    if (n = e.sent, !we(n)) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.abrupt('return', {
                                        data: void 0,
                                        error: n.errorMessage
                                    });
                                case 5:
                                    return e.abrupt('return', {
                                        data: n,
                                        error: void 0
                                    });
                                case 6:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                we = function (e) {
                    return e && 'object' === u(e) && 'errorMessage' in e && 'MediaTrackerError' in e && 'string' == typeof e.errorMessage && !0 === e.MediaTrackerError
                },
                be = (0, r.createContext)(null),
                ke = function (e) {
                    var t = s((0, r.useState)('dark' === localStorage.theme), 2),
                        n = t[0],
                        a = t[1];
                    (0, r.useEffect)((function () {
                        var e = function (e) {
                            'theme' === e.key && i('dark' === e.newValue)
                        };
                        return window.addEventListener('storage', e),
                            function () {
                                return window.removeEventListener('storage', e)
                            }
                    }), [
                    ]);
                    var i = function (e) {
                        e ? (localStorage.theme = 'dark', document.documentElement.classList.add('dark')) : (localStorage.theme = 'light', document.documentElement.classList.remove('dark')),
                            a(e)
                    };
                    return r.createElement(be.Provider, {
                        value: {
                            darkMode: n,
                            setDarkMode: i
                        }
                    }, e.children)
                },
                Me = function () {
                    return (0, r.useContext)(be)
                };
            function Ee(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n,
                    e
            }
            n(4916),
                n(5306),
                n(8757),
                n(9653),
                n(9600),
                n(2707),
                n(1249);
            var Pe = r.createContext(null);
            function xe() {
                return r.useContext(Pe)
            }
            function Se(e, t) {
                var n;
                if ('undefined' == typeof Symbol || null == e[Symbol.iterator]) {
                    if (Array.isArray(e) || (n = function (e, t) {
                        if (e) {
                            if ('string' == typeof e) return Te(e, t);
                            var n = Object.prototype.toString.call(e).slice(8, - 1);
                            return 'Object' === n && e.constructor && (n = e.constructor.name),
                                'Map' === n || 'Set' === n ? Array.from(e) : 'Arguments' === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Te(e, t) : void 0
                        }
                    }(e)) || t && e && 'number' == typeof e.length) {
                        n && (e = n);
                        var r = 0,
                            a = function () {
                            };
                        return {
                            s: a,
                            n: function () {
                                return r >= e.length ? {
                                    done: !0
                                }
                                    : {
                                        done: !1,
                                        value: e[r++]
                                    }
                            },
                            e: function (e) {
                                throw e
                            },
                            f: a
                        }
                    }
                    throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.')
                }
                var i,
                    o = !0,
                    s = !1;
                return {
                    s: function () {
                        n = e[Symbol.iterator]()
                    },
                    n: function () {
                        var e = n.next();
                        return o = e.done,
                            e
                    },
                    e: function (e) {
                        s = !0,
                            i = e
                    },
                    f: function () {
                        try {
                            o || null == n.return || n.return()
                        } finally {
                            if (s) throw i
                        }
                    }
                }
            }
            function Te(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                return r
            }
            var Ce = /<(\d+)>(.*?)<\/\1>|<(\d+)\/>/,
                We = /(?:\r\n|\r|\n)/g,
                je = {
                    area: !0,
                    base: !0,
                    br: !0,
                    col: !0,
                    embed: !0,
                    hr: !0,
                    img: !0,
                    input: !0,
                    keygen: !0,
                    link: !0,
                    meta: !0,
                    param: !0,
                    source: !0,
                    track: !0,
                    wbr: !0,
                    menuitem: !0
                };
            function De(e) {
                if (!e.length) return [];
                var t = s(e.slice(0, 4), 4),
                    n = t[0],
                    r = t[1],
                    a = t[2],
                    i = t[3];
                return [[parseInt(n || a),
                r || '',
                    i]].concat(De(e.slice(4, e.length)))
            }
            var Ne = function () {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : '';
                return function () {
                    return ''.concat(t, '_').concat(e++)
                }
            };
            function Ie(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            function ze(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {
                    };
                    t % 2 ? Ie(Object(n), !0).forEach((function (t) {
                        Ee(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ie(Object(n)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            function Re(e) {
                var t = xe(),
                    n = t.i18n,
                    a = t.defaultComponent,
                    i = e.render,
                    o = e.component,
                    u = e.id,
                    l = e.message,
                    d = e.formats,
                    c = ze({
                    }, e.values),
                    m = ze({
                    }, e.components);
                c && Object.keys(c).forEach((function (e) {
                    var t = c[e];
                    if (r.isValidElement(t)) {
                        var n = Object.keys(m).length;
                        m[n] = t,
                            c[e] = '<'.concat(n, '/>')
                    }
                }));
                var f = n && 'function' == typeof n._ ? n._(u, c, {
                    message: l,
                    formats: d
                }) : u,
                    h = f ? function e(t) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                        },
                            a = Ne(0, '$lingui$'),
                            i = t.replace(We, '').split(Ce);
                        if (1 === i.length) return t;
                        var o = [
                        ],
                            u = i.shift();
                        u && o.push(u);
                        var l,
                            d = Se(De(i));
                        try {
                            for (d.s(); !(l = d.n()).done;) {
                                var c = s(l.value, 3),
                                    m = c[0],
                                    f = c[1],
                                    h = c[2],
                                    p = n[m];
                                (!p || je[p.type] && f) && (p ? console.error(''.concat(p.type, ' is a void element tag therefore it must have no children')) : console.error('Can use element at index \''.concat(m, '\' as it is not declared in the original translation')), p = r.createElement(r.Fragment)),
                                    o.push(r.cloneElement(p, {
                                        key: a()
                                    }, f ? e(f, n) : p.props.children)),
                                    h && o.push(h)
                            }
                        } catch (e) {
                            d.e(e)
                        } finally {
                            d.f()
                        }
                        return o
                    }(f, m) : null;
                if (null === i || null === o) return h;
                var p = a || r.Fragment;
                if (i && o) console.error('You can\'t use both `component` and `render` prop at the same time. `component` is ignored.');
                else if (i && 'function' != typeof i) console.error('Invalid value supplied to prop `render`. It must be a function, provided '.concat(i));
                else if (o && 'function' != typeof o) return console.error('Invalid value supplied to prop `component`. It must be a React component, provided '.concat(o)),
                    r.createElement(p, null, h);
                if ('function' == typeof i) return i({
                    id: u,
                    translation: h,
                    message: l
                });
                var g = o || p;
                return r.createElement(g, null, h)
            }
            Re.defaultProps = {
                values: {
                },
                components: {
                }
            };
            const Ae = function (e) {
                var t = e.i18n,
                    n = e.defaultComponent,
                    a = e.forceRenderOnLocaleChange,
                    i = void 0 === a || a,
                    o = e.children,
                    u = function () {
                        return {
                            i18n: t,
                            defaultComponent: n
                        }
                    },
                    l = function () {
                        return i && t.locale || 'default'
                    },
                    d = s(r.useState(u()), 2),
                    c = d[0],
                    m = d[1],
                    f = s(r.useState(l()), 2),
                    h = f[0],
                    p = f[1];
                return r.useEffect((function () {
                    var e = t.on('change', (function () {
                        m(u()),
                            p(l())
                    }));
                    return 'default' === h && p(l()),
                        i && 'default' === h && console.log('I18nProvider did not render. A call to i18n.activate still needs to happen or forceRenderOnLocaleChange must be set to false.'),
                        function () {
                            return e()
                        }
                }), [
                ]),
                    i && 'default' === h ? null : r.createElement(Pe.Provider, {
                        value: c,
                        key: h
                    }, o)
            },
                Oe = Re,
                He = xe;
            function _e(e, t) {
                if (null == e) return {
                };
                var n,
                    r,
                    a = function (e, t) {
                        if (null == e) return {
                        };
                        var n,
                            r,
                            a = {
                            },
                            i = Object.keys(e);
                        for (r = 0; r < i.length; r++) n = i[r],
                            t.indexOf(n) >= 0 || (a[n] = e[n]);
                        return a
                    }(e, t);
                if (Object.getOwnPropertySymbols) {
                    var i = Object.getOwnPropertySymbols(e);
                    for (r = 0; r < i.length; r++) n = i[r],
                        t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (a[n] = e[n])
                }
                return a
            }
            var Le = function (e) {
                return 'string' == typeof e
            },
                Fe = function (e) {
                    return 'function' == typeof e
                },
                Xe = new Map,
                Ue = new Map;
            function qe(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                },
                    n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                return function (r) {
                    if (Le(r) && (r = new Date(r)), n) {
                        var a = Ve(e, t),
                            i = Ue.get(a);
                        if (i) return i.format(r);
                        var o = new Intl.DateTimeFormat(e, t);
                        return Ue.set(a, o),
                            o.format(r)
                    }
                    return new Intl.DateTimeFormat(e, t).format(r)
                }
            }
            function Ge(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                },
                    n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                return function (r) {
                    if (n) {
                        var a = Ve(e, t),
                            i = Xe.get(a);
                        if (i) return i.format(r);
                        var o = new Intl.NumberFormat(e, t);
                        return Xe.set(a, o),
                            o.format(r)
                    }
                    return new Intl.NumberFormat(e, t).format(r)
                }
            }
            function Ve(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                },
                    n = Array.isArray(e) ? e.sort().join('-') : e;
                return ''.concat(n, '-').concat(JSON.stringify(t))
            }
            Object.freeze({
                __proto__: null,
                date: qe,
                number: Ge
            });
            var Ye = /\\u[a-fA-F0-9]{4}|\\x[a-fA-F0-9]{2}/g;
            function Be(e) {
                var t = e.locale,
                    n = e.locales,
                    r = e.values,
                    a = e.formats,
                    i = function (e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                            plurals: void 0
                        },
                            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {
                            };
                        t = t || e;
                        var a = n.plurals,
                            i = function (e) {
                                return Le(e) ? r[e] || {
                                    style: e
                                }
                                    : e
                            },
                            o = function (e, n) {
                                return function (r) {
                                    var a = Fe(n) ? n(r) : n,
                                        i = Array.isArray(a) ? a : [
                                            a
                                        ],
                                        o = Ge(t)(e);
                                    return i.map((function (e) {
                                        return Le(e) ? e.replace('#', o) : e
                                    }))
                                }
                            };
                        return a || console.error('Plurals for locale '.concat(e, ' aren\'t loaded. Use i18n.loadLocaleData method to load plurals for specific locale. Using other plural rule as a fallback.')),
                        {
                            plural: function (e, t) {
                                var n = t.offset,
                                    r = void 0 === n ? 0 : n,
                                    i = _e(t, [
                                        'offset'
                                    ]),
                                    s = i[e] || i[null == a ? void 0 : a(e - r)] || i.other;
                                return o(e - r, s)
                            },
                            selectordinal: function (e, t) {
                                var n = t.offset,
                                    r = void 0 === n ? 0 : n,
                                    i = _e(t, [
                                        'offset'
                                    ]),
                                    s = i[e] || i[null == a ? void 0 : a(e - r, !0)] || i.other;
                                return o(e - r, s)
                            },
                            select: function (e, t) {
                                return t[e] || t.other
                            },
                            number: function (e, n) {
                                return Ge(t, i(n))(e)
                            },
                            date: function (e, n) {
                                return qe(t, i(n))(e)
                            },
                            undefined: function (e) {
                                return e
                            }
                        }
                    }(t, n, e.localeData, a);
                return function e(t, n, a) {
                    var o = r[t],
                        s = i[n](o, a),
                        u = Fe(s) ? s(e) : s;
                    return Array.isArray(u) ? u.join('') : u
                }
            }
            function $e(e, t, n, r) {
                return function (a) {
                    var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    },
                        o = Be({
                            locale: t,
                            locales: n,
                            localeData: r,
                            formats: i,
                            values: a
                        }),
                        u = function e(t) {
                            return Array.isArray(t) ? t.reduce((function (t, n) {
                                if (Le(n)) return t + n;
                                var r = s(n, 3),
                                    a = r[0],
                                    i = r[1],
                                    u = r[2],
                                    l = {
                                    };
                                null == u || Le(u) ? l = u : Object.keys(u).forEach((function (t) {
                                    l[t] = e(u[t])
                                }));
                                var d = o(a, i, l);
                                return null == d ? t : t + d
                            }), '') : t
                        },
                        l = u(e);
                    return Le(l) && Ye.test(l) ? JSON.parse('"'.concat(l.trim(), '"')) : Le(l) ? l.trim() : l
                }
            }
            var Qe = function () {
                function e() {
                    ae(this, e),
                        this._events = {
                        }
                }
                return re(e, [
                    {
                        key: 'on',
                        value: function (e, t) {
                            var n = this;
                            return this._hasEvent(e) || (this._events[e] = [
                            ]),
                                this._events[e].push(t),
                                function () {
                                    return n.removeListener(e, t)
                                }
                        }
                    },
                    {
                        key: 'removeListener',
                        value: function (e, t) {
                            if (this._hasEvent(e)) {
                                var n = this._events[e].indexOf(t);
                                ~n && this._events[e].splice(n, 1)
                            }
                        }
                    },
                    {
                        key: 'emit',
                        value: function (e) {
                            for (var t = this, n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++) r[a - 1] = arguments[a];
                            this._hasEvent(e) && this._events[e].map((function (e) {
                                return e.apply(t, r)
                            }))
                        }
                    },
                    {
                        key: '_hasEvent',
                        value: function (e) {
                            return Array.isArray(this._events[e])
                        }
                    }
                ]),
                    e
            }(),
                Ke = function (e) {
                    oe(n, e);
                    var t = function (e) {
                        var t = function () {
                            if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
                            if (Reflect.construct.sham) return !1;
                            if ('function' == typeof Proxy) return !0;
                            try {
                                return Date.prototype.toString.call(Reflect.construct(Date, [
                                ], (function () {
                                }))),
                                    !0
                            } catch (e) {
                                return !1
                            }
                        }();
                        return function () {
                            var n,
                                r = ue(e);
                            if (t) {
                                var a = ue(this).constructor;
                                n = Reflect.construct(r, arguments, a)
                            } else n = r.apply(this, arguments);
                            return se(this, n)
                        }
                    }(n);
                    function n(e) {
                        var r;
                        return ae(this, n),
                            (r = t.call(this))._messages = {
                            },
                            r._localeData = {
                            },
                            null != e.missing && (r._missing = e.missing),
                            null != e.messages && r.load(e.messages),
                            null != e.localeData && r.loadLocaleData(e.localeData),
                            null == e.locale && null == e.locales || r.activate(e.locale, e.locales),
                            r
                    }
                    return re(n, [
                        {
                            key: '_loadLocaleData',
                            value: function (e, t) {
                                null == this._localeData[e] ? this._localeData[e] = t : Object.assign(this._localeData[e], t)
                            }
                        },
                        {
                            key: 'loadLocaleData',
                            value: function (e, t) {
                                var n = this;
                                null != t ? this._loadLocaleData(e, t) : Object.keys(e).forEach((function (t) {
                                    return n._loadLocaleData(t, e[t])
                                })),
                                    this.emit('change')
                            }
                        },
                        {
                            key: '_load',
                            value: function (e, t) {
                                null == this._messages[e] ? this._messages[e] = t : Object.assign(this._messages[e], t)
                            }
                        },
                        {
                            key: 'load',
                            value: function (e, t) {
                                var n = this;
                                null != t ? this._load(e, t) : Object.keys(e).forEach((function (t) {
                                    return n._load(t, e[t])
                                })),
                                    this.emit('change')
                            }
                        },
                        {
                            key: 'activate',
                            value: function (e, t) {
                                this._locale = e,
                                    this._locales = t,
                                    this.emit('change')
                            }
                        },
                        {
                            key: '_',
                            value: function (e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                                },
                                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                                    },
                                    r = n.message,
                                    a = n.formats,
                                    i = n.context;
                                Le(e) || (t = e.values || t, r = e.message, i = e.context, e = e.id);
                                var o,
                                    s = !i && !this.messages[e],
                                    u = i && !this.messages[i][e],
                                    l = u || s,
                                    d = this._missing;
                                return d && l ? Fe(d) ? d(this._locale, e, i) : d : (l && this.emit('missing', {
                                    id: e,
                                    context: i,
                                    locale: this._locale
                                }), o = i && !u ? this.messages[i][e] || r || e : this.messages[e] || r || e, Le(o) && Ye.test(o) ? JSON.parse('"'.concat(o, '"')) : Le(o) ? o : $e(o, this._locale, this._locales, this.localeData)(t, a))
                            }
                        },
                        {
                            key: 'date',
                            value: function (e, t) {
                                return qe(this._locales || this._locale, t)(e)
                            }
                        },
                        {
                            key: 'number',
                            value: function (e, t) {
                                return Ge(this._locales || this._locale, t)(e)
                            }
                        },
                        {
                            key: 'locale',
                            get: function () {
                                return this._locale
                            }
                        },
                        {
                            key: 'locales',
                            get: function () {
                                return this._locales
                            }
                        },
                        {
                            key: 'messages',
                            get: function () {
                                var e;
                                return null !== (e = this._messages[this._locale]) && void 0 !== e ? e : {
                                }
                            }
                        },
                        {
                            key: 'localeData',
                            get: function () {
                                var e;
                                return null !== (e = this._localeData[this._locale]) && void 0 !== e ? e : {
                                }
                            }
                        }
                    ]),
                        n
                }(Qe),
                Je = function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                    };
                    return new Ke(e)
                }();
            const Ze = Je;
            function et(e) {
                var t,
                    n,
                    r = '';
                if ('string' == typeof e || 'number' == typeof e) r += e;
                else if ('object' == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) e[t] && (n = et(e[t])) && (r && (r += ' '), r += n);
                else for (t in e) e[t] && (r && (r += ' '), r += t);
                return r
            }
            function tt() {
                for (var e, t, n = 0, r = ''; n < arguments.length;) (e = arguments[n++]) && (t = et(e)) && (r && (r += ' '), r += t);
                return r
            }
            var nt = {
                lessThanXSeconds: {
                    one: 'less than a second',
                    other: 'less than {{count}} seconds'
                },
                xSeconds: {
                    one: '1 second',
                    other: '{{count}} seconds'
                },
                halfAMinute: 'half a minute',
                lessThanXMinutes: {
                    one: 'less than a minute',
                    other: 'less than {{count}} minutes'
                },
                xMinutes: {
                    one: '1 minute',
                    other: '{{count}} minutes'
                },
                aboutXHours: {
                    one: 'about 1 hour',
                    other: 'about {{count}} hours'
                },
                xHours: {
                    one: '1 hour',
                    other: '{{count}} hours'
                },
                xDays: {
                    one: '1 day',
                    other: '{{count}} days'
                },
                aboutXWeeks: {
                    one: 'about 1 week',
                    other: 'about {{count}} weeks'
                },
                xWeeks: {
                    one: '1 week',
                    other: '{{count}} weeks'
                },
                aboutXMonths: {
                    one: 'about 1 month',
                    other: 'about {{count}} months'
                },
                xMonths: {
                    one: '1 month',
                    other: '{{count}} months'
                },
                aboutXYears: {
                    one: 'about 1 year',
                    other: 'about {{count}} years'
                },
                xYears: {
                    one: '1 year',
                    other: '{{count}} years'
                },
                overXYears: {
                    one: 'over 1 year',
                    other: 'over {{count}} years'
                },
                almostXYears: {
                    one: 'almost 1 year',
                    other: 'almost {{count}} years'
                }
            },
                rt = function (e, t, n) {
                    var r,
                        a = nt[e];
                    return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t.toString()),
                        null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'in ' + r : r + ' ago' : r
                };
            function at(e) {
                return function () {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                    },
                        n = t.width ? String(t.width) : e.defaultWidth,
                        r = e.formats[n] || e.formats[e.defaultWidth];
                    return r
                }
            }
            var it = {
                date: at({
                    formats: {
                        full: 'EEEE, MMMM do, y',
                        long: 'MMMM do, y',
                        medium: 'MMM d, y',
                        short: 'MM/dd/yyyy'
                    },
                    defaultWidth: 'full'
                }),
                time: at({
                    formats: {
                        full: 'h:mm:ss a zzzz',
                        long: 'h:mm:ss a z',
                        medium: 'h:mm:ss a',
                        short: 'h:mm a'
                    },
                    defaultWidth: 'full'
                }),
                dateTime: at({
                    formats: {
                        full: '{{date}} \'at\' {{time}}',
                        long: '{{date}} \'at\' {{time}}',
                        medium: '{{date}}, {{time}}',
                        short: '{{date}}, {{time}}'
                    },
                    defaultWidth: 'full'
                })
            },
                ot = {
                    lastWeek: '\'last\' eeee \'at\' p',
                    yesterday: '\'yesterday at\' p',
                    today: '\'today at\' p',
                    tomorrow: '\'tomorrow at\' p',
                    nextWeek: 'eeee \'at\' p',
                    other: 'P'
                },
                st = function (e, t, n, r) {
                    return ot[e]
                };
            function ut(e) {
                return function (t, n) {
                    var r,
                        a = n || {
                        };
                    if ('formatting' === (a.context ? String(a.context) : 'standalone') && e.formattingValues) {
                        var i = e.defaultFormattingWidth || e.defaultWidth,
                            o = a.width ? String(a.width) : i;
                        r = e.formattingValues[o] || e.formattingValues[i]
                    } else {
                        var s = e.defaultWidth,
                            u = a.width ? String(a.width) : e.defaultWidth;
                        r = e.values[u] || e.values[s]
                    }
                    return r[e.argumentCallback ? e.argumentCallback(t) : t]
                }
            }
            var lt = {
                ordinalNumber: function (e, t) {
                    var n = Number(e),
                        r = n % 100;
                    if (r > 20 || r < 10) switch (r % 10) {
                        case 1:
                            return n + 'st';
                        case 2:
                            return n + 'nd';
                        case 3:
                            return n + 'rd'
                    }
                    return n + 'th'
                },
                era: ut({
                    values: {
                        narrow: [
                            'B',
                            'A'
                        ],
                        abbreviated: [
                            'BC',
                            'AD'
                        ],
                        wide: [
                            'Before Christ',
                            'Anno Domini'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                quarter: ut({
                    values: {
                        narrow: [
                            '1',
                            '2',
                            '3',
                            '4'
                        ],
                        abbreviated: [
                            'Q1',
                            'Q2',
                            'Q3',
                            'Q4'
                        ],
                        wide: [
                            '1st quarter',
                            '2nd quarter',
                            '3rd quarter',
                            '4th quarter'
                        ]
                    },
                    defaultWidth: 'wide',
                    argumentCallback: function (e) {
                        return e - 1
                    }
                }),
                month: ut({
                    values: {
                        narrow: [
                            'J',
                            'F',
                            'M',
                            'A',
                            'M',
                            'J',
                            'J',
                            'A',
                            'S',
                            'O',
                            'N',
                            'D'
                        ],
                        abbreviated: [
                            'Jan',
                            'Feb',
                            'Mar',
                            'Apr',
                            'May',
                            'Jun',
                            'Jul',
                            'Aug',
                            'Sep',
                            'Oct',
                            'Nov',
                            'Dec'
                        ],
                        wide: [
                            'January',
                            'February',
                            'March',
                            'April',
                            'May',
                            'June',
                            'July',
                            'August',
                            'September',
                            'October',
                            'November',
                            'December'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                day: ut({
                    values: {
                        narrow: [
                            'S',
                            'M',
                            'T',
                            'W',
                            'T',
                            'F',
                            'S'
                        ],
                        short: [
                            'Su',
                            'Mo',
                            'Tu',
                            'We',
                            'Th',
                            'Fr',
                            'Sa'
                        ],
                        abbreviated: [
                            'Sun',
                            'Mon',
                            'Tue',
                            'Wed',
                            'Thu',
                            'Fri',
                            'Sat'
                        ],
                        wide: [
                            'Sunday',
                            'Monday',
                            'Tuesday',
                            'Wednesday',
                            'Thursday',
                            'Friday',
                            'Saturday'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                dayPeriod: ut({
                    values: {
                        narrow: {
                            am: 'a',
                            pm: 'p',
                            midnight: 'mi',
                            noon: 'n',
                            morning: 'morning',
                            afternoon: 'afternoon',
                            evening: 'evening',
                            night: 'night'
                        },
                        abbreviated: {
                            am: 'AM',
                            pm: 'PM',
                            midnight: 'midnight',
                            noon: 'noon',
                            morning: 'morning',
                            afternoon: 'afternoon',
                            evening: 'evening',
                            night: 'night'
                        },
                        wide: {
                            am: 'a.m.',
                            pm: 'p.m.',
                            midnight: 'midnight',
                            noon: 'noon',
                            morning: 'morning',
                            afternoon: 'afternoon',
                            evening: 'evening',
                            night: 'night'
                        }
                    },
                    defaultWidth: 'wide',
                    formattingValues: {
                        narrow: {
                            am: 'a',
                            pm: 'p',
                            midnight: 'mi',
                            noon: 'n',
                            morning: 'in the morning',
                            afternoon: 'in the afternoon',
                            evening: 'in the evening',
                            night: 'at night'
                        },
                        abbreviated: {
                            am: 'AM',
                            pm: 'PM',
                            midnight: 'midnight',
                            noon: 'noon',
                            morning: 'in the morning',
                            afternoon: 'in the afternoon',
                            evening: 'in the evening',
                            night: 'at night'
                        },
                        wide: {
                            am: 'a.m.',
                            pm: 'p.m.',
                            midnight: 'midnight',
                            noon: 'noon',
                            morning: 'in the morning',
                            afternoon: 'in the afternoon',
                            evening: 'in the evening',
                            night: 'at night'
                        }
                    },
                    defaultFormattingWidth: 'wide'
                })
            };
            function dt(e) {
                return function (t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    },
                        r = n.width,
                        a = r && e.matchPatterns[r] || e.matchPatterns[e.defaultMatchWidth],
                        i = t.match(a);
                    if (!i) return null;
                    var o,
                        s = i[0],
                        u = r && e.parsePatterns[r] || e.parsePatterns[e.defaultParseWidth],
                        l = Array.isArray(u) ? mt(u, (function (e) {
                            return e.test(s)
                        })) : ct(u, (function (e) {
                            return e.test(s)
                        }));
                    o = e.valueCallback ? e.valueCallback(l) : l,
                        o = n.valueCallback ? n.valueCallback(o) : o;
                    var d = t.slice(s.length);
                    return {
                        value: o,
                        rest: d
                    }
                }
            }
            function ct(e, t) {
                for (var n in e) if (e.hasOwnProperty(n) && t(e[n])) return n
            }
            function mt(e, t) {
                for (var n = 0; n < e.length; n++) if (t(e[n])) return n
            }
            function ft(e) {
                return function (t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    },
                        r = t.match(e.matchPattern);
                    if (!r) return null;
                    var a = r[0],
                        i = t.match(e.parsePattern);
                    if (!i) return null;
                    var o = e.valueCallback ? e.valueCallback(i[0]) : i[0];
                    o = n.valueCallback ? n.valueCallback(o) : o;
                    var s = t.slice(a.length);
                    return {
                        value: o,
                        rest: s
                    }
                }
            }
            var ht = {
                ordinalNumber: ft({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: function (e) {
                        return parseInt(e, 10)
                    }
                }),
                era: dt({
                    matchPatterns: {
                        narrow: /^(b|a)/i,
                        abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                        wide: /^(before christ|before common era|anno domini|common era)/i
                    },
                    defaultMatchWidth: 'wide',
                    parsePatterns: {
                        any: [
                            /^b/i,
                            /^(a|c)/i
                        ]
                    },
                    defaultParseWidth: 'any'
                }),
                quarter: dt({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234](th|st|nd|rd)? quarter/i
                    },
                    defaultMatchWidth: 'wide',
                    parsePatterns: {
                        any: [
                            /1/i,
                            /2/i,
                            /3/i,
                            /4/i
                        ]
                    },
                    defaultParseWidth: 'any',
                    valueCallback: function (e) {
                        return e + 1
                    }
                }),
                month: dt({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
                        wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
                    },
                    defaultMatchWidth: 'wide',
                    parsePatterns: {
                        narrow: [
                            /^j/i,
                            /^f/i,
                            /^m/i,
                            /^a/i,
                            /^m/i,
                            /^j/i,
                            /^j/i,
                            /^a/i,
                            /^s/i,
                            /^o/i,
                            /^n/i,
                            /^d/i
                        ],
                        any: [
                            /^ja/i,
                            /^f/i,
                            /^mar/i,
                            /^ap/i,
                            /^may/i,
                            /^jun/i,
                            /^jul/i,
                            /^au/i,
                            /^s/i,
                            /^o/i,
                            /^n/i,
                            /^d/i
                        ]
                    },
                    defaultParseWidth: 'any'
                }),
                day: dt({
                    matchPatterns: {
                        narrow: /^[smtwf]/i,
                        short: /^(su|mo|tu|we|th|fr|sa)/i,
                        abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
                        wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
                    },
                    defaultMatchWidth: 'wide',
                    parsePatterns: {
                        narrow: [
                            /^s/i,
                            /^m/i,
                            /^t/i,
                            /^w/i,
                            /^t/i,
                            /^f/i,
                            /^s/i
                        ],
                        any: [
                            /^su/i,
                            /^m/i,
                            /^tu/i,
                            /^w/i,
                            /^th/i,
                            /^f/i,
                            /^sa/i
                        ]
                    },
                    defaultParseWidth: 'any'
                }),
                dayPeriod: dt({
                    matchPatterns: {
                        narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                        any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                    },
                    defaultMatchWidth: 'any',
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mi/i,
                            noon: /^no/i,
                            morning: /morning/i,
                            afternoon: /afternoon/i,
                            evening: /evening/i,
                            night: /night/i
                        }
                    },
                    defaultParseWidth: 'any'
                })
            },
                pt = {
                    code: 'en-US',
                    formatDistance: rt,
                    formatLong: it,
                    formatRelative: st,
                    localize: lt,
                    match: ht,
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                gt = [
                    'years',
                    'months',
                    'weeks',
                    'days',
                    'hours',
                    'minutes',
                    'seconds'
                ];
            function vt(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                };
                if (arguments.length < 1) throw new TypeError('1 argument required, but only '.concat(arguments.length, ' present'));
                var n = (null == t ? void 0 : t.format) || gt,
                    r = (null == t ? void 0 : t.locale) || pt,
                    a = (null == t ? void 0 : t.zero) || !1,
                    i = (null == t ? void 0 : t.delimiter) || ' ',
                    o = n.reduce((function (t, n) {
                        var i = 'x'.concat(n.replace(/(^.)/, (function (e) {
                            return e.toUpperCase()
                        })));
                        return 'number' == typeof e[n] && (a || e[n]) && r.formatDistance ? t.concat(r.formatDistance(i, e[n])) : t
                    }), [
                    ]).join(i);
                return o
            }
            function yt(e, t) {
                if (t.length < e) throw new TypeError(e + ' argument' + (e > 1 ? 's' : '') + ' required, but only ' + t.length + ' present')
            }
            function wt(e) {
                yt(1, arguments);
                var t = Object.prototype.toString.call(e);
                return e instanceof Date || 'object' == typeof e && '[object Date]' === t ? new Date(e.getTime()) : 'number' == typeof e || '[object Number]' === t ? new Date(e) : ('string' != typeof e && '[object String]' !== t || 'undefined' == typeof console || (console.warn('Starting with v2.0.0-beta.1 date-fns doesn\'t accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule'), console.warn((new Error).stack)), new Date(NaN))
            }
            function bt(e, t) {
                yt(2, arguments);
                var n = wt(e),
                    r = wt(t),
                    a = n.getTime() - r.getTime();
                return a < 0 ? - 1 : a > 0 ? 1 : a
            }
            function kt(e, t) {
                yt(2, arguments);
                var n = wt(e),
                    r = wt(t);
                return n.getFullYear() - r.getFullYear()
            }
            function Mt(e, t) {
                yt(2, arguments);
                var n = wt(e),
                    r = wt(t),
                    a = bt(n, r),
                    i = Math.abs(kt(n, r));
                n.setFullYear(1584),
                    r.setFullYear(1584);
                var o = bt(n, r) === - a,
                    s = a * (i - Number(o));
                return 0 === s ? 0 : s
            }
            function Et(e, t) {
                yt(2, arguments);
                var n = wt(e),
                    r = wt(t),
                    a = n.getFullYear() - r.getFullYear(),
                    i = n.getMonth() - r.getMonth();
                return 12 * a + i
            }
            function Pt(e) {
                yt(1, arguments);
                var t = wt(e);
                return t.setHours(23, 59, 59, 999),
                    t
            }
            function xt(e) {
                yt(1, arguments);
                var t = wt(e),
                    n = t.getMonth();
                return t.setFullYear(t.getFullYear(), n + 1, 0),
                    t.setHours(23, 59, 59, 999),
                    t
            }
            function St(e) {
                yt(1, arguments);
                var t = wt(e);
                return Pt(t).getTime() === xt(t).getTime()
            }
            function Tt(e, t) {
                yt(2, arguments);
                var n,
                    r = wt(e),
                    a = wt(t),
                    i = bt(r, a),
                    o = Math.abs(Et(r, a));
                if (o < 1) n = 0;
                else {
                    1 === r.getMonth() && r.getDate() > 27 && r.setDate(30),
                        r.setMonth(r.getMonth() - i * o);
                    var s = bt(r, a) === - i;
                    St(wt(e)) && 1 === o && 1 === bt(e, a) && (s = !1),
                        n = i * (o - Number(s))
                }
                return 0 === n ? 0 : n
            }
            function Ct(e) {
                var t = new Date(Date.UTC(e.getFullYear(), e.getMonth(), e.getDate(), e.getHours(), e.getMinutes(), e.getSeconds(), e.getMilliseconds()));
                return t.setUTCFullYear(e.getFullYear()),
                    e.getTime() - t.getTime()
            }
            function Wt(e) {
                yt(1, arguments);
                var t = wt(e);
                return t.setHours(0, 0, 0, 0),
                    t
            }
            var jt = 86400000;
            function Dt(e, t) {
                yt(2, arguments);
                var n = Wt(e),
                    r = Wt(t),
                    a = n.getTime() - Ct(n),
                    i = r.getTime() - Ct(r);
                return Math.round((a - i) / jt)
            }
            function Nt(e, t) {
                var n = e.getFullYear() - t.getFullYear() || e.getMonth() - t.getMonth() || e.getDate() - t.getDate() || e.getHours() - t.getHours() || e.getMinutes() - t.getMinutes() || e.getSeconds() - t.getSeconds() || e.getMilliseconds() - t.getMilliseconds();
                return n < 0 ? - 1 : n > 0 ? 1 : n
            }
            function It(e, t) {
                yt(2, arguments);
                var n = wt(e),
                    r = wt(t),
                    a = Nt(n, r),
                    i = Math.abs(Dt(n, r));
                n.setDate(n.getDate() - a * i);
                var o = Number(Nt(n, r) === - a),
                    s = a * (i - o);
                return 0 === s ? 0 : s
            }
            Math.pow(10, 8);
            var zt = 3600000;
            function Rt(e, t) {
                return yt(2, arguments),
                    wt(e).getTime() - wt(t).getTime()
            }
            var At = {
                ceil: Math.ceil,
                round: Math.round,
                floor: Math.floor,
                trunc: function (e) {
                    return e < 0 ? Math.ceil(e) : Math.floor(e)
                }
            };
            function Ot(e) {
                return e ? At[e] : At.trunc
            }
            function Ht(e, t, n) {
                yt(2, arguments);
                var r = Rt(e, t) / zt;
                return Ot(null == n ? void 0 : n.roundingMethod)(r)
            }
            function _t(e, t, n) {
                yt(2, arguments);
                var r = Rt(e, t) / 60000;
                return Ot(null == n ? void 0 : n.roundingMethod)(r)
            }
            function Lt(e, t, n) {
                yt(2, arguments);
                var r = Rt(e, t) / 1000;
                return Ot(null == n ? void 0 : n.roundingMethod)(r)
            }
            function Ft(e) {
                return yt(1, arguments),
                    e instanceof Date || 'object' == typeof e && '[object Date]' === Object.prototype.toString.call(e)
            }
            function Xt(e) {
                if (yt(1, arguments), !Ft(e) && 'number' != typeof e) return !1;
                var t = wt(e);
                return !isNaN(Number(t))
            }
            function Ut(e) {
                if (null === e || !0 === e || !1 === e) return NaN;
                var t = Number(e);
                return isNaN(t) ? t : t < 0 ? Math.ceil(t) : Math.floor(t)
            }
            function qt(e, t) {
                yt(2, arguments);
                var n = wt(e),
                    r = Ut(t);
                return isNaN(r) ? new Date(NaN) : r ? (n.setDate(n.getDate() + r), n) : n
            }
            function Gt(e, t) {
                yt(2, arguments);
                var n = Ut(t);
                return qt(e, - n)
            }
            function Vt(e, t) {
                yt(2, arguments);
                var n = wt(e),
                    r = Ut(t);
                if (isNaN(r)) return new Date(NaN);
                if (!r) return n;
                var a = n.getDate(),
                    i = new Date(n.getTime());
                i.setMonth(n.getMonth() + r + 1, 0);
                var o = i.getDate();
                return a >= o ? i : (n.setFullYear(i.getFullYear(), i.getMonth(), a), n)
            }
            function Yt(e, t) {
                yt(2, arguments);
                var n = Ut(t);
                return Vt(e, - n)
            }
            function Bt(e, t) {
                if (yt(2, arguments), !t || 'object' != typeof t) return new Date(NaN);
                var n = t.years ? Ut(t.years) : 0,
                    r = t.months ? Ut(t.months) : 0,
                    a = t.weeks ? Ut(t.weeks) : 0,
                    i = t.days ? Ut(t.days) : 0,
                    o = t.hours ? Ut(t.hours) : 0,
                    s = t.minutes ? Ut(t.minutes) : 0,
                    u = t.seconds ? Ut(t.seconds) : 0,
                    l = Yt(e, r + 12 * n),
                    d = Gt(l, i + 7 * a),
                    c = s + 60 * o,
                    m = u + 60 * c,
                    f = 1000 * m,
                    h = new Date(d.getTime() - f);
                return h
            }
            function $t(e) {
                var t = e.start,
                    n = e.end;
                yt(1, arguments);
                var r = wt(t),
                    a = wt(n);
                if (!Xt(r)) throw new RangeError('Start Date is invalid');
                if (!Xt(a)) throw new RangeError('End Date is invalid');
                var i = {
                    years: 0,
                    months: 0,
                    days: 0,
                    hours: 0,
                    minutes: 0,
                    seconds: 0
                },
                    o = bt(r, a);
                i.years = Math.abs(Mt(r, a));
                var s = Bt(r, {
                    years: o * i.years
                });
                i.months = Math.abs(Tt(s, a));
                var u = Bt(s, {
                    months: o * i.months
                });
                i.days = Math.abs(It(u, a));
                var l = Bt(u, {
                    days: o * i.days
                });
                i.hours = Math.abs(Ht(l, a));
                var d = Bt(l, {
                    hours: o * i.hours
                });
                i.minutes = Math.abs(_t(d, a));
                var c = Bt(d, {
                    minutes: o * i.minutes
                });
                return i.seconds = Math.abs(Lt(c, a)),
                    i
            }
            function Qt(e, t) {
                yt(2, arguments);
                var n = wt(e).getTime(),
                    r = Ut(t);
                return new Date(n + r)
            }
            function Kt(e, t) {
                yt(2, arguments);
                var n = Ut(t);
                return Qt(e, - n)
            }
            var Jt = 86400000;
            function Zt(e) {
                yt(1, arguments);
                var t = 1,
                    n = wt(e),
                    r = n.getUTCDay(),
                    a = (r < t ? 7 : 0) + r - t;
                return n.setUTCDate(n.getUTCDate() - a),
                    n.setUTCHours(0, 0, 0, 0),
                    n
            }
            function en(e) {
                yt(1, arguments);
                var t = wt(e),
                    n = t.getUTCFullYear(),
                    r = new Date(0);
                r.setUTCFullYear(n + 1, 0, 4),
                    r.setUTCHours(0, 0, 0, 0);
                var a = Zt(r),
                    i = new Date(0);
                i.setUTCFullYear(n, 0, 4),
                    i.setUTCHours(0, 0, 0, 0);
                var o = Zt(i);
                return t.getTime() >= a.getTime() ? n + 1 : t.getTime() >= o.getTime() ? n : n - 1
            }
            function tn(e) {
                yt(1, arguments);
                var t = en(e),
                    n = new Date(0);
                n.setUTCFullYear(t, 0, 4),
                    n.setUTCHours(0, 0, 0, 0);
                var r = Zt(n);
                return r
            }
            var nn = 604800000;
            function rn(e) {
                yt(1, arguments);
                var t = wt(e),
                    n = Zt(t).getTime() - tn(t).getTime();
                return Math.round(n / nn) + 1
            }
            function an(e, t) {
                yt(1, arguments);
                var n = t || {
                },
                    r = n.locale,
                    a = r && r.options && r.options.weekStartsOn,
                    i = null == a ? 0 : Ut(a),
                    o = null == n.weekStartsOn ? i : Ut(n.weekStartsOn);
                if (!(o >= 0 && o <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
                var s = wt(e),
                    u = s.getUTCDay(),
                    l = (u < o ? 7 : 0) + u - o;
                return s.setUTCDate(s.getUTCDate() - l),
                    s.setUTCHours(0, 0, 0, 0),
                    s
            }
            function on(e, t) {
                yt(1, arguments);
                var n = wt(e),
                    r = n.getUTCFullYear(),
                    a = t || {
                    },
                    i = a.locale,
                    o = i && i.options && i.options.firstWeekContainsDate,
                    s = null == o ? 1 : Ut(o),
                    u = null == a.firstWeekContainsDate ? s : Ut(a.firstWeekContainsDate);
                if (!(u >= 1 && u <= 7)) throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
                var l = new Date(0);
                l.setUTCFullYear(r + 1, 0, u),
                    l.setUTCHours(0, 0, 0, 0);
                var d = an(l, t),
                    c = new Date(0);
                c.setUTCFullYear(r, 0, u),
                    c.setUTCHours(0, 0, 0, 0);
                var m = an(c, t);
                return n.getTime() >= d.getTime() ? r + 1 : n.getTime() >= m.getTime() ? r : r - 1
            }
            function sn(e, t) {
                yt(1, arguments);
                var n = t || {
                },
                    r = n.locale,
                    a = r && r.options && r.options.firstWeekContainsDate,
                    i = null == a ? 1 : Ut(a),
                    o = null == n.firstWeekContainsDate ? i : Ut(n.firstWeekContainsDate),
                    s = on(e, t),
                    u = new Date(0);
                u.setUTCFullYear(s, 0, o),
                    u.setUTCHours(0, 0, 0, 0);
                var l = an(u, t);
                return l
            }
            var un = 604800000;
            function ln(e, t) {
                yt(1, arguments);
                var n = wt(e),
                    r = an(n, t).getTime() - sn(n, t).getTime();
                return Math.round(r / un) + 1
            }
            function dn(e, t) {
                for (var n = e < 0 ? '-' : '', r = Math.abs(e).toString(); r.length < t;) r = '0' + r;
                return n + r
            }
            var cn = function (e, t) {
                var n = e.getUTCFullYear(),
                    r = n > 0 ? n : 1 - n;
                return dn('yy' === t ? r % 100 : r, t.length)
            },
                mn = function (e, t) {
                    var n = e.getUTCMonth();
                    return 'M' === t ? String(n + 1) : dn(n + 1, 2)
                },
                fn = function (e, t) {
                    return dn(e.getUTCDate(), t.length)
                },
                hn = function (e, t) {
                    return dn(e.getUTCHours() % 12 || 12, t.length)
                },
                pn = function (e, t) {
                    return dn(e.getUTCHours(), t.length)
                },
                gn = function (e, t) {
                    return dn(e.getUTCMinutes(), t.length)
                },
                vn = function (e, t) {
                    return dn(e.getUTCSeconds(), t.length)
                },
                yn = function (e, t) {
                    var n = t.length,
                        r = e.getUTCMilliseconds();
                    return dn(Math.floor(r * Math.pow(10, n - 3)), t.length)
                },
                wn = {
                    G: function (e, t, n) {
                        var r = e.getUTCFullYear() > 0 ? 1 : 0;
                        switch (t) {
                            case 'G':
                            case 'GG':
                            case 'GGG':
                                return n.era(r, {
                                    width: 'abbreviated'
                                });
                            case 'GGGGG':
                                return n.era(r, {
                                    width: 'narrow'
                                });
                            default:
                                return n.era(r, {
                                    width: 'wide'
                                })
                        }
                    },
                    y: function (e, t, n) {
                        if ('yo' === t) {
                            var r = e.getUTCFullYear(),
                                a = r > 0 ? r : 1 - r;
                            return n.ordinalNumber(a, {
                                unit: 'year'
                            })
                        }
                        return cn(e, t)
                    },
                    Y: function (e, t, n, r) {
                        var a = on(e, r),
                            i = a > 0 ? a : 1 - a;
                        return 'YY' === t ? dn(i % 100, 2) : 'Yo' === t ? n.ordinalNumber(i, {
                            unit: 'year'
                        }) : dn(i, t.length)
                    },
                    R: function (e, t) {
                        return dn(en(e), t.length)
                    },
                    u: function (e, t) {
                        return dn(e.getUTCFullYear(), t.length)
                    },
                    Q: function (e, t, n) {
                        var r = Math.ceil((e.getUTCMonth() + 1) / 3);
                        switch (t) {
                            case 'Q':
                                return String(r);
                            case 'QQ':
                                return dn(r, 2);
                            case 'Qo':
                                return n.ordinalNumber(r, {
                                    unit: 'quarter'
                                });
                            case 'QQQ':
                                return n.quarter(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                });
                            case 'QQQQQ':
                                return n.quarter(r, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.quarter(r, {
                                    width: 'wide',
                                    context: 'formatting'
                                })
                        }
                    },
                    q: function (e, t, n) {
                        var r = Math.ceil((e.getUTCMonth() + 1) / 3);
                        switch (t) {
                            case 'q':
                                return String(r);
                            case 'qq':
                                return dn(r, 2);
                            case 'qo':
                                return n.ordinalNumber(r, {
                                    unit: 'quarter'
                                });
                            case 'qqq':
                                return n.quarter(r, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                });
                            case 'qqqqq':
                                return n.quarter(r, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            default:
                                return n.quarter(r, {
                                    width: 'wide',
                                    context: 'standalone'
                                })
                        }
                    },
                    M: function (e, t, n) {
                        var r = e.getUTCMonth();
                        switch (t) {
                            case 'M':
                            case 'MM':
                                return mn(e, t);
                            case 'Mo':
                                return n.ordinalNumber(r + 1, {
                                    unit: 'month'
                                });
                            case 'MMM':
                                return n.month(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                });
                            case 'MMMMM':
                                return n.month(r, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.month(r, {
                                    width: 'wide',
                                    context: 'formatting'
                                })
                        }
                    },
                    L: function (e, t, n) {
                        var r = e.getUTCMonth();
                        switch (t) {
                            case 'L':
                                return String(r + 1);
                            case 'LL':
                                return dn(r + 1, 2);
                            case 'Lo':
                                return n.ordinalNumber(r + 1, {
                                    unit: 'month'
                                });
                            case 'LLL':
                                return n.month(r, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                });
                            case 'LLLLL':
                                return n.month(r, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            default:
                                return n.month(r, {
                                    width: 'wide',
                                    context: 'standalone'
                                })
                        }
                    },
                    w: function (e, t, n, r) {
                        var a = ln(e, r);
                        return 'wo' === t ? n.ordinalNumber(a, {
                            unit: 'week'
                        }) : dn(a, t.length)
                    },
                    I: function (e, t, n) {
                        var r = rn(e);
                        return 'Io' === t ? n.ordinalNumber(r, {
                            unit: 'week'
                        }) : dn(r, t.length)
                    },
                    d: function (e, t, n) {
                        return 'do' === t ? n.ordinalNumber(e.getUTCDate(), {
                            unit: 'date'
                        }) : fn(e, t)
                    },
                    D: function (e, t, n) {
                        var r = function (e) {
                            yt(1, arguments);
                            var t = wt(e),
                                n = t.getTime();
                            t.setUTCMonth(0, 1),
                                t.setUTCHours(0, 0, 0, 0);
                            var r = t.getTime(),
                                a = n - r;
                            return Math.floor(a / Jt) + 1
                        }(e);
                        return 'Do' === t ? n.ordinalNumber(r, {
                            unit: 'dayOfYear'
                        }) : dn(r, t.length)
                    },
                    E: function (e, t, n) {
                        var r = e.getUTCDay();
                        switch (t) {
                            case 'E':
                            case 'EE':
                            case 'EEE':
                                return n.day(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                });
                            case 'EEEEE':
                                return n.day(r, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'EEEEEE':
                                return n.day(r, {
                                    width: 'short',
                                    context: 'formatting'
                                });
                            default:
                                return n.day(r, {
                                    width: 'wide',
                                    context: 'formatting'
                                })
                        }
                    },
                    e: function (e, t, n, r) {
                        var a = e.getUTCDay(),
                            i = (a - r.weekStartsOn + 8) % 7 || 7;
                        switch (t) {
                            case 'e':
                                return String(i);
                            case 'ee':
                                return dn(i, 2);
                            case 'eo':
                                return n.ordinalNumber(i, {
                                    unit: 'day'
                                });
                            case 'eee':
                                return n.day(a, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                });
                            case 'eeeee':
                                return n.day(a, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'eeeeee':
                                return n.day(a, {
                                    width: 'short',
                                    context: 'formatting'
                                });
                            default:
                                return n.day(a, {
                                    width: 'wide',
                                    context: 'formatting'
                                })
                        }
                    },
                    c: function (e, t, n, r) {
                        var a = e.getUTCDay(),
                            i = (a - r.weekStartsOn + 8) % 7 || 7;
                        switch (t) {
                            case 'c':
                                return String(i);
                            case 'cc':
                                return dn(i, t.length);
                            case 'co':
                                return n.ordinalNumber(i, {
                                    unit: 'day'
                                });
                            case 'ccc':
                                return n.day(a, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                });
                            case 'ccccc':
                                return n.day(a, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            case 'cccccc':
                                return n.day(a, {
                                    width: 'short',
                                    context: 'standalone'
                                });
                            default:
                                return n.day(a, {
                                    width: 'wide',
                                    context: 'standalone'
                                })
                        }
                    },
                    i: function (e, t, n) {
                        var r = e.getUTCDay(),
                            a = 0 === r ? 7 : r;
                        switch (t) {
                            case 'i':
                                return String(a);
                            case 'ii':
                                return dn(a, t.length);
                            case 'io':
                                return n.ordinalNumber(a, {
                                    unit: 'day'
                                });
                            case 'iii':
                                return n.day(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                });
                            case 'iiiii':
                                return n.day(r, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'iiiiii':
                                return n.day(r, {
                                    width: 'short',
                                    context: 'formatting'
                                });
                            default:
                                return n.day(r, {
                                    width: 'wide',
                                    context: 'formatting'
                                })
                        }
                    },
                    a: function (e, t, n) {
                        var r = e.getUTCHours() / 12 >= 1 ? 'pm' : 'am';
                        switch (t) {
                            case 'a':
                            case 'aa':
                                return n.dayPeriod(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                });
                            case 'aaa':
                                return n.dayPeriod(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }).toLowerCase();
                            case 'aaaaa':
                                return n.dayPeriod(r, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.dayPeriod(r, {
                                    width: 'wide',
                                    context: 'formatting'
                                })
                        }
                    },
                    b: function (e, t, n) {
                        var r,
                            a = e.getUTCHours();
                        switch (r = 12 === a ? 'noon' : 0 === a ? 'midnight' : a / 12 >= 1 ? 'pm' : 'am', t) {
                            case 'b':
                            case 'bb':
                                return n.dayPeriod(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                });
                            case 'bbb':
                                return n.dayPeriod(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }).toLowerCase();
                            case 'bbbbb':
                                return n.dayPeriod(r, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.dayPeriod(r, {
                                    width: 'wide',
                                    context: 'formatting'
                                })
                        }
                    },
                    B: function (e, t, n) {
                        var r,
                            a = e.getUTCHours();
                        switch (r = a >= 17 ? 'evening' : a >= 12 ? 'afternoon' : a >= 4 ? 'morning' : 'night', t) {
                            case 'B':
                            case 'BB':
                            case 'BBB':
                                return n.dayPeriod(r, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                });
                            case 'BBBBB':
                                return n.dayPeriod(r, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.dayPeriod(r, {
                                    width: 'wide',
                                    context: 'formatting'
                                })
                        }
                    },
                    h: function (e, t, n) {
                        if ('ho' === t) {
                            var r = e.getUTCHours() % 12;
                            return 0 === r && (r = 12),
                                n.ordinalNumber(r, {
                                    unit: 'hour'
                                })
                        }
                        return hn(e, t)
                    },
                    H: function (e, t, n) {
                        return 'Ho' === t ? n.ordinalNumber(e.getUTCHours(), {
                            unit: 'hour'
                        }) : pn(e, t)
                    },
                    K: function (e, t, n) {
                        var r = e.getUTCHours() % 12;
                        return 'Ko' === t ? n.ordinalNumber(r, {
                            unit: 'hour'
                        }) : dn(r, t.length)
                    },
                    k: function (e, t, n) {
                        var r = e.getUTCHours();
                        return 0 === r && (r = 24),
                            'ko' === t ? n.ordinalNumber(r, {
                                unit: 'hour'
                            }) : dn(r, t.length)
                    },
                    m: function (e, t, n) {
                        return 'mo' === t ? n.ordinalNumber(e.getUTCMinutes(), {
                            unit: 'minute'
                        }) : gn(e, t)
                    },
                    s: function (e, t, n) {
                        return 'so' === t ? n.ordinalNumber(e.getUTCSeconds(), {
                            unit: 'second'
                        }) : vn(e, t)
                    },
                    S: function (e, t) {
                        return yn(e, t)
                    },
                    X: function (e, t, n, r) {
                        var a = (r._originalDate || e).getTimezoneOffset();
                        if (0 === a) return 'Z';
                        switch (t) {
                            case 'X':
                                return kn(a);
                            case 'XXXX':
                            case 'XX':
                                return Mn(a);
                            default:
                                return Mn(a, ':')
                        }
                    },
                    x: function (e, t, n, r) {
                        var a = (r._originalDate || e).getTimezoneOffset();
                        switch (t) {
                            case 'x':
                                return kn(a);
                            case 'xxxx':
                            case 'xx':
                                return Mn(a);
                            default:
                                return Mn(a, ':')
                        }
                    },
                    O: function (e, t, n, r) {
                        var a = (r._originalDate || e).getTimezoneOffset();
                        switch (t) {
                            case 'O':
                            case 'OO':
                            case 'OOO':
                                return 'GMT' + bn(a, ':');
                            default:
                                return 'GMT' + Mn(a, ':')
                        }
                    },
                    z: function (e, t, n, r) {
                        var a = (r._originalDate || e).getTimezoneOffset();
                        switch (t) {
                            case 'z':
                            case 'zz':
                            case 'zzz':
                                return 'GMT' + bn(a, ':');
                            default:
                                return 'GMT' + Mn(a, ':')
                        }
                    },
                    t: function (e, t, n, r) {
                        var a = r._originalDate || e;
                        return dn(Math.floor(a.getTime() / 1000), t.length)
                    },
                    T: function (e, t, n, r) {
                        return dn((r._originalDate || e).getTime(), t.length)
                    }
                };
            function bn(e, t) {
                var n = e > 0 ? '-' : '+',
                    r = Math.abs(e),
                    a = Math.floor(r / 60),
                    i = r % 60;
                if (0 === i) return n + String(a);
                var o = t || '';
                return n + String(a) + o + dn(i, 2)
            }
            function kn(e, t) {
                return e % 60 == 0 ? (e > 0 ? '-' : '+') + dn(Math.abs(e) / 60, 2) : Mn(e, t)
            }
            function Mn(e, t) {
                var n = t || '',
                    r = e > 0 ? '-' : '+',
                    a = Math.abs(e);
                return r + dn(Math.floor(a / 60), 2) + n + dn(a % 60, 2)
            }
            var En = wn;
            function Pn(e, t) {
                switch (e) {
                    case 'P':
                        return t.date({
                            width: 'short'
                        });
                    case 'PP':
                        return t.date({
                            width: 'medium'
                        });
                    case 'PPP':
                        return t.date({
                            width: 'long'
                        });
                    default:
                        return t.date({
                            width: 'full'
                        })
                }
            }
            function xn(e, t) {
                switch (e) {
                    case 'p':
                        return t.time({
                            width: 'short'
                        });
                    case 'pp':
                        return t.time({
                            width: 'medium'
                        });
                    case 'ppp':
                        return t.time({
                            width: 'long'
                        });
                    default:
                        return t.time({
                            width: 'full'
                        })
                }
            }
            var Sn = {
                p: xn,
                P: function (e, t) {
                    var n,
                        r = e.match(/(P+)(p+)?/) || [
                        ],
                        a = r[1],
                        i = r[2];
                    if (!i) return Pn(e, t);
                    switch (a) {
                        case 'P':
                            n = t.dateTime({
                                width: 'short'
                            });
                            break;
                        case 'PP':
                            n = t.dateTime({
                                width: 'medium'
                            });
                            break;
                        case 'PPP':
                            n = t.dateTime({
                                width: 'long'
                            });
                            break;
                        default:
                            n = t.dateTime({
                                width: 'full'
                            })
                    }
                    return n.replace('{{date}}', Pn(a, t)).replace('{{time}}', xn(i, t))
                }
            },
                Tn = [
                    'D',
                    'DD'
                ],
                Cn = [
                    'YY',
                    'YYYY'
                ];
            function Wn(e) {
                return - 1 !== Tn.indexOf(e)
            }
            function jn(e) {
                return - 1 !== Cn.indexOf(e)
            }
            function Dn(e, t, n) {
                if ('YYYY' === e) throw new RangeError('Use `yyyy` instead of `YYYY` (in `'.concat(t, '`) for formatting years to the input `').concat(n, '`; see: https://git.io/fxCyr'));
                if ('YY' === e) throw new RangeError('Use `yy` instead of `YY` (in `'.concat(t, '`) for formatting years to the input `').concat(n, '`; see: https://git.io/fxCyr'));
                if ('D' === e) throw new RangeError('Use `d` instead of `D` (in `'.concat(t, '`) for formatting days of the month to the input `').concat(n, '`; see: https://git.io/fxCyr'));
                if ('DD' === e) throw new RangeError('Use `dd` instead of `DD` (in `'.concat(t, '`) for formatting days of the month to the input `').concat(n, '`; see: https://git.io/fxCyr'))
            }
            var Nn = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
                In = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
                zn = /^'([^]*?)'?$/,
                Rn = /''/g,
                An = /[a-zA-Z]/;
            function On(e, t, n) {
                yt(2, arguments);
                var r = String(t),
                    a = n || {
                    },
                    i = a.locale || pt,
                    o = i.options && i.options.firstWeekContainsDate,
                    s = null == o ? 1 : Ut(o),
                    u = null == a.firstWeekContainsDate ? s : Ut(a.firstWeekContainsDate);
                if (!(u >= 1 && u <= 7)) throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
                var l = i.options && i.options.weekStartsOn,
                    d = null == l ? 0 : Ut(l),
                    c = null == a.weekStartsOn ? d : Ut(a.weekStartsOn);
                if (!(c >= 0 && c <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
                if (!i.localize) throw new RangeError('locale must contain localize property');
                if (!i.formatLong) throw new RangeError('locale must contain formatLong property');
                var m = wt(e);
                if (!Xt(m)) throw new RangeError('Invalid time value');
                var f = Ct(m),
                    h = Kt(m, f),
                    p = {
                        firstWeekContainsDate: u,
                        weekStartsOn: c,
                        locale: i,
                        _originalDate: m
                    },
                    g = r.match(In).map((function (e) {
                        var t = e[0];
                        return 'p' === t || 'P' === t ? (0, Sn[t])(e, i.formatLong, p) : e
                    })).join('').match(Nn).map((function (n) {
                        if ('\'\'' === n) return '\'';
                        var r = n[0];
                        if ('\'' === r) return Hn(n);
                        var o = En[r];
                        if (o) return !a.useAdditionalWeekYearTokens && jn(n) && Dn(n, t, e),
                            !a.useAdditionalDayOfYearTokens && Wn(n) && Dn(n, t, e),
                            o(h, n, i.localize, p);
                        if (r.match(An)) throw new RangeError('Format string contains an unescaped latin alphabet character `' + r + '`');
                        return n
                    })).join('');
                return g
            }
            function Hn(e) {
                return e.match(zn)[1].replace(Rn, '\'')
            }
            function _n(e, t) {
                if (null == e) throw new TypeError('assign requires that input parameter not be null or undefined');
                for (var n in t = t || {
                }) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                return e
            }
            function Ln(e, t, n) {
                yt(2, arguments);
                var r = n || {
                },
                    a = r.locale,
                    i = a && a.options && a.options.weekStartsOn,
                    o = null == i ? 0 : Ut(i),
                    s = null == r.weekStartsOn ? o : Ut(r.weekStartsOn);
                if (!(s >= 0 && s <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
                var u = wt(e),
                    l = Ut(t),
                    d = u.getUTCDay(),
                    c = l % 7,
                    m = (c + 7) % 7,
                    f = (m < s ? 7 : 0) + l - d;
                return u.setUTCDate(u.getUTCDate() + f),
                    u
            }
            var Fn = /^(1[0-2]|0?\d)/,
                Xn = /^(3[0-1]|[0-2]?\d)/,
                Un = /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
                qn = /^(5[0-3]|[0-4]?\d)/,
                Gn = /^(2[0-3]|[0-1]?\d)/,
                Vn = /^(2[0-4]|[0-1]?\d)/,
                Yn = /^(1[0-1]|0?\d)/,
                Bn = /^(1[0-2]|0?\d)/,
                $n = /^[0-5]?\d/,
                Qn = /^[0-5]?\d/,
                Kn = /^\d/,
                Jn = /^\d{1,2}/,
                Zn = /^\d{1,3}/,
                er = /^\d{1,4}/,
                tr = /^-?\d+/,
                nr = /^-?\d/,
                rr = /^-?\d{1,2}/,
                ar = /^-?\d{1,3}/,
                ir = /^-?\d{1,4}/,
                or = /^([+-])(\d{2})(\d{2})?|Z/,
                sr = /^([+-])(\d{2})(\d{2})|Z/,
                ur = /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
                lr = /^([+-])(\d{2}):(\d{2})|Z/,
                dr = /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/;
            function cr(e, t, n) {
                var r = t.match(e);
                if (!r) return null;
                var a = parseInt(r[0], 10);
                return {
                    value: n ? n(a) : a,
                    rest: t.slice(r[0].length)
                }
            }
            function mr(e, t) {
                var n = t.match(e);
                return n ? 'Z' === n[0] ? {
                    value: 0,
                    rest: t.slice(1)
                }
                    : {
                        value: ('+' === n[1] ? 1 : - 1) * (3600000 * (n[2] ? parseInt(n[2], 10) : 0) + 60000 * (n[3] ? parseInt(n[3], 10) : 0) + 1000 * (n[5] ? parseInt(n[5], 10) : 0)),
                        rest: t.slice(n[0].length)
                    }
                    : null
            }
            function fr(e, t) {
                return cr(tr, e, t)
            }
            function hr(e, t, n) {
                switch (e) {
                    case 1:
                        return cr(Kn, t, n);
                    case 2:
                        return cr(Jn, t, n);
                    case 3:
                        return cr(Zn, t, n);
                    case 4:
                        return cr(er, t, n);
                    default:
                        return cr(new RegExp('^\\d{1,' + e + '}'), t, n)
                }
            }
            function pr(e, t, n) {
                switch (e) {
                    case 1:
                        return cr(nr, t, n);
                    case 2:
                        return cr(rr, t, n);
                    case 3:
                        return cr(ar, t, n);
                    case 4:
                        return cr(ir, t, n);
                    default:
                        return cr(new RegExp('^-?\\d{1,' + e + '}'), t, n)
                }
            }
            function gr(e) {
                switch (e) {
                    case 'morning':
                        return 4;
                    case 'evening':
                        return 17;
                    case 'pm':
                    case 'noon':
                    case 'afternoon':
                        return 12;
                    default:
                        return 0
                }
            }
            function vr(e, t) {
                var n,
                    r = t > 0,
                    a = r ? t : 1 - t;
                if (a <= 50) n = e || 100;
                else {
                    var i = a + 50;
                    n = e + 100 * Math.floor(i / 100) - (e >= i % 100 ? 100 : 0)
                }
                return r ? n : 1 - n
            }
            var yr = [
                31,
                28,
                31,
                30,
                31,
                30,
                31,
                31,
                30,
                31,
                30,
                31
            ],
                wr = [
                    31,
                    29,
                    31,
                    30,
                    31,
                    30,
                    31,
                    31,
                    30,
                    31,
                    30,
                    31
                ];
            function br(e) {
                return e % 400 == 0 || e % 4 == 0 && e % 100 != 0
            }
            var kr = {
                G: {
                    priority: 140,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'G':
                            case 'GG':
                            case 'GGG':
                                return n.era(e, {
                                    width: 'abbreviated'
                                }) || n.era(e, {
                                    width: 'narrow'
                                });
                            case 'GGGGG':
                                return n.era(e, {
                                    width: 'narrow'
                                });
                            default:
                                return n.era(e, {
                                    width: 'wide'
                                }) || n.era(e, {
                                    width: 'abbreviated'
                                }) || n.era(e, {
                                    width: 'narrow'
                                })
                        }
                    },
                    set: function (e, t, n, r) {
                        return t.era = n,
                            e.setUTCFullYear(n, 0, 1),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'R',
                        'u',
                        't',
                        'T'
                    ]
                },
                y: {
                    priority: 130,
                    parse: function (e, t, n, r) {
                        var a = function (e) {
                            return {
                                year: e,
                                isTwoDigitYear: 'yy' === t
                            }
                        };
                        switch (t) {
                            case 'y':
                                return hr(4, e, a);
                            case 'yo':
                                return n.ordinalNumber(e, {
                                    unit: 'year',
                                    valueCallback: a
                                });
                            default:
                                return hr(t.length, e, a)
                        }
                    },
                    validate: function (e, t, n) {
                        return t.isTwoDigitYear || t.year > 0
                    },
                    set: function (e, t, n, r) {
                        var a = e.getUTCFullYear();
                        if (n.isTwoDigitYear) {
                            var i = vr(n.year, a);
                            return e.setUTCFullYear(i, 0, 1),
                                e.setUTCHours(0, 0, 0, 0),
                                e
                        }
                        var o = 'era' in t && 1 !== t.era ? 1 - n.year : n.year;
                        return e.setUTCFullYear(o, 0, 1),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'Y',
                        'R',
                        'u',
                        'w',
                        'I',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                Y: {
                    priority: 130,
                    parse: function (e, t, n, r) {
                        var a = function (e) {
                            return {
                                year: e,
                                isTwoDigitYear: 'YY' === t
                            }
                        };
                        switch (t) {
                            case 'Y':
                                return hr(4, e, a);
                            case 'Yo':
                                return n.ordinalNumber(e, {
                                    unit: 'year',
                                    valueCallback: a
                                });
                            default:
                                return hr(t.length, e, a)
                        }
                    },
                    validate: function (e, t, n) {
                        return t.isTwoDigitYear || t.year > 0
                    },
                    set: function (e, t, n, r) {
                        var a = on(e, r);
                        if (n.isTwoDigitYear) {
                            var i = vr(n.year, a);
                            return e.setUTCFullYear(i, 0, r.firstWeekContainsDate),
                                e.setUTCHours(0, 0, 0, 0),
                                an(e, r)
                        }
                        var o = 'era' in t && 1 !== t.era ? 1 - n.year : n.year;
                        return e.setUTCFullYear(o, 0, r.firstWeekContainsDate),
                            e.setUTCHours(0, 0, 0, 0),
                            an(e, r)
                    },
                    incompatibleTokens: [
                        'y',
                        'R',
                        'u',
                        'Q',
                        'q',
                        'M',
                        'L',
                        'I',
                        'd',
                        'D',
                        'i',
                        't',
                        'T'
                    ]
                },
                R: {
                    priority: 130,
                    parse: function (e, t, n, r) {
                        return pr('R' === t ? 4 : t.length, e)
                    },
                    set: function (e, t, n, r) {
                        var a = new Date(0);
                        return a.setUTCFullYear(n, 0, 4),
                            a.setUTCHours(0, 0, 0, 0),
                            Zt(a)
                    },
                    incompatibleTokens: [
                        'G',
                        'y',
                        'Y',
                        'u',
                        'Q',
                        'q',
                        'M',
                        'L',
                        'w',
                        'd',
                        'D',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                u: {
                    priority: 130,
                    parse: function (e, t, n, r) {
                        return pr('u' === t ? 4 : t.length, e)
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCFullYear(n, 0, 1),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'G',
                        'y',
                        'Y',
                        'R',
                        'w',
                        'I',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                Q: {
                    priority: 120,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'Q':
                            case 'QQ':
                                return hr(t.length, e);
                            case 'Qo':
                                return n.ordinalNumber(e, {
                                    unit: 'quarter'
                                });
                            case 'QQQ':
                                return n.quarter(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.quarter(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'QQQQQ':
                                return n.quarter(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.quarter(e, {
                                    width: 'wide',
                                    context: 'formatting'
                                }) || n.quarter(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.quarter(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                })
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 1 && t <= 4
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCMonth(3 * (n - 1), 1),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'Y',
                        'R',
                        'q',
                        'M',
                        'L',
                        'w',
                        'I',
                        'd',
                        'D',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                q: {
                    priority: 120,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'q':
                            case 'qq':
                                return hr(t.length, e);
                            case 'qo':
                                return n.ordinalNumber(e, {
                                    unit: 'quarter'
                                });
                            case 'qqq':
                                return n.quarter(e, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                }) || n.quarter(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            case 'qqqqq':
                                return n.quarter(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            default:
                                return n.quarter(e, {
                                    width: 'wide',
                                    context: 'standalone'
                                }) || n.quarter(e, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                }) || n.quarter(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                })
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 1 && t <= 4
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCMonth(3 * (n - 1), 1),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'Y',
                        'R',
                        'Q',
                        'M',
                        'L',
                        'w',
                        'I',
                        'd',
                        'D',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                M: {
                    priority: 110,
                    parse: function (e, t, n, r) {
                        var a = function (e) {
                            return e - 1
                        };
                        switch (t) {
                            case 'M':
                                return cr(Fn, e, a);
                            case 'MM':
                                return hr(2, e, a);
                            case 'Mo':
                                return n.ordinalNumber(e, {
                                    unit: 'month',
                                    valueCallback: a
                                });
                            case 'MMM':
                                return n.month(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.month(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'MMMMM':
                                return n.month(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.month(e, {
                                    width: 'wide',
                                    context: 'formatting'
                                }) || n.month(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.month(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                })
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 11
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCMonth(n, 1),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'Y',
                        'R',
                        'q',
                        'Q',
                        'L',
                        'w',
                        'I',
                        'D',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                L: {
                    priority: 110,
                    parse: function (e, t, n, r) {
                        var a = function (e) {
                            return e - 1
                        };
                        switch (t) {
                            case 'L':
                                return cr(Fn, e, a);
                            case 'LL':
                                return hr(2, e, a);
                            case 'Lo':
                                return n.ordinalNumber(e, {
                                    unit: 'month',
                                    valueCallback: a
                                });
                            case 'LLL':
                                return n.month(e, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                }) || n.month(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            case 'LLLLL':
                                return n.month(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            default:
                                return n.month(e, {
                                    width: 'wide',
                                    context: 'standalone'
                                }) || n.month(e, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                }) || n.month(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                })
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 11
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCMonth(n, 1),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'Y',
                        'R',
                        'q',
                        'Q',
                        'M',
                        'w',
                        'I',
                        'D',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                w: {
                    priority: 100,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'w':
                                return cr(qn, e);
                            case 'wo':
                                return n.ordinalNumber(e, {
                                    unit: 'week'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 1 && t <= 53
                    },
                    set: function (e, t, n, r) {
                        return an(function (e, t, n) {
                            yt(2, arguments);
                            var r = wt(e),
                                a = Ut(t),
                                i = ln(r, n) - a;
                            return r.setUTCDate(r.getUTCDate() - 7 * i),
                                r
                        }(e, n, r), r)
                    },
                    incompatibleTokens: [
                        'y',
                        'R',
                        'u',
                        'q',
                        'Q',
                        'M',
                        'L',
                        'I',
                        'd',
                        'D',
                        'i',
                        't',
                        'T'
                    ]
                },
                I: {
                    priority: 100,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'I':
                                return cr(qn, e);
                            case 'Io':
                                return n.ordinalNumber(e, {
                                    unit: 'week'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 1 && t <= 53
                    },
                    set: function (e, t, n, r) {
                        return Zt(function (e, t) {
                            yt(2, arguments);
                            var n = wt(e),
                                r = Ut(t),
                                a = rn(n) - r;
                            return n.setUTCDate(n.getUTCDate() - 7 * a),
                                n
                        }(e, n, r), r)
                    },
                    incompatibleTokens: [
                        'y',
                        'Y',
                        'u',
                        'q',
                        'Q',
                        'M',
                        'L',
                        'w',
                        'd',
                        'D',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                d: {
                    priority: 90,
                    subPriority: 1,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'd':
                                return cr(Xn, e);
                            case 'do':
                                return n.ordinalNumber(e, {
                                    unit: 'date'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        var r = br(e.getUTCFullYear()),
                            a = e.getUTCMonth();
                        return r ? t >= 1 && t <= wr[a] : t >= 1 && t <= yr[a]
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCDate(n),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'Y',
                        'R',
                        'q',
                        'Q',
                        'w',
                        'I',
                        'D',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                D: {
                    priority: 90,
                    subPriority: 1,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'D':
                            case 'DD':
                                return cr(Un, e);
                            case 'Do':
                                return n.ordinalNumber(e, {
                                    unit: 'date'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return br(e.getUTCFullYear()) ? t >= 1 && t <= 366 : t >= 1 && t <= 365
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCMonth(0, n),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'Y',
                        'R',
                        'q',
                        'Q',
                        'M',
                        'L',
                        'w',
                        'I',
                        'd',
                        'E',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                E: {
                    priority: 90,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'E':
                            case 'EE':
                            case 'EEE':
                                return n.day(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'short',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'EEEEE':
                                return n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'EEEEEE':
                                return n.day(e, {
                                    width: 'short',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.day(e, {
                                    width: 'wide',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'short',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                })
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 6
                    },
                    set: function (e, t, n, r) {
                        return (e = Ln(e, n, r)).setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'D',
                        'i',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                e: {
                    priority: 90,
                    parse: function (e, t, n, r) {
                        var a = function (e) {
                            var t = 7 * Math.floor((e - 1) / 7);
                            return (e + r.weekStartsOn + 6) % 7 + t
                        };
                        switch (t) {
                            case 'e':
                            case 'ee':
                                return hr(t.length, e, a);
                            case 'eo':
                                return n.ordinalNumber(e, {
                                    unit: 'day',
                                    valueCallback: a
                                });
                            case 'eee':
                                return n.day(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'short',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'eeeee':
                                return n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'eeeeee':
                                return n.day(e, {
                                    width: 'short',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.day(e, {
                                    width: 'wide',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'short',
                                    context: 'formatting'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                })
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 6
                    },
                    set: function (e, t, n, r) {
                        return (e = Ln(e, n, r)).setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'y',
                        'R',
                        'u',
                        'q',
                        'Q',
                        'M',
                        'L',
                        'I',
                        'd',
                        'D',
                        'E',
                        'i',
                        'c',
                        't',
                        'T'
                    ]
                },
                c: {
                    priority: 90,
                    parse: function (e, t, n, r) {
                        var a = function (e) {
                            var t = 7 * Math.floor((e - 1) / 7);
                            return (e + r.weekStartsOn + 6) % 7 + t
                        };
                        switch (t) {
                            case 'c':
                            case 'cc':
                                return hr(t.length, e, a);
                            case 'co':
                                return n.ordinalNumber(e, {
                                    unit: 'day',
                                    valueCallback: a
                                });
                            case 'ccc':
                                return n.day(e, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                }) || n.day(e, {
                                    width: 'short',
                                    context: 'standalone'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            case 'ccccc':
                                return n.day(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            case 'cccccc':
                                return n.day(e, {
                                    width: 'short',
                                    context: 'standalone'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                });
                            default:
                                return n.day(e, {
                                    width: 'wide',
                                    context: 'standalone'
                                }) || n.day(e, {
                                    width: 'abbreviated',
                                    context: 'standalone'
                                }) || n.day(e, {
                                    width: 'short',
                                    context: 'standalone'
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'standalone'
                                })
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 6
                    },
                    set: function (e, t, n, r) {
                        return (e = Ln(e, n, r)).setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'y',
                        'R',
                        'u',
                        'q',
                        'Q',
                        'M',
                        'L',
                        'I',
                        'd',
                        'D',
                        'E',
                        'i',
                        'e',
                        't',
                        'T'
                    ]
                },
                i: {
                    priority: 90,
                    parse: function (e, t, n, r) {
                        var a = function (e) {
                            return 0 === e ? 7 : e
                        };
                        switch (t) {
                            case 'i':
                            case 'ii':
                                return hr(t.length, e);
                            case 'io':
                                return n.ordinalNumber(e, {
                                    unit: 'day'
                                });
                            case 'iii':
                                return n.day(e, {
                                    width: 'abbreviated',
                                    context: 'formatting',
                                    valueCallback: a
                                }) || n.day(e, {
                                    width: 'short',
                                    context: 'formatting',
                                    valueCallback: a
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting',
                                    valueCallback: a
                                });
                            case 'iiiii':
                                return n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting',
                                    valueCallback: a
                                });
                            case 'iiiiii':
                                return n.day(e, {
                                    width: 'short',
                                    context: 'formatting',
                                    valueCallback: a
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting',
                                    valueCallback: a
                                });
                            default:
                                return n.day(e, {
                                    width: 'wide',
                                    context: 'formatting',
                                    valueCallback: a
                                }) || n.day(e, {
                                    width: 'abbreviated',
                                    context: 'formatting',
                                    valueCallback: a
                                }) || n.day(e, {
                                    width: 'short',
                                    context: 'formatting',
                                    valueCallback: a
                                }) || n.day(e, {
                                    width: 'narrow',
                                    context: 'formatting',
                                    valueCallback: a
                                })
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 1 && t <= 7
                    },
                    set: function (e, t, n, r) {
                        return e = function (e, t) {
                            yt(2, arguments);
                            var n = Ut(t);
                            n % 7 == 0 && (n -= 7);
                            var r = 1,
                                a = wt(e),
                                i = a.getUTCDay(),
                                o = ((n % 7 + 7) % 7 < r ? 7 : 0) + n - i;
                            return a.setUTCDate(a.getUTCDate() + o),
                                a
                        }(e, n, r),
                            e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'y',
                        'Y',
                        'u',
                        'q',
                        'Q',
                        'M',
                        'L',
                        'w',
                        'd',
                        'D',
                        'E',
                        'e',
                        'c',
                        't',
                        'T'
                    ]
                },
                a: {
                    priority: 80,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'a':
                            case 'aa':
                            case 'aaa':
                                return n.dayPeriod(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'aaaaa':
                                return n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.dayPeriod(e, {
                                    width: 'wide',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                })
                        }
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCHours(gr(n), 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'b',
                        'B',
                        'H',
                        'k',
                        't',
                        'T'
                    ]
                },
                b: {
                    priority: 80,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'b':
                            case 'bb':
                            case 'bbb':
                                return n.dayPeriod(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'bbbbb':
                                return n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.dayPeriod(e, {
                                    width: 'wide',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                })
                        }
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCHours(gr(n), 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'a',
                        'B',
                        'H',
                        'k',
                        't',
                        'T'
                    ]
                },
                B: {
                    priority: 80,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'B':
                            case 'BB':
                            case 'BBB':
                                return n.dayPeriod(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            case 'BBBBB':
                                return n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                });
                            default:
                                return n.dayPeriod(e, {
                                    width: 'wide',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'abbreviated',
                                    context: 'formatting'
                                }) || n.dayPeriod(e, {
                                    width: 'narrow',
                                    context: 'formatting'
                                })
                        }
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCHours(gr(n), 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'a',
                        'b',
                        't',
                        'T'
                    ]
                },
                h: {
                    priority: 70,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'h':
                                return cr(Bn, e);
                            case 'ho':
                                return n.ordinalNumber(e, {
                                    unit: 'hour'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 1 && t <= 12
                    },
                    set: function (e, t, n, r) {
                        var a = e.getUTCHours() >= 12;
                        return a && n < 12 ? e.setUTCHours(n + 12, 0, 0, 0) : a || 12 !== n ? e.setUTCHours(n, 0, 0, 0) : e.setUTCHours(0, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'H',
                        'K',
                        'k',
                        't',
                        'T'
                    ]
                },
                H: {
                    priority: 70,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'H':
                                return cr(Gn, e);
                            case 'Ho':
                                return n.ordinalNumber(e, {
                                    unit: 'hour'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 23
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCHours(n, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'a',
                        'b',
                        'h',
                        'K',
                        'k',
                        't',
                        'T'
                    ]
                },
                K: {
                    priority: 70,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'K':
                                return cr(Yn, e);
                            case 'Ko':
                                return n.ordinalNumber(e, {
                                    unit: 'hour'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 11
                    },
                    set: function (e, t, n, r) {
                        return e.getUTCHours() >= 12 && n < 12 ? e.setUTCHours(n + 12, 0, 0, 0) : e.setUTCHours(n, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'h',
                        'H',
                        'k',
                        't',
                        'T'
                    ]
                },
                k: {
                    priority: 70,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'k':
                                return cr(Vn, e);
                            case 'ko':
                                return n.ordinalNumber(e, {
                                    unit: 'hour'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 1 && t <= 24
                    },
                    set: function (e, t, n, r) {
                        var a = n <= 24 ? n % 24 : n;
                        return e.setUTCHours(a, 0, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        'a',
                        'b',
                        'h',
                        'H',
                        'K',
                        't',
                        'T'
                    ]
                },
                m: {
                    priority: 60,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'm':
                                return cr($n, e);
                            case 'mo':
                                return n.ordinalNumber(e, {
                                    unit: 'minute'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 59
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCMinutes(n, 0, 0),
                            e
                    },
                    incompatibleTokens: [
                        't',
                        'T'
                    ]
                },
                s: {
                    priority: 50,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 's':
                                return cr(Qn, e);
                            case 'so':
                                return n.ordinalNumber(e, {
                                    unit: 'second'
                                });
                            default:
                                return hr(t.length, e)
                        }
                    },
                    validate: function (e, t, n) {
                        return t >= 0 && t <= 59
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCSeconds(n, 0),
                            e
                    },
                    incompatibleTokens: [
                        't',
                        'T'
                    ]
                },
                S: {
                    priority: 30,
                    parse: function (e, t, n, r) {
                        return hr(t.length, e, (function (e) {
                            return Math.floor(e * Math.pow(10, 3 - t.length))
                        }))
                    },
                    set: function (e, t, n, r) {
                        return e.setUTCMilliseconds(n),
                            e
                    },
                    incompatibleTokens: [
                        't',
                        'T'
                    ]
                },
                X: {
                    priority: 10,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'X':
                                return mr(or, e);
                            case 'XX':
                                return mr(sr, e);
                            case 'XXXX':
                                return mr(ur, e);
                            case 'XXXXX':
                                return mr(dr, e);
                            default:
                                return mr(lr, e)
                        }
                    },
                    set: function (e, t, n, r) {
                        return t.timestampIsSet ? e : new Date(e.getTime() - n)
                    },
                    incompatibleTokens: [
                        't',
                        'T',
                        'x'
                    ]
                },
                x: {
                    priority: 10,
                    parse: function (e, t, n, r) {
                        switch (t) {
                            case 'x':
                                return mr(or, e);
                            case 'xx':
                                return mr(sr, e);
                            case 'xxxx':
                                return mr(ur, e);
                            case 'xxxxx':
                                return mr(dr, e);
                            default:
                                return mr(lr, e)
                        }
                    },
                    set: function (e, t, n, r) {
                        return t.timestampIsSet ? e : new Date(e.getTime() - n)
                    },
                    incompatibleTokens: [
                        't',
                        'T',
                        'X'
                    ]
                },
                t: {
                    priority: 40,
                    parse: function (e, t, n, r) {
                        return fr(e)
                    },
                    set: function (e, t, n, r) {
                        return [new Date(1000 * n),
                        {
                            timestampIsSet: !0
                        }
                        ]
                    },
                    incompatibleTokens: '*'
                },
                T: {
                    priority: 20,
                    parse: function (e, t, n, r) {
                        return fr(e)
                    },
                    set: function (e, t, n, r) {
                        return [new Date(n),
                        {
                            timestampIsSet: !0
                        }
                        ]
                    },
                    incompatibleTokens: '*'
                }
            },
                Mr = kr,
                Er = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
                Pr = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
                xr = /^'([^]*?)'?$/,
                Sr = /''/g,
                Tr = /\S/,
                Cr = /[a-zA-Z]/;
            function Wr(e, t) {
                if (t.timestampIsSet) return e;
                var n = new Date(0);
                return n.setFullYear(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate()),
                    n.setHours(e.getUTCHours(), e.getUTCMinutes(), e.getUTCSeconds(), e.getUTCMilliseconds()),
                    n
            }
            function jr(e) {
                return e.match(xr)[1].replace(Sr, '\'')
            }
            function Dr(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            function Nr(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {
                    };
                    t % 2 ? Dr(Object(n), !0).forEach((function (t) {
                        Ee(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Dr(Object(n)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            n(7941),
                n(2526),
                n(7327),
                n(5003),
                n(4747),
                n(9337),
                n(3321),
                n(9070);
            var Ir = function (e) {
                return ['details',
                    e]
            },
                zr = function () {
                    var e = te(fe().mark((function e(t) {
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt('return', ve.details.get(t));
                                case 1:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                Rr = function (e) {
                    var t = (0, d.useQuery)(Ir(e), (function () {
                        return zr(e)
                    }));
                    return {
                        isLoading: t.isLoading,
                        error: t.error,
                        mediaItem: t.data
                    }
                },
                Ar = function () {
                    var e = te(fe().mark((function e(t) {
                        var n,
                            r,
                            a;
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return n = Ir(t.id),
                                        e.next = 3,
                                        cj.invalidateQueries(n, {
                                            refetchInactive: !0
                                        });
                                case 3:
                                    if (e.t0 = cj.getQueryData(n), e.t0) {
                                        e.next = 8;
                                        break
                                    }
                                    return e.next = 7,
                                        zr(t.id);
                                case 7:
                                    e.t0 = e.sent;
                                case 8:
                                    r = e.t0,
                                        a = function (e) {
                                            return e.id === (null == r ? void 0 : r.id) ? r : e
                                        },
                                        cj.setQueriesData(['items'], (function (e) {
                                            var t;
                                            return Nr(Nr({
                                            }, e), {
                                            }, {
                                                data: null == e || null === (t = e.data) || void 0 === t ? void 0 : t.map(a)
                                            })
                                        })),
                                        cj.setQueriesData(['search'], (function (e) {
                                            return null == e ? void 0 : e.map(a)
                                        }));
                                case 12:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                Or = function () {
                    var e = te(fe().mark((function e(t) {
                        var n,
                            r,
                            a,
                            i;
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return n = Nr({
                                        season: void 0,
                                        episode: void 0
                                    }, t),
                                        r = n.mediaItem,
                                        a = n.season,
                                        i = n.episode,
                                        e.next = 3,
                                        ve.rating.add({
                                            mediaItemId: r.id,
                                            seasonId: null == a ? void 0 : a.id,
                                            episodeId: null == i ? void 0 : i.id,
                                            rating: t.rating,
                                            review: t.review
                                        });
                                case 3:
                                    return e.next = 5,
                                        Ar(r);
                                case 5:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                Hr = function () {
                    var e = te(fe().mark((function e(t) {
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                        ve.watchlist.delete({
                                            mediaItemId: t.id
                                        });
                                case 2:
                                    return e.next = 4,
                                        Ar(t);
                                case 4:
                                    cj.invalidateQueries(['items']);
                                case 5:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                _r = function () {
                    var e = te(fe().mark((function e(t) {
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                        ve.watchlist.add({
                                            mediaItemId: t.id
                                        });
                                case 2:
                                    return e.next = 4,
                                        Ar(t);
                                case 4:
                                    cj.invalidateQueries(['items']);
                                case 5:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                Lr = function () {
                    var e = te(fe().mark((function e(t) {
                        var n,
                            r,
                            a;
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return n = t.mediaItemId,
                                        r = t.progress,
                                        a = t.duration,
                                        e.next = 3,
                                        ve.progress.add({
                                            mediaItemId: n,
                                            date: (new Date).getTime(),
                                            progress: r,
                                            duration: a
                                        });
                                case 3:
                                    cj.invalidateQueries(Ir(n)),
                                        cj.invalidateQueries(['items']);
                                case 5:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                Fr = function () {
                    var e = te(fe().mark((function e(t) {
                        var n,
                            r,
                            a;
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                        ve.seen.add({
                                            mediaItemId: t.mediaItem.id,
                                            seasonId: null === (n = t.season) || void 0 === n ? void 0 : n.id,
                                            episodeId: null === (r = t.episode) || void 0 === r ? void 0 : r.id,
                                            lastSeenAt: t.seenAt,
                                            date: null === (a = t.date) || void 0 === a ? void 0 : a.getTime()
                                        });
                                case 2:
                                    return e.next = 4,
                                        Ar(t.mediaItem);
                                case 4:
                                    cj.invalidateQueries(['items']);
                                case 5:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                Xr = function () {
                    var e = te(fe().mark((function e(t) {
                        var n,
                            r,
                            a;
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                        ve.seen.add({
                                            mediaItemId: t.mediaItem.id,
                                            lastSeenEpisodeId: null === (n = t.episode) || void 0 === n ? void 0 : n.id,
                                            lastSeenAt: t.lastSeenAt,
                                            seasonId: null === (r = t.season) || void 0 === r ? void 0 : r.id,
                                            date: null === (a = t.date) || void 0 === a ? void 0 : a.getTime()
                                        });
                                case 2:
                                    return e.next = 4,
                                        Ar(t.mediaItem);
                                case 4:
                                    cj.invalidateQueries(['items']);
                                case 5:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                Ur = function () {
                    var e = te(fe().mark((function e(t) {
                        var n,
                            r;
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                        ve.seen.delete({
                                            mediaItemId: t.mediaItem.id,
                                            seasonId: null === (n = t.season) || void 0 === n ? void 0 : n.id,
                                            episodeId: null === (r = t.episode) || void 0 === r ? void 0 : r.id
                                        });
                                case 2:
                                    return e.next = 4,
                                        Ar(t.mediaItem);
                                case 4:
                                    cj.invalidateQueries(['items']);
                                case 5:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }(),
                qr = function () {
                    var e = te(fe().mark((function e(t) {
                        return fe().wrap((function (e) {
                            for (; ;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                        ve.seen.delete({
                                            mediaItemId: t.id
                                        });
                                case 2:
                                    return e.next = 4,
                                        Ar(t);
                                case 4:
                                    cj.invalidateQueries(['items']);
                                case 5:
                                case 'end':
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function (t) {
                        return e.apply(this, arguments)
                    }
                }();
            n(9826),
                n(2262),
                n(4506),
                n(7852);
            let Gr = sa();
            const Vr = e => ra(e, Gr);
            let Yr = sa();
            Vr.write = e => ra(e, Yr);
            let Br = sa();
            Vr.onStart = e => ra(e, Br);
            let $r = sa();
            Vr.onFrame = e => ra(e, $r);
            let Qr = sa();
            Vr.onFinish = e => ra(e, Qr);
            let Kr = [
            ];
            Vr.setTimeout = (e, t) => {
                let n = Vr.now() + t,
                    r = () => {
                        let e = Kr.findIndex((e => e.cancel == r));
                        ~e && Kr.splice(e, 1),
                            ta -= ~e ? 1 : 0
                    },
                    a = {
                        time: n,
                        handler: e,
                        cancel: r
                    };
                return Kr.splice(Jr(n), 0, a),
                    ta += 1,
                    aa(),
                    a
            };
            let Jr = e => ~(~Kr.findIndex((t => t.time > e)) || ~Kr.length);
            Vr.cancel = e => {
                Br.delete(e),
                    $r.delete(e),
                    Gr.delete(e),
                    Yr.delete(e),
                    Qr.delete(e)
            },
                Vr.sync = e => {
                    na = !0,
                        Vr.batchedUpdates(e),
                        na = !1
                },
                Vr.throttle = e => {
                    let t;
                    function n() {
                        try {
                            e(...t)
                        } finally {
                            t = null
                        }
                    }
                    function r(...e) {
                        t = e,
                            Vr.onStart(n)
                    }
                    return r.handler = e,
                        r.cancel = () => {
                            Br.delete(n),
                                t = null
                        },
                        r
                };
            let Zr = 'undefined' != typeof window ? window.requestAnimationFrame : () => {
            };
            Vr.use = e => Zr = e,
                Vr.now = 'undefined' != typeof performance ? () => performance.now() : Date.now,
                Vr.batchedUpdates = e => e(),
                Vr.catch = console.error,
                Vr.frameLoop = 'always',
                Vr.advance = () => {
                    'demand' !== Vr.frameLoop ? console.warn('Cannot call the manual advancement of rafz whilst frameLoop is not set as demand') : oa()
                };
            let ea = - 1,
                ta = 0,
                na = !1;
            function ra(e, t) {
                na ? (t.delete(e), e(0)) : (t.add(e), aa())
            }
            function aa() {
                ea < 0 && (ea = 0, 'demand' !== Vr.frameLoop && Zr(ia))
            }
            function ia() {
                ~ea && (Zr(ia), Vr.batchedUpdates(oa))
            }
            function oa() {
                let e = ea;
                ea = Vr.now();
                let t = Jr(ea);
                t && (ua(Kr.splice(0, t), (e => e.handler())), ta -= t),
                    Br.flush(),
                    Gr.flush(e ? Math.min(64, ea - e) : 16.667),
                    $r.flush(),
                    Yr.flush(),
                    Qr.flush(),
                    ta || (ea = - 1)
            }
            function sa() {
                let e = new Set,
                    t = e;
                return {
                    add(n) {
                        ta += t != e || e.has(n) ? 0 : 1,
                            e.add(n)
                    },
                    delete: n => (ta -= t == e && e.has(n) ? 1 : 0, e.delete(n)),
                    flush(n) {
                        t.size && (e = new Set, ta -= t.size, ua(t, (t => t(n) && e.add(t))), ta += e.size, t = e)
                    }
                }
            }
            function ua(e, t) {
                e.forEach((e => {
                    try {
                        t(e)
                    } catch (e) {
                        Vr.catch(e)
                    }
                }))
            }
            function la() {
            }
            const da = {
                arr: Array.isArray,
                obj: e => !!e && 'Object' === e.constructor.name,
                fun: e => 'function' == typeof e,
                str: e => 'string' == typeof e,
                num: e => 'number' == typeof e,
                und: e => void 0 === e
            };
            function ca(e, t) {
                if (da.arr(e)) {
                    if (!da.arr(t) || e.length !== t.length) return !1;
                    for (let n = 0; n < e.length; n++) if (e[n] !== t[n]) return !1;
                    return !0
                }
                return e === t
            }
            const ma = (e, t) => e.forEach(t);
            function fa(e, t, n) {
                if (da.arr(e)) for (let r = 0; r < e.length; r++) t.call(n, e[r], `${r}`);
                else for (const r in e) e.hasOwnProperty(r) && t.call(n, e[r], r)
            }
            const ha = e => da.und(e) ? [
            ] : da.arr(e) ? e : [
                e
            ];
            function pa(e, t) {
                if (e.size) {
                    const n = Array.from(e);
                    e.clear(),
                        ma(n, t)
                }
            }
            const ga = (e, ...t) => pa(e, (e => e(...t))),
                va = () => 'undefined' == typeof window || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent);
            let ya,
                wa,
                ba = null,
                ka = !1,
                Ma = la;
            var Ea = Object.freeze({
                __proto__: null,
                get createStringInterpolator() {
                    return ya
                },
                get to() {
                    return wa
                },
                get colors() {
                    return ba
                },
                get skipAnimation() {
                    return ka
                },
                get willAdvance() {
                    return Ma
                },
                assign: e => {
                    e.to && (wa = e.to),
                        e.now && (Vr.now = e.now),
                        void 0 !== e.colors && (ba = e.colors),
                        null != e.skipAnimation && (ka = e.skipAnimation),
                        e.createStringInterpolator && (ya = e.createStringInterpolator),
                        e.requestAnimationFrame && Vr.use(e.requestAnimationFrame),
                        e.batchedUpdates && (Vr.batchedUpdates = e.batchedUpdates),
                        e.willAdvance && (Ma = e.willAdvance),
                        e.frameLoop && (Vr.frameLoop = e.frameLoop)
                }
            });
            const Pa = new Set;
            let xa = [
            ],
                Sa = [
                ],
                Ta = 0;
            const Ca = {
                get idle() {
                    return !Pa.size && !xa.length
                },
                start(e) {
                    Ta > e.priority ? (Pa.add(e), Vr.onStart(Wa)) : (ja(e), Vr(Na))
                },
                advance: Na,
                sort(e) {
                    if (Ta) Vr.onFrame((() => Ca.sort(e)));
                    else {
                        const t = xa.indexOf(e);
                        ~t && (xa.splice(t, 1), Da(e))
                    }
                },
                clear() {
                    xa = [
                    ],
                        Pa.clear()
                }
            };
            function Wa() {
                Pa.forEach(ja),
                    Pa.clear(),
                    Vr(Na)
            }
            function ja(e) {
                xa.includes(e) || Da(e)
            }
            function Da(e) {
                xa.splice(function (t, n) {
                    const r = t.findIndex((t => t.priority > e.priority));
                    return r < 0 ? t.length : r
                }(xa), 0, e)
            }
            function Na(e) {
                const t = Sa;
                for (let n = 0; n < xa.length; n++) {
                    const r = xa[n];
                    Ta = r.priority,
                        r.idle || (Ma(r), r.advance(e), r.idle || t.push(r))
                }
                return Ta = 0,
                    Sa = xa,
                    Sa.length = 0,
                    xa = t,
                    xa.length > 0
            }
            const Ia = '[-+]?\\d*\\.?\\d+',
                za = Ia + '%';
            function Ra(...e) {
                return '\\(\\s*(' + e.join(')\\s*,\\s*(') + ')\\s*\\)'
            }
            const Aa = new RegExp('rgb' + Ra(Ia, Ia, Ia)),
                Oa = new RegExp('rgba' + Ra(Ia, Ia, Ia, Ia)),
                Ha = new RegExp('hsl' + Ra(Ia, za, za)),
                _a = new RegExp('hsla' + Ra(Ia, za, za, Ia)),
                La = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                Fa = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                Xa = /^#([0-9a-fA-F]{6})$/,
                Ua = /^#([0-9a-fA-F]{8})$/;
            function qa(e, t, n) {
                return n < 0 && (n += 1),
                    n > 1 && (n -= 1),
                    n < 1 / 6 ? e + 6 * (t - e) * n : n < 0.5 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e
            }
            function Ga(e, t, n) {
                const r = n < 0.5 ? n * (1 + t) : n + t - n * t,
                    a = 2 * n - r,
                    i = qa(a, r, e + 1 / 3),
                    o = qa(a, r, e),
                    s = qa(a, r, e - 1 / 3);
                return Math.round(255 * i) << 24 | Math.round(255 * o) << 16 | Math.round(255 * s) << 8
            }
            function Va(e) {
                const t = parseInt(e, 10);
                return t < 0 ? 0 : t > 255 ? 255 : t
            }
            function Ya(e) {
                return (parseFloat(e) % 360 + 360) % 360 / 360
            }
            function Ba(e) {
                const t = parseFloat(e);
                return t < 0 ? 0 : t > 1 ? 255 : Math.round(255 * t)
            }
            function $a(e) {
                const t = parseFloat(e);
                return t < 0 ? 0 : t > 100 ? 1 : t / 100
            }
            function Qa(e) {
                let t = function (e) {
                    let t;
                    return 'number' == typeof e ? e >>> 0 === e && e >= 0 && e <= 4294967295 ? e : null : (t = Xa.exec(e)) ? parseInt(t[1] + 'ff', 16) >>> 0 : ba && void 0 !== ba[e] ? ba[e] : (t = Aa.exec(e)) ? (Va(t[1]) << 24 | Va(t[2]) << 16 | Va(t[3]) << 8 | 255) >>> 0 : (t = Oa.exec(e)) ? (Va(t[1]) << 24 | Va(t[2]) << 16 | Va(t[3]) << 8 | Ba(t[4])) >>> 0 : (t = La.exec(e)) ? parseInt(t[1] + t[1] + t[2] + t[2] + t[3] + t[3] + 'ff', 16) >>> 0 : (t = Ua.exec(e)) ? parseInt(t[1], 16) >>> 0 : (t = Fa.exec(e)) ? parseInt(t[1] + t[1] + t[2] + t[2] + t[3] + t[3] + t[4] + t[4], 16) >>> 0 : (t = Ha.exec(e)) ? (255 | Ga(Ya(t[1]), $a(t[2]), $a(t[3]))) >>> 0 : (t = _a.exec(e)) ? (Ga(Ya(t[1]), $a(t[2]), $a(t[3])) | Ba(t[4])) >>> 0 : null
                }(e);
                return null === t ? e : (t = t || 0, `rgba(${(4278190080 & t) >>> 24}, ${(16711680 & t) >>> 16}, ${(65280 & t) >>> 8}, ${(255 & t) / 255})`)
            }
            const Ka = (e, t, n) => {
                if (da.fun(e)) return e;
                if (da.arr(e)) return Ka({
                    range: e,
                    output: t,
                    extrapolate: n
                });
                if (da.str(e.output[0])) return ya(e);
                const r = e,
                    a = r.output,
                    i = r.range || [
                        0,
                        1
                    ],
                    o = r.extrapolateLeft || r.extrapolate || 'extend',
                    s = r.extrapolateRight || r.extrapolate || 'extend',
                    u = r.easing || (e => e);
                return e => {
                    const t = function (e, t) {
                        for (var n = 1; n < t.length - 1 && !(t[n] >= e); ++n);
                        return n - 1
                    }(e, i);
                    return function (e, t, n, r, a, i, o, s, u) {
                        let l = u ? u(e) : e;
                        if (l < t) {
                            if ('identity' === o) return l;
                            'clamp' === o && (l = t)
                        }
                        if (l > n) {
                            if ('identity' === s) return l;
                            'clamp' === s && (l = n)
                        }
                        return r === a ? r : t === n ? e <= t ? r : a : (t === - 1 / 0 ? l = - l : n === 1 / 0 ? l -= t : l = (l - t) / (n - t), l = i(l), r === - 1 / 0 ? l = - l : a === 1 / 0 ? l += r : l = l * (a - r) + r, l)
                    }(e, i[t], i[t + 1], a[t], a[t + 1], u, o, s, r.map)
                }
            };
            function Ja() {
                return Ja = Object.assign || function (e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                },
                    Ja.apply(this, arguments)
            }
            const Za = Symbol.for('FluidValue.get'),
                ei = Symbol.for('FluidValue.observers'),
                ti = e => Boolean(e && e[Za]),
                ni = e => e && e[Za] ? e[Za]() : e,
                ri = e => e[ei] || null;
            function ai(e, t) {
                let n = e[ei];
                n && n.forEach((e => {
                    !function (e, t) {
                        e.eventObserved ? e.eventObserved(t) : e(t)
                    }(e, t)
                }))
            }
            class ii {
                constructor(e) {
                    if (this[Za] = void 0, this[ei] = void 0, !e && !(e = this.get)) throw Error('Unknown getter');
                    oi(this, e)
                }
            }
            const oi = (e, t) => li(e, Za, t);
            function si(e, t) {
                if (e[Za]) {
                    let n = e[ei];
                    n || li(e, ei, n = new Set),
                        n.has(t) || (n.add(t), e.observerAdded && e.observerAdded(n.size, t))
                }
                return t
            }
            function ui(e, t) {
                let n = e[ei];
                if (n && n.has(t)) {
                    const r = n.size - 1;
                    r ? n.delete(t) : e[ei] = null,
                        e.observerRemoved && e.observerRemoved(r, t)
                }
            }
            const li = (e, t, n) => Object.defineProperty(e, t, {
                value: n,
                writable: !0,
                configurable: !0
            }),
                di = /[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
                ci = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi,
                mi = new RegExp(`(${di.source})(%|[a-z]+)`, 'i'),
                fi = /rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi,
                hi = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/,
                pi = e => {
                    const [t,
                        n] = gi(e);
                    if (!t || va()) return e;
                    const r = window.getComputedStyle(document.documentElement).getPropertyValue(t);
                    if (r) return r.trim();
                    if (n && n.startsWith('--')) {
                        return window.getComputedStyle(document.documentElement).getPropertyValue(n) || e
                    }
                    return n && hi.test(n) ? pi(n) : n || e
                },
                gi = e => {
                    const t = hi.exec(e);
                    if (!t) return [,
                    ];
                    const [,
                        n,
                        r] = t;
                    return [n,
                        r]
                };
            let vi;
            const yi = (e, t, n, r, a) => `rgba(${Math.round(t)}, ${Math.round(n)}, ${Math.round(r)}, ${a})`,
                wi = e => {
                    vi || (vi = ba ? new RegExp(`(${Object.keys(ba).join('|')})(?!\w)`, 'g') : /^\b$/);
                    const t = e.output.map((e => ni(e).replace(hi, pi).replace(ci, Qa).replace(vi, Qa))),
                        n = t.map((e => e.match(di).map(Number))),
                        r = n[0].map(((e, t) => n.map((e => {
                            if (!(t in e)) throw Error('The arity of each "output" value must be equal');
                            return e[t]
                        })))).map((t => Ka(Ja({
                        }, e, {
                            output: t
                        }))));
                    return e => {
                        var n;
                        const a = !mi.test(t[0]) && (null == (n = t.find((e => mi.test(e)))) ? void 0 : n.replace(di, ''));
                        let i = 0;
                        return t[0].replace(di, (() => `${r[i++](e)}${a || ''}`)).replace(fi, yi)
                    }
                },
                bi = 'react-spring: ',
                ki = e => {
                    const t = e;
                    let n = !1;
                    if ('function' != typeof t) throw new TypeError(`${bi}once requires a function parameter`);
                    return (...e) => {
                        n || (t(...e), n = !0)
                    }
                },
                Mi = ki(console.warn),
                Ei = ki(console.warn);
            function Pi(e) {
                return da.str(e) && ('#' == e[0] || /\d/.test(e) || !va() && hi.test(e) || e in (ba || {
                }))
            }
            const xi = e => (0, r.useEffect)(e, Si),
                Si = [
                ];
            function Ti() {
                const e = (0, r.useState)()[1],
                    t = (0, r.useState)(Ci)[0];
                return xi(t.unmount),
                    () => {
                        t.current && e({
                        })
                    }
            }
            function Ci() {
                const e = {
                    current: !0,
                    unmount: () => () => {
                        e.current = !1
                    }
                };
                return e
            }
            function Wi(e) {
                const t = (0, r.useRef)();
                return (0, r.useEffect)((() => {
                    t.current = e
                })),
                    t.current
            }
            const ji = 'undefined' != typeof window && window.document && window.document.createElement ? r.useLayoutEffect : r.useEffect,
                Di = Symbol.for('Animated:node'),
                Ni = e => e && e[Di],
                Ii = (e, t) => {
                    return n = e,
                        r = Di,
                        a = t,
                        Object.defineProperty(n, r, {
                            value: a,
                            writable: !0,
                            configurable: !0
                        });
                    var n,
                        r,
                        a
                },
                zi = e => e && e[Di] && e[Di].getPayload();
            class Ri {
                constructor() {
                    this.payload = void 0,
                        Ii(this, this)
                }
                getPayload() {
                    return this.payload || [
                    ]
                }
            }
            class Ai extends Ri {
                constructor(e) {
                    super(),
                        this.done = !0,
                        this.elapsedTime = void 0,
                        this.lastPosition = void 0,
                        this.lastVelocity = void 0,
                        this.v0 = void 0,
                        this.durationProgress = 0,
                        this._value = e,
                        da.num(this._value) && (this.lastPosition = this._value)
                }
                static create(e) {
                    return new Ai(e)
                }
                getPayload() {
                    return [this]
                }
                getValue() {
                    return this._value
                }
                setValue(e, t) {
                    return da.num(e) && (this.lastPosition = e, t && (e = Math.round(e / t) * t, this.done && (this.lastPosition = e))),
                        this._value !== e && (this._value = e, !0)
                }
                reset() {
                    const {
                        done: e
                    }
                        = this;
                    this.done = !1,
                        da.num(this._value) && (this.elapsedTime = 0, this.durationProgress = 0, this.lastPosition = this._value, e && (this.lastVelocity = null), this.v0 = null)
                }
            }
            class Oi extends Ai {
                constructor(e) {
                    super(0),
                        this._string = null,
                        this._toString = void 0,
                        this._toString = Ka({
                            output: [
                                e,
                                e
                            ]
                        })
                }
                static create(e) {
                    return new Oi(e)
                }
                getValue() {
                    let e = this._string;
                    return null == e ? this._string = this._toString(this._value) : e
                }
                setValue(e) {
                    if (da.str(e)) {
                        if (e == this._string) return !1;
                        this._string = e,
                            this._value = 1
                    } else {
                        if (!super.setValue(e)) return !1;
                        this._string = null
                    }
                    return !0
                }
                reset(e) {
                    e && (this._toString = Ka({
                        output: [
                            this.getValue(),
                            e
                        ]
                    })),
                        this._value = 0,
                        super.reset()
                }
            }
            const Hi = {
                dependencies: null
            };
            class _i extends Ri {
                constructor(e) {
                    super(),
                        this.source = e,
                        this.setValue(e)
                }
                getValue(e) {
                    const t = {
                    };
                    return fa(this.source, ((n, r) => {
                        var a;
                        (a = n) && a[Di] === a ? t[r] = n.getValue(e) : ti(n) ? t[r] = ni(n) : e || (t[r] = n)
                    })),
                        t
                }
                setValue(e) {
                    this.source = e,
                        this.payload = this._makePayload(e)
                }
                reset() {
                    this.payload && ma(this.payload, (e => e.reset()))
                }
                _makePayload(e) {
                    if (e) {
                        const t = new Set;
                        return fa(e, this._addToPayload, t),
                            Array.from(t)
                    }
                }
                _addToPayload(e) {
                    Hi.dependencies && ti(e) && Hi.dependencies.add(e);
                    const t = zi(e);
                    t && ma(t, (e => this.add(e)))
                }
            }
            class Li extends _i {
                constructor(e) {
                    super(e)
                }
                static create(e) {
                    return new Li(e)
                }
                getValue() {
                    return this.source.map((e => e.getValue()))
                }
                setValue(e) {
                    const t = this.getPayload();
                    return e.length == t.length ? t.map(((t, n) => t.setValue(e[n]))).some(Boolean) : (super.setValue(e.map(Fi)), !0)
                }
            }
            function Fi(e) {
                return (Pi(e) ? Oi : Ai).create(e)
            }
            function Xi(e) {
                const t = Ni(e);
                return t ? t.constructor : da.arr(e) ? Li : Pi(e) ? Oi : Ai
            }
            function Ui() {
                return Ui = Object.assign || function (e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                },
                    Ui.apply(this, arguments)
            }
            const qi = (e, t) => {
                const n = !da.fun(e) || e.prototype && e.prototype.isReactComponent;
                return (0, r.forwardRef)(((a, i) => {
                    const o = (0, r.useRef)(null),
                        s = n && (0, r.useCallback)((e => {
                            o.current = function (e, t) {
                                return e && (da.fun(e) ? e(t) : e.current = t),
                                    t
                            }(i, e)
                        }), [
                            i
                        ]),
                        [
                            u,
                            l
                        ] = function (e, t) {
                            const n = new Set;
                            return Hi.dependencies = n,
                                e.style && (e = Ui({
                                }, e, {
                                    style: t.createAnimatedStyle(e.style)
                                })),
                                e = new _i(e),
                                Hi.dependencies = null,
                                [
                                    e,
                                    n
                                ]
                        }(a, t),
                        d = Ti(),
                        c = () => {
                            const e = o.current;
                            n && !e || !1 === (!!e && t.applyAnimatedValues(e, u.getValue(!0))) && d()
                        },
                        m = new Gi(c, l),
                        f = (0, r.useRef)();
                    ji((() => {
                        const e = f.current;
                        f.current = m,
                            ma(l, (e => si(e, m))),
                            e && (ma(e.deps, (t => ui(t, e))), Vr.cancel(e.update))
                    })),
                        (0, r.useEffect)(c, [
                        ]),
                        xi((() => () => {
                            const e = f.current;
                            ma(e.deps, (t => ui(t, e)))
                        }));
                    const h = t.getComponentProps(u.getValue());
                    return r.createElement(e, Ui({
                    }, h, {
                        ref: s
                    }))
                }))
            };
            class Gi {
                constructor(e, t) {
                    this.update = e,
                        this.deps = t
                }
                eventObserved(e) {
                    'change' == e.type && Vr.write(this.update)
                }
            }
            const Vi = Symbol.for('AnimatedComponent'),
                Yi = e => da.str(e) ? e : e && da.str(e.displayName) ? e.displayName : da.fun(e) && e.name || null;
            function Bi() {
                return Bi = Object.assign || function (e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                },
                    Bi.apply(this, arguments)
            }
            function $i(e, ...t) {
                return da.fun(e) ? e(...t) : e
            }
            const Qi = (e, t) => !0 === e || !!(t && e && (da.fun(e) ? e(t) : ha(e).includes(t))),
                Ki = (e, t) => da.obj(e) ? t && e[t] : e,
                Ji = (e, t) => !0 === e.default ? e[t] : e.default ? e.default[t] : void 0,
                Zi = e => e,
                eo = (e, t = Zi) => {
                    let n = to;
                    e.default && !0 !== e.default && (e = e.default, n = Object.keys(e));
                    const r = {
                    };
                    for (const a of n) {
                        const n = t(e[a], a);
                        da.und(n) || (r[a] = n)
                    }
                    return r
                },
                to = [
                    'config',
                    'onProps',
                    'onStart',
                    'onChange',
                    'onPause',
                    'onResume',
                    'onRest'
                ],
                no = {
                    config: 1,
                    from: 1,
                    to: 1,
                    ref: 1,
                    loop: 1,
                    reset: 1,
                    pause: 1,
                    cancel: 1,
                    reverse: 1,
                    immediate: 1,
                    default:
                        1,
                    delay: 1,
                    onProps: 1,
                    onStart: 1,
                    onChange: 1,
                    onPause: 1,
                    onResume: 1,
                    onRest: 1,
                    onResolve: 1,
                    items: 1,
                    trail: 1,
                    sort: 1,
                    expires: 1,
                    initial: 1,
                    enter: 1,
                    update: 1,
                    leave: 1,
                    children: 1,
                    onDestroyed: 1,
                    keys: 1,
                    callId: 1,
                    parentId: 1
                };
            function ro(e) {
                const t = function (e) {
                    const t = {
                    };
                    let n = 0;
                    if (fa(e, ((e, r) => {
                        no[r] || (t[r] = e, n++)
                    })), n) return t
                }(e);
                if (t) {
                    const n = {
                        to: t
                    };
                    return fa(e, ((e, r) => r in t || (n[r] = e))),
                        n
                }
                return Bi({
                }, e)
            }
            function ao(e) {
                return e = ni(e),
                    da.arr(e) ? e.map(ao) : Pi(e) ? Ea.createStringInterpolator({
                        range: [
                            0,
                            1
                        ],
                        output: [
                            e,
                            e
                        ]
                    })(1) : e
            }
            function io(e) {
                for (const t in e) return !0;
                return !1
            }
            function oo(e) {
                return da.fun(e) || da.arr(e) && da.obj(e[0])
            }
            function so(e, t) {
                var n;
                null == (n = e.ref) || n.delete(e),
                    null == t || t.delete(e)
            }
            function uo(e, t) {
                var n;
                t && e.ref !== t && (null == (n = e.ref) || n.delete(e), t.add(e), e.ref = t)
            }
            const lo = 1.70158,
                co = 1.525 * lo,
                mo = lo + 1,
                fo = 2 * Math.PI / 3,
                ho = 2 * Math.PI / 4.5,
                po = e => {
                    const t = 7.5625,
                        n = 2.75;
                    return e < 1 / n ? t * e * e : e < 2 / n ? t * (e -= 1.5 / n) * e + 0.75 : e < 2.5 / n ? t * (e -= 2.25 / n) * e + 0.9375 : t * (e -= 2.625 / n) * e + 0.984375
                },
                go = {
                    linear: e => e,
                    easeInQuad: e => e * e,
                    easeOutQuad: e => 1 - (1 - e) * (1 - e),
                    easeInOutQuad: e => e < 0.5 ? 2 * e * e : 1 - Math.pow(- 2 * e + 2, 2) / 2,
                    easeInCubic: e => e * e * e,
                    easeOutCubic: e => 1 - Math.pow(1 - e, 3),
                    easeInOutCubic: e => e < 0.5 ? 4 * e * e * e : 1 - Math.pow(- 2 * e + 2, 3) / 2,
                    easeInQuart: e => e * e * e * e,
                    easeOutQuart: e => 1 - Math.pow(1 - e, 4),
                    easeInOutQuart: e => e < 0.5 ? 8 * e * e * e * e : 1 - Math.pow(- 2 * e + 2, 4) / 2,
                    easeInQuint: e => e * e * e * e * e,
                    easeOutQuint: e => 1 - Math.pow(1 - e, 5),
                    easeInOutQuint: e => e < 0.5 ? 16 * e * e * e * e * e : 1 - Math.pow(- 2 * e + 2, 5) / 2,
                    easeInSine: e => 1 - Math.cos(e * Math.PI / 2),
                    easeOutSine: e => Math.sin(e * Math.PI / 2),
                    easeInOutSine: e => - (Math.cos(Math.PI * e) - 1) / 2,
                    easeInExpo: e => 0 === e ? 0 : Math.pow(2, 10 * e - 10),
                    easeOutExpo: e => 1 === e ? 1 : 1 - Math.pow(2, - 10 * e),
                    easeInOutExpo: e => 0 === e ? 0 : 1 === e ? 1 : e < 0.5 ? Math.pow(2, 20 * e - 10) / 2 : (2 - Math.pow(2, - 20 * e + 10)) / 2,
                    easeInCirc: e => 1 - Math.sqrt(1 - Math.pow(e, 2)),
                    easeOutCirc: e => Math.sqrt(1 - Math.pow(e - 1, 2)),
                    easeInOutCirc: e => e < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * e, 2))) / 2 : (Math.sqrt(1 - Math.pow(- 2 * e + 2, 2)) + 1) / 2,
                    easeInBack: e => mo * e * e * e - lo * e * e,
                    easeOutBack: e => 1 + mo * Math.pow(e - 1, 3) + lo * Math.pow(e - 1, 2),
                    easeInOutBack: e => e < 0.5 ? Math.pow(2 * e, 2) * (7.189819 * e - co) / 2 : (Math.pow(2 * e - 2, 2) * ((co + 1) * (2 * e - 2) + co) + 2) / 2,
                    easeInElastic: e => 0 === e ? 0 : 1 === e ? 1 : - Math.pow(2, 10 * e - 10) * Math.sin((10 * e - 10.75) * fo),
                    easeOutElastic: e => 0 === e ? 0 : 1 === e ? 1 : Math.pow(2, - 10 * e) * Math.sin((10 * e - 0.75) * fo) + 1,
                    easeInOutElastic: e => 0 === e ? 0 : 1 === e ? 1 : e < 0.5 ? - Math.pow(2, 20 * e - 10) * Math.sin((20 * e - 11.125) * ho) / 2 : Math.pow(2, - 20 * e + 10) * Math.sin((20 * e - 11.125) * ho) / 2 + 1,
                    easeInBounce: e => 1 - po(1 - e),
                    easeOutBounce: po,
                    easeInOutBounce: e => e < 0.5 ? (1 - po(1 - 2 * e)) / 2 : (1 + po(2 * e - 1)) / 2
                },
                vo = Bi({
                }, {
                    tension: 170,
                    friction: 26
                }, {
                    mass: 1,
                    damping: 1,
                    easing: go.linear,
                    clamp: !1
                });
            class yo {
                constructor() {
                    this.tension = void 0,
                        this.friction = void 0,
                        this.frequency = void 0,
                        this.damping = void 0,
                        this.mass = void 0,
                        this.velocity = 0,
                        this.restVelocity = void 0,
                        this.precision = void 0,
                        this.progress = void 0,
                        this.duration = void 0,
                        this.easing = void 0,
                        this.clamp = void 0,
                        this.bounce = void 0,
                        this.decay = void 0,
                        this.round = void 0,
                        Object.assign(this, vo)
                }
            }
            function wo(e, t) {
                if (da.und(t.decay)) {
                    const n = !da.und(t.tension) || !da.und(t.friction);
                    !n && da.und(t.frequency) && da.und(t.damping) && da.und(t.mass) || (e.duration = void 0, e.decay = void 0),
                        n && (e.frequency = void 0)
                } else e.duration = void 0
            }
            const bo = [
            ];
            class ko {
                constructor() {
                    this.changed = !1,
                        this.values = bo,
                        this.toValues = null,
                        this.fromValues = bo,
                        this.to = void 0,
                        this.from = void 0,
                        this.config = new yo,
                        this.immediate = !1
                }
            }
            function Mo(e, {
                key: t,
                props: n,
                defaultProps: r,
                state: a,
                actions: i
            }) {
                return new Promise(((o, s) => {
                    var u;
                    let l,
                        d,
                        c = Qi(null != (u = n.cancel) ? u : null == r ? void 0 : r.cancel, t);
                    if (c) h();
                    else {
                        da.und(n.pause) || (a.paused = Qi(n.pause, t));
                        let e = null == r ? void 0 : r.pause;
                        !0 !== e && (e = a.paused || Qi(e, t)),
                            l = $i(n.delay || 0, t),
                            e ? (a.resumeQueue.add(f), i.pause()) : (i.resume(), f())
                    }
                    function m() {
                        a.resumeQueue.add(f),
                            a.timeouts.delete(d),
                            d.cancel(),
                            l = d.time - Vr.now()
                    }
                    function f() {
                        l > 0 && !Ea.skipAnimation ? (a.delayed = !0, d = Vr.setTimeout(h, l), a.pauseQueue.add(m), a.timeouts.add(d)) : h()
                    }
                    function h() {
                        a.delayed && (a.delayed = !1),
                            a.pauseQueue.delete(m),
                            a.timeouts.delete(d),
                            e <= (a.cancelId || 0) && (c = !0);
                        try {
                            i.start(Bi({
                            }, n, {
                                callId: e,
                                cancel: c
                            }), o)
                        } catch (e) {
                            s(e)
                        }
                    }
                }))
            }
            const Eo = (e, t) => 1 == t.length ? t[0] : t.some((e => e.cancelled)) ? So(e.get()) : t.every((e => e.noop)) ? Po(e.get()) : xo(e.get(), t.every((e => e.finished))),
                Po = e => ({
                    value: e,
                    noop: !0,
                    finished: !0,
                    cancelled: !1
                }),
                xo = (e, t, n = !1) => ({
                    value: e,
                    finished: t,
                    cancelled: n
                }),
                So = e => ({
                    value: e,
                    cancelled: !0,
                    finished: !1
                });
            function To(e, t, n, r) {
                const {
                    callId: a,
                    parentId: i,
                    onRest: o
                }
                    = t,
                    {
                        asyncTo: s,
                        promise: u
                    }
                        = n;
                return i || e !== s || t.reset ? n.promise = (async () => {
                    n.asyncId = a,
                        n.asyncTo = e;
                    const l = eo(t, ((e, t) => 'onRest' === t ? void 0 : e));
                    let d,
                        c;
                    const m = new Promise(((e, t) => (d = e, c = t))),
                        f = e => {
                            const t = a <= (n.cancelId || 0) && So(r) || a !== n.asyncId && xo(r, !1);
                            if (t) throw e.result = t,
                                c(e),
                                e
                        },
                        h = (e, t) => {
                            const i = new Wo,
                                o = new jo;
                            return (async () => {
                                if (Ea.skipAnimation) throw Co(n),
                                    o.result = xo(r, !1),
                                    c(o),
                                    o;
                                f(i);
                                const s = da.obj(e) ? Bi({
                                }, e) : Bi({
                                }, t, {
                                    to: e
                                });
                                s.parentId = a,
                                    fa(l, ((e, t) => {
                                        da.und(s[t]) && (s[t] = e)
                                    }));
                                const u = await r.start(s);
                                return f(i),
                                    n.paused && await new Promise((e => {
                                        n.resumeQueue.add(e)
                                    })),
                                    u
                            })()
                        };
                    let p;
                    if (Ea.skipAnimation) return Co(n),
                        xo(r, !1);
                    try {
                        let t;
                        t = da.arr(e) ? (async e => {
                            for (const t of e) await h(t)
                        })(e) : Promise.resolve(e(h, r.stop.bind(r))),
                            await Promise.all([t.then(d),
                                m]),
                            p = xo(r.get(), !0, !1)
                    } catch (e) {
                        if (e instanceof Wo) p = e.result;
                        else {
                            if (!(e instanceof jo)) throw e;
                            p = e.result
                        }
                    } finally {
                        a == n.asyncId && (n.asyncId = i, n.asyncTo = i ? s : void 0, n.promise = i ? u : void 0)
                    }
                    return da.fun(o) && Vr.batchedUpdates((() => {
                        o(p, r, r.item)
                    })),
                        p
                })() : u
            }
            function Co(e, t) {
                pa(e.timeouts, (e => e.cancel())),
                    e.pauseQueue.clear(),
                    e.resumeQueue.clear(),
                    e.asyncId = e.asyncTo = e.promise = void 0,
                    t && (e.cancelId = t)
            }
            class Wo extends Error {
                constructor() {
                    super('An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise.'),
                        this.result = void 0
                }
            }
            class jo extends Error {
                constructor() {
                    super('SkipAnimationSignal'),
                        this.result = void 0
                }
            }
            const Do = e => e instanceof Io;
            let No = 1;
            class Io extends ii {
                constructor(...e) {
                    super(...e),
                        this.id = No++,
                        this.key = void 0,
                        this._priority = 0
                }
                get priority() {
                    return this._priority
                }
                set priority(e) {
                    this._priority != e && (this._priority = e, this._onPriorityChange(e))
                }
                get() {
                    const e = Ni(this);
                    return e && e.getValue()
                }
                to(...e) {
                    return Ea.to(this, e)
                }
                interpolate(...e) {
                    return Mi(`${bi}The "interpolate" function is deprecated in v9 (use "to" instead)`),
                        Ea.to(this, e)
                }
                toJSON() {
                    return this.get()
                }
                observerAdded(e) {
                    1 == e && this._attach()
                }
                observerRemoved(e) {
                    0 == e && this._detach()
                }
                _attach() {
                }
                _detach() {
                }
                _onChange(e, t = !1) {
                    ai(this, {
                        type: 'change',
                        parent: this,
                        value: e,
                        idle: t
                    })
                }
                _onPriorityChange(e) {
                    this.idle || Ca.sort(this),
                        ai(this, {
                            type: 'priority',
                            parent: this,
                            priority: e
                        })
                }
            }
            const zo = Symbol.for('SpringPhase'),
                Ro = e => (1 & e[zo]) > 0,
                Ao = e => (2 & e[zo]) > 0,
                Oo = e => (4 & e[zo]) > 0,
                Ho = (e, t) => t ? e[zo] |= 3 : e[zo] &= - 3,
                _o = (e, t) => t ? e[zo] |= 4 : e[zo] &= - 5;
            class Lo extends Io {
                constructor(e, t) {
                    if (super(), this.key = void 0, this.animation = new ko, this.queue = void 0, this.defaultProps = {
                    }, this._state = {
                        paused: !1,
                        delayed: !1,
                        pauseQueue: new Set,
                        resumeQueue: new Set,
                        timeouts: new Set
                    }, this._pendingCalls = new Set, this._lastCallId = 0, this._lastToId = 0, this._memoizedDuration = 0, !da.und(e) || !da.und(t)) {
                        const n = da.obj(e) ? Bi({
                        }, e) : Bi({
                        }, t, {
                            from: e
                        });
                        da.und(n.default) && (n.default = !0),
                            this.start(n)
                    }
                }
                get idle() {
                    return !(Ao(this) || this._state.asyncTo) || Oo(this)
                }
                get goal() {
                    return ni(this.animation.to)
                }
                get velocity() {
                    const e = Ni(this);
                    return e instanceof Ai ? e.lastVelocity || 0 : e.getPayload().map((e => e.lastVelocity || 0))
                }
                get hasAnimated() {
                    return Ro(this)
                }
                get isAnimating() {
                    return Ao(this)
                }
                get isPaused() {
                    return Oo(this)
                }
                get isDelayed() {
                    return this._state.delayed
                }
                advance(e) {
                    let t = !0,
                        n = !1;
                    const r = this.animation;
                    let {
                        config: a,
                        toValues: i
                    }
                        = r;
                    const o = zi(r.to);
                    !o && ti(r.to) && (i = ha(ni(r.to))),
                        r.values.forEach(((s, u) => {
                            if (s.done) return;
                            const l = s.constructor == Oi ? 1 : o ? o[u].lastPosition : i[u];
                            let d = r.immediate,
                                c = l;
                            if (!d) {
                                if (c = s.lastPosition, a.tension <= 0) return void (s.done = !0);
                                let t = s.elapsedTime += e;
                                const n = r.fromValues[u],
                                    i = null != s.v0 ? s.v0 : s.v0 = da.arr(a.velocity) ? a.velocity[u] : a.velocity;
                                let o;
                                if (da.und(a.duration)) if (a.decay) {
                                    const e = !0 === a.decay ? 0.998 : a.decay,
                                        r = Math.exp(- (1 - e) * t);
                                    c = n + i / (1 - e) * (1 - r),
                                        d = Math.abs(s.lastPosition - c) < 0.1,
                                        o = i * r
                                } else {
                                    o = null == s.lastVelocity ? i : s.lastVelocity;
                                    const t = a.precision || (n == l ? 0.005 : Math.min(1, 0.001 * Math.abs(l - n))),
                                        r = a.restVelocity || t / 10,
                                        u = a.clamp ? 0 : a.bounce,
                                        m = !da.und(u),
                                        f = n == l ? s.v0 > 0 : n < l;
                                    let h,
                                        p = !1;
                                    const g = 1,
                                        v = Math.ceil(e / g);
                                    for (let e = 0; e < v && (h = Math.abs(o) > r, h || (d = Math.abs(l - c) <= t, !d)); ++e) m && (p = c == l || c > l == f, p && (o = - o * u, c = l)),
                                        o += (0.000001 * - a.tension * (c - l) + 0.001 * - a.friction * o) / a.mass * g,
                                        c += o * g
                                } else {
                                    let r = 1;
                                    a.duration > 0 && (this._memoizedDuration !== a.duration && (this._memoizedDuration = a.duration, s.durationProgress > 0 && (s.elapsedTime = a.duration * s.durationProgress, t = s.elapsedTime += e)), r = (a.progress || 0) + t / this._memoizedDuration, r = r > 1 ? 1 : r < 0 ? 0 : r, s.durationProgress = r),
                                        c = n + a.easing(r) * (l - n),
                                        o = (c - s.lastPosition) / e,
                                        d = 1 == r
                                }
                                s.lastVelocity = o,
                                    Number.isNaN(c) && (console.warn('Got NaN while animating:', this), d = !0)
                            }
                            o && !o[u].done && (d = !1),
                                d ? s.done = !0 : t = !1,
                                s.setValue(c, a.round) && (n = !0)
                        }));
                    const s = Ni(this),
                        u = s.getValue();
                    if (t) {
                        const e = ni(r.to);
                        u === e && !n || a.decay ? n && a.decay && this._onChange(u) : (s.setValue(e), this._onChange(e)),
                            this._stop()
                    } else n && this._onChange(u)
                }
                set(e) {
                    return Vr.batchedUpdates((() => {
                        this._stop(),
                            this._focus(e),
                            this._set(e)
                    })),
                        this
                }
                pause() {
                    this._update({
                        pause: !0
                    })
                }
                resume() {
                    this._update({
                        pause: !1
                    })
                }
                finish() {
                    if (Ao(this)) {
                        const {
                            to: e,
                            config: t
                        }
                            = this.animation;
                        Vr.batchedUpdates((() => {
                            this._onStart(),
                                t.decay || this._set(e, !1),
                                this._stop()
                        }))
                    }
                    return this
                }
                update(e) {
                    return (this.queue || (this.queue = [
                    ])).push(e),
                        this
                }
                start(e, t) {
                    let n;
                    return da.und(e) ? (n = this.queue || [
                    ], this.queue = [
                    ]) : n = [
                        da.obj(e) ? e : Bi({
                        }, t, {
                            to: e
                        })
                    ],
                        Promise.all(n.map((e => this._update(e)))).then((e => Eo(this, e)))
                }
                stop(e) {
                    const {
                        to: t
                    }
                        = this.animation;
                    return this._focus(this.get()),
                        Co(this._state, e && this._lastCallId),
                        Vr.batchedUpdates((() => this._stop(t, e))),
                        this
                }
                reset() {
                    this._update({
                        reset: !0
                    })
                }
                eventObserved(e) {
                    'change' == e.type ? this._start() : 'priority' == e.type && (this.priority = e.priority + 1)
                }
                _prepareNode(e) {
                    const t = this.key || '';
                    let {
                        to: n,
                        from: r
                    }
                        = e;
                    n = da.obj(n) ? n[t] : n,
                        (null == n || oo(n)) && (n = void 0),
                        r = da.obj(r) ? r[t] : r,
                        null == r && (r = void 0);
                    const a = {
                        to: n,
                        from: r
                    };
                    return Ro(this) || (e.reverse && ([n,
                        r] = [
                            r,
                            n
                        ]), r = ni(r), da.und(r) ? Ni(this) || this._set(n) : this._set(r)),
                        a
                }
                _update(e, t) {
                    let n = Bi({
                    }, e);
                    const {
                        key: r,
                        defaultProps: a
                    }
                        = this;
                    n.default && Object.assign(a, eo(n, ((e, t) => /^on/.test(t) ? Ki(e, r) : e))),
                        Yo(this, n, 'onProps'),
                        Bo(this, 'onProps', n, this);
                    const i = this._prepareNode(n);
                    if (Object.isFrozen(this)) throw Error('Cannot animate a `SpringValue` object that is frozen. Did you forget to pass your component to `animated(...)` before animating its props?');
                    const o = this._state;
                    return Mo(++this._lastCallId, {
                        key: r,
                        props: n,
                        defaultProps: a,
                        state: o,
                        actions: {
                            pause: () => {
                                Oo(this) || (_o(this, !0), ga(o.pauseQueue), Bo(this, 'onPause', xo(this, Fo(this, this.animation.to)), this))
                            },
                            resume: () => {
                                Oo(this) && (_o(this, !1), Ao(this) && this._resume(), ga(o.resumeQueue), Bo(this, 'onResume', xo(this, Fo(this, this.animation.to)), this))
                            },
                            start: this._merge.bind(this, i)
                        }
                    }).then((e => {
                        if (n.loop && e.finished && (!t || !e.noop)) {
                            const e = Xo(n);
                            if (e) return this._update(e, !0)
                        }
                        return e
                    }))
                }
                _merge(e, t, n) {
                    if (t.cancel) return this.stop(!0),
                        n(So(this));
                    const r = !da.und(e.to),
                        a = !da.und(e.from);
                    if (r || a) {
                        if (!(t.callId > this._lastToId)) return n(So(this));
                        this._lastToId = t.callId
                    }
                    const {
                        key: i,
                        defaultProps: o,
                        animation: s
                    }
                        = this,
                        {
                            to: u,
                            from: l
                        }
                            = s;
                    let {
                        to: d = u,
                        from: c = l
                    }
                        = e;
                    !a || r || t.default && !da.und(d) || (d = c),
                        t.reverse && ([d,
                            c] = [
                                c,
                                d
                            ]);
                    const m = !ca(c, l);
                    m && (s.from = c),
                        c = ni(c);
                    const f = !ca(d, u);
                    f && this._focus(d);
                    const h = oo(t.to),
                        {
                            config: p
                        }
                            = s,
                        {
                            decay: g,
                            velocity: v
                        }
                            = p;
                    (r || a) && (p.velocity = 0),
                        t.config && !h && function (e, t, n) {
                            n && (wo(n = Bi({
                            }, n), t), t = Bi({
                            }, n, t)),
                                wo(e, t),
                                Object.assign(e, t);
                            for (const t in vo) null == e[t] && (e[t] = vo[t]);
                            let {
                                mass: r,
                                frequency: a,
                                damping: i
                            }
                                = e;
                            da.und(a) || (a < 0.01 && (a = 0.01), i < 0 && (i = 0), e.tension = Math.pow(2 * Math.PI / a, 2) * r, e.friction = 4 * Math.PI * i * r / a)
                        }(p, $i(t.config, i), t.config !== o.config ? $i(o.config, i) : void 0);
                    let y = Ni(this);
                    if (!y || da.und(d)) return n(xo(this, !0));
                    const w = da.und(t.reset) ? a && !t.default : !da.und(c) && Qi(t.reset, i),
                        b = w ? c : this.get(),
                        k = ao(d),
                        M = da.num(k) || da.arr(k) || Pi(k),
                        E = !h && (!M || Qi(o.immediate || t.immediate, i));
                    if (f) {
                        const e = Xi(d);
                        if (e !== y.constructor) {
                            if (!E) throw Error(`Cannot animate between ${y.constructor.name} and ${e.name}, as the "to" prop suggests`);
                            y = this._set(k)
                        }
                    }
                    const P = y.constructor;
                    let x = ti(d),
                        S = !1;
                    if (!x) {
                        const e = w || !Ro(this) && m;
                        (f || e) && (S = ca(ao(b), k), x = !S),
                            (ca(s.immediate, E) || E) && ca(p.decay, g) && ca(p.velocity, v) || (x = !0)
                    }
                    if (S && Ao(this) && (s.changed && !w ? x = !0 : x || this._stop(u)), !h && ((x || ti(u)) && (s.values = y.getPayload(), s.toValues = ti(d) ? null : P == Oi ? [
                        1
                    ] : ha(k)), s.immediate != E && (s.immediate = E, E || w || this._set(u)), x)) {
                        const {
                            onRest: e
                        }
                            = s;
                        ma(Vo, (e => Yo(this, t, e)));
                        const r = xo(this, Fo(this, u));
                        ga(this._pendingCalls, r),
                            this._pendingCalls.add(n),
                            s.changed && Vr.batchedUpdates((() => {
                                s.changed = !w,
                                    null == e || e(r, this),
                                    w ? $i(o.onRest, r) : null == s.onStart || s.onStart(r, this)
                            }))
                    }
                    w && this._set(b),
                        h ? n(To(t.to, t, this._state, this)) : x ? this._start() : Ao(this) && !f ? this._pendingCalls.add(n) : n(Po(b))
                }
                _focus(e) {
                    const t = this.animation;
                    e !== t.to && (ri(this) && this._detach(), t.to = e, ri(this) && this._attach())
                }
                _attach() {
                    let e = 0;
                    const {
                        to: t
                    }
                        = this.animation;
                    ti(t) && (si(t, this), Do(t) && (e = t.priority + 1)),
                        this.priority = e
                }
                _detach() {
                    const {
                        to: e
                    }
                        = this.animation;
                    ti(e) && ui(e, this)
                }
                _set(e, t = !0) {
                    const n = ni(e);
                    if (!da.und(n)) {
                        const e = Ni(this);
                        if (!e || !ca(n, e.getValue())) {
                            const r = Xi(n);
                            e && e.constructor == r ? e.setValue(n) : Ii(this, r.create(n)),
                                e && Vr.batchedUpdates((() => {
                                    this._onChange(n, t)
                                }))
                        }
                    }
                    return Ni(this)
                }
                _onStart() {
                    const e = this.animation;
                    e.changed || (e.changed = !0, Bo(this, 'onStart', xo(this, Fo(this, e.to)), this))
                }
                _onChange(e, t) {
                    t || (this._onStart(), $i(this.animation.onChange, e, this)),
                        $i(this.defaultProps.onChange, e, this),
                        super._onChange(e, t)
                }
                _start() {
                    const e = this.animation;
                    Ni(this).reset(ni(e.to)),
                        e.immediate || (e.fromValues = e.values.map((e => e.lastPosition))),
                        Ao(this) || (Ho(this, !0), Oo(this) || this._resume())
                }
                _resume() {
                    Ea.skipAnimation ? this.finish() : Ca.start(this)
                }
                _stop(e, t) {
                    if (Ao(this)) {
                        Ho(this, !1);
                        const n = this.animation;
                        ma(n.values, (e => {
                            e.done = !0
                        })),
                            n.toValues && (n.onChange = n.onPause = n.onResume = void 0),
                            ai(this, {
                                type: 'idle',
                                parent: this
                            });
                        const r = t ? So(this.get()) : xo(this.get(), Fo(this, null != e ? e : n.to));
                        ga(this._pendingCalls, r),
                            n.changed && (n.changed = !1, Bo(this, 'onRest', r, this))
                    }
                }
            }
            function Fo(e, t) {
                const n = ao(t);
                return ca(ao(e.get()), n)
            }
            function Xo(e, t = e.loop, n = e.to) {
                let r = $i(t);
                if (r) {
                    const a = !0 !== r && ro(r),
                        i = (a || e).reverse,
                        o = !a || a.reset;
                    return Uo(Bi({
                    }, e, {
                        loop: t,
                        default:
                            !1,
                        pause: void 0,
                        to: !i || oo(n) ? n : void 0,
                        from: o ? e.from : void 0,
                        reset: o
                    }, a))
                }
            }
            function Uo(e) {
                const {
                    to: t,
                    from: n
                }
                    = e = ro(e),
                    r = new Set;
                return da.obj(t) && Go(t, r),
                    da.obj(n) && Go(n, r),
                    e.keys = r.size ? Array.from(r) : null,
                    e
            }
            function qo(e) {
                const t = Uo(e);
                return da.und(t.default) && (t.default = eo(t)),
                    t
            }
            function Go(e, t) {
                fa(e, ((e, n) => null != e && t.add(n)))
            }
            const Vo = [
                'onStart',
                'onRest',
                'onChange',
                'onPause',
                'onResume'
            ];
            function Yo(e, t, n) {
                e.animation[n] = t[n] !== Ji(t, n) ? Ki(t[n], e.key) : void 0
            }
            function Bo(e, t, ...n) {
                var r,
                    a,
                    i,
                    o;
                null == (r = (a = e.animation)[t]) || r.call(a, ...n),
                    null == (i = (o = e.defaultProps)[t]) || i.call(o, ...n)
            }
            const $o = [
                'onStart',
                'onChange',
                'onRest'
            ];
            let Qo = 1;
            class Ko {
                constructor(e, t) {
                    this.id = Qo++,
                        this.springs = {
                        },
                        this.queue = [
                        ],
                        this.ref = void 0,
                        this._flush = void 0,
                        this._initialProps = void 0,
                        this._lastAsyncId = 0,
                        this._active = new Set,
                        this._changed = new Set,
                        this._started = !1,
                        this._item = void 0,
                        this._state = {
                            paused: !1,
                            pauseQueue: new Set,
                            resumeQueue: new Set,
                            timeouts: new Set
                        },
                        this._events = {
                            onStart: new Map,
                            onChange: new Map,
                            onRest: new Map
                        },
                        this._onFrame = this._onFrame.bind(this),
                        t && (this._flush = t),
                        e && this.start(Bi({
                            default:
                                !0
                        }, e))
                }
                get idle() {
                    return !this._state.asyncTo && Object.values(this.springs).every((e => e.idle && !e.isDelayed && !e.isPaused))
                }
                get item() {
                    return this._item
                }
                set item(e) {
                    this._item = e
                }
                get() {
                    const e = {
                    };
                    return this.each(((t, n) => e[n] = t.get())),
                        e
                }
                set(e) {
                    for (const t in e) {
                        const n = e[t];
                        da.und(n) || this.springs[t].set(n)
                    }
                }
                update(e) {
                    return e && this.queue.push(Uo(e)),
                        this
                }
                start(e) {
                    let {
                        queue: t
                    }
                        = this;
                    return e ? t = ha(e).map(Uo) : this.queue = [
                    ],
                        this._flush ? this._flush(this, t) : (as(this, t), Jo(this, t))
                }
                stop(e, t) {
                    if (e !== !!e && (t = e), t) {
                        const n = this.springs;
                        ma(ha(t), (t => n[t].stop(!!e)))
                    } else Co(this._state, this._lastAsyncId),
                        this.each((t => t.stop(!!e)));
                    return this
                }
                pause(e) {
                    if (da.und(e)) this.start({
                        pause: !0
                    });
                    else {
                        const t = this.springs;
                        ma(ha(e), (e => t[e].pause()))
                    }
                    return this
                }
                resume(e) {
                    if (da.und(e)) this.start({
                        pause: !1
                    });
                    else {
                        const t = this.springs;
                        ma(ha(e), (e => t[e].resume()))
                    }
                    return this
                }
                each(e) {
                    fa(this.springs, e)
                }
                _onFrame() {
                    const {
                        onStart: e,
                        onChange: t,
                        onRest: n
                    }
                        = this._events,
                        r = this._active.size > 0,
                        a = this._changed.size > 0;
                    (r && !this._started || a && !this._started) && (this._started = !0, pa(e, (([e,
                        t]) => {
                        t.value = this.get(),
                            e(t, this, this._item)
                    })));
                    const i = !r && this._started,
                        o = a || i && n.size ? this.get() : null;
                    a && t.size && pa(t, (([e,
                        t]) => {
                        t.value = o,
                            e(t, this, this._item)
                    })),
                        i && (this._started = !1, pa(n, (([e,
                            t]) => {
                            t.value = o,
                                e(t, this, this._item)
                        })))
                }
                eventObserved(e) {
                    if ('change' == e.type) this._changed.add(e.parent),
                        e.idle || this._active.add(e.parent);
                    else {
                        if ('idle' != e.type) return;
                        this._active.delete(e.parent)
                    }
                    Vr.onFrame(this._onFrame)
                }
            }
            function Jo(e, t) {
                return Promise.all(t.map((t => Zo(e, t)))).then((t => Eo(e, t)))
            }
            async function Zo(e, t, n) {
                const {
                    keys: r,
                    to: a,
                    from: i,
                    loop: o,
                    onRest: s,
                    onResolve: u
                }
                    = t,
                    l = da.obj(t.default) && t.default;
                o && (t.loop = !1),
                    !1 === a && (t.to = null),
                    !1 === i && (t.from = null);
                const d = da.arr(a) || da.fun(a) ? a : void 0;
                d ? (t.to = void 0, t.onRest = void 0, l && (l.onRest = void 0)) : ma($o, (n => {
                    const r = t[n];
                    if (da.fun(r)) {
                        const a = e._events[n];
                        t[n] = ({
                            finished: e,
                            cancelled: t
                        }) => {
                            const n = a.get(r);
                            n ? (e || (n.finished = !1), t && (n.cancelled = !0)) : a.set(r, {
                                value: null,
                                finished: e || !1,
                                cancelled: t || !1
                            })
                        },
                            l && (l[n] = t[n])
                    }
                }));
                const c = e._state;
                t.pause === !c.paused ? (c.paused = t.pause, ga(t.pause ? c.pauseQueue : c.resumeQueue)) : c.paused && (t.pause = !0);
                const m = (r || Object.keys(e.springs)).map((n => e.springs[n].start(t))),
                    f = !0 === t.cancel || !0 === Ji(t, 'cancel');
                (d || f && c.asyncId) && m.push(Mo(++e._lastAsyncId, {
                    props: t,
                    state: c,
                    actions: {
                        pause: la,
                        resume: la,
                        start(t, n) {
                            f ? (Co(c, e._lastAsyncId), n(So(e))) : (t.onRest = s, n(To(d, t, c, e)))
                        }
                    }
                })),
                    c.paused && await new Promise((e => {
                        c.resumeQueue.add(e)
                    }));
                const h = Eo(e, await Promise.all(m));
                if (o && h.finished && (!n || !h.noop)) {
                    const n = Xo(t, o, a);
                    if (n) return as(e, [
                        n
                    ]),
                        Zo(e, n, !0)
                }
                return u && Vr.batchedUpdates((() => u(h, e, e.item))),
                    h
            }
            function es(e, t) {
                const n = Bi({
                }, e.springs);
                return t && ma(ha(t), (e => {
                    da.und(e.keys) && (e = Uo(e)),
                        da.obj(e.to) || (e = Bi({
                        }, e, {
                            to: void 0
                        })),
                        rs(n, e, (e => ns(e)))
                })),
                    ts(e, n),
                    n
            }
            function ts(e, t) {
                fa(t, ((t, n) => {
                    e.springs[n] || (e.springs[n] = t, si(t, e))
                }))
            }
            function ns(e, t) {
                const n = new Lo;
                return n.key = e,
                    t && si(n, t),
                    n
            }
            function rs(e, t, n) {
                t.keys && ma(t.keys, (r => {
                    (e[r] || (e[r] = n(r)))._prepareNode(t)
                }))
            }
            function as(e, t) {
                ma(t, (t => {
                    rs(e.springs, t, (t => ns(t, e)))
                }))
            }
            function is(e, t) {
                if (null == e) return {
                };
                var n,
                    r,
                    a = {
                    },
                    i = Object.keys(e);
                for (r = 0; r < i.length; r++) n = i[r],
                    t.indexOf(n) >= 0 || (a[n] = e[n]);
                return a
            }
            const os = [
                'children'
            ],
                ss = e => {
                    let {
                        children: t
                    }
                        = e,
                        n = is(e, os);
                    const a = (0, r.useContext)(us),
                        i = n.pause || !!a.pause,
                        o = n.immediate || !!a.immediate;
                    n = function (e, t) {
                        const [n] = (0, r.useState)((() => ({
                            inputs: t,
                            result: e()
                        }))),
                            a = (0, r.useRef)(),
                            i = a.current;
                        let o = i;
                        return o ? Boolean(t && o.inputs && function (e, t) {
                            if (e.length !== t.length) return !1;
                            for (let n = 0; n < e.length; n++) if (e[n] !== t[n]) return !1;
                            return !0
                        }(t, o.inputs)) || (o = {
                            inputs: t,
                            result: e()
                        }) : o = n,
                            (0, r.useEffect)((() => {
                                a.current = o,
                                    i == n && (n.inputs = n.result = void 0)
                            }), [
                                o
                            ]),
                            o.result
                    }((() => ({
                        pause: i,
                        immediate: o
                    })), [
                        i,
                        o
                    ]);
                    const {
                        Provider: s
                    }
                        = us;
                    return r.createElement(s, {
                        value: n
                    }, t)
                },
                us = (ls = ss, ds = {
                }, Object.assign(ls, r.createContext(ds)), ls.Provider._context = ls, ls.Consumer._context = ls, ls);
            var ls,
                ds;
            ss.Provider = us.Provider,
                ss.Consumer = us.Consumer;
            const cs = () => {
                const e = [
                ],
                    t = function (t) {
                        Ei(`${bi}Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions`);
                        const r = [
                        ];
                        return ma(e, ((e, a) => {
                            if (da.und(t)) r.push(e.start());
                            else {
                                const i = n(t, e, a);
                                i && r.push(e.start(i))
                            }
                        })),
                            r
                    };
                t.current = e,
                    t.add = function (t) {
                        e.includes(t) || e.push(t)
                    },
                    t.delete = function (t) {
                        const n = e.indexOf(t);
                        ~n && e.splice(n, 1)
                    },
                    t.pause = function () {
                        return ma(e, (e => e.pause(...arguments))),
                            this
                    },
                    t.resume = function () {
                        return ma(e, (e => e.resume(...arguments))),
                            this
                    },
                    t.set = function (t) {
                        ma(e, (e => e.set(t)))
                    },
                    t.start = function (t) {
                        const n = [
                        ];
                        return ma(e, ((e, r) => {
                            if (da.und(t)) n.push(e.start());
                            else {
                                const a = this._getProps(t, e, r);
                                a && n.push(e.start(a))
                            }
                        })),
                            n
                    },
                    t.stop = function () {
                        return ma(e, (e => e.stop(...arguments))),
                            this
                    },
                    t.update = function (t) {
                        return ma(e, ((e, n) => e.update(this._getProps(t, e, n)))),
                            this
                    };
                const n = function (e, t, n) {
                    return da.fun(e) ? e(n, t) : e
                };
                return t._getProps = n,
                    t
            };
            function ms(e, t, n) {
                const a = da.fun(t) && t;
                a && !n && (n = [
                ]);
                const i = (0, r.useMemo)((() => a || 3 == arguments.length ? cs() : void 0), [
                ]),
                    o = (0, r.useRef)(0),
                    s = Ti(),
                    u = (0, r.useMemo)((() => ({
                        ctrls: [
                        ],
                        queue: [
                        ],
                        flush(e, t) {
                            const n = es(e, t);
                            return o.current > 0 && !u.queue.length && !Object.keys(n).some((t => !e.springs[t])) ? Jo(e, t) : new Promise((r => {
                                ts(e, n),
                                    u.queue.push((() => {
                                        r(Jo(e, t))
                                    })),
                                    s()
                            }))
                        }
                    })), [
                    ]),
                    l = (0, r.useRef)([...u.ctrls]),
                    d = [
                    ],
                    c = Wi(e) || 0;
                function m(e, n) {
                    for (let r = e; r < n; r++) {
                        const e = l.current[r] || (l.current[r] = new Ko(null, u.flush)),
                            n = a ? a(r, e) : t[r];
                        n && (d[r] = qo(n))
                    }
                } (0, r.useMemo)((() => {
                    ma(l.current.slice(e, c), (e => {
                        so(e, i),
                            e.stop(!0)
                    })),
                        l.current.length = e,
                        m(c, e)
                }), [
                    e
                ]),
                    (0, r.useMemo)((() => {
                        m(0, Math.min(c, e))
                    }), n);
                const f = l.current.map(((e, t) => es(e, d[t]))),
                    h = (0, r.useContext)(ss),
                    p = Wi(h),
                    g = h !== p && io(h);
                ji((() => {
                    o.current++,
                        u.ctrls = l.current;
                    const {
                        queue: e
                    }
                        = u;
                    e.length && (u.queue = [
                    ], ma(e, (e => e()))),
                        ma(l.current, ((e, t) => {
                            null == i || i.add(e),
                                g && e.start({
                                    default:
                                        h
                                });
                            const n = d[t];
                            n && (uo(e, n.ref), e.ref ? e.queue.push(n) : e.start(n))
                        }))
                })),
                    xi((() => () => {
                        ma(u.ctrls, (e => e.stop(!0)))
                    }));
                const v = f.map((e => Bi({
                }, e)));
                return i ? [
                    v,
                    i
                ] : v
            }
            function fs(e, t) {
                const n = da.fun(e),
                    [
                        [r],
                        a
                    ] = ms(1, n ? e : [
                        e
                    ], n ? t || [
                    ] : t);
                return n || 2 == arguments.length ? [
                    r,
                    a
                ] : r
            }
            let hs;
            !function (e) {
                e.MOUNT = 'mount',
                    e.ENTER = 'enter',
                    e.UPDATE = 'update',
                    e.LEAVE = 'leave'
            }(hs || (hs = {
            }));
            let ps = 1;
            function gs(e, {
                key: t,
                keys: n = t
            }, r) {
                if (null === n) {
                    const t = new Set;
                    return e.map((e => {
                        const n = r && r.find((n => n.item === e && n.phase !== hs.LEAVE && !t.has(n)));
                        return n ? (t.add(n), n.key) : ps++
                    }))
                }
                return da.und(n) ? e : da.fun(n) ? e.map(n) : ha(n)
            }
            const vs = [
                'children'
            ];
            function ys(e) {
                let {
                    children: t
                }
                    = e;
                return t(fs(is(e, vs)))
            }
            const ws = [
                'items',
                'children'
            ];
            function bs(e) {
                let {
                    items: t,
                    children: n
                }
                    = e;
                return function (e, t, n) {
                    const a = da.fun(t) && t,
                        {
                            reset: i,
                            sort: o,
                            trail: s = 0,
                            expires: u = !0,
                            exitBeforeEnter: l = !1,
                            onDestroyed: d,
                            ref: c,
                            config: m
                        }
                            = a ? a() : t,
                        f = (0, r.useMemo)((() => a || 3 == arguments.length ? cs() : void 0), [
                        ]),
                        h = ha(e),
                        p = [
                        ],
                        g = (0, r.useRef)(null),
                        v = i ? null : g.current;
                    ji((() => {
                        g.current = p
                    })),
                        xi((() => () => {
                            ma(g.current, (e => {
                                e.expired && clearTimeout(e.expirationId),
                                    so(e.ctrl, f),
                                    e.ctrl.stop(!0)
                            }))
                        }));
                    const y = gs(h, a ? a() : t, v),
                        w = i && g.current || [
                        ];
                    ji((() => ma(w, (({
                        ctrl: e,
                        item: t,
                        key: n
                    }) => {
                        so(e, f),
                            $i(d, t, n)
                    }))));
                    const b = [
                    ];
                    if (v && ma(v, ((e, t) => {
                        e.expired ? (clearTimeout(e.expirationId), w.push(e)) : ~(t = b[t] = y.indexOf(e.key)) && (p[t] = e)
                    })), ma(h, ((e, t) => {
                        p[t] || (p[t] = {
                            key: y[t],
                            item: e,
                            phase: hs.MOUNT,
                            ctrl: new Ko
                        }, p[t].ctrl.item = e)
                    })), b.length) {
                        let e = - 1;
                        const {
                            leave: n
                        }
                            = a ? a() : t;
                        ma(b, ((t, r) => {
                            const a = v[r];
                            ~t ? (e = p.indexOf(a), p[e] = Bi({
                            }, a, {
                                item: h[t]
                            })) : n && p.splice(++e, 0, a)
                        }))
                    }
                    da.fun(o) && p.sort(((e, t) => o(e.item, t.item)));
                    let k = - s;
                    const M = Ti(),
                        E = eo(t),
                        P = new Map,
                        x = (0, r.useRef)(new Map),
                        S = (0, r.useRef)(!1);
                    ma(p, ((e, n) => {
                        const r = e.key,
                            i = e.phase,
                            o = a ? a() : t;
                        let d,
                            f,
                            h = $i(o.delay || 0, r);
                        if (i == hs.MOUNT) d = o.enter,
                            f = hs.ENTER;
                        else {
                            const e = y.indexOf(r) < 0;
                            if (i != hs.LEAVE) if (e) d = o.leave,
                                f = hs.LEAVE;
                            else {
                                if (!(d = o.update)) return;
                                f = hs.UPDATE
                            } else {
                                if (e) return;
                                d = o.enter,
                                    f = hs.ENTER
                            }
                        }
                        if (d = $i(d, e.item, n), d = da.obj(d) ? ro(d) : {
                            to: d
                        }, !d.config) {
                            const t = m || E.config;
                            d.config = $i(t, e.item, n, f)
                        }
                        k += s;
                        const p = Bi({
                        }, E, {
                            delay: h + k,
                            ref: c,
                            immediate: o.immediate,
                            reset: !1
                        }, d);
                        if (f == hs.ENTER && da.und(p.from)) {
                            const r = a ? a() : t,
                                i = da.und(r.initial) || v ? r.from : r.initial;
                            p.from = $i(i, e.item, n)
                        }
                        const {
                            onResolve: w
                        }
                            = p;
                        p.onResolve = e => {
                            $i(w, e);
                            const t = g.current,
                                n = t.find((e => e.key === r));
                            if (n && (!e.cancelled || n.phase == hs.UPDATE) && n.ctrl.idle) {
                                const e = t.every((e => e.ctrl.idle));
                                if (n.phase == hs.LEAVE) {
                                    const t = $i(u, n.item);
                                    if (!1 !== t) {
                                        const r = !0 === t ? 0 : t;
                                        if (n.expired = !0, !e && r > 0) return void (r <= 2147483647 && (n.expirationId = setTimeout(M, r)))
                                    }
                                }
                                e && t.some((e => e.expired)) && (x.current.delete(n), l && (S.current = !0), M())
                            }
                        };
                        const b = es(e.ctrl, p);
                        f === hs.LEAVE && l ? x.current.set(e, {
                            phase: f,
                            springs: b,
                            payload: p
                        }) : P.set(e, {
                            phase: f,
                            springs: b,
                            payload: p
                        })
                    }));
                    const T = (0, r.useContext)(ss),
                        C = Wi(T),
                        W = T !== C && io(T);
                    ji((() => {
                        W && ma(p, (e => {
                            e.ctrl.start({
                                default:
                                    T
                            })
                        }))
                    }), [
                        T
                    ]),
                        ma(P, ((e, t) => {
                            if (x.current.size) {
                                const e = p.findIndex((e => e.key === t.key));
                                p.splice(e, 1)
                            }
                        })),
                        ji((() => {
                            ma(x.current.size ? x.current : P, (({
                                phase: e,
                                payload: t
                            }, n) => {
                                const {
                                    ctrl: r
                                }
                                    = n;
                                n.phase = e,
                                    null == f || f.add(r),
                                    W && e == hs.ENTER && r.start({
                                        default:
                                            T
                                    }),
                                    t && (uo(r, t.ref), r.ref && !S.current ? r.update(t) : (r.start(t), S.current && (S.current = !1)))
                            }))
                        }), i ? void 0 : n);
                    const j = e => r.createElement(r.Fragment, null, p.map(((t, n) => {
                        const {
                            springs: a
                        }
                            = P.get(t) || t.ctrl,
                            i = e(Bi({
                            }, a), t.item, t, n);
                        return i && i.type ? r.createElement(i.type, Bi({
                        }, i.props, {
                            key: da.str(t.key) || da.num(t.key) ? t.key : t.ctrl.id,
                            ref: i.ref
                        })) : i
                    })));
                    return f ? [
                        j,
                        f
                    ] : j
                }(t, is(e, ws))(n)
            }
            class ks extends Io {
                constructor(e, t) {
                    super(),
                        this.key = void 0,
                        this.idle = !0,
                        this.calc = void 0,
                        this._active = new Set,
                        this.source = e,
                        this.calc = Ka(...t);
                    const n = this._get(),
                        r = Xi(n);
                    Ii(this, r.create(n))
                }
                advance(e) {
                    const t = this._get();
                    ca(t, this.get()) || (Ni(this).setValue(t), this._onChange(t, this.idle)),
                        !this.idle && Es(this._active) && Ps(this)
                }
                _get() {
                    const e = da.arr(this.source) ? this.source.map(ni) : ha(ni(this.source));
                    return this.calc(...e)
                }
                _start() {
                    this.idle && !Es(this._active) && (this.idle = !1, ma(zi(this), (e => {
                        e.done = !1
                    })), Ea.skipAnimation ? (Vr.batchedUpdates((() => this.advance())), Ps(this)) : Ca.start(this))
                }
                _attach() {
                    let e = 1;
                    ma(ha(this.source), (t => {
                        ti(t) && si(t, this),
                            Do(t) && (t.idle || this._active.add(t), e = Math.max(e, t.priority + 1))
                    })),
                        this.priority = e,
                        this._start()
                }
                _detach() {
                    ma(ha(this.source), (e => {
                        ti(e) && ui(e, this)
                    })),
                        this._active.clear(),
                        Ps(this)
                }
                eventObserved(e) {
                    'change' == e.type ? e.idle ? this.advance() : (this._active.add(e.parent), this._start()) : 'idle' == e.type ? this._active.delete(e.parent) : 'priority' == e.type && (this.priority = ha(this.source).reduce(((e, t) => Math.max(e, (Do(t) ? t.priority : 0) + 1)), 0))
                }
            }
            function Ms(e) {
                return !1 !== e.idle
            }
            function Es(e) {
                return !e.size || Array.from(e).every(Ms)
            }
            function Ps(e) {
                e.idle || (e.idle = !0, ma(zi(e), (e => {
                    e.done = !0
                })), ai(e, {
                    type: 'idle',
                    parent: e
                }))
            }
            function xs(e, t) {
                if (null == e) return {
                };
                var n,
                    r,
                    a = {
                    },
                    i = Object.keys(e);
                for (r = 0; r < i.length; r++) n = i[r],
                    t.indexOf(n) >= 0 || (a[n] = e[n]);
                return a
            }
            Ea.assign({
                createStringInterpolator: wi,
                to: (e, t) => new ks(e, t)
            }),
                Ca.advance;
            const Ss = [
                'style',
                'children',
                'scrollTop',
                'scrollLeft'
            ],
                Ts = /^--/;
            function Cs(e, t) {
                return null == t || 'boolean' == typeof t || '' === t ? '' : 'number' != typeof t || 0 === t || Ts.test(e) || js.hasOwnProperty(e) && js[e] ? ('' + t).trim() : t + 'px'
            }
            const Ws = {
            };
            let js = {
                animationIterationCount: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                columns: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowSpan: !0,
                gridRowStart: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnSpan: !0,
                gridColumnStart: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0
            };
            const Ds = [
                'Webkit',
                'Ms',
                'Moz',
                'O'
            ];
            js = Object.keys(js).reduce(((e, t) => (Ds.forEach((n => e[((e, t) => e + t.charAt(0).toUpperCase() + t.substring(1))(n, t)] = e[t])), e)), js);
            const Ns = [
                'x',
                'y',
                'z'
            ],
                Is = /^(matrix|translate|scale|rotate|skew)/,
                zs = /^(translate)/,
                Rs = /^(rotate|skew)/,
                As = (e, t) => da.num(e) && 0 !== e ? e + t : e,
                Os = (e, t) => da.arr(e) ? e.every((e => Os(e, t))) : da.num(e) ? e === t : parseFloat(e) === t;
            class Hs extends _i {
                constructor(e) {
                    let {
                        x: t,
                        y: n,
                        z: r
                    }
                        = e,
                        a = xs(e, Ns);
                    const i = [
                    ],
                        o = [
                        ];
                    (t || n || r) && (i.push([t || 0,
                    n || 0,
                    r || 0]), o.push((e => [`translate3d(${e.map((e => As(e, 'px'))).join(',')})`,
                    Os(e, 0)]))),
                        fa(a, ((e, t) => {
                            if ('transform' === t) i.push([e || '']),
                                o.push((e => [e,
                                    '' === e]));
                            else if (Is.test(t)) {
                                if (delete a[t], da.und(e)) return;
                                const n = zs.test(t) ? 'px' : Rs.test(t) ? 'deg' : '';
                                i.push(ha(e)),
                                    o.push('rotate3d' === t ? ([e,
                                        t,
                                        r,
                                        a]) => [`rotate3d(${e},${t},${r},${As(a, n)})`,
                                        Os(a, 0)] : e => [`${t}(${e.map((e => As(e, n))).join(',')})`,
                                        Os(e, t.startsWith('scale') ? 1 : 0)])
                            }
                        })),
                        i.length && (a.transform = new _s(i, o)),
                        super(a)
                }
            }
            class _s extends ii {
                constructor(e, t) {
                    super(),
                        this._value = null,
                        this.inputs = e,
                        this.transforms = t
                }
                get() {
                    return this._value || (this._value = this._get())
                }
                _get() {
                    let e = '',
                        t = !0;
                    return ma(this.inputs, ((n, r) => {
                        const a = ni(n[0]),
                            [
                                i,
                                o
                            ] = this.transforms[r](da.arr(a) ? a : n.map(ni));
                        e += ' ' + i,
                            t = t && o
                    })),
                        t ? 'none' : e
                }
                observerAdded(e) {
                    1 == e && ma(this.inputs, (e => ma(e, (e => ti(e) && si(e, this)))))
                }
                observerRemoved(e) {
                    0 == e && ma(this.inputs, (e => ma(e, (e => ti(e) && ui(e, this)))))
                }
                eventObserved(e) {
                    'change' == e.type && (this._value = null),
                        ai(this, e)
                }
            }
            const Ls = [
                'scrollTop',
                'scrollLeft'
            ];
            Ea.assign({
                batchedUpdates: a.unstable_batchedUpdates,
                createStringInterpolator: wi,
                colors: {
                    transparent: 0,
                    aliceblue: 4042850303,
                    antiquewhite: 4209760255,
                    aqua: 16777215,
                    aquamarine: 2147472639,
                    azure: 4043309055,
                    beige: 4126530815,
                    bisque: 4293182719,
                    black: 255,
                    blanchedalmond: 4293643775,
                    blue: 65535,
                    blueviolet: 2318131967,
                    brown: 2771004159,
                    burlywood: 3736635391,
                    burntsienna: 3934150143,
                    cadetblue: 1604231423,
                    chartreuse: 2147418367,
                    chocolate: 3530104575,
                    coral: 4286533887,
                    cornflowerblue: 1687547391,
                    cornsilk: 4294499583,
                    crimson: 3692313855,
                    cyan: 16777215,
                    darkblue: 35839,
                    darkcyan: 9145343,
                    darkgoldenrod: 3095792639,
                    darkgray: 2846468607,
                    darkgreen: 6553855,
                    darkgrey: 2846468607,
                    darkkhaki: 3182914559,
                    darkmagenta: 2332068863,
                    darkolivegreen: 1433087999,
                    darkorange: 4287365375,
                    darkorchid: 2570243327,
                    darkred: 2332033279,
                    darksalmon: 3918953215,
                    darkseagreen: 2411499519,
                    darkslateblue: 1211993087,
                    darkslategray: 793726975,
                    darkslategrey: 793726975,
                    darkturquoise: 13554175,
                    darkviolet: 2483082239,
                    deeppink: 4279538687,
                    deepskyblue: 12582911,
                    dimgray: 1768516095,
                    dimgrey: 1768516095,
                    dodgerblue: 512819199,
                    firebrick: 2988581631,
                    floralwhite: 4294635775,
                    forestgreen: 579543807,
                    fuchsia: 4278255615,
                    gainsboro: 3705462015,
                    ghostwhite: 4177068031,
                    gold: 4292280575,
                    goldenrod: 3668254975,
                    gray: 2155905279,
                    green: 8388863,
                    greenyellow: 2919182335,
                    grey: 2155905279,
                    honeydew: 4043305215,
                    hotpink: 4285117695,
                    indianred: 3445382399,
                    indigo: 1258324735,
                    ivory: 4294963455,
                    khaki: 4041641215,
                    lavender: 3873897215,
                    lavenderblush: 4293981695,
                    lawngreen: 2096890111,
                    lemonchiffon: 4294626815,
                    lightblue: 2916673279,
                    lightcoral: 4034953471,
                    lightcyan: 3774873599,
                    lightgoldenrodyellow: 4210742015,
                    lightgray: 3553874943,
                    lightgreen: 2431553791,
                    lightgrey: 3553874943,
                    lightpink: 4290167295,
                    lightsalmon: 4288707327,
                    lightseagreen: 548580095,
                    lightskyblue: 2278488831,
                    lightslategray: 2005441023,
                    lightslategrey: 2005441023,
                    lightsteelblue: 2965692159,
                    lightyellow: 4294959359,
                    lime: 16711935,
                    limegreen: 852308735,
                    linen: 4210091775,
                    magenta: 4278255615,
                    maroon: 2147483903,
                    mediumaquamarine: 1724754687,
                    mediumblue: 52735,
                    mediumorchid: 3126187007,
                    mediumpurple: 2473647103,
                    mediumseagreen: 1018393087,
                    mediumslateblue: 2070474495,
                    mediumspringgreen: 16423679,
                    mediumturquoise: 1221709055,
                    mediumvioletred: 3340076543,
                    midnightblue: 421097727,
                    mintcream: 4127193855,
                    mistyrose: 4293190143,
                    moccasin: 4293178879,
                    navajowhite: 4292783615,
                    navy: 33023,
                    oldlace: 4260751103,
                    olive: 2155872511,
                    olivedrab: 1804477439,
                    orange: 4289003775,
                    orangered: 4282712319,
                    orchid: 3664828159,
                    palegoldenrod: 4008225535,
                    palegreen: 2566625535,
                    paleturquoise: 2951671551,
                    palevioletred: 3681588223,
                    papayawhip: 4293907967,
                    peachpuff: 4292524543,
                    peru: 3448061951,
                    pink: 4290825215,
                    plum: 3718307327,
                    powderblue: 2967529215,
                    purple: 2147516671,
                    rebeccapurple: 1714657791,
                    red: 4278190335,
                    rosybrown: 3163525119,
                    royalblue: 1097458175,
                    saddlebrown: 2336560127,
                    salmon: 4202722047,
                    sandybrown: 4104413439,
                    seagreen: 780883967,
                    seashell: 4294307583,
                    sienna: 2689740287,
                    silver: 3233857791,
                    skyblue: 2278484991,
                    slateblue: 1784335871,
                    slategray: 1887473919,
                    slategrey: 1887473919,
                    snow: 4294638335,
                    springgreen: 16744447,
                    steelblue: 1182971135,
                    tan: 3535047935,
                    teal: 8421631,
                    thistle: 3636451583,
                    tomato: 4284696575,
                    turquoise: 1088475391,
                    violet: 4001558271,
                    wheat: 4125012991,
                    white: 4294967295,
                    whitesmoke: 4126537215,
                    yellow: 4294902015,
                    yellowgreen: 2597139199
                }
            });
            const Fs = ((e, {
                applyAnimatedValues: t = (() => !1),
                createAnimatedStyle: n = (e => new _i(e)),
                getComponentProps: r = (e => e)
            }
                = {
                }) => {
                const a = {
                    applyAnimatedValues: t,
                    createAnimatedStyle: n,
                    getComponentProps: r
                },
                    i = e => {
                        const t = Yi(e) || 'Anonymous';
                        return (e = da.str(e) ? i[e] || (i[e] = qi(e, a)) : e[Vi] || (e[Vi] = qi(e, a))).displayName = `Animated(${t})`,
                            e
                    };
                return fa(e, ((t, n) => {
                    da.arr(e) && (n = Yi(t)),
                        i[n] = i(t)
                })),
                {
                    animated: i
                }
            })(['a',
                'abbr',
                'address',
                'area',
                'article',
                'aside',
                'audio',
                'b',
                'base',
                'bdi',
                'bdo',
                'big',
                'blockquote',
                'body',
                'br',
                'button',
                'canvas',
                'caption',
                'cite',
                'code',
                'col',
                'colgroup',
                'data',
                'datalist',
                'dd',
                'del',
                'details',
                'dfn',
                'dialog',
                'div',
                'dl',
                'dt',
                'em',
                'embed',
                'fieldset',
                'figcaption',
                'figure',
                'footer',
                'form',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'head',
                'header',
                'hgroup',
                'hr',
                'html',
                'i',
                'iframe',
                'img',
                'input',
                'ins',
                'kbd',
                'keygen',
                'label',
                'legend',
                'li',
                'link',
                'main',
                'map',
                'mark',
                'menu',
                'menuitem',
                'meta',
                'meter',
                'nav',
                'noscript',
                'object',
                'ol',
                'optgroup',
                'option',
                'output',
                'p',
                'param',
                'picture',
                'pre',
                'progress',
                'q',
                'rp',
                'rt',
                'ruby',
                's',
                'samp',
                'script',
                'section',
                'select',
                'small',
                'source',
                'span',
                'strong',
                'style',
                'sub',
                'summary',
                'sup',
                'table',
                'tbody',
                'td',
                'textarea',
                'tfoot',
                'th',
                'thead',
                'time',
                'title',
                'tr',
                'track',
                'u',
                'ul',
                'var',
                'video',
                'wbr',
                'circle',
                'clipPath',
                'defs',
                'ellipse',
                'foreignObject',
                'g',
                'image',
                'line',
                'linearGradient',
                'mask',
                'path',
                'pattern',
                'polygon',
                'polyline',
                'radialGradient',
                'rect',
                'stop',
                'svg',
                'text',
                'tspan'], {
                applyAnimatedValues: function (e, t) {
                    if (!e.nodeType || !e.setAttribute) return !1;
                    const n = 'filter' === e.nodeName || e.parentNode && 'filter' === e.parentNode.nodeName,
                        r = t,
                        {
                            style: a,
                            children: i,
                            scrollTop: o,
                            scrollLeft: s
                        }
                            = r,
                        u = xs(r, Ss),
                        l = Object.values(u),
                        d = Object.keys(u).map((t => n || e.hasAttribute(t) ? t : Ws[t] || (Ws[t] = t.replace(/([A-Z])/g, (e => '-' + e.toLowerCase())))));
                    void 0 !== i && (e.textContent = i);
                    for (let t in a) if (a.hasOwnProperty(t)) {
                        const n = Cs(t, a[t]);
                        Ts.test(t) ? e.style.setProperty(t, n) : e.style[t] = n
                    }
                    d.forEach(((t, n) => {
                        e.setAttribute(t, l[n])
                    })),
                        void 0 !== o && (e.scrollTop = o),
                        void 0 !== s && (e.scrollLeft = s)
                },
                createAnimatedStyle: e => new Hs(e),
                getComponentProps: e => xs(e, Ls)
            }),
                Xs = Fs.animated;
            var Us = function (e) {
                return a.createPortal(e.children, document.querySelector('#portal'))
            };
            function qs(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            var Gs = {
                tension: 300,
                friction: 30
            },
                Vs = function () {
                    function e() {
                        ae(this, e)
                    }
                    return re(e, [
                        {
                            key: 'open',
                            value: function () {
                                this._openModal && this._openModal()
                            }
                        }
                    ]),
                        e
                }(),
                Ys = function (e) {
                    var t = function (e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {
                            };
                            t % 2 ? qs(Object(n), !0).forEach((function (t) {
                                Ee(e, t, n[t])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : qs(Object(n)).forEach((function (t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            }))
                        }
                        return e
                    }({
                        closeOnBackgroundClick: !0
                    }, e),
                        n = t.onBeforeClosed,
                        a = t.closeOnBackgroundClick,
                        i = (t.closeOnEscape, t.onClosed),
                        o = t.openModalRef,
                        u = s((0, r.useState)(!1), 2),
                        l = u[0],
                        d = u[1],
                        c = s((0, r.useState)(!1), 2),
                        m = c[0],
                        f = c[1],
                        h = s((0, r.useState)(), 2),
                        p = h[0],
                        g = h[1],
                        v = (0, r.useCallback)((function (e) {
                            n && n(e),
                                d(!1),
                                g(e)
                        }), [
                            n
                        ]),
                        y = function () {
                            d(!0),
                                f(!0)
                        };
                    (0, r.useEffect)((function () {
                        null != o && o.current && (o.current._openModal = y)
                    }), [
                        o
                    ]);
                    var w = (0, r.useRef)(),
                        b = function (e) {
                            a && w.current === e.target && (e.preventDefault(), e.stopPropagation(), v())
                        };
                    return r.createElement(r.Fragment, null, e.openModal && e.openModal(y), m && r.createElement(bs, {
                        items: l,
                        from: {
                            opacity: 0,
                            marginTop: - 500
                        },
                        enter: {
                            opacity: 1,
                            marginTop: 0
                        },
                        leave: {
                            opacity: 0,
                            marginTop: - 500
                        },
                        config: Gs,
                        reverse: l,
                        onRest: function () {
                            return !1 === l && i && i(p)
                        }
                    }, (function (t, n) {
                        return r.createElement(r.Fragment, null, n && r.createElement(Us, null, r.createElement(ys, {
                            from: {
                                backgroundColor: 'rgba(14,16,19,0.5)'
                            },
                            to: {
                                backgroundColor: 'rgba(14,16,19,0)'
                            },
                            config: Gs,
                            reverse: l
                        }, (function (n) {
                            return r.createElement(Xs.div, {
                                style: n,
                                className: 'fixed top-0 bottom-0 left-0 right-0 flex items-center justify-center',
                                ref: w,
                                onPointerDown: b
                            }, r.createElement(Xs.div, {
                                style: t,
                                className: 'rounded bg-zinc-100 dark:bg-gray-900'
                            }, e.children(v)))
                        }))))
                    })))
                },
                Bs = function (e) {
                    var t,
                        n,
                        a,
                        i,
                        o = e.closeModal,
                        u = e.season,
                        l = Rr(e.tvShow.id),
                        d = l.mediaItem,
                        c = l.isLoading,
                        m = s((0, r.useState)(null == u ? void 0 : u.id), 2),
                        f = m[0],
                        h = m[1],
                        p = null == d || null === (t = d.seasons) || void 0 === t ? void 0 : t.find((function (e) {
                            return e.id === f
                        })),
                        g = s((0, r.useState)(null == p ? void 0 : p.episodes[(null == p ? void 0 : p.episodes.length) - 1].id), 2),
                        v = g[0],
                        y = g[1],
                        w = null == p || null === (n = p.episodes) || void 0 === n ? void 0 : n.find((function (e) {
                            return e.id === v
                        }));
                    return (0, r.useEffect)((function () {
                        var e;
                        if (!u && d && 0 !== (null == d || null === (e = d.seasons) || void 0 === e ? void 0 : e.length)) {
                            var t = d.seasons.filter((function (e) {
                                return e.episodes.length > 0
                            })),
                                n = t[t.length - 1];
                            h(n.id),
                                y(n.episodes[n.episodes.length - 1].id)
                        }
                    }), [
                        d,
                        u
                    ]),
                        (0, r.useEffect)((function () {
                            var e,
                                t;
                            p && !w && y(null === (e = p.episodes) || void 0 === e || null === (t = e.at(0)) || void 0 === t ? void 0 : t.id)
                        }), [
                            p,
                            w
                        ]),
                        r.createElement('div', {
                            className: 'p-3 rounded '
                        }, c ? r.createElement(Oe, {
                            id: 'Loading'
                        }) : r.createElement(r.Fragment, null, r.createElement('div', {
                            className: 'max-w-sm py-2 mx-5 text-2xl font-bold text-center'
                        }, r.createElement(Oe, {
                            id: 'What is the last episode of "{0}" you see?',
                            values: {
                                0: d.title
                            }
                        })), r.createElement('div', {
                            className: 'text-lg'
                        }, !u && r.createElement('div', {
                            className: 'py-2'
                        }, r.createElement('span', {
                            className: 'mr-2'
                        }, r.createElement(Oe, {
                            id: 'Season'
                        }), ':'), r.createElement('select', {
                            value: f,
                            onChange: function (e) {
                                return h(Number(e.target.value))
                            }
                        }, null === (a = d.seasons) || void 0 === a ? void 0 : a.filter((function (e) {
                            return !e.isSpecialSeason
                        })).map((function (e) {
                            return r.createElement('option', {
                                key: e.id,
                                value: e.id
                            }, e.title)
                        })))), r.createElement('div', {
                            className: 'py-2'
                        }, r.createElement('span', {
                            className: 'mr-2'
                        }, r.createElement(Oe, {
                            id: 'Episode'
                        }), ':'), r.createElement('select', {
                            value: v,
                            onChange: function (e) {
                                return y(Number(e.target.value))
                            }
                        }, null == p || null === (i = p.episodes) || void 0 === i ? void 0 : i.map((function (e) {
                            return r.createElement('option', {
                                key: e.id,
                                value: e.id
                            }, !e.title.endsWith(' '.concat(e.episodeNumber)) && e.episodeNumber + '. ', e.title)
                        }))))), r.createElement('div', {
                            className: 'flex justify-between mt-2'
                        }, r.createElement(Ys, {
                            closeOnBackgroundClick: !0,
                            closeOnEscape: !0,
                            onBeforeClosed: function () {
                                return o(!0)
                            },
                            openModal: function (e) {
                                return r.createElement('div', {
                                    className: 'btn-blue',
                                    onClick: e
                                }, r.createElement(Oe, {
                                    id: 'Select'
                                }))
                            }
                        }, (function (e) {
                            return r.createElement(lu, {
                                mediaItem: d,
                                closeModal: e,
                                onSelected: function () {
                                    var t = te(fe().mark((function t(n) {
                                        return fe().wrap((function (t) {
                                            for (; ;) switch (t.prev = t.next) {
                                                case 0:
                                                    return e(),
                                                        t.next = 3,
                                                        Xr({
                                                            mediaItem: d,
                                                            lastSeenAt: n.seenAt,
                                                            date: n.date,
                                                            episode: w,
                                                            season: u ? p : void 0
                                                        });
                                                case 3:
                                                case 'end':
                                                    return t.stop()
                                            }
                                        }), t)
                                    })));
                                    return function (e) {
                                        return t.apply(this, arguments)
                                    }
                                }()
                            })
                        })), r.createElement('div', {
                            className: 'btn-red',
                            onClick: function () {
                                return o()
                            }
                        }, r.createElement(Oe, {
                            id: 'Cancel'
                        })))))
                },
                $s = (n(3112), n(6992), n(8559), n(9720), n(6699), n(7042), n(1038), n(8783), n(7601), n(1817), n(2165), n(3948), function (e) {
                    var t = e.releaseDate;
                    return t && new Date(t) <= new Date
                }),
                Qs = function (e) {
                    return Ze._('S{0}E{1}', {
                        0: e.seasonNumber.toString().padStart(2, '0'),
                        1: e.episodeNumber.toString().padStart(2, '0')
                    })
                },
                Ks = function (e) {
                    return !e.seen || nu(e)
                },
                Js = function (e) {
                    return $s(e)
                },
                Zs = function (e) {
                    return 'string' == typeof e ? 'audiobook' === e : 'audiobook' === (null == e ? void 0 : e.mediaType)
                },
                eu = function (e) {
                    return 'string' == typeof e ? 'book' === e : 'book' === (null == e ? void 0 : e.mediaType)
                },
                tu = function (e) {
                    return 'string' == typeof e ? 'movie' === e : 'movie' === (null == e ? void 0 : e.mediaType)
                },
                nu = function (e) {
                    return 'string' == typeof e ? 'tv' === e : 'tv' === (null == e ? void 0 : e.mediaType)
                },
                ru = function (e) {
                    return 'string' == typeof e ? 'video_game' === e : 'video_game' === (null == e ? void 0 : e.mediaType)
                },
                au = function (e) {
                    return e.hideEpisodeTitleForUnseenEpisodes
                },
                iu = function (e) {
                    return e.hideOverviewForUnseenSeasons
                },
                ou = function (e) {
                    return null !== e.progress && void 0 !== e.progress
                },
                su = function (e) {
                    return Object.fromEntries(Object.entries(e).map((function (e) {
                        var t = s(e, 2),
                            n = t[0];
                        return [t[1],
                            n]
                    })))
                },
                uu = function (e) {
                    var t = e.mediaItem,
                        n = e.season,
                        a = e.episode,
                        i = e.closeModal;
                    return 'tv' !== t.mediaType || a ? r.createElement(lu, {
                        mediaItem: t,
                        episode: a,
                        closeModal: i,
                        onSelected: function () {
                            var e = te(fe().mark((function e(n) {
                                return fe().wrap((function (e) {
                                    for (; ;) switch (e.prev = e.next) {
                                        case 0:
                                            return i(),
                                                e.next = 3,
                                                Fr({
                                                    mediaItem: t,
                                                    episode: a,
                                                    date: n.date,
                                                    seenAt: n.seenAt
                                                });
                                        case 3:
                                        case 'end':
                                            return e.stop()
                                    }
                                }), e)
                            })));
                            return function (t) {
                                return e.apply(this, arguments)
                            }
                        }()
                    }) : r.createElement(Bs, {
                        closeModal: i,
                        tvShow: t,
                        season: n
                    })
                },
                lu = function (e) {
                    var t = e.mediaItem,
                        n = e.episode,
                        a = e.onSelected,
                        i = e.closeModal,
                        o = s((0, r.useState)(new Date), 2),
                        u = o[0],
                        l = o[1];
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'max-w-sm mx-5 my-3 text-3xl font-bold text-center'
                    }, Zs(t) && r.createElement(Oe, {
                        id: 'When did you listen to "{0}"?',
                        values: {
                            0: t.title
                        }
                    }), eu(t) && r.createElement(Oe, {
                        id: 'When did you read "{0}"?',
                        values: {
                            0: t.title
                        }
                    }), tu(t) && r.createElement(Oe, {
                        id: 'When did you see "{0}"?',
                        values: {
                            0: t.title
                        }
                    }), nu(t) && r.createElement(Oe, {
                        id: 'When did you see "{0}"?',
                        values: {
                            0: n ? ''.concat(t.title, ' ').concat(Qs(n)) : t.title
                        }
                    }), ru(t) && r.createElement(Oe, {
                        id: 'When did you play "{0}"?',
                        values: {
                            0: t.title
                        }
                    })), r.createElement('div', {
                        className: 'flex flex-col'
                    }, r.createElement('div', {
                        className: 'm-2 btn',
                        onClick: function () {
                            return a({
                                date: new Date
                            })
                        }
                    }, r.createElement(Oe, {
                        id: 'Now'
                    })), r.createElement('div', {
                        className: 'm-2 btn',
                        onClick: function () {
                            return a({
                                seenAt: 'release_date'
                            })
                        }
                    }, r.createElement(Oe, {
                        id: 'At release date'
                    })), r.createElement('div', {
                        className: 'm-2 btn',
                        onClick: function () {
                            return a({
                                seenAt: 'unknown'
                            })
                        }
                    }, r.createElement(Oe, {
                        id: 'I do not remember'
                    })), r.createElement('div', {
                        className: 'm-2'
                    }, r.createElement('input', {
                        className: 'mx-1 w-min',
                        type: 'date',
                        value: On(u, 'yyyy-MM-dd'),
                        onChange: function (e) {
                            if (e.target.value) {
                                var t = new Date(e.target.value);
                                l(new Date(t.getFullYear(), t.getMonth(), t.getDate(), u.getHours(), u.getMinutes(), u.getSeconds()))
                            }
                        }
                    }), r.createElement('input', {
                        className: 'mx-1 w-min',
                        type: 'time',
                        value: On(u, 'HH:mm'),
                        onChange: function (e) {
                            if (e.target.value) {
                                var t = function (e, t, n, r) {
                                    yt(3, arguments);
                                    var a = String(e),
                                        i = String(t),
                                        o = r || {
                                        },
                                        s = o.locale || pt;
                                    if (!s.match) throw new RangeError('locale must contain match property');
                                    var u = s.options && s.options.firstWeekContainsDate,
                                        l = null == u ? 1 : Ut(u),
                                        d = null == o.firstWeekContainsDate ? l : Ut(o.firstWeekContainsDate);
                                    if (!(d >= 1 && d <= 7)) throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
                                    var c = s.options && s.options.weekStartsOn,
                                        m = null == c ? 0 : Ut(c),
                                        f = null == o.weekStartsOn ? m : Ut(o.weekStartsOn);
                                    if (!(f >= 0 && f <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
                                    if ('' === i) return '' === a ? wt(n) : new Date(NaN);
                                    var h,
                                        p = {
                                            firstWeekContainsDate: d,
                                            weekStartsOn: f,
                                            locale: s
                                        },
                                        g = [
                                            {
                                                priority: 10,
                                                subPriority: - 1,
                                                set: Wr,
                                                index: 0
                                            }
                                        ],
                                        v = i.match(Pr).map((function (e) {
                                            var t = e[0];
                                            return 'p' === t || 'P' === t ? (0, Sn[t])(e, s.formatLong, p) : e
                                        })).join('').match(Er),
                                        y = [
                                        ];
                                    for (h = 0; h < v.length; h++) {
                                        var w = v[h];
                                        !o.useAdditionalWeekYearTokens && jn(w) && Dn(w, i, e),
                                            !o.useAdditionalDayOfYearTokens && Wn(w) && Dn(w, i, e);
                                        var b = w[0],
                                            k = Mr[b];
                                        if (k) {
                                            var M = k.incompatibleTokens;
                                            if (Array.isArray(M)) {
                                                for (var E = void 0, P = 0; P < y.length; P++) {
                                                    var x = y[P].token;
                                                    if (- 1 !== M.indexOf(x) || x === b) {
                                                        E = y[P];
                                                        break
                                                    }
                                                }
                                                if (E) throw new RangeError('The format string mustn\'t contain `'.concat(E.fullToken, '` and `').concat(w, '` at the same time'))
                                            } else if ('*' === k.incompatibleTokens && y.length) throw new RangeError('The format string mustn\'t contain `'.concat(w, '` and any other token at the same time'));
                                            y.push({
                                                token: b,
                                                fullToken: w
                                            });
                                            var S = k.parse(a, w, s.match, p);
                                            if (!S) return new Date(NaN);
                                            g.push({
                                                priority: k.priority,
                                                subPriority: k.subPriority || 0,
                                                set: k.set,
                                                validate: k.validate,
                                                value: S.value,
                                                index: g.length
                                            }),
                                                a = S.rest
                                        } else {
                                            if (b.match(Cr)) throw new RangeError('Format string contains an unescaped latin alphabet character `' + b + '`');
                                            if ('\'\'' === w ? w = '\'' : '\'' === b && (w = jr(w)), 0 !== a.indexOf(w)) return new Date(NaN);
                                            a = a.slice(w.length)
                                        }
                                    }
                                    if (a.length > 0 && Tr.test(a)) return new Date(NaN);
                                    var T = g.map((function (e) {
                                        return e.priority
                                    })).sort((function (e, t) {
                                        return t - e
                                    })).filter((function (e, t, n) {
                                        return n.indexOf(e) === t
                                    })).map((function (e) {
                                        return g.filter((function (t) {
                                            return t.priority === e
                                        })).sort((function (e, t) {
                                            return t.subPriority - e.subPriority
                                        }))
                                    })).map((function (e) {
                                        return e[0]
                                    })),
                                        C = wt(n);
                                    if (isNaN(C)) return new Date(NaN);
                                    var W = Kt(C, Ct(C)),
                                        j = {
                                        };
                                    for (h = 0; h < T.length; h++) {
                                        var D = T[h];
                                        if (D.validate && !D.validate(W, D.value, p)) return new Date(NaN);
                                        var N = D.set(W, j, D.value, p);
                                        N[0] ? (W = N[0], _n(j, N[1])) : W = N
                                    }
                                    return W
                                }(e.target.value, 'HH:mm', u);
                                l(new Date(u.getFullYear(), u.getMonth(), u.getDate(), t.getHours(), t.getMinutes(), t.getSeconds()))
                            }
                        }
                    }), r.createElement('div', {
                        className: 'btn',
                        onClick: function () {
                            return a({
                                date: u
                            })
                        }
                    }, r.createElement(Oe, {
                        id: 'Custom date'
                    }))), r.createElement('div', {
                        className: 'm-2 btn-red',
                        onClick: function () {
                            return i()
                        }
                    }, r.createElement(Oe, {
                        id: 'Cancel'
                    }))))
                };
            function du(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            function cu(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {
                    };
                    t % 2 ? du(Object(n), !0).forEach((function (t) {
                        Ee(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : du(Object(n)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            n(3290);
            var mu = function (e) {
                var t,
                    n,
                    a,
                    i,
                    o,
                    u,
                    l = cu({
                        season: void 0,
                        episode: void 0
                    }, e),
                    d = l.closeModal,
                    c = l.mediaItem,
                    m = l.season,
                    f = l.episode,
                    h = f ? null === (t = f.userRating) || void 0 === t ? void 0 : t.rating : m ? null === (n = m.userRating) || void 0 === n ? void 0 : n.rating : null === (a = c.userRating) || void 0 === a ? void 0 : a.rating,
                    p = s((0, r.useState)(null), 2),
                    g = p[0],
                    v = p[1],
                    y = s((0, r.useState)((f ? null === (i = f.userRating) || void 0 === i ? void 0 : i.review : m ? null === (o = m.userRating) || void 0 === o ? void 0 : o.review : null === (u = c.userRating) || void 0 === u ? void 0 : u.review) || ''), 2),
                    w = y[0],
                    b = y[1],
                    k = function () {
                        var e = te(fe().mark((function e(t) {
                            return fe().wrap((function (e) {
                                for (; ;) switch (e.prev = e.next) {
                                    case 0:
                                        Or({
                                            mediaItem: c,
                                            season: m,
                                            episode: f,
                                            rating: t
                                        });
                                    case 1:
                                    case 'end':
                                        return e.stop()
                                }
                            }), e)
                        })));
                        return function (t) {
                            return e.apply(this, arguments)
                        }
                    }(),
                    M = function () {
                        d(),
                            cj.invalidateQueries(['items'])
                    };
                return r.createElement('div', {
                    className: 'flex flex-col items-center justify-center p-3 text-black select-none bottom-full min-w-max w-96'
                }, r.createElement('div', {
                    className: 'pb-2 text-4xl font-bold'
                }, c.title, m && r.createElement(r.Fragment, null, ' ', function (e) {
                    return Ze._('S{0}', {
                        0: e.seasonNumber.toString().padStart(2, '0')
                    })
                }(m)), f && r.createElement(r.Fragment, null, ' ', Qs(f))), r.createElement('span', {
                    className: 'flex px-1 m-auto cursor-pointer w-min dark:text-slate-200'
                }, new Array(5).fill(null).map((function (e, t) {
                    return r.createElement('span', {
                        key: t,
                        onClick: function (e) {
                            e.preventDefault(),
                                k(t + 1 === h ? null : t + 1)
                        },
                        onPointerEnter: function () {
                            return v(t + 1)
                        },
                        onPointerLeave: function () {
                            return v(null)
                        },
                        className: tt('material-icons select-none hover:text-yellow-400 text-2xl', (t < h || t < g) && 'text-yellow-400')
                    }, t < h && (!g || t < g) ? 'star' : 'star_border')
                }))), r.createElement('form', {
                    className: 'w-full mt-4',
                    onSubmit: function () {
                        var e = te(fe().mark((function e(t) {
                            return fe().wrap((function (e) {
                                for (; ;) switch (e.prev = e.next) {
                                    case 0:
                                        return t.preventDefault(),
                                            M(),
                                            e.next = 4,
                                            Or({
                                                mediaItem: c,
                                                season: m,
                                                episode: f,
                                                review: w
                                            });
                                    case 4:
                                    case 'end':
                                        return e.stop()
                                }
                            }), e)
                        })));
                        return function (t) {
                            return e.apply(this, arguments)
                        }
                    }()
                }, r.createElement('textarea', {
                    className: 'w-full resize-none h-80',
                    value: w,
                    onChange: function (e) {
                        return b(e.currentTarget.value)
                    }
                }), r.createElement('div', {
                    className: 'flex w-full'
                }, r.createElement('button', {
                    className: 'btn-blue'
                }, r.createElement(Oe, {
                    id: 'Save review'
                })), r.createElement('div', {
                    className: 'ml-auto btn-red',
                    onClick: function () {
                        return M()
                    }
                }, r.createElement(Oe, {
                    id: 'Cancel'
                })))))
            },
                fu = function (e) {
                    var t,
                        n,
                        a,
                        i = cu({
                            season: void 0,
                            episode: void 0
                        }, e),
                        o = i.mediaItem,
                        s = i.season,
                        u = i.episode,
                        l = u ? null === (t = u.userRating) || void 0 === t ? void 0 : t.rating : s ? null === (n = s.userRating) || void 0 === n ? void 0 : n.rating : null === (a = o.userRating) || void 0 === a ? void 0 : a.rating,
                        d = u ? !0 === u.seen : s ? !0 === s.seen : !0 === o.seen,
                        c = (0, r.useRef)(new Vs);
                    return r.createElement(r.Fragment, null, r.createElement(Ys, {
                        onBeforeClosed: function (e) {
                            return e && !d && c.current.open()
                        },
                        openModal: function (e) {
                            return r.createElement(r.Fragment, null, r.createElement('span', {
                                className: 'flex w-min px-0.5 bg-gray-400 rounded shadow-lg cursor-pointer text-lg relative text-black select-none',
                                onClick: function () {
                                    return e()
                                }
                            }, r.createElement('span', {
                                className: tt(['material-icons hover:text-yellow-400',
                                    l && 'text-yellow-400'])
                            }, 'star'), l && r.createElement('span', {
                                className: 'px-0.5 font-bold'
                            }, l)), r.createElement(Ys, {
                                openModalRef: c
                            }, (function (e) {
                                return r.createElement(r.Fragment, null, r.createElement(uu, {
                                    closeModal: e,
                                    mediaItem: o,
                                    season: s,
                                    episode: u
                                }))
                            })))
                        }
                    }, (function (e) {
                        return r.createElement(mu, {
                            mediaItem: o,
                            season: s,
                            episode: u,
                            closeModal: e
                        })
                    })))
                };
            function hu(e) {
                return _n({
                }, e)
            }
            var pu = 1440,
                gu = 43200,
                vu = {
                    lessThanXSeconds: {
                        one: 'minder as \'n sekonde',
                        other: 'minder as {{count}} sekondes'
                    },
                    xSeconds: {
                        one: '1 sekonde',
                        other: '{{count}} sekondes'
                    },
                    halfAMinute: '\'n halwe minuut',
                    lessThanXMinutes: {
                        one: 'minder as \'n minuut',
                        other: 'minder as {{count}} minute'
                    },
                    xMinutes: {
                        one: '\'n minuut',
                        other: '{{count}} minute'
                    },
                    aboutXHours: {
                        one: 'ongeveer 1 uur',
                        other: 'ongeveer {{count}} ure'
                    },
                    xHours: {
                        one: '1 uur',
                        other: '{{count}} ure'
                    },
                    xDays: {
                        one: '1 dag',
                        other: '{{count}} dae'
                    },
                    aboutXWeeks: {
                        one: 'ongeveer 1 week',
                        other: 'ongeveer {{count}} weke'
                    },
                    xWeeks: {
                        one: '1 week',
                        other: '{{count}} weke'
                    },
                    aboutXMonths: {
                        one: 'ongeveer 1 maand',
                        other: 'ongeveer {{count}} maande'
                    },
                    xMonths: {
                        one: '1 maand',
                        other: '{{count}} maande'
                    },
                    aboutXYears: {
                        one: 'ongeveer 1 jaar',
                        other: 'ongeveer {{count}} jaar'
                    },
                    xYears: {
                        one: '1 jaar',
                        other: '{{count}} jaar'
                    },
                    overXYears: {
                        one: 'meer as 1 jaar',
                        other: 'meer as {{count}} jaar'
                    },
                    almostXYears: {
                        one: 'byna 1 jaar',
                        other: 'byna {{count}} jaar'
                    }
                },
                yu = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM yyyy',
                            long: 'd MMMM yyyy',
                            medium: 'd MMM yyyy',
                            short: 'yyyy/MM/dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'om\' {{time}}',
                            long: '{{date}} \'om\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                wu = {
                    lastWeek: '\'verlede\' eeee \'om\' p',
                    yesterday: '\'gister om\' p',
                    today: '\'vandag om\' p',
                    tomorrow: '\'môre om\' p',
                    nextWeek: 'eeee \'om\' p',
                    other: 'P'
                },
                bu = {
                    code: 'af',
                    formatDistance: function (e, t) {
                        var n,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                            },
                            a = vu[e];
                        return n = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', String(t)),
                            r.addSuffix ? r.comparison && r.comparison > 0 ? 'oor ' + n : n + ' gelede' : n
                    },
                    formatLong: yu,
                    formatRelative: function (e) {
                        return wu[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e),
                                n = t % 100;
                            if (n < 20) switch (n) {
                                case 1:
                                case 8:
                                    return t + 'ste';
                                default:
                                    return t + 'de'
                            }
                            return t + 'ste'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'vC',
                                    'nC'
                                ],
                                abbreviated: [
                                    'vC',
                                    'nC'
                                ],
                                wide: [
                                    'voor Christus',
                                    'na Christus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'K1',
                                    'K2',
                                    'K3',
                                    'K4'
                                ],
                                wide: [
                                    '1ste kwartaal',
                                    '2de kwartaal',
                                    '3de kwartaal',
                                    '4de kwartaal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'Jan',
                                    'Feb',
                                    'Mrt',
                                    'Apr',
                                    'Mei',
                                    'Jun',
                                    'Jul',
                                    'Aug',
                                    'Sep',
                                    'Okt',
                                    'Nov',
                                    'Des'
                                ],
                                wide: [
                                    'Januarie',
                                    'Februarie',
                                    'Maart',
                                    'April',
                                    'Mei',
                                    'Junie',
                                    'Julie',
                                    'Augustus',
                                    'September',
                                    'Oktober',
                                    'November',
                                    'Desember'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'M',
                                    'D',
                                    'W',
                                    'D',
                                    'V',
                                    'S'
                                ],
                                short: [
                                    'So',
                                    'Ma',
                                    'Di',
                                    'Wo',
                                    'Do',
                                    'Vr',
                                    'Sa'
                                ],
                                abbreviated: [
                                    'Son',
                                    'Maa',
                                    'Din',
                                    'Woe',
                                    'Don',
                                    'Vry',
                                    'Sat'
                                ],
                                wide: [
                                    'Sondag',
                                    'Maandag',
                                    'Dinsdag',
                                    'Woensdag',
                                    'Donderdag',
                                    'Vrydag',
                                    'Saterdag'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'vm',
                                    pm: 'nm',
                                    midnight: 'middernag',
                                    noon: 'middaguur',
                                    morning: 'oggend',
                                    afternoon: 'middag',
                                    evening: 'laat middag',
                                    night: 'aand'
                                },
                                abbreviated: {
                                    am: 'vm',
                                    pm: 'nm',
                                    midnight: 'middernag',
                                    noon: 'middaguur',
                                    morning: 'oggend',
                                    afternoon: 'middag',
                                    evening: 'laat middag',
                                    night: 'aand'
                                },
                                wide: {
                                    am: 'vm',
                                    pm: 'nm',
                                    midnight: 'middernag',
                                    noon: 'middaguur',
                                    morning: 'oggend',
                                    afternoon: 'middag',
                                    evening: 'laat middag',
                                    night: 'aand'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'vm',
                                    pm: 'nm',
                                    midnight: 'middernag',
                                    noon: 'uur die middag',
                                    morning: 'uur die oggend',
                                    afternoon: 'uur die middag',
                                    evening: 'uur die aand',
                                    night: 'uur die aand'
                                },
                                abbreviated: {
                                    am: 'vm',
                                    pm: 'nm',
                                    midnight: 'middernag',
                                    noon: 'uur die middag',
                                    morning: 'uur die oggend',
                                    afternoon: 'uur die middag',
                                    evening: 'uur die aand',
                                    night: 'uur die aand'
                                },
                                wide: {
                                    am: 'vm',
                                    pm: 'nm',
                                    midnight: 'middernag',
                                    noon: 'uur die middag',
                                    morning: 'uur die oggend',
                                    afternoon: 'uur die middag',
                                    evening: 'uur die aand',
                                    night: 'uur die aand'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(ste|de)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^([vn]\.? ?C\.?)/,
                                abbreviated: /^([vn]\. ?C\.?)/,
                                wide: /^((voor|na) Christus)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^v/,
                                    /^n/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^K[1234]/i,
                                wide: /^[1234](st|d)e kwartaal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return Number(e) + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(Jan|Feb|Mrt|Apr|Mei|Jun|Jul|Aug|Sep|Okt|Nov|Dec)\.?/i,
                                wide: /^(Januarie|Februarie|Maart|April|Mei|Junie|Julie|Augustus|September|Oktober|November|Desember)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^J/i,
                                    /^F/i,
                                    /^M/i,
                                    /^A/i,
                                    /^M/i,
                                    /^J/i,
                                    /^J/i,
                                    /^A/i,
                                    /^S/i,
                                    /^O/i,
                                    /^N/i,
                                    /^D/i
                                ],
                                any: [
                                    /^Jan/i,
                                    /^Feb/i,
                                    /^Mrt/i,
                                    /^Apr/i,
                                    /^Mei/i,
                                    /^Jun/i,
                                    /^Jul/i,
                                    /^Aug/i,
                                    /^Sep/i,
                                    /^Okt/i,
                                    /^Nov/i,
                                    /^Dec/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smdwv]/i,
                                short: /^(So|Ma|Di|Wo|Do|Vr|Sa)/i,
                                abbreviated: /^(Son|Maa|Din|Woe|Don|Vry|Sat)/i,
                                wide: /^(Sondag|Maandag|Dinsdag|Woensdag|Donderdag|Vrydag|Saterdag)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^S/i,
                                    /^M/i,
                                    /^D/i,
                                    /^W/i,
                                    /^D/i,
                                    /^V/i,
                                    /^S/i
                                ],
                                any: [
                                    /^So/i,
                                    /^Ma/i,
                                    /^Di/i,
                                    /^Wo/i,
                                    /^Do/i,
                                    /^Vr/i,
                                    /^Sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(vm|nm|middernag|(?:uur )?die (oggend|middag|aand))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^vm/i,
                                    pm: /^nm/i,
                                    midnight: /^middernag/i,
                                    noon: /^middaguur/i,
                                    morning: /oggend/i,
                                    afternoon: /middag/i,
                                    evening: /laat middag/i,
                                    night: /aand/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                ku = bu,
                Mu = {
                    lessThanXSeconds: {
                        one: 'أقل من ثانية',
                        two: 'أقل من ثانيتين',
                        threeToTen: 'أقل من {{count}} ثواني',
                        other: 'أقل من {{count}} ثانية'
                    },
                    xSeconds: {
                        one: 'ثانية واحدة',
                        two: 'ثانيتان',
                        threeToTen: '{{count}} ثواني',
                        other: '{{count}} ثانية'
                    },
                    halfAMinute: 'نصف دقيقة',
                    lessThanXMinutes: {
                        one: 'أقل من دقيقة',
                        two: 'أقل من دقيقتين',
                        threeToTen: 'أقل من {{count}} دقائق',
                        other: 'أقل من {{count}} دقيقة'
                    },
                    xMinutes: {
                        one: 'دقيقة واحدة',
                        two: 'دقيقتان',
                        threeToTen: '{{count}} دقائق',
                        other: '{{count}} دقيقة'
                    },
                    aboutXHours: {
                        one: 'ساعة واحدة تقريباً',
                        two: 'ساعتين تقريبا',
                        threeToTen: '{{count}} ساعات تقريباً',
                        other: '{{count}} ساعة تقريباً'
                    },
                    xHours: {
                        one: 'ساعة واحدة',
                        two: 'ساعتان',
                        threeToTen: '{{count}} ساعات',
                        other: '{{count}} ساعة'
                    },
                    xDays: {
                        one: 'يوم واحد',
                        two: 'يومان',
                        threeToTen: '{{count}} أيام',
                        other: '{{count}} يوم'
                    },
                    aboutXWeeks: {
                        one: 'أسبوع واحد تقريبا',
                        two: 'أسبوعين تقريبا',
                        threeToTen: '{{count}} أسابيع تقريبا',
                        other: '{{count}} أسبوعا تقريبا'
                    },
                    xWeeks: {
                        one: 'أسبوع واحد',
                        two: 'أسبوعان',
                        threeToTen: '{{count}} أسابيع',
                        other: '{{count}} أسبوعا'
                    },
                    aboutXMonths: {
                        one: 'شهر واحد تقريباً',
                        two: 'شهرين تقريبا',
                        threeToTen: '{{count}} أشهر تقريبا',
                        other: '{{count}} شهرا تقريباً'
                    },
                    xMonths: {
                        one: 'شهر واحد',
                        two: 'شهران',
                        threeToTen: '{{count}} أشهر',
                        other: '{{count}} شهرا'
                    },
                    aboutXYears: {
                        one: 'سنة واحدة تقريباً',
                        two: 'سنتين تقريبا',
                        threeToTen: '{{count}} سنوات تقريباً',
                        other: '{{count}} سنة تقريباً'
                    },
                    xYears: {
                        one: 'سنة واحد',
                        two: 'سنتان',
                        threeToTen: '{{count}} سنوات',
                        other: '{{count}} سنة'
                    },
                    overXYears: {
                        one: 'أكثر من سنة',
                        two: 'أكثر من سنتين',
                        threeToTen: 'أكثر من {{count}} سنوات',
                        other: 'أكثر من {{count}} سنة'
                    },
                    almostXYears: {
                        one: 'ما يقارب سنة واحدة',
                        two: 'ما يقارب سنتين',
                        threeToTen: 'ما يقارب {{count}} سنوات',
                        other: 'ما يقارب {{count}} سنة'
                    }
                },
                Eu = {
                    date: at({
                        formats: {
                            full: 'EEEE، do MMMM y',
                            long: 'do MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss',
                            long: 'HH:mm:ss',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'عند الساعة\' {{time}}',
                            long: '{{date}} \'عند الساعة\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Pu = {
                    lastWeek: 'eeee \'الماضي عند الساعة\' p',
                    yesterday: '\'الأمس عند الساعة\' p',
                    today: '\'اليوم عند الساعة\' p',
                    tomorrow: '\'غدا عند الساعة\' p',
                    nextWeek: 'eeee \'القادم عند الساعة\' p',
                    other: 'P'
                },
                xu = {
                    code: 'ar',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = Mu[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'خلال ' + r : 'منذ ' + r : r
                    },
                    formatLong: Eu,
                    formatRelative: function (e) {
                        return Pu[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return String(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ق',
                                    'ب'
                                ],
                                abbreviated: [
                                    'ق.م.',
                                    'ب.م.'
                                ],
                                wide: [
                                    'قبل الميلاد',
                                    'بعد الميلاد'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'ر1',
                                    'ر2',
                                    'ر3',
                                    'ر4'
                                ],
                                wide: [
                                    'الربع الأول',
                                    'الربع الثاني',
                                    'الربع الثالث',
                                    'الربع الرابع'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ي',
                                    'ف',
                                    'م',
                                    'أ',
                                    'م',
                                    'ي',
                                    'ي',
                                    'أ',
                                    'س',
                                    'أ',
                                    'ن',
                                    'د'
                                ],
                                abbreviated: [
                                    'يناير',
                                    'فبراير',
                                    'مارس',
                                    'أبريل',
                                    'مايو',
                                    'يونيو',
                                    'يوليو',
                                    'أغسطس',
                                    'سبتمبر',
                                    'أكتوبر',
                                    'نوفمبر',
                                    'ديسمبر'
                                ],
                                wide: [
                                    'يناير',
                                    'فبراير',
                                    'مارس',
                                    'أبريل',
                                    'مايو',
                                    'يونيو',
                                    'يوليو',
                                    'أغسطس',
                                    'سبتمبر',
                                    'أكتوبر',
                                    'نوفمبر',
                                    'ديسمبر'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ح',
                                    'ن',
                                    'ث',
                                    'ر',
                                    'خ',
                                    'ج',
                                    'س'
                                ],
                                short: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                abbreviated: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                wide: [
                                    'الأحد',
                                    'الاثنين',
                                    'الثلاثاء',
                                    'الأربعاء',
                                    'الخميس',
                                    'الجمعة',
                                    'السبت'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    morning: 'الصباح',
                                    noon: 'الظهر',
                                    afternoon: 'بعد الظهر',
                                    evening: 'المساء',
                                    night: 'الليل',
                                    midnight: 'منتصف الليل'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    morning: 'الصباح',
                                    noon: 'الظهر',
                                    afternoon: 'بعد الظهر',
                                    evening: 'المساء',
                                    night: 'الليل',
                                    midnight: 'منتصف الليل'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    morning: 'الصباح',
                                    noon: 'الظهر',
                                    afternoon: 'بعد الظهر',
                                    evening: 'المساء',
                                    night: 'الليل',
                                    midnight: 'منتصف الليل'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    morning: 'في الصباح',
                                    noon: 'الظهر',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل',
                                    midnight: 'منتصف الليل'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    morning: 'في الصباح',
                                    noon: 'الظهر',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل',
                                    midnight: 'منتصف الليل'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    morning: 'في الصباح',
                                    noon: 'الظهر',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل',
                                    midnight: 'منتصف الليل'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /[قب]/,
                                abbreviated: /[قب]\.م\./,
                                wide: /(قبل|بعد) الميلاد/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /قبل/,
                                    /بعد/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /ر[1234]/,
                                wide: /الربع (الأول|الثاني|الثالث|الرابع)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[أيفمسند]/,
                                abbreviated: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,
                                wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ي/i,
                                    /^ف/i,
                                    /^م/i,
                                    /^أ/i,
                                    /^م/i,
                                    /^ي/i,
                                    /^ي/i,
                                    /^أ/i,
                                    /^س/i,
                                    /^أ/i,
                                    /^ن/i,
                                    /^د/i
                                ],
                                any: [
                                    /^يناير/i,
                                    /^فبراير/i,
                                    /^مارس/i,
                                    /^أبريل/i,
                                    /^مايو/i,
                                    /^يونيو/i,
                                    /^يوليو/i,
                                    /^أغسطس/i,
                                    /^سبتمبر/i,
                                    /^أكتوبر/i,
                                    /^نوفمبر/i,
                                    /^ديسمبر/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[حنثرخجس]/i,
                                short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
                                abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
                                wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ح/i,
                                    /^ن/i,
                                    /^ث/i,
                                    /^ر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ],
                                wide: [
                                    /^الأحد/i,
                                    /^الاثنين/i,
                                    /^الثلاثاء/i,
                                    /^الأربعاء/i,
                                    /^الخميس/i,
                                    /^الجمعة/i,
                                    /^السبت/i
                                ],
                                any: [
                                    /^أح/i,
                                    /^اث/i,
                                    /^ث/i,
                                    /^أر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/,
                                any: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ص/,
                                    pm: /^م/,
                                    midnight: /منتصف الليل/,
                                    noon: /الظهر/,
                                    afternoon: /بعد الظهر/,
                                    morning: /في الصباح/,
                                    evening: /في المساء/,
                                    night: /في الليل/
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 6,
                        firstWeekContainsDate: 1
                    }
                },
                Su = {
                    lessThanXSeconds: {
                        one: 'أقل من ثانية واحدة',
                        two: 'أقل من ثانتين',
                        threeToTen: 'أقل من {{count}} ثواني',
                        other: 'أقل من {{count}} ثانية'
                    },
                    xSeconds: {
                        one: 'ثانية واحدة',
                        two: 'ثانتين',
                        threeToTen: '{{count}} ثواني',
                        other: '{{count}} ثانية'
                    },
                    halfAMinute: 'نصف دقيقة',
                    lessThanXMinutes: {
                        one: 'أقل من دقيقة',
                        two: 'أقل من دقيقتين',
                        threeToTen: 'أقل من {{count}} دقائق',
                        other: 'أقل من {{count}} دقيقة'
                    },
                    xMinutes: {
                        one: 'دقيقة واحدة',
                        two: 'دقيقتين',
                        threeToTen: '{{count}} دقائق',
                        other: '{{count}} دقيقة'
                    },
                    aboutXHours: {
                        one: 'ساعة واحدة تقريباً',
                        two: 'ساعتين تقريباً',
                        threeToTen: '{{count}} ساعات تقريباً',
                        other: '{{count}} ساعة تقريباً'
                    },
                    xHours: {
                        one: 'ساعة واحدة',
                        two: 'ساعتين',
                        threeToTen: '{{count}} ساعات',
                        other: '{{count}} ساعة'
                    },
                    xDays: {
                        one: 'يوم واحد',
                        two: 'يومين',
                        threeToTen: '{{count}} أيام',
                        other: '{{count}} يوم'
                    },
                    aboutXWeeks: {
                        one: 'أسبوع واحد تقريباً',
                        two: 'أسبوعين تقريباً',
                        threeToTen: '{{count}} أسابيع تقريباً',
                        other: '{{count}} أسبوع تقريباً'
                    },
                    xWeeks: {
                        one: 'أسبوع واحد',
                        two: 'أسبوعين',
                        threeToTen: '{{count}} أسابيع',
                        other: '{{count}} أسبوع'
                    },
                    aboutXMonths: {
                        one: 'شهر واحد تقريباً',
                        two: 'شهرين تقريباً',
                        threeToTen: '{{count}} أشهر تقريباً',
                        other: '{{count}} شهر تقريباً'
                    },
                    xMonths: {
                        one: 'شهر واحد',
                        two: 'شهرين',
                        threeToTen: '{{count}} أشهر',
                        other: '{{count}} شهر'
                    },
                    aboutXYears: {
                        one: 'عام واحد تقريباً',
                        two: 'عامين تقريباً',
                        threeToTen: '{{count}} أعوام تقريباً',
                        other: '{{count}} عام تقريباً'
                    },
                    xYears: {
                        one: 'عام واحد',
                        two: 'عامين',
                        threeToTen: '{{count}} أعوام',
                        other: '{{count}} عام'
                    },
                    overXYears: {
                        one: 'أكثر من عام',
                        two: 'أكثر من عامين',
                        threeToTen: 'أكثر من {{count}} أعوام',
                        other: 'أكثر من {{count}} عام'
                    },
                    almostXYears: {
                        one: 'عام واحد تقريباً',
                        two: 'عامين تقريباً',
                        threeToTen: '{{count}} أعوام تقريباً',
                        other: '{{count}} عام تقريباً'
                    }
                },
                Tu = {
                    date: at({
                        formats: {
                            full: 'EEEE, MMMM do, y',
                            long: 'MMMM do, y',
                            medium: 'MMM d, y',
                            short: 'MM/dd/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'عند\' {{time}}',
                            long: '{{date}} \'عند\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Cu = {
                    lastWeek: '\'أخر\' eeee \'عند\' p',
                    yesterday: '\'أمس عند\' p',
                    today: '\'اليوم عند\' p',
                    tomorrow: '\'غداً عند\' p',
                    nextWeek: 'eeee \'عند\' p',
                    other: 'P'
                },
                Wu = {
                    code: 'ar-DZ',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a = Su[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            n.addSuffix ? n.comparison && n.comparison > 0 ? 'في خلال ' + r : 'منذ ' + r : r
                    },
                    formatLong: Tu,
                    formatRelative: function (e, t, n, r) {
                        return Cu[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return String(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ق',
                                    'ب'
                                ],
                                abbreviated: [
                                    'ق.م.',
                                    'ب.م.'
                                ],
                                wide: [
                                    'قبل الميلاد',
                                    'بعد الميلاد'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'ر1',
                                    'ر2',
                                    'ر3',
                                    'ر4'
                                ],
                                wide: [
                                    'الربع الأول',
                                    'الربع الثاني',
                                    'الربع الثالث',
                                    'الربع الرابع'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ج',
                                    'ف',
                                    'م',
                                    'أ',
                                    'م',
                                    'ج',
                                    'ج',
                                    'أ',
                                    'س',
                                    'أ',
                                    'ن',
                                    'د'
                                ],
                                abbreviated: [
                                    'جانـ',
                                    'فيفـ',
                                    'مارس',
                                    'أفريل',
                                    'مايـ',
                                    'جوانـ',
                                    'جويـ',
                                    'أوت',
                                    'سبتـ',
                                    'أكتـ',
                                    'نوفـ',
                                    'ديسـ'
                                ],
                                wide: [
                                    'جانفي',
                                    'فيفري',
                                    'مارس',
                                    'أفريل',
                                    'ماي',
                                    'جوان',
                                    'جويلية',
                                    'أوت',
                                    'سبتمبر',
                                    'أكتوبر',
                                    'نوفمبر',
                                    'ديسمبر'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ح',
                                    'ن',
                                    'ث',
                                    'ر',
                                    'خ',
                                    'ج',
                                    'س'
                                ],
                                short: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                abbreviated: [
                                    'أحد',
                                    'اثنـ',
                                    'ثلا',
                                    'أربـ',
                                    'خميـ',
                                    'جمعة',
                                    'سبت'
                                ],
                                wide: [
                                    'الأحد',
                                    'الاثنين',
                                    'الثلاثاء',
                                    'الأربعاء',
                                    'الخميس',
                                    'الجمعة',
                                    'السبت'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'في الصباح',
                                    afternoon: 'بعد الظـهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'في الصباح',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظـهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ق|ب)/i,
                                abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
                                wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^قبل/i,
                                    /^بعد/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^ر[1234]/i,
                                wide: /^الربع [1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return Number(e) + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[جفمأسند]/i,
                                abbreviated: /^(جان|فيف|مار|أفر|ماي|جوا|جوي|أوت|سبت|أكت|نوف|ديس)/i,
                                wide: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ج/i,
                                    /^ف/i,
                                    /^م/i,
                                    /^أ/i,
                                    /^م/i,
                                    /^ج/i,
                                    /^ج/i,
                                    /^أ/i,
                                    /^س/i,
                                    /^أ/i,
                                    /^ن/i,
                                    /^د/i
                                ],
                                any: [
                                    /^جان/i,
                                    /^فيف/i,
                                    /^مار/i,
                                    /^أفر/i,
                                    /^ماي/i,
                                    /^جوا/i,
                                    /^جوي/i,
                                    /^أوت/i,
                                    /^سبت/i,
                                    /^أكت/i,
                                    /^نوف/i,
                                    /^ديس/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[حنثرخجس]/i,
                                short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
                                abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i,
                                wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ح/i,
                                    /^ن/i,
                                    /^ث/i,
                                    /^ر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ],
                                wide: [
                                    /^الأحد/i,
                                    /^الاثنين/i,
                                    /^الثلاثاء/i,
                                    /^الأربعاء/i,
                                    /^الخميس/i,
                                    /^الجمعة/i,
                                    /^السبت/i
                                ],
                                any: [
                                    /^أح/i,
                                    /^اث/i,
                                    /^ث/i,
                                    /^أر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                                any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mi/i,
                                    noon: /^no/i,
                                    morning: /morning/i,
                                    afternoon: /afternoon/i,
                                    evening: /evening/i,
                                    night: /night/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                ju = {
                    lessThanXSeconds: {
                        one: 'أقل من ثانية',
                        two: 'أقل من ثانيتين',
                        threeToTen: 'أقل من {{count}} ثواني',
                        other: 'أقل من {{count}} ثانية'
                    },
                    xSeconds: {
                        one: 'ثانية',
                        two: 'ثانيتين',
                        threeToTen: '{{count}} ثواني',
                        other: '{{count}} ثانية'
                    },
                    halfAMinute: 'نص دقيقة',
                    lessThanXMinutes: {
                        one: 'أقل من دقيقة',
                        two: 'أقل من دقيقتين',
                        threeToTen: 'أقل من {{count}} دقايق',
                        other: 'أقل من {{count}} دقيقة'
                    },
                    xMinutes: {
                        one: 'دقيقة',
                        two: 'دقيقتين',
                        threeToTen: '{{count}} دقايق',
                        other: '{{count}} دقيقة'
                    },
                    aboutXHours: {
                        one: 'حوالي ساعة',
                        two: 'حوالي ساعتين',
                        threeToTen: 'حوالي {{count}} ساعات',
                        other: 'حوالي {{count}} ساعة'
                    },
                    xHours: {
                        one: 'ساعة',
                        two: 'ساعتين',
                        threeToTen: '{{count}} ساعات',
                        other: '{{count}} ساعة'
                    },
                    xDays: {
                        one: 'يوم',
                        two: 'يومين',
                        threeToTen: '{{count}} أيام',
                        other: '{{count}} يوم'
                    },
                    aboutXWeeks: {
                        one: 'حوالي أسبوع',
                        two: 'حوالي أسبوعين',
                        threeToTen: 'حوالي {{count}} أسابيع',
                        other: 'حوالي {{count}} أسبوع'
                    },
                    xWeeks: {
                        one: 'أسبوع',
                        two: 'أسبوعين',
                        threeToTen: '{{count}} أسابيع',
                        other: '{{count}} أسبوع'
                    },
                    aboutXMonths: {
                        one: 'حوالي شهر',
                        two: 'حوالي شهرين',
                        threeToTen: 'حوالي {{count}} أشهر',
                        other: 'حوالي {{count}} شهر'
                    },
                    xMonths: {
                        one: 'شهر',
                        two: 'شهرين',
                        threeToTen: '{{count}} أشهر',
                        other: '{{count}} شهر'
                    },
                    aboutXYears: {
                        one: 'حوالي سنة',
                        two: 'حوالي سنتين',
                        threeToTen: 'حوالي {{count}} سنين',
                        other: 'حوالي {{count}} سنة'
                    },
                    xYears: {
                        one: 'عام',
                        two: 'عامين',
                        threeToTen: '{{count}} أعوام',
                        other: '{{count}} عام'
                    },
                    overXYears: {
                        one: 'أكثر من سنة',
                        two: 'أكثر من سنتين',
                        threeToTen: 'أكثر من {{count}} سنين',
                        other: 'أكثر من {{count}} سنة'
                    },
                    almostXYears: {
                        one: 'عام تقريبًا',
                        two: 'عامين تقريبًا',
                        threeToTen: '{{count}} أعوام تقريبًا',
                        other: '{{count}} عام تقريبًا'
                    }
                },
                Du = {
                    date: at({
                        formats: {
                            full: 'EEEE، do MMMM y',
                            long: 'do MMMM y',
                            medium: 'dd/MMM/y',
                            short: 'd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'الساعة\' {{time}}',
                            long: '{{date}} \'الساعة\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Nu = {
                    lastWeek: 'eeee \'اللي جاي الساعة\' p',
                    yesterday: '\'إمبارح الساعة\' p',
                    today: '\'النهاردة الساعة\' p',
                    tomorrow: '\'بكرة الساعة\' p',
                    nextWeek: 'eeee \'الساعة\' p',
                    other: 'P'
                },
                Iu = {
                    code: 'ar-EG',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = ju[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'في خلال '.concat(r) : 'منذ '.concat(r) : r
                    },
                    formatLong: Du,
                    formatRelative: function (e, t, n, r) {
                        return Nu[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return String(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ق',
                                    'ب'
                                ],
                                abbreviated: [
                                    'ق.م',
                                    'ب.م'
                                ],
                                wide: [
                                    'قبل الميلاد',
                                    'بعد الميلاد'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'ر1',
                                    'ر2',
                                    'ر3',
                                    'ر4'
                                ],
                                wide: [
                                    'الربع الأول',
                                    'الربع الثاني',
                                    'الربع الثالث',
                                    'الربع الرابع'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ي',
                                    'ف',
                                    'م',
                                    'أ',
                                    'م',
                                    'ي',
                                    'ي',
                                    'أ',
                                    'س',
                                    'أ',
                                    'ن',
                                    'د'
                                ],
                                abbreviated: [
                                    'ينا',
                                    'فبر',
                                    'مارس',
                                    'أبريل',
                                    'مايو',
                                    'يونـ',
                                    'يولـ',
                                    'أغسـ',
                                    'سبتـ',
                                    'أكتـ',
                                    'نوفـ',
                                    'ديسـ'
                                ],
                                wide: [
                                    'يناير',
                                    'فبراير',
                                    'مارس',
                                    'أبريل',
                                    'مايو',
                                    'يونيو',
                                    'يوليو',
                                    'أغسطس',
                                    'سبتمبر',
                                    'أكتوبر',
                                    'نوفمبر',
                                    'ديسمبر'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ح',
                                    'ن',
                                    'ث',
                                    'ر',
                                    'خ',
                                    'ج',
                                    'س'
                                ],
                                short: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                abbreviated: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                wide: [
                                    'الأحد',
                                    'الاثنين',
                                    'الثلاثاء',
                                    'الأربعاء',
                                    'الخميس',
                                    'الجمعة',
                                    'السبت'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءً',
                                    night: 'ليلاً'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهراً',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءً',
                                    night: 'ليلاً'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهراً',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءً',
                                    night: 'ليلاً'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'في الصباح',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهراً',
                                    morning: 'في الصباح',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    morning: 'في الصباح',
                                    noon: 'ظهراً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)/,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ق|ب)/g,
                                abbreviated: /^(ق.م|ب.م)/g,
                                wide: /^(قبل الميلاد|بعد الميلاد)/g
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ق/g,
                                    /^ب/g
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/,
                                abbreviated: /^ر[1234]/,
                                wide: /^الربع (الأول|الثاني|الثالث|الرابع)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                wide: [
                                    /الربع الأول/,
                                    /الربع الثاني/,
                                    /الربع الثالث/,
                                    /الربع الرابع/
                                ],
                                any: [
                                    /1/,
                                    /2/,
                                    /3/,
                                    /4/
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(ي|ف|م|أ|س|ن|د)/,
                                abbreviated: /^(ينا|فبر|مارس|أبريل|مايو|يونـ|يولـ|أغسـ|سبتـ|أكتـ|نوفـ|ديسـ)/,
                                wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ي/,
                                    /^ف/,
                                    /^م/,
                                    /^أ/,
                                    /^م/,
                                    /^ي/,
                                    /^ي/,
                                    /^أ/,
                                    /^س/,
                                    /^أ/,
                                    /^ن/,
                                    /^د/
                                ],
                                any: [
                                    /^ينا/,
                                    /^فبر/,
                                    /^مارس/,
                                    /^أبريل/,
                                    /^مايو/,
                                    /^يون/,
                                    /^يول/,
                                    /^أغس/,
                                    /^سبت/,
                                    /^أكت/,
                                    /^نوف/,
                                    /^ديس/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(ح|ن|ث|ر|خ|ج|س)/,
                                short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/,
                                abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/,
                                wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ح/,
                                    /^ن/,
                                    /^ث/,
                                    /^ر/,
                                    /^خ/,
                                    /^ج/,
                                    /^س/
                                ],
                                any: [
                                    /أحد/,
                                    /اثنين/,
                                    /ثلاثاء/,
                                    /أربعاء/,
                                    /خميس/,
                                    /جمعة/,
                                    /سبت/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ص|م|ن|ظ|في الصباح|بعد الظهر|في المساء|في الليل)/,
                                abbreviated: /^(ص|م|نصف الليل|ظهراً|في الصباح|بعد الظهر|في المساء|في الليل)/,
                                wide: /^(ص|م|نصف الليل|في الصباح|ظهراً|بعد الظهر|في المساء|في الليل)/,
                                any: /^(ص|م|صباح|ظهر|مساء|ليل)/
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ص/,
                                    pm: /^م/,
                                    midnight: /^ن/,
                                    noon: /^ظ/,
                                    morning: /^ص/,
                                    afternoon: /^بعد/,
                                    evening: /^م/,
                                    night: /^ل/
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                zu = {
                    lessThanXSeconds: {
                        one: 'أقل من ثانية واحدة',
                        two: 'أقل من ثانتين',
                        threeToTen: 'أقل من {{count}} ثواني',
                        other: 'أقل من {{count}} ثانية'
                    },
                    xSeconds: {
                        one: 'ثانية واحدة',
                        two: 'ثانتين',
                        threeToTen: '{{count}} ثواني',
                        other: '{{count}} ثانية'
                    },
                    halfAMinute: 'نصف دقيقة',
                    lessThanXMinutes: {
                        one: 'أقل من دقيقة',
                        two: 'أقل من دقيقتين',
                        threeToTen: 'أقل من {{count}} دقائق',
                        other: 'أقل من {{count}} دقيقة'
                    },
                    xMinutes: {
                        one: 'دقيقة واحدة',
                        two: 'دقيقتين',
                        threeToTen: '{{count}} دقائق',
                        other: '{{count}} دقيقة'
                    },
                    aboutXHours: {
                        one: 'ساعة واحدة تقريباً',
                        two: 'ساعتين تقريباً',
                        threeToTen: '{{count}} ساعات تقريباً',
                        other: '{{count}} ساعة تقريباً'
                    },
                    xHours: {
                        one: 'ساعة واحدة',
                        two: 'ساعتين',
                        threeToTen: '{{count}} ساعات',
                        other: '{{count}} ساعة'
                    },
                    xDays: {
                        one: 'يوم واحد',
                        two: 'يومين',
                        threeToTen: '{{count}} أيام',
                        other: '{{count}} يوم'
                    },
                    aboutXWeeks: {
                        one: 'أسبوع واحد تقريباً',
                        two: 'أسبوعين تقريباً',
                        threeToTen: '{{count}} أسابيع تقريباً',
                        other: '{{count}} أسبوع تقريباً'
                    },
                    xWeeks: {
                        one: 'أسبوع واحد',
                        two: 'أسبوعين',
                        threeToTen: '{{count}} أسابيع',
                        other: '{{count}} أسبوع'
                    },
                    aboutXMonths: {
                        one: 'شهر واحد تقريباً',
                        two: 'شهرين تقريباً',
                        threeToTen: '{{count}} أشهر تقريباً',
                        other: '{{count}} شهر تقريباً'
                    },
                    xMonths: {
                        one: 'شهر واحد',
                        two: 'شهرين',
                        threeToTen: '{{count}} أشهر',
                        other: '{{count}} شهر'
                    },
                    aboutXYears: {
                        one: 'عام واحد تقريباً',
                        two: 'عامين تقريباً',
                        threeToTen: '{{count}} أعوام تقريباً',
                        other: '{{count}} عام تقريباً'
                    },
                    xYears: {
                        one: 'عام واحد',
                        two: 'عامين',
                        threeToTen: '{{count}} أعوام',
                        other: '{{count}} عام'
                    },
                    overXYears: {
                        one: 'أكثر من عام',
                        two: 'أكثر من عامين',
                        threeToTen: 'أكثر من {{count}} أعوام',
                        other: 'أكثر من {{count}} عام'
                    },
                    almostXYears: {
                        one: 'عام واحد تقريباً',
                        two: 'عامين تقريباً',
                        threeToTen: '{{count}} أعوام تقريباً',
                        other: '{{count}} عام تقريباً'
                    }
                },
                Ru = {
                    date: at({
                        formats: {
                            full: 'EEEE, MMMM do, y',
                            long: 'MMMM do, y',
                            medium: 'MMM d, y',
                            short: 'MM/dd/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'عند\' {{time}}',
                            long: '{{date}} \'عند\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Au = {
                    lastWeek: '\'أخر\' eeee \'عند\' p',
                    yesterday: '\'أمس عند\' p',
                    today: '\'اليوم عند\' p',
                    tomorrow: '\'غداً عند\' p',
                    nextWeek: 'eeee \'عند\' p',
                    other: 'P'
                },
                Ou = {
                    code: 'ar-MA',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a = zu[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            n.addSuffix ? n.comparison && n.comparison > 0 ? 'في خلال ' + r : 'منذ ' + r : r
                    },
                    formatLong: Ru,
                    formatRelative: function (e, t, n, r) {
                        return Au[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return String(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ق',
                                    'ب'
                                ],
                                abbreviated: [
                                    'ق.م.',
                                    'ب.م.'
                                ],
                                wide: [
                                    'قبل الميلاد',
                                    'بعد الميلاد'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'ر1',
                                    'ر2',
                                    'ر3',
                                    'ر4'
                                ],
                                wide: [
                                    'الربع الأول',
                                    'الربع الثاني',
                                    'الربع الثالث',
                                    'الربع الرابع'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ي',
                                    'ف',
                                    'م',
                                    'أ',
                                    'م',
                                    'ي',
                                    'ي',
                                    'غ',
                                    'ش',
                                    'أ',
                                    'ن',
                                    'د'
                                ],
                                abbreviated: [
                                    'ينا',
                                    'فبر',
                                    'مارس',
                                    'أبريل',
                                    'ماي',
                                    'يونـ',
                                    'يولـ',
                                    'غشت',
                                    'شتنـ',
                                    'أكتـ',
                                    'نونـ',
                                    'دجنـ'
                                ],
                                wide: [
                                    'يناير',
                                    'فبراير',
                                    'مارس',
                                    'أبريل',
                                    'ماي',
                                    'يونيو',
                                    'يوليوز',
                                    'غشت',
                                    'شتنبر',
                                    'أكتوبر',
                                    'نونبر',
                                    'دجنبر'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ح',
                                    'ن',
                                    'ث',
                                    'ر',
                                    'خ',
                                    'ج',
                                    'س'
                                ],
                                short: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                abbreviated: [
                                    'أحد',
                                    'اثنـ',
                                    'ثلا',
                                    'أربـ',
                                    'خميـ',
                                    'جمعة',
                                    'سبت'
                                ],
                                wide: [
                                    'الأحد',
                                    'الإثنين',
                                    'الثلاثاء',
                                    'الأربعاء',
                                    'الخميس',
                                    'الجمعة',
                                    'السبت'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'في الصباح',
                                    afternoon: 'بعد الظـهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'في الصباح',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظـهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ق|ب)/i,
                                abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
                                wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^قبل/i,
                                    /^بعد/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^ر[1234]/i,
                                wide: /^الربع [1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return Number(e) + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[يفمأمسند]/i,
                                abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|غش|شت|أك|ن|د)/i,
                                wide: /^(ين|ف|مار|أب|ماي|يون|يول|غش|شت|أك|ن|د)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ي/i,
                                    /^ف/i,
                                    /^م/i,
                                    /^أ/i,
                                    /^م/i,
                                    /^ي/i,
                                    /^ي/i,
                                    /^غ/i,
                                    /^ش/i,
                                    /^أ/i,
                                    /^ن/i,
                                    /^د/i
                                ],
                                any: [
                                    /^ين/i,
                                    /^فب/i,
                                    /^مار/i,
                                    /^أب/i,
                                    /^ماي/i,
                                    /^يون/i,
                                    /^يول/i,
                                    /^غشت/i,
                                    /^ش/i,
                                    /^أك/i,
                                    /^ن/i,
                                    /^د/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[حنثرخجس]/i,
                                short: /^(أحد|إثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
                                abbreviated: /^(أحد|إثن|ثلا|أرب|خمي|جمعة|سبت)/i,
                                wide: /^(الأحد|الإثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ح/i,
                                    /^ن/i,
                                    /^ث/i,
                                    /^ر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ],
                                wide: [
                                    /^الأحد/i,
                                    /^الإثنين/i,
                                    /^الثلاثاء/i,
                                    /^الأربعاء/i,
                                    /^الخميس/i,
                                    /^الجمعة/i,
                                    /^السبت/i
                                ],
                                any: [
                                    /^أح/i,
                                    /^إث/i,
                                    /^ث/i,
                                    /^أر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                                any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mi/i,
                                    noon: /^no/i,
                                    morning: /morning/i,
                                    afternoon: /afternoon/i,
                                    evening: /evening/i,
                                    night: /night/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                Hu = {
                    lessThanXSeconds: {
                        one: 'أقل من ثانية واحدة',
                        two: 'أقل من ثانتين',
                        threeToTen: 'أقل من {{count}} ثواني',
                        other: 'أقل من {{count}} ثانية'
                    },
                    xSeconds: {
                        one: 'ثانية واحدة',
                        two: 'ثانتين',
                        threeToTen: '{{count}} ثواني',
                        other: '{{count}} ثانية'
                    },
                    halfAMinute: 'نصف دقيقة',
                    lessThanXMinutes: {
                        one: 'أقل من دقيقة',
                        two: 'أقل من دقيقتين',
                        threeToTen: 'أقل من {{count}} دقائق',
                        other: 'أقل من {{count}} دقيقة'
                    },
                    xMinutes: {
                        one: 'دقيقة واحدة',
                        two: 'دقيقتين',
                        threeToTen: '{{count}} دقائق',
                        other: '{{count}} دقيقة'
                    },
                    aboutXHours: {
                        one: 'ساعة واحدة تقريباً',
                        two: 'ساعتين تقريباً',
                        threeToTen: '{{count}} ساعات تقريباً',
                        other: '{{count}} ساعة تقريباً'
                    },
                    xHours: {
                        one: 'ساعة واحدة',
                        two: 'ساعتين',
                        threeToTen: '{{count}} ساعات',
                        other: '{{count}} ساعة'
                    },
                    xDays: {
                        one: 'يوم واحد',
                        two: 'يومين',
                        threeToTen: '{{count}} أيام',
                        other: '{{count}} يوم'
                    },
                    aboutXWeeks: {
                        one: 'أسبوع واحد تقريباً',
                        two: 'أسبوعين تقريباً',
                        threeToTen: '{{count}} أسابيع تقريباً',
                        other: '{{count}} أسبوع تقريباً'
                    },
                    xWeeks: {
                        one: 'أسبوع واحد',
                        two: 'أسبوعين',
                        threeToTen: '{{count}} أسابيع',
                        other: '{{count}} أسبوع'
                    },
                    aboutXMonths: {
                        one: 'شهر واحد تقريباً',
                        two: 'شهرين تقريباً',
                        threeToTen: '{{count}} أشهر تقريباً',
                        other: '{{count}} شهر تقريباً'
                    },
                    xMonths: {
                        one: 'شهر واحد',
                        two: 'شهرين',
                        threeToTen: '{{count}} أشهر',
                        other: '{{count}} شهر'
                    },
                    aboutXYears: {
                        one: 'عام واحد تقريباً',
                        two: 'عامين تقريباً',
                        threeToTen: '{{count}} أعوام تقريباً',
                        other: '{{count}} عام تقريباً'
                    },
                    xYears: {
                        one: 'عام واحد',
                        two: 'عامين',
                        threeToTen: '{{count}} أعوام',
                        other: '{{count}} عام'
                    },
                    overXYears: {
                        one: 'أكثر من عام',
                        two: 'أكثر من عامين',
                        threeToTen: 'أكثر من {{count}} أعوام',
                        other: 'أكثر من {{count}} عام'
                    },
                    almostXYears: {
                        one: 'عام واحد تقريباً',
                        two: 'عامين تقريباً',
                        threeToTen: '{{count}} أعوام تقريباً',
                        other: '{{count}} عام تقريباً'
                    }
                },
                _u = {
                    date: at({
                        formats: {
                            full: 'EEEE, MMMM do, y',
                            long: 'MMMM do, y',
                            medium: 'MMM d, y',
                            short: 'MM/dd/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'عند\' {{time}}',
                            long: '{{date}} \'عند\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Lu = {
                    lastWeek: '\'أخر\' eeee \'عند\' p',
                    yesterday: '\'أمس عند\' p',
                    today: '\'اليوم عند\' p',
                    tomorrow: '\'غداً عند\' p',
                    nextWeek: 'eeee \'عند\' p',
                    other: 'P'
                },
                Fu = {
                    code: 'ar-SA',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a = Hu[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            n.addSuffix ? n.comparison && n.comparison > 0 ? 'في خلال ' + r : 'منذ ' + r : r
                    },
                    formatLong: _u,
                    formatRelative: function (e, t, n, r) {
                        return Lu[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return String(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ق',
                                    'ب'
                                ],
                                abbreviated: [
                                    'ق.م.',
                                    'ب.م.'
                                ],
                                wide: [
                                    'قبل الميلاد',
                                    'بعد الميلاد'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'ر1',
                                    'ر2',
                                    'ر3',
                                    'ر4'
                                ],
                                wide: [
                                    'الربع الأول',
                                    'الربع الثاني',
                                    'الربع الثالث',
                                    'الربع الرابع'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ي',
                                    'ف',
                                    'م',
                                    'أ',
                                    'م',
                                    'ي',
                                    'ي',
                                    'أ',
                                    'س',
                                    'أ',
                                    'ن',
                                    'د'
                                ],
                                abbreviated: [
                                    'ينا',
                                    'فبر',
                                    'مارس',
                                    'أبريل',
                                    'مايو',
                                    'يونـ',
                                    'يولـ',
                                    'أغسـ',
                                    'سبتـ',
                                    'أكتـ',
                                    'نوفـ',
                                    'ديسـ'
                                ],
                                wide: [
                                    'يناير',
                                    'فبراير',
                                    'مارس',
                                    'أبريل',
                                    'مايو',
                                    'يونيو',
                                    'يوليو',
                                    'أغسطس',
                                    'سبتمبر',
                                    'أكتوبر',
                                    'نوفمبر',
                                    'ديسمبر'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ح',
                                    'ن',
                                    'ث',
                                    'ر',
                                    'خ',
                                    'ج',
                                    'س'
                                ],
                                short: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                abbreviated: [
                                    'أحد',
                                    'اثنـ',
                                    'ثلا',
                                    'أربـ',
                                    'خميـ',
                                    'جمعة',
                                    'سبت'
                                ],
                                wide: [
                                    'الأحد',
                                    'الاثنين',
                                    'الثلاثاء',
                                    'الأربعاء',
                                    'الخميس',
                                    'الجمعة',
                                    'السبت'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظهر',
                                    evening: 'مساءاً',
                                    night: 'ليلاً'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'في الصباح',
                                    afternoon: 'بعد الظـهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'في الصباح',
                                    afternoon: 'بعد الظهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'م',
                                    midnight: 'نصف الليل',
                                    noon: 'ظهر',
                                    morning: 'صباحاً',
                                    afternoon: 'بعد الظـهر',
                                    evening: 'في المساء',
                                    night: 'في الليل'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ق|ب)/i,
                                abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
                                wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^قبل/i,
                                    /^بعد/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^ر[1234]/i,
                                wide: /^الربع [1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[يفمأمسند]/i,
                                abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i,
                                wide: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ي/i,
                                    /^ف/i,
                                    /^م/i,
                                    /^أ/i,
                                    /^م/i,
                                    /^ي/i,
                                    /^ي/i,
                                    /^أ/i,
                                    /^س/i,
                                    /^أ/i,
                                    /^ن/i,
                                    /^د/i
                                ],
                                any: [
                                    /^ين/i,
                                    /^ف/i,
                                    /^مار/i,
                                    /^أب/i,
                                    /^ماي/i,
                                    /^يون/i,
                                    /^يول/i,
                                    /^أغ/i,
                                    /^س/i,
                                    /^أك/i,
                                    /^ن/i,
                                    /^د/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[حنثرخجس]/i,
                                short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
                                abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i,
                                wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ح/i,
                                    /^ن/i,
                                    /^ث/i,
                                    /^ر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ],
                                wide: [
                                    /^الأحد/i,
                                    /^الاثنين/i,
                                    /^الثلاثاء/i,
                                    /^الأربعاء/i,
                                    /^الخميس/i,
                                    /^الجمعة/i,
                                    /^السبت/i
                                ],
                                any: [
                                    /^أح/i,
                                    /^اث/i,
                                    /^ث/i,
                                    /^أر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                                any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mi/i,
                                    noon: /^no/i,
                                    morning: /morning/i,
                                    afternoon: /afternoon/i,
                                    evening: /evening/i,
                                    night: /night/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Xu = {
                    lessThanXSeconds: {
                        one: 'أقل من ثانية',
                        two: 'أقل من زوز ثواني',
                        threeToTen: 'أقل من {{count}} ثواني',
                        other: 'أقل من {{count}} ثانية'
                    },
                    xSeconds: {
                        one: 'ثانية',
                        two: 'زوز ثواني',
                        threeToTen: '{{count}} ثواني',
                        other: '{{count}} ثانية'
                    },
                    halfAMinute: 'نص دقيقة',
                    lessThanXMinutes: {
                        one: 'أقل من دقيقة',
                        two: 'أقل من دقيقتين',
                        threeToTen: 'أقل من {{count}} دقايق',
                        other: 'أقل من {{count}} دقيقة'
                    },
                    xMinutes: {
                        one: 'دقيقة',
                        two: 'دقيقتين',
                        threeToTen: '{{count}} دقايق',
                        other: '{{count}} دقيقة'
                    },
                    aboutXHours: {
                        one: 'ساعة تقريب',
                        two: 'ساعتين تقريب',
                        threeToTen: '{{count}} سوايع تقريب',
                        other: '{{count}} ساعة تقريب'
                    },
                    xHours: {
                        one: 'ساعة',
                        two: 'ساعتين',
                        threeToTen: '{{count}} سوايع',
                        other: '{{count}} ساعة'
                    },
                    xDays: {
                        one: 'نهار',
                        two: 'نهارين',
                        threeToTen: '{{count}} أيام',
                        other: '{{count}} يوم'
                    },
                    aboutXWeeks: {
                        one: 'جمعة تقريب',
                        two: 'جمعتين تقريب',
                        threeToTen: '{{count}} جماع تقريب',
                        other: '{{count}} جمعة تقريب'
                    },
                    xWeeks: {
                        one: 'جمعة',
                        two: 'جمعتين',
                        threeToTen: '{{count}} جماع',
                        other: '{{count}} جمعة'
                    },
                    aboutXMonths: {
                        one: 'شهر تقريب',
                        two: 'شهرين تقريب',
                        threeToTen: '{{count}} أشهرة تقريب',
                        other: '{{count}} شهر تقريب'
                    },
                    xMonths: {
                        one: 'شهر',
                        two: 'شهرين',
                        threeToTen: '{{count}} أشهرة',
                        other: '{{count}} شهر'
                    },
                    aboutXYears: {
                        one: 'عام تقريب',
                        two: 'عامين تقريب',
                        threeToTen: '{{count}} أعوام تقريب',
                        other: '{{count}} عام تقريب'
                    },
                    xYears: {
                        one: 'عام',
                        two: 'عامين',
                        threeToTen: '{{count}} أعوام',
                        other: '{{count}} عام'
                    },
                    overXYears: {
                        one: 'أكثر من عام',
                        two: 'أكثر من عامين',
                        threeToTen: 'أكثر من {{count}} أعوام',
                        other: 'أكثر من {{count}} عام'
                    },
                    almostXYears: {
                        one: 'عام تقريب',
                        two: 'عامين تقريب',
                        threeToTen: '{{count}} أعوام تقريب',
                        other: '{{count}} عام تقريب'
                    }
                },
                Uu = {
                    date: at({
                        formats: {
                            full: 'EEEE، do MMMM y',
                            long: 'do MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss',
                            long: 'HH:mm:ss',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'مع\' {{time}}',
                            long: '{{date}} \'مع\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                qu = {
                    lastWeek: 'eeee \'إلي فات مع\' p',
                    yesterday: '\'البارح مع\' p',
                    today: '\'اليوم مع\' p',
                    tomorrow: '\'غدوة مع\' p',
                    nextWeek: 'eeee \'الجمعة الجاية مع\' p \'نهار\'',
                    other: 'P'
                },
                Gu = {
                    code: 'ar-TN',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = Xu[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'في ' + r : 'عندو ' + r : r
                    },
                    formatLong: Uu,
                    formatRelative: function (e) {
                        return qu[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return String(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ق',
                                    'ب'
                                ],
                                abbreviated: [
                                    'ق.م.',
                                    'ب.م.'
                                ],
                                wide: [
                                    'قبل الميلاد',
                                    'بعد الميلاد'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'ر1',
                                    'ر2',
                                    'ر3',
                                    'ر4'
                                ],
                                wide: [
                                    'الربع الأول',
                                    'الربع الثاني',
                                    'الربع الثالث',
                                    'الربع الرابع'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'د',
                                    'ن',
                                    'أ',
                                    'س',
                                    'أ',
                                    'ج',
                                    'ج',
                                    'م',
                                    'أ',
                                    'م',
                                    'ف',
                                    'ج'
                                ],
                                abbreviated: [
                                    'جانفي',
                                    'فيفري',
                                    'مارس',
                                    'أفريل',
                                    'ماي',
                                    'جوان',
                                    'جويلية',
                                    'أوت',
                                    'سبتمبر',
                                    'أكتوبر',
                                    'نوفمبر',
                                    'ديسمبر'
                                ],
                                wide: [
                                    'جانفي',
                                    'فيفري',
                                    'مارس',
                                    'أفريل',
                                    'ماي',
                                    'جوان',
                                    'جويلية',
                                    'أوت',
                                    'سبتمبر',
                                    'أكتوبر',
                                    'نوفمبر',
                                    'ديسمبر'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ح',
                                    'ن',
                                    'ث',
                                    'ر',
                                    'خ',
                                    'ج',
                                    'س'
                                ],
                                short: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                abbreviated: [
                                    'أحد',
                                    'اثنين',
                                    'ثلاثاء',
                                    'أربعاء',
                                    'خميس',
                                    'جمعة',
                                    'سبت'
                                ],
                                wide: [
                                    'الأحد',
                                    'الاثنين',
                                    'الثلاثاء',
                                    'الأربعاء',
                                    'الخميس',
                                    'الجمعة',
                                    'السبت'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'ع',
                                    morning: 'الصباح',
                                    noon: 'القايلة',
                                    afternoon: 'بعد القايلة',
                                    evening: 'العشية',
                                    night: 'الليل',
                                    midnight: 'نص الليل'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'ع',
                                    morning: 'الصباح',
                                    noon: 'القايلة',
                                    afternoon: 'بعد القايلة',
                                    evening: 'العشية',
                                    night: 'الليل',
                                    midnight: 'نص الليل'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'ع',
                                    morning: 'الصباح',
                                    noon: 'القايلة',
                                    afternoon: 'بعد القايلة',
                                    evening: 'العشية',
                                    night: 'الليل',
                                    midnight: 'نص الليل'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ص',
                                    pm: 'ع',
                                    morning: 'في الصباح',
                                    noon: 'في القايلة',
                                    afternoon: 'بعد القايلة',
                                    evening: 'في العشية',
                                    night: 'في الليل',
                                    midnight: 'نص الليل'
                                },
                                abbreviated: {
                                    am: 'ص',
                                    pm: 'ع',
                                    morning: 'في الصباح',
                                    noon: 'في القايلة',
                                    afternoon: 'بعد القايلة',
                                    evening: 'في العشية',
                                    night: 'في الليل',
                                    midnight: 'نص الليل'
                                },
                                wide: {
                                    am: 'ص',
                                    pm: 'ع',
                                    morning: 'في الصباح',
                                    noon: 'في القايلة',
                                    afternoon: 'بعد القايلة',
                                    evening: 'في العشية',
                                    night: 'في الليل',
                                    midnight: 'نص الليل'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /[قب]/,
                                abbreviated: /[قب]\.م\./,
                                wide: /(قبل|بعد) الميلاد/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /قبل/,
                                    /بعد/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /ر[1234]/,
                                wide: /الربع (الأول|الثاني|الثالث|الرابع)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[جفمأسند]/,
                                abbreviated: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,
                                wide: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ج/i,
                                    /^ف/i,
                                    /^م/i,
                                    /^أ/i,
                                    /^م/i,
                                    /^ج/i,
                                    /^ج/i,
                                    /^أ/i,
                                    /^س/i,
                                    /^أ/i,
                                    /^ن/i,
                                    /^د/i
                                ],
                                any: [
                                    /^جانفي/i,
                                    /^فيفري/i,
                                    /^مارس/i,
                                    /^أفريل/i,
                                    /^ماي/i,
                                    /^جوان/i,
                                    /^جويلية/i,
                                    /^أوت/i,
                                    /^سبتمبر/i,
                                    /^أكتوبر/i,
                                    /^نوفمبر/i,
                                    /^ديسمبر/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[حنثرخجس]/i,
                                short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
                                abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,
                                wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ح/i,
                                    /^ن/i,
                                    /^ث/i,
                                    /^ر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ],
                                wide: [
                                    /^الأحد/i,
                                    /^الاثنين/i,
                                    /^الثلاثاء/i,
                                    /^الأربعاء/i,
                                    /^الخميس/i,
                                    /^الجمعة/i,
                                    /^السبت/i
                                ],
                                any: [
                                    /^أح/i,
                                    /^اث/i,
                                    /^ث/i,
                                    /^أر/i,
                                    /^خ/i,
                                    /^ج/i,
                                    /^س/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ص|ع|ن ل|ل|(في|مع) (صباح|قايلة|عشية|ليل))/,
                                any: /^([صع]|نص الليل|قايلة|(في|مع) (صباح|قايلة|عشية|ليل))/
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ص/,
                                    pm: /^ع/,
                                    midnight: /نص الليل/,
                                    noon: /قايلة/,
                                    afternoon: /بعد القايلة/,
                                    morning: /صباح/,
                                    evening: /عشية/,
                                    night: /ليل/
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                Vu = {
                    lessThanXSeconds: {
                        one: 'bir saniyədən az',
                        other: '{{count}} bir saniyədən az'
                    },
                    xSeconds: {
                        one: '1 saniyə',
                        other: '{{count}} saniyə'
                    },
                    halfAMinute: 'yarım dəqiqə',
                    lessThanXMinutes: {
                        one: 'bir dəqiqədən az',
                        other: '{{count}} bir dəqiqədən az'
                    },
                    xMinutes: {
                        one: 'bir dəqiqə',
                        other: '{{count}} dəqiqə'
                    },
                    aboutXHours: {
                        one: 'təxminən 1 saat',
                        other: 'təxminən {{count}} saat'
                    },
                    xHours: {
                        one: '1 saat',
                        other: '{{count}} saat'
                    },
                    xDays: {
                        one: '1 gün',
                        other: '{{count}} gün'
                    },
                    aboutXWeeks: {
                        one: 'təxminən 1 həftə',
                        other: 'təxminən {{count}} həftə'
                    },
                    xWeeks: {
                        one: '1 həftə',
                        other: '{{count}} həftə'
                    },
                    aboutXMonths: {
                        one: 'təxminən 1 ay',
                        other: 'təxminən {{count}} ay'
                    },
                    xMonths: {
                        one: '1 ay',
                        other: '{{count}} ay'
                    },
                    aboutXYears: {
                        one: 'təxminən 1 il',
                        other: 'təxminən {{count}} il'
                    },
                    xYears: {
                        one: '1 il',
                        other: '{{count}} il'
                    },
                    overXYears: {
                        one: '1 ildən çox',
                        other: '{{count}} ildən çox'
                    },
                    almostXYears: {
                        one: 'demək olar ki 1 il',
                        other: 'demək olar ki {{count}} il'
                    }
                },
                Yu = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM y \'il\'',
                            long: 'do MMMM y \'il\'',
                            medium: 'd MMM y \'il\'',
                            short: 'dd.MM.yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}} - \'də\'',
                            long: '{{date}} {{time}} - \'də\'',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Bu = {
                    lastWeek: '\'sonuncu\' eeee p -\'də\'',
                    yesterday: '\'dünən\' p -\'də\'',
                    today: '\'bugün\' p -\'də\'',
                    tomorrow: '\'sabah\' p -\'də\'',
                    nextWeek: 'eeee p -\'də\'',
                    other: 'P'
                },
                $u = {
                    1: '-inci',
                    5: '-inci',
                    8: '-inci',
                    70: '-inci',
                    80: '-inci',
                    2: '-nci',
                    7: '-nci',
                    20: '-nci',
                    50: '-nci',
                    3: '-üncü',
                    4: '-üncü',
                    100: '-üncü',
                    6: '-ncı',
                    9: '-uncu',
                    10: '-uncu',
                    30: '-uncu',
                    60: '-ıncı',
                    90: '-ıncı'
                },
                Qu = {
                    ordinalNumber: function (e, t) {
                        var n = Number(e),
                            r = function (e) {
                                if (0 === e) return e + '-ıncı';
                                var t = e % 10,
                                    n = e % 100 - t,
                                    r = e >= 100 ? 100 : null;
                                return $u[t] ? $u[t] : $u[n] ? $u[n] : null !== r ? $u[r] : ''
                            }(n);
                        return n + r
                    },
                    era: ut({
                        values: {
                            narrow: [
                                'e.ə',
                                'b.e'
                            ],
                            abbreviated: [
                                'e.ə',
                                'b.e'
                            ],
                            wide: [
                                'eramızdan əvvəl',
                                'bizim era'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    quarter: ut({
                        values: {
                            narrow: [
                                '1',
                                '2',
                                '3',
                                '4'
                            ],
                            abbreviated: [
                                'K1',
                                'K2',
                                'K3',
                                'K4'
                            ],
                            wide: [
                                '1ci kvartal',
                                '2ci kvartal',
                                '3cü kvartal',
                                '4cü kvartal'
                            ]
                        },
                        defaultWidth: 'wide',
                        argumentCallback: function (e) {
                            return Number(e) - 1
                        }
                    }),
                    month: ut({
                        values: {
                            narrow: [
                                'Y',
                                'F',
                                'M',
                                'A',
                                'M',
                                'İ',
                                'İ',
                                'A',
                                'S',
                                'O',
                                'N',
                                'D'
                            ],
                            abbreviated: [
                                'Yan',
                                'Fev',
                                'Mar',
                                'Apr',
                                'May',
                                'İyun',
                                'İyul',
                                'Avq',
                                'Sen',
                                'Okt',
                                'Noy',
                                'Dek'
                            ],
                            wide: [
                                'Yanvar',
                                'Fevral',
                                'Mart',
                                'Aprel',
                                'May',
                                'İyun',
                                'İyul',
                                'Avqust',
                                'Sentyabr',
                                'Oktyabr',
                                'Noyabr',
                                'Dekabr'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    day: ut({
                        values: {
                            narrow: [
                                'B.',
                                'B.e',
                                'Ç.a',
                                'Ç.',
                                'C.a',
                                'C.',
                                'Ş.'
                            ],
                            short: [
                                'B.',
                                'B.e',
                                'Ç.a',
                                'Ç.',
                                'C.a',
                                'C.',
                                'Ş.'
                            ],
                            abbreviated: [
                                'Baz',
                                'Baz.e',
                                'Çər.a',
                                'Çər',
                                'Cüm.a',
                                'Cüm',
                                'Şə'
                            ],
                            wide: [
                                'Bazar',
                                'Bazar ertəsi',
                                'Çərşənbə axşamı',
                                'Çərşənbə',
                                'Cümə axşamı',
                                'Cümə',
                                'Şənbə'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    dayPeriod: ut({
                        values: {
                            narrow: {
                                am: 'am',
                                pm: 'pm',
                                midnight: 'gecəyarı',
                                noon: 'gün',
                                morning: 'səhər',
                                afternoon: 'gündüz',
                                evening: 'axşam',
                                night: 'gecə'
                            },
                            abbreviated: {
                                am: 'AM',
                                pm: 'PM',
                                midnight: 'gecəyarı',
                                noon: 'gün',
                                morning: 'səhər',
                                afternoon: 'gündüz',
                                evening: 'axşam',
                                night: 'gecə'
                            },
                            wide: {
                                am: 'a.m.',
                                pm: 'p.m.',
                                midnight: 'gecəyarı',
                                noon: 'gün',
                                morning: 'səhər',
                                afternoon: 'gündüz',
                                evening: 'axşam',
                                night: 'gecə'
                            }
                        },
                        defaultWidth: 'wide',
                        formattingValues: {
                            narrow: {
                                am: 'a',
                                pm: 'p',
                                midnight: 'gecəyarı',
                                noon: 'gün',
                                morning: 'səhər',
                                afternoon: 'gündüz',
                                evening: 'axşam',
                                night: 'gecə'
                            },
                            abbreviated: {
                                am: 'AM',
                                pm: 'PM',
                                midnight: 'gecəyarı',
                                noon: 'gün',
                                morning: 'səhər',
                                afternoon: 'gündüz',
                                evening: 'axşam',
                                night: 'gecə'
                            },
                            wide: {
                                am: 'a.m.',
                                pm: 'p.m.',
                                midnight: 'gecəyarı',
                                noon: 'gün',
                                morning: 'səhər',
                                afternoon: 'gündüz',
                                evening: 'axşam',
                                night: 'gecə'
                            }
                        },
                        defaultFormattingWidth: 'wide'
                    })
                },
                Ku = {
                    code: 'az',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a = Vu[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', String(t)),
                            n.addSuffix ? n.comparison && n.comparison > 0 ? r + ' əvvəl' : r + ' sonra' : r
                    },
                    formatLong: Yu,
                    formatRelative: function (e, t, n, r) {
                        return Bu[e]
                    },
                    localize: Qu,
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-?(ci|inci|nci|uncu|üncü|ncı))?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(b|a)$/i,
                                abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)$/i,
                                wide: /^(bizim eradan əvvəl|bizim era)$/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^b$/i,
                                    /^(a|c)$/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]$/i,
                                abbreviated: /^K[1234]$/i,
                                wide: /^[1234](ci)? kvartal$/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return Number(e) + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[(?-i)yfmaisond]$/i,
                                abbreviated: /^(Yan|Fev|Mar|Apr|May|İyun|İyul|Avq|Sen|Okt|Noy|Dek)$/i,
                                wide: /^(Yanvar|Fevral|Mart|Aprel|May|İyun|İyul|Avgust|Sentyabr|Oktyabr|Noyabr|Dekabr)$/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^[(?-i)y]$/i,
                                    /^[(?-i)f]$/i,
                                    /^[(?-i)m]$/i,
                                    /^[(?-i)a]$/i,
                                    /^[(?-i)m]$/i,
                                    /^[(?-i)i]$/i,
                                    /^[(?-i)i]$/i,
                                    /^[(?-i)a]$/i,
                                    /^[(?-i)s]$/i,
                                    /^[(?-i)o]$/i,
                                    /^[(?-i)n]$/i,
                                    /^[(?-i)d]$/i
                                ],
                                abbreviated: [
                                    /^Yan$/i,
                                    /^Fev$/i,
                                    /^Mar$/i,
                                    /^Apr$/i,
                                    /^May$/i,
                                    /^İyun$/i,
                                    /^İyul$/i,
                                    /^Avg$/i,
                                    /^Sen$/i,
                                    /^Okt$/i,
                                    /^Noy$/i,
                                    /^Dek$/i
                                ],
                                wide: [
                                    /^Yanvar$/i,
                                    /^Fevral$/i,
                                    /^Mart$/i,
                                    /^Aprel$/i,
                                    /^May$/i,
                                    /^İyun$/i,
                                    /^İyul$/i,
                                    /^Avgust$/i,
                                    /^Sentyabr$/i,
                                    /^Oktyabr$/i,
                                    /^Noyabr$/i,
                                    /^Dekabr$/i
                                ]
                            },
                            defaultParseWidth: 'narrow'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(B\.|B\.e|Ç\.a|Ç\.|C\.a|C\.|Ş\.)$/i,
                                short: /^(B\.|B\.e|Ç\.a|Ç\.|C\.a|C\.|Ş\.)$/i,
                                abbreviated: /^(Baz\.e|Çər|Çər\.a|Cüm|Cüm\.a|Şə)$/i,
                                wide: /^(Bazar|Bazar ertəsi|Çərşənbə axşamı|Çərşənbə|Cümə axşamı|Cümə|Şənbə)$/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^B\.$/i,
                                    /^B\.e$/i,
                                    /^Ç\.a$/i,
                                    /^Ç\.$/i,
                                    /^C\.a$/i,
                                    /^C\.$/i,
                                    /^Ş\.$/i
                                ],
                                abbreviated: [
                                    /^Baz$/i,
                                    /^Baz\.e$/i,
                                    /^Çər\.a$/i,
                                    /^Çər$/i,
                                    /^Cüm\.a$/i,
                                    /^Cüm$/i,
                                    /^Şə$/i
                                ],
                                wide: [
                                    /^Bazar$/i,
                                    /^Bazar ertəsi$/i,
                                    /^Çərşənbə axşamı$/i,
                                    /^Çərşənbə$/i,
                                    /^Cümə axşamı$/i,
                                    /^Cümə$/i,
                                    /^Şənbə$/i
                                ],
                                any: [
                                    /^B\.$/i,
                                    /^B\.e$/i,
                                    /^Ç\.a$/i,
                                    /^Ç\.$/i,
                                    /^C\.a$/i,
                                    /^C\.$/i,
                                    /^Ş\.$/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|gecəyarı|gün|səhər|gündüz|axşam|gecə)$/i,
                                any: /^(am|pm|a\.m\.|p\.m\.|AM|PM|gecəyarı|gün|səhər|gündüz|axşam|gecə)$/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a$/i,
                                    pm: /^p$/i,
                                    midnight: /^gecəyarı$/i,
                                    noon: /^gün$/i,
                                    morning: /səhər$/i,
                                    afternoon: /gündüz$/i,
                                    evening: /axşam$/i,
                                    night: /gecə$/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                };
            function Ju(e, t) {
                if (void 0 !== e.one && 1 === t) return e.one;
                var n = t % 10,
                    r = t % 100;
                return 1 === n && 11 !== r ? e.singularNominative.replace('{{count}}', String(t)) : n >= 2 && n <= 4 && (r < 10 || r > 20) ? e.singularGenitive.replace('{{count}}', String(t)) : e.pluralGenitive.replace('{{count}}', String(t))
            }
            function Zu(e) {
                return function (t, n) {
                    return n && n.addSuffix ? n.comparison && n.comparison > 0 ? e.future ? Ju(e.future, t) : 'праз ' + Ju(e.regular, t) : e.past ? Ju(e.past, t) : Ju(e.regular, t) + ' таму' : Ju(e.regular, t)
                }
            }
            var el = {
                lessThanXSeconds: Zu({
                    regular: {
                        one: 'менш за секунду',
                        singularNominative: 'менш за {{count}} секунду',
                        singularGenitive: 'менш за {{count}} секунды',
                        pluralGenitive: 'менш за {{count}} секунд'
                    },
                    future: {
                        one: 'менш, чым праз секунду',
                        singularNominative: 'менш, чым праз {{count}} секунду',
                        singularGenitive: 'менш, чым праз {{count}} секунды',
                        pluralGenitive: 'менш, чым праз {{count}} секунд'
                    }
                }),
                xSeconds: Zu({
                    regular: {
                        singularNominative: '{{count}} секунда',
                        singularGenitive: '{{count}} секунды',
                        pluralGenitive: '{{count}} секунд'
                    },
                    past: {
                        singularNominative: '{{count}} секунду таму',
                        singularGenitive: '{{count}} секунды таму',
                        pluralGenitive: '{{count}} секунд таму'
                    },
                    future: {
                        singularNominative: 'праз {{count}} секунду',
                        singularGenitive: 'праз {{count}} секунды',
                        pluralGenitive: 'праз {{count}} секунд'
                    }
                }),
                halfAMinute: function (e, t) {
                    return t && t.addSuffix ? t.comparison && t.comparison > 0 ? 'праз паўхвіліны' : 'паўхвіліны таму' : 'паўхвіліны'
                },
                lessThanXMinutes: Zu({
                    regular: {
                        one: 'менш за хвіліну',
                        singularNominative: 'менш за {{count}} хвіліну',
                        singularGenitive: 'менш за {{count}} хвіліны',
                        pluralGenitive: 'менш за {{count}} хвілін'
                    },
                    future: {
                        one: 'менш, чым праз хвіліну',
                        singularNominative: 'менш, чым праз {{count}} хвіліну',
                        singularGenitive: 'менш, чым праз {{count}} хвіліны',
                        pluralGenitive: 'менш, чым праз {{count}} хвілін'
                    }
                }),
                xMinutes: Zu({
                    regular: {
                        singularNominative: '{{count}} хвіліна',
                        singularGenitive: '{{count}} хвіліны',
                        pluralGenitive: '{{count}} хвілін'
                    },
                    past: {
                        singularNominative: '{{count}} хвіліну таму',
                        singularGenitive: '{{count}} хвіліны таму',
                        pluralGenitive: '{{count}} хвілін таму'
                    },
                    future: {
                        singularNominative: 'праз {{count}} хвіліну',
                        singularGenitive: 'праз {{count}} хвіліны',
                        pluralGenitive: 'праз {{count}} хвілін'
                    }
                }),
                aboutXHours: Zu({
                    regular: {
                        singularNominative: 'каля {{count}} гадзіны',
                        singularGenitive: 'каля {{count}} гадзін',
                        pluralGenitive: 'каля {{count}} гадзін'
                    },
                    future: {
                        singularNominative: 'прыблізна праз {{count}} гадзіну',
                        singularGenitive: 'прыблізна праз {{count}} гадзіны',
                        pluralGenitive: 'прыблізна праз {{count}} гадзін'
                    }
                }),
                xHours: Zu({
                    regular: {
                        singularNominative: '{{count}} гадзіна',
                        singularGenitive: '{{count}} гадзіны',
                        pluralGenitive: '{{count}} гадзін'
                    },
                    past: {
                        singularNominative: '{{count}} гадзіну таму',
                        singularGenitive: '{{count}} гадзіны таму',
                        pluralGenitive: '{{count}} гадзін таму'
                    },
                    future: {
                        singularNominative: 'праз {{count}} гадзіну',
                        singularGenitive: 'праз {{count}} гадзіны',
                        pluralGenitive: 'праз {{count}} гадзін'
                    }
                }),
                xDays: Zu({
                    regular: {
                        singularNominative: '{{count}} дзень',
                        singularGenitive: '{{count}} дні',
                        pluralGenitive: '{{count}} дзён'
                    }
                }),
                aboutXWeeks: Zu({
                    regular: {
                        singularNominative: 'каля {{count}} месяца',
                        singularGenitive: 'каля {{count}} месяцаў',
                        pluralGenitive: 'каля {{count}} месяцаў'
                    },
                    future: {
                        singularNominative: 'прыблізна праз {{count}} месяц',
                        singularGenitive: 'прыблізна праз {{count}} месяцы',
                        pluralGenitive: 'прыблізна праз {{count}} месяцаў'
                    }
                }),
                xWeeks: Zu({
                    regular: {
                        singularNominative: '{{count}} месяц',
                        singularGenitive: '{{count}} месяцы',
                        pluralGenitive: '{{count}} месяцаў'
                    }
                }),
                aboutXMonths: Zu({
                    regular: {
                        singularNominative: 'каля {{count}} месяца',
                        singularGenitive: 'каля {{count}} месяцаў',
                        pluralGenitive: 'каля {{count}} месяцаў'
                    },
                    future: {
                        singularNominative: 'прыблізна праз {{count}} месяц',
                        singularGenitive: 'прыблізна праз {{count}} месяцы',
                        pluralGenitive: 'прыблізна праз {{count}} месяцаў'
                    }
                }),
                xMonths: Zu({
                    regular: {
                        singularNominative: '{{count}} месяц',
                        singularGenitive: '{{count}} месяцы',
                        pluralGenitive: '{{count}} месяцаў'
                    }
                }),
                aboutXYears: Zu({
                    regular: {
                        singularNominative: 'каля {{count}} года',
                        singularGenitive: 'каля {{count}} гадоў',
                        pluralGenitive: 'каля {{count}} гадоў'
                    },
                    future: {
                        singularNominative: 'прыблізна праз {{count}} год',
                        singularGenitive: 'прыблізна праз {{count}} гады',
                        pluralGenitive: 'прыблізна праз {{count}} гадоў'
                    }
                }),
                xYears: Zu({
                    regular: {
                        singularNominative: '{{count}} год',
                        singularGenitive: '{{count}} гады',
                        pluralGenitive: '{{count}} гадоў'
                    }
                }),
                overXYears: Zu({
                    regular: {
                        singularNominative: 'больш за {{count}} год',
                        singularGenitive: 'больш за {{count}} гады',
                        pluralGenitive: 'больш за {{count}} гадоў'
                    },
                    future: {
                        singularNominative: 'больш, чым праз {{count}} год',
                        singularGenitive: 'больш, чым праз {{count}} гады',
                        pluralGenitive: 'больш, чым праз {{count}} гадоў'
                    }
                }),
                almostXYears: Zu({
                    regular: {
                        singularNominative: 'амаль {{count}} год',
                        singularGenitive: 'амаль {{count}} гады',
                        pluralGenitive: 'амаль {{count}} гадоў'
                    },
                    future: {
                        singularNominative: 'амаль праз {{count}} год',
                        singularGenitive: 'амаль праз {{count}} гады',
                        pluralGenitive: 'амаль праз {{count}} гадоў'
                    }
                })
            },
                tl = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM y \'г.\'',
                            long: 'd MMMM y \'г.\'',
                            medium: 'd MMM y \'г.\'',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            any: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'any'
                    })
                };
            function nl(e, t, n) {
                yt(2, arguments);
                var r = an(e, n),
                    a = an(t, n);
                return r.getTime() === a.getTime()
            }
            var rl = [
                'нядзелю',
                'панядзелак',
                'аўторак',
                'сераду',
                'чацвер',
                'пятніцу',
                'суботу'
            ];
            function al(e) {
                return '\'у ' + rl[e] + ' а\' p'
            }
            var il = {
                lastWeek: function (e, t, n) {
                    var r = wt(e),
                        a = r.getUTCDay();
                    return nl(r, t, n) ? al(a) : function (e) {
                        var t = rl[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 5:
                            case 6:
                                return '\'у мінулую ' + t + ' а\' p';
                            case 1:
                            case 2:
                            case 4:
                                return '\'у мінулы ' + t + ' а\' p'
                        }
                    }(a)
                },
                yesterday: '\'учора а\' p',
                today: '\'сёння а\' p',
                tomorrow: '\'заўтра а\' p',
                nextWeek: function (e, t, n) {
                    var r = wt(e),
                        a = r.getUTCDay();
                    return nl(r, t, n) ? al(a) : function (e) {
                        var t = rl[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 5:
                            case 6:
                                return '\'у наступную ' + t + ' а\' p';
                            case 1:
                            case 2:
                            case 4:
                                return '\'у наступны ' + t + ' а\' p'
                        }
                    }(a)
                },
                other: 'P'
            },
                ol = {
                    code: 'be',
                    formatDistance: function (e, t, n) {
                        return n = n || {
                        },
                            el[e](t, n)
                    },
                    formatLong: tl,
                    formatRelative: function (e, t, n, r) {
                        var a = il[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = String((t || {
                            }).unit),
                                r = Number(e);
                            return r + ('date' === n ? '-га' : 'hour' === n || 'minute' === n || 'second' === n ? '-я' : r % 10 != 2 && r % 10 != 3 || r % 100 == 12 || r % 100 == 13 ? '-ы' : '-і')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'да н.э.',
                                    'н.э.'
                                ],
                                abbreviated: [
                                    'да н. э.',
                                    'н. э.'
                                ],
                                wide: [
                                    'да нашай эры',
                                    'нашай эры'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1-ы кв.',
                                    '2-і кв.',
                                    '3-і кв.',
                                    '4-ы кв.'
                                ],
                                wide: [
                                    '1-ы квартал',
                                    '2-і квартал',
                                    '3-і квартал',
                                    '4-ы квартал'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'С',
                                    'Л',
                                    'С',
                                    'К',
                                    'М',
                                    'Ч',
                                    'Л',
                                    'Ж',
                                    'В',
                                    'К',
                                    'Л',
                                    'С'
                                ],
                                abbreviated: [
                                    'студз.',
                                    'лют.',
                                    'сак.',
                                    'крас.',
                                    'май',
                                    'чэрв.',
                                    'ліп.',
                                    'жн.',
                                    'вер.',
                                    'кастр.',
                                    'ліст.',
                                    'снеж.'
                                ],
                                wide: [
                                    'студзень',
                                    'люты',
                                    'сакавік',
                                    'красавік',
                                    'май',
                                    'чэрвень',
                                    'ліпень',
                                    'жнівень',
                                    'верасень',
                                    'кастрычнік',
                                    'лістапад',
                                    'снежань'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'С',
                                    'Л',
                                    'С',
                                    'К',
                                    'М',
                                    'Ч',
                                    'Л',
                                    'Ж',
                                    'В',
                                    'К',
                                    'Л',
                                    'С'
                                ],
                                abbreviated: [
                                    'студз.',
                                    'лют.',
                                    'сак.',
                                    'крас.',
                                    'мая',
                                    'чэрв.',
                                    'ліп.',
                                    'жн.',
                                    'вер.',
                                    'кастр.',
                                    'ліст.',
                                    'снеж.'
                                ],
                                wide: [
                                    'студзеня',
                                    'лютага',
                                    'сакавіка',
                                    'красавіка',
                                    'мая',
                                    'чэрвеня',
                                    'ліпеня',
                                    'жніўня',
                                    'верасня',
                                    'кастрычніка',
                                    'лістапада',
                                    'снежня'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Н',
                                    'П',
                                    'А',
                                    'С',
                                    'Ч',
                                    'П',
                                    'С'
                                ],
                                short: [
                                    'нд',
                                    'пн',
                                    'аў',
                                    'ср',
                                    'чц',
                                    'пт',
                                    'сб'
                                ],
                                abbreviated: [
                                    'нядз',
                                    'пан',
                                    'аўт',
                                    'сер',
                                    'чац',
                                    'пят',
                                    'суб'
                                ],
                                wide: [
                                    'нядзеля',
                                    'панядзелак',
                                    'аўторак',
                                    'серада',
                                    'чацвер',
                                    'пятніца',
                                    'субота'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'поўн.',
                                    noon: 'поўд.',
                                    morning: 'ран.',
                                    afternoon: 'дзень',
                                    evening: 'веч.',
                                    night: 'ноч'
                                },
                                abbreviated: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'поўн.',
                                    noon: 'поўд.',
                                    morning: 'ран.',
                                    afternoon: 'дзень',
                                    evening: 'веч.',
                                    night: 'ноч'
                                },
                                wide: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'поўнач',
                                    noon: 'поўдзень',
                                    morning: 'раніца',
                                    afternoon: 'дзень',
                                    evening: 'вечар',
                                    night: 'ноч'
                                }
                            },
                            defaultWidth: 'any',
                            formattingValues: {
                                narrow: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'поўн.',
                                    noon: 'поўд.',
                                    morning: 'ран.',
                                    afternoon: 'дня',
                                    evening: 'веч.',
                                    night: 'ночы'
                                },
                                abbreviated: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'поўн.',
                                    noon: 'поўд.',
                                    morning: 'ран.',
                                    afternoon: 'дня',
                                    evening: 'веч.',
                                    night: 'ночы'
                                },
                                wide: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'поўнач',
                                    noon: 'поўдзень',
                                    morning: 'раніцы',
                                    afternoon: 'дня',
                                    evening: 'вечара',
                                    night: 'ночы'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-?(е|я|га|і|ы|ае|ая|яя|шы|гі|ці|ты|мы))?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^((да )?н\.?\s?э\.?)/i,
                                abbreviated: /^((да )?н\.?\s?э\.?)/i,
                                wide: /^(да нашай эры|нашай эры|наша эра)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^д/i,
                                    /^н/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234](-?[ыі]?)? кв.?/i,
                                wide: /^[1234](-?[ыі]?)? квартал/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return Number(e) + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[слкмчжв]/i,
                                abbreviated: /^(студз|лют|сак|крас|ма[йя]|чэрв|ліп|жн|вер|кастр|ліст|снеж)\.?/i,
                                wide: /^(студзен[ья]|лют(ы|ага)|сакавіка?|красавіка?|ма[йя]|чэрвен[ья]|ліпен[ья]|жні(вень|ўня)|верас(ень|ня)|кастрычніка?|лістапада?|снеж(ань|ня))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^с/i,
                                    /^л/i,
                                    /^с/i,
                                    /^к/i,
                                    /^м/i,
                                    /^ч/i,
                                    /^л/i,
                                    /^ж/i,
                                    /^в/i,
                                    /^к/i,
                                    /^л/i,
                                    /^с/i
                                ],
                                any: [
                                    /^ст/i,
                                    /^лю/i,
                                    /^са/i,
                                    /^кр/i,
                                    /^ма/i,
                                    /^ч/i,
                                    /^ліп/i,
                                    /^ж/i,
                                    /^в/i,
                                    /^ка/i,
                                    /^ліс/i,
                                    /^сн/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[нпасч]/i,
                                short: /^(нд|ня|пн|па|аў|ат|ср|се|чц|ча|пт|пя|сб|су)\.?/i,
                                abbreviated: /^(нядз?|ндз|пнд|пан|аўт|срд|сер|чцв|чац|птн|пят|суб).?/i,
                                wide: /^(нядзел[яі]|панядзел(ак|ка)|аўтор(ак|ка)|серад[аы]|чацв(ер|ярга)|пятніц[аы]|субот[аы])/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^н/i,
                                    /^п/i,
                                    /^а/i,
                                    /^с/i,
                                    /^ч/i,
                                    /^п/i,
                                    /^с/i
                                ],
                                any: [
                                    /^н/i,
                                    /^п[ан]/i,
                                    /^а/i,
                                    /^с[ер]/i,
                                    /^ч/i,
                                    /^п[ят]/i,
                                    /^с[уб]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i,
                                abbreviated: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i,
                                wide: /^([дп]п|поўнач|поўдзень|раніц[аы]|дзень|дня|вечара?|ночы?)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: {
                                    am: /^дп/i,
                                    pm: /^пп/i,
                                    midnight: /^поўн/i,
                                    noon: /^поўд/i,
                                    morning: /^р/i,
                                    afternoon: /^д[зн]/i,
                                    evening: /^в/i,
                                    night: /^н/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                sl = {
                    lessThanXSeconds: {
                        one: 'по-малко от секунда',
                        other: 'по-малко от {{count}} секунди'
                    },
                    xSeconds: {
                        one: '1 секунда',
                        other: '{{count}} секунди'
                    },
                    halfAMinute: 'половин минута',
                    lessThanXMinutes: {
                        one: 'по-малко от минута',
                        other: 'по-малко от {{count}} минути'
                    },
                    xMinutes: {
                        one: '1 минута',
                        other: '{{count}} минути'
                    },
                    aboutXHours: {
                        one: 'около час',
                        other: 'около {{count}} часа'
                    },
                    xHours: {
                        one: '1 час',
                        other: '{{count}} часа'
                    },
                    xDays: {
                        one: '1 ден',
                        other: '{{count}} дни'
                    },
                    aboutXWeeks: {
                        one: 'около седмица',
                        other: 'около {{count}} седмици'
                    },
                    xWeeks: {
                        one: '1 седмица',
                        other: '{{count}} седмици'
                    },
                    aboutXMonths: {
                        one: 'около месец',
                        other: 'около {{count}} месеца'
                    },
                    xMonths: {
                        one: '1 месец',
                        other: '{{count}} месеца'
                    },
                    aboutXYears: {
                        one: 'около година',
                        other: 'около {{count}} години'
                    },
                    xYears: {
                        one: '1 година',
                        other: '{{count}} години'
                    },
                    overXYears: {
                        one: 'над година',
                        other: 'над {{count}} години'
                    },
                    almostXYears: {
                        one: 'почти година',
                        other: 'почти {{count}} години'
                    }
                },
                ul = {
                    date: at({
                        formats: {
                            full: 'EEEE, dd MMMM yyyy',
                            long: 'dd MMMM yyyy',
                            medium: 'dd MMM yyyy',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            any: '{{date}} {{time}}'
                        },
                        defaultWidth: 'any'
                    })
                },
                ll = [
                    'неделя',
                    'понеделник',
                    'вторник',
                    'сряда',
                    'четвъртък',
                    'петък',
                    'събота'
                ];
            function dl(e) {
                var t = ll[e];
                return 2 === e ? '\'във ' + t + ' в\' p' : '\'в ' + t + ' в\' p'
            }
            var cl = {
                lastWeek: function (e, t, n) {
                    var r = wt(e),
                        a = r.getUTCDay();
                    return nl(r, t, n) ? dl(a) : function (e) {
                        var t = ll[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 6:
                                return '\'миналата ' + t + ' в\' p';
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return '\'миналия ' + t + ' в\' p'
                        }
                    }(a)
                },
                yesterday: '\'вчера в\' p',
                today: '\'днес в\' p',
                tomorrow: '\'утре в\' p',
                nextWeek: function (e, t, n) {
                    var r = wt(e),
                        a = r.getUTCDay();
                    return nl(r, t, n) ? dl(a) : function (e) {
                        var t = ll[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 6:
                                return '\'следващата ' + t + ' в\' p';
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return '\'следващия ' + t + ' в\' p'
                        }
                    }(a)
                },
                other: 'P'
            };
            function ml(e, t, n, r, a) {
                var i = function (e) {
                    return 'quarter' === e
                }(t) ? a : function (e) {
                    return 'year' === e || 'week' === e || 'minute' === e || 'second' === e
                }(t) ? r : n;
                return e + '-' + i
            }
            var fl = {
                ordinalNumber: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    },
                        n = String(t.unit),
                        r = Number(e);
                    if (0 === r) return ml(0, n, 'ев', 'ева', 'ево');
                    if (r % 1000 == 0) return ml(r, n, 'ен', 'на', 'но');
                    if (r % 100 == 0) return ml(r, n, 'тен', 'тна', 'тно');
                    var a = r % 100;
                    if (a > 20 || a < 10) switch (a % 10) {
                        case 1:
                            return ml(r, n, 'ви', 'ва', 'во');
                        case 2:
                            return ml(r, n, 'ри', 'ра', 'ро');
                        case 7:
                        case 8:
                            return ml(r, n, 'ми', 'ма', 'мо')
                    }
                    return ml(r, n, 'ти', 'та', 'то')
                },
                era: ut({
                    values: {
                        narrow: [
                            'пр.н.е.',
                            'н.е.'
                        ],
                        abbreviated: [
                            'преди н. е.',
                            'н. е.'
                        ],
                        wide: [
                            'преди новата ера',
                            'новата ера'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                quarter: ut({
                    values: {
                        narrow: [
                            '1',
                            '2',
                            '3',
                            '4'
                        ],
                        abbreviated: [
                            '1-во тримес.',
                            '2-ро тримес.',
                            '3-то тримес.',
                            '4-то тримес.'
                        ],
                        wide: [
                            '1-во тримесечие',
                            '2-ро тримесечие',
                            '3-то тримесечие',
                            '4-то тримесечие'
                        ]
                    },
                    defaultWidth: 'wide',
                    argumentCallback: function (e) {
                        return Number(e) - 1
                    }
                }),
                month: ut({
                    values: {
                        abbreviated: [
                            'яну',
                            'фев',
                            'мар',
                            'апр',
                            'май',
                            'юни',
                            'юли',
                            'авг',
                            'сеп',
                            'окт',
                            'ное',
                            'дек'
                        ],
                        wide: [
                            'януари',
                            'февруари',
                            'март',
                            'април',
                            'май',
                            'юни',
                            'юли',
                            'август',
                            'септември',
                            'октомври',
                            'ноември',
                            'декември'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                day: ut({
                    values: {
                        narrow: [
                            'Н',
                            'П',
                            'В',
                            'С',
                            'Ч',
                            'П',
                            'С'
                        ],
                        short: [
                            'нд',
                            'пн',
                            'вт',
                            'ср',
                            'чт',
                            'пт',
                            'сб'
                        ],
                        abbreviated: [
                            'нед',
                            'пон',
                            'вто',
                            'сря',
                            'чет',
                            'пет',
                            'съб'
                        ],
                        wide: [
                            'неделя',
                            'понеделник',
                            'вторник',
                            'сряда',
                            'четвъртък',
                            'петък',
                            'събота'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                dayPeriod: ut({
                    values: {
                        wide: {
                            am: 'преди обяд',
                            pm: 'след обяд',
                            midnight: 'в полунощ',
                            noon: 'на обяд',
                            morning: 'сутринта',
                            afternoon: 'следобед',
                            evening: 'вечерта',
                            night: 'през нощта'
                        }
                    },
                    defaultWidth: 'wide'
                })
            },
                hl = {
                    code: 'bg',
                    formatDistance: function (e, t) {
                        var n,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                            },
                            a = sl[e];
                        return n = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', String(t)),
                            r.addSuffix ? r.comparison && r.comparison > 0 ? 'след ' + n : 'преди ' + n : n
                    },
                    formatLong: ul,
                    formatRelative: function (e, t, n, r) {
                        var a = cl[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: fl,
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-?[врмт][аи]|-?т?(ен|на)|-?(ев|ева))?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^((пр)?н\.?\s?е\.?)/i,
                                abbreviated: /^((пр)?н\.?\s?е\.?)/i,
                                wide: /^(преди новата ера|новата ера|нова ера)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^п/i,
                                    /^н/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234](-?[врт]?o?)? тримес.?/i,
                                wide: /^[1234](-?[врт]?о?)? тримесечие/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return Number(e) + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                abbreviated: /^(яну|фев|мар|апр|май|юни|юли|авг|сеп|окт|ное|дек)/i,
                                wide: /^(януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^я/i,
                                    /^ф/i,
                                    /^мар/i,
                                    /^ап/i,
                                    /^май/i,
                                    /^юн/i,
                                    /^юл/i,
                                    /^ав/i,
                                    /^се/i,
                                    /^окт/i,
                                    /^но/i,
                                    /^де/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[нпвсч]/i,
                                short: /^(нд|пн|вт|ср|чт|пт|сб)/i,
                                abbreviated: /^(нед|пон|вто|сря|чет|пет|съб)/i,
                                wide: /^(неделя|понеделник|вторник|сряда|четвъртък|петък|събота)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^н/i,
                                    /^п/i,
                                    /^в/i,
                                    /^с/i,
                                    /^ч/i,
                                    /^п/i,
                                    /^с/i
                                ],
                                any: [
                                    /^н[ед]/i,
                                    /^п[он]/i,
                                    /^вт/i,
                                    /^ср/i,
                                    /^ч[ет]/i,
                                    /^п[ет]/i,
                                    /^с[ъб]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(преди о|след о|в по|на о|през|веч|сут|следо)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^преди о/i,
                                    pm: /^след о/i,
                                    midnight: /^в пол/i,
                                    noon: /^на об/i,
                                    morning: /^сут/i,
                                    afternoon: /^следо/i,
                                    evening: /^веч/i,
                                    night: /^през н/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                pl = {
                    locale: {
                        1: '১',
                        2: '২',
                        3: '৩',
                        4: '৪',
                        5: '৫',
                        6: '৬',
                        7: '৭',
                        8: '৮',
                        9: '৯',
                        0: '০'
                    },
                    number: {
                        '১': '1',
                        '২': '2',
                        '৩': '3',
                        '৪': '4',
                        '৫': '5',
                        '৬': '6',
                        '৭': '7',
                        '৮': '8',
                        '৯': '9',
                        '০': '0'
                    }
                };
            function gl(e) {
                return e.toString().replace(/\d/g, (function (e) {
                    return pl.locale[e]
                }))
            }
            var vl = {
                ordinalNumber: function (e, t) {
                    var n = Number(e),
                        r = gl(n);
                    if ('date' === (null == t ? void 0 : t.unit)) return function (e, t) {
                        if (e > 18 && e <= 31) return t + 'শে';
                        switch (e) {
                            case 1:
                                return t + 'লা';
                            case 2:
                            case 3:
                                return t + 'রা';
                            case 4:
                                return t + 'ঠা';
                            default:
                                return t + 'ই'
                        }
                    }(n, r);
                    if (n > 10 || 0 === n) return r + 'তম';
                    switch (n % 10) {
                        case 2:
                        case 3:
                            return r + 'য়';
                        case 4:
                            return r + 'র্থ';
                        case 6:
                            return r + 'ষ্ঠ';
                        default:
                            return r + 'ম'
                    }
                },
                era: ut({
                    values: {
                        narrow: [
                            'খ্রিঃপূঃ',
                            'খ্রিঃ'
                        ],
                        abbreviated: [
                            'খ্রিঃপূর্ব',
                            'খ্রিঃ'
                        ],
                        wide: [
                            'খ্রিস্টপূর্ব',
                            'খ্রিস্টাব্দ'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                quarter: ut({
                    values: {
                        narrow: [
                            '১',
                            '২',
                            '৩',
                            '৪'
                        ],
                        abbreviated: [
                            '১ত্রৈ',
                            '২ত্রৈ',
                            '৩ত্রৈ',
                            '৪ত্রৈ'
                        ],
                        wide: [
                            '১ম ত্রৈমাসিক',
                            '২য় ত্রৈমাসিক',
                            '৩য় ত্রৈমাসিক',
                            '৪র্থ ত্রৈমাসিক'
                        ]
                    },
                    defaultWidth: 'wide',
                    argumentCallback: function (e) {
                        return e - 1
                    }
                }),
                month: ut({
                    values: {
                        narrow: [
                            'জানু',
                            'ফেব্রু',
                            'মার্চ',
                            'এপ্রিল',
                            'মে',
                            'জুন',
                            'জুলাই',
                            'আগস্ট',
                            'সেপ্ট',
                            'অক্টো',
                            'নভে',
                            'ডিসে'
                        ],
                        abbreviated: [
                            'জানু',
                            'ফেব্রু',
                            'মার্চ',
                            'এপ্রিল',
                            'মে',
                            'জুন',
                            'জুলাই',
                            'আগস্ট',
                            'সেপ্ট',
                            'অক্টো',
                            'নভে',
                            'ডিসে'
                        ],
                        wide: [
                            'জানুয়ারি',
                            'ফেব্রুয়ারি',
                            'মার্চ',
                            'এপ্রিল',
                            'মে',
                            'জুন',
                            'জুলাই',
                            'আগস্ট',
                            'সেপ্টেম্বর',
                            'অক্টোবর',
                            'নভেম্বর',
                            'ডিসেম্বর'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                day: ut({
                    values: {
                        narrow: [
                            'র',
                            'সো',
                            'ম',
                            'বু',
                            'বৃ',
                            'শু',
                            'শ'
                        ],
                        short: [
                            'রবি',
                            'সোম',
                            'মঙ্গল',
                            'বুধ',
                            'বৃহ',
                            'শুক্র',
                            'শনি'
                        ],
                        abbreviated: [
                            'রবি',
                            'সোম',
                            'মঙ্গল',
                            'বুধ',
                            'বৃহ',
                            'শুক্র',
                            'শনি'
                        ],
                        wide: [
                            'রবিবার',
                            'সোমবার',
                            'মঙ্গলবার',
                            'বুধবার',
                            'বৃহস্পতিবার ',
                            'শুক্রবার',
                            'শনিবার'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                dayPeriod: ut({
                    values: {
                        narrow: {
                            am: 'পূ',
                            pm: 'অপ',
                            midnight: 'মধ্যরাত',
                            noon: 'মধ্যাহ্ন',
                            morning: 'সকাল',
                            afternoon: 'বিকাল',
                            evening: 'সন্ধ্যা',
                            night: 'রাত'
                        },
                        abbreviated: {
                            am: 'পূর্বাহ্ন',
                            pm: 'অপরাহ্ন',
                            midnight: 'মধ্যরাত',
                            noon: 'মধ্যাহ্ন',
                            morning: 'সকাল',
                            afternoon: 'বিকাল',
                            evening: 'সন্ধ্যা',
                            night: 'রাত'
                        },
                        wide: {
                            am: 'পূর্বাহ্ন',
                            pm: 'অপরাহ্ন',
                            midnight: 'মধ্যরাত',
                            noon: 'মধ্যাহ্ন',
                            morning: 'সকাল',
                            afternoon: 'বিকাল',
                            evening: 'সন্ধ্যা',
                            night: 'রাত'
                        }
                    },
                    defaultWidth: 'wide',
                    formattingValues: {
                        narrow: {
                            am: 'পূ',
                            pm: 'অপ',
                            midnight: 'মধ্যরাত',
                            noon: 'মধ্যাহ্ন',
                            morning: 'সকাল',
                            afternoon: 'বিকাল',
                            evening: 'সন্ধ্যা',
                            night: 'রাত'
                        },
                        abbreviated: {
                            am: 'পূর্বাহ্ন',
                            pm: 'অপরাহ্ন',
                            midnight: 'মধ্যরাত',
                            noon: 'মধ্যাহ্ন',
                            morning: 'সকাল',
                            afternoon: 'বিকাল',
                            evening: 'সন্ধ্যা',
                            night: 'রাত'
                        },
                        wide: {
                            am: 'পূর্বাহ্ন',
                            pm: 'অপরাহ্ন',
                            midnight: 'মধ্যরাত',
                            noon: 'মধ্যাহ্ন',
                            morning: 'সকাল',
                            afternoon: 'বিকাল',
                            evening: 'সন্ধ্যা',
                            night: 'রাত'
                        }
                    },
                    defaultFormattingWidth: 'wide'
                })
            },
                yl = {
                    lessThanXSeconds: {
                        one: 'প্রায় ১ সেকেন্ড',
                        other: 'প্রায় {{count}} সেকেন্ড'
                    },
                    xSeconds: {
                        one: '১ সেকেন্ড',
                        other: '{{count}} সেকেন্ড'
                    },
                    halfAMinute: 'আধ মিনিট',
                    lessThanXMinutes: {
                        one: 'প্রায় ১ মিনিট',
                        other: 'প্রায় {{count}} মিনিট'
                    },
                    xMinutes: {
                        one: '১ মিনিট',
                        other: '{{count}} মিনিট'
                    },
                    aboutXHours: {
                        one: 'প্রায় ১ ঘন্টা',
                        other: 'প্রায় {{count}} ঘন্টা'
                    },
                    xHours: {
                        one: '১ ঘন্টা',
                        other: '{{count}} ঘন্টা'
                    },
                    xDays: {
                        one: '১ দিন',
                        other: '{{count}} দিন'
                    },
                    aboutXWeeks: {
                        one: 'প্রায় ১ সপ্তাহ',
                        other: 'প্রায় {{count}} সপ্তাহ'
                    },
                    xWeeks: {
                        one: '১ সপ্তাহ',
                        other: '{{count}} সপ্তাহ'
                    },
                    aboutXMonths: {
                        one: 'প্রায় ১ মাস',
                        other: 'প্রায় {{count}} মাস'
                    },
                    xMonths: {
                        one: '১ মাস',
                        other: '{{count}} মাস'
                    },
                    aboutXYears: {
                        one: 'প্রায় ১ বছর',
                        other: 'প্রায় {{count}} বছর'
                    },
                    xYears: {
                        one: '১ বছর',
                        other: '{{count}} বছর'
                    },
                    overXYears: {
                        one: '১ বছরের বেশি',
                        other: '{{count}} বছরের বেশি'
                    },
                    almostXYears: {
                        one: 'প্রায় ১ বছর',
                        other: 'প্রায় {{count}} বছর'
                    }
                },
                wl = {
                    date: at({
                        formats: {
                            full: 'EEEE, MMMM do, y',
                            long: 'MMMM do, y',
                            medium: 'MMM d, y',
                            short: 'MM/dd/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}} \'সময়\'',
                            long: '{{date}} {{time}} \'সময়\'',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                bl = {
                    lastWeek: '\'গত\' eeee \'সময়\' p',
                    yesterday: '\'গতকাল\' \'সময়\' p',
                    today: '\'আজ\' \'সময়\' p',
                    tomorrow: '\'আগামীকাল\' \'সময়\' p',
                    nextWeek: 'eeee \'সময়\' p',
                    other: 'P'
                },
                kl = {
                    code: 'bn',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = yl[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', gl(t)),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? r + ' এর মধ্যে' : r + ' আগে' : r
                    },
                    formatLong: wl,
                    formatRelative: function (e, t, n, r) {
                        return bl[e]
                    },
                    localize: vl,
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(ম|য়|র্থ|ষ্ঠ|শে|ই|তম)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(খ্রিঃপূঃ|খ্রিঃ)/i,
                                abbreviated: /^(খ্রিঃপূর্ব|খ্রিঃ)/i,
                                wide: /^(খ্রিস্টপূর্ব|খ্রিস্টাব্দ)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^খ্রিঃপূঃ/i,
                                    /^খ্রিঃ/i
                                ],
                                abbreviated: [
                                    /^খ্রিঃপূর্ব/i,
                                    /^খ্রিঃ/i
                                ],
                                wide: [
                                    /^খ্রিস্টপূর্ব/i,
                                    /^খ্রিস্টাব্দ/i
                                ]
                            },
                            defaultParseWidth: 'wide'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[১২৩৪]/i,
                                abbreviated: /^[১২৩৪]ত্রৈ/i,
                                wide: /^[১২৩৪](ম|য়|র্থ)? ত্রৈমাসিক/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /১/i,
                                    /২/i,
                                    /৩/i,
                                    /৪/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(জানু|ফেব্রু|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্ট|অক্টো|নভে|ডিসে)/i,
                                abbreviated: /^(জানু|ফেব্রু|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্ট|অক্টো|নভে|ডিসে)/i,
                                wide: /^(জানুয়ারি|ফেব্রুয়ারি|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্টেম্বর|অক্টোবর|নভেম্বর|ডিসেম্বর)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^জানু/i,
                                    /^ফেব্রু/i,
                                    /^মার্চ/i,
                                    /^এপ্রিল/i,
                                    /^মে/i,
                                    /^জুন/i,
                                    /^জুলাই/i,
                                    /^আগস্ট/i,
                                    /^সেপ্ট/i,
                                    /^অক্টো/i,
                                    /^নভে/i,
                                    /^ডিসে/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(র|সো|ম|বু|বৃ|শু|শ)+/i,
                                short: /^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+/i,
                                abbreviated: /^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+/i,
                                wide: /^(রবিবার|সোমবার|মঙ্গলবার|বুধবার|বৃহস্পতিবার |শুক্রবার|শনিবার)+/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^র/i,
                                    /^সো/i,
                                    /^ম/i,
                                    /^বু/i,
                                    /^বৃ/i,
                                    /^শু/i,
                                    /^শ/i
                                ],
                                short: [
                                    /^রবি/i,
                                    /^সোম/i,
                                    /^মঙ্গল/i,
                                    /^বুধ/i,
                                    /^বৃহ/i,
                                    /^শুক্র/i,
                                    /^শনি/i
                                ],
                                abbreviated: [
                                    /^রবি/i,
                                    /^সোম/i,
                                    /^মঙ্গল/i,
                                    /^বুধ/i,
                                    /^বৃহ/i,
                                    /^শুক্র/i,
                                    /^শনি/i
                                ],
                                wide: [
                                    /^রবিবার/i,
                                    /^সোমবার/i,
                                    /^মঙ্গলবার/i,
                                    /^বুধবার/i,
                                    /^বৃহস্পতিবার /i,
                                    /^শুক্রবার/i,
                                    /^শনিবার/i
                                ]
                            },
                            defaultParseWidth: 'wide'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(পূ|অপ|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i,
                                abbreviated: /^(পূর্বাহ্ন|অপরাহ্ন|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i,
                                wide: /^(পূর্বাহ্ন|অপরাহ্ন|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: {
                                    am: /^পূ/i,
                                    pm: /^অপ/i,
                                    midnight: /^মধ্যরাত/i,
                                    noon: /^মধ্যাহ্ন/i,
                                    morning: /সকাল/i,
                                    afternoon: /বিকাল/i,
                                    evening: /সন্ধ্যা/i,
                                    night: /রাত/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Ml = {
                    lessThanXSeconds: {
                        one: {
                            standalone: 'manje od 1 sekunde',
                            withPrepositionAgo: 'manje od 1 sekunde',
                            withPrepositionIn: 'manje od 1 sekundu'
                        },
                        dual: 'manje od {{count}} sekunde',
                        other: 'manje od {{count}} sekundi'
                    },
                    xSeconds: {
                        one: {
                            standalone: '1 sekunda',
                            withPrepositionAgo: '1 sekunde',
                            withPrepositionIn: '1 sekundu'
                        },
                        dual: '{{count}} sekunde',
                        other: '{{count}} sekundi'
                    },
                    halfAMinute: 'pola minute',
                    lessThanXMinutes: {
                        one: {
                            standalone: 'manje od 1 minute',
                            withPrepositionAgo: 'manje od 1 minute',
                            withPrepositionIn: 'manje od 1 minutu'
                        },
                        dual: 'manje od {{count}} minute',
                        other: 'manje od {{count}} minuta'
                    },
                    xMinutes: {
                        one: {
                            standalone: '1 minuta',
                            withPrepositionAgo: '1 minute',
                            withPrepositionIn: '1 minutu'
                        },
                        dual: '{{count}} minute',
                        other: '{{count}} minuta'
                    },
                    aboutXHours: {
                        one: {
                            standalone: 'oko 1 sat',
                            withPrepositionAgo: 'oko 1 sat',
                            withPrepositionIn: 'oko 1 sat'
                        },
                        dual: 'oko {{count}} sata',
                        other: 'oko {{count}} sati'
                    },
                    xHours: {
                        one: {
                            standalone: '1 sat',
                            withPrepositionAgo: '1 sat',
                            withPrepositionIn: '1 sat'
                        },
                        dual: '{{count}} sata',
                        other: '{{count}} sati'
                    },
                    xDays: {
                        one: {
                            standalone: '1 dan',
                            withPrepositionAgo: '1 dan',
                            withPrepositionIn: '1 dan'
                        },
                        dual: '{{count}} dana',
                        other: '{{count}} dana'
                    },
                    aboutXWeeks: {
                        one: {
                            standalone: 'oko 1 sedmicu',
                            withPrepositionAgo: 'oko 1 sedmicu',
                            withPrepositionIn: 'oko 1 sedmicu'
                        },
                        dual: 'oko {{count}} sedmice',
                        other: 'oko {{count}} sedmice'
                    },
                    xWeeks: {
                        one: {
                            standalone: '1 sedmicu',
                            withPrepositionAgo: '1 sedmicu',
                            withPrepositionIn: '1 sedmicu'
                        },
                        dual: '{{count}} sedmice',
                        other: '{{count}} sedmice'
                    },
                    aboutXMonths: {
                        one: {
                            standalone: 'oko 1 mjesec',
                            withPrepositionAgo: 'oko 1 mjesec',
                            withPrepositionIn: 'oko 1 mjesec'
                        },
                        dual: 'oko {{count}} mjeseca',
                        other: 'oko {{count}} mjeseci'
                    },
                    xMonths: {
                        one: {
                            standalone: '1 mjesec',
                            withPrepositionAgo: '1 mjesec',
                            withPrepositionIn: '1 mjesec'
                        },
                        dual: '{{count}} mjeseca',
                        other: '{{count}} mjeseci'
                    },
                    aboutXYears: {
                        one: {
                            standalone: 'oko 1 godinu',
                            withPrepositionAgo: 'oko 1 godinu',
                            withPrepositionIn: 'oko 1 godinu'
                        },
                        dual: 'oko {{count}} godine',
                        other: 'oko {{count}} godina'
                    },
                    xYears: {
                        one: {
                            standalone: '1 godina',
                            withPrepositionAgo: '1 godine',
                            withPrepositionIn: '1 godinu'
                        },
                        dual: '{{count}} godine',
                        other: '{{count}} godina'
                    },
                    overXYears: {
                        one: {
                            standalone: 'preko 1 godinu',
                            withPrepositionAgo: 'preko 1 godinu',
                            withPrepositionIn: 'preko 1 godinu'
                        },
                        dual: 'preko {{count}} godine',
                        other: 'preko {{count}} godina'
                    },
                    almostXYears: {
                        one: {
                            standalone: 'gotovo 1 godinu',
                            withPrepositionAgo: 'gotovo 1 godinu',
                            withPrepositionIn: 'gotovo 1 godinu'
                        },
                        dual: 'gotovo {{count}} godine',
                        other: 'gotovo {{count}} godina'
                    }
                },
                El = {
                    date: at({
                        formats: {
                            full: 'EEEE, d. MMMM yyyy.',
                            long: 'd. MMMM yyyy.',
                            medium: 'd. MMM yy.',
                            short: 'dd. MM. yy.'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss (zzzz)',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'u\' {{time}}',
                            long: '{{date}} \'u\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Pl = {
                    lastWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'prošle nedjelje u\' p';
                            case 3:
                                return '\'prošle srijede u\' p';
                            case 6:
                                return '\'prošle subote u\' p';
                            default:
                                return '\'prošli\' EEEE \'u\' p'
                        }
                    },
                    yesterday: '\'juče u\' p',
                    today: '\'danas u\' p',
                    tomorrow: '\'sutra u\' p',
                    nextWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'sljedeće nedjelje u\' p';
                            case 3:
                                return '\'sljedeću srijedu u\' p';
                            case 6:
                                return '\'sljedeću subotu u\' p';
                            default:
                                return '\'sljedeći\' EEEE \'u\' p'
                        }
                    },
                    other: 'P'
                },
                xl = {
                    code: 'bs',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = Ml[e];
                        return r = 'string' == typeof a ? a : 1 === t ? null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? a.one.withPrepositionIn : a.one.withPrepositionAgo : a.one.standalone : t % 10 > 1 && t % 10 < 5 && '1' !== String(t).substr(- 2, 1) ? a.dual.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'za ' + r : 'prije ' + r : r
                    },
                    formatLong: El,
                    formatRelative: function (e, t, n, r) {
                        var a = Pl[e];
                        return 'function' == typeof a ? a(t) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            return String(n) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'pr.n.e.',
                                    'AD'
                                ],
                                abbreviated: [
                                    'pr. Hr.',
                                    'po. Hr.'
                                ],
                                wide: [
                                    'Prije Hrista',
                                    'Poslije Hrista'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.'
                                ],
                                abbreviated: [
                                    '1. kv.',
                                    '2. kv.',
                                    '3. kv.',
                                    '4. kv.'
                                ],
                                wide: [
                                    '1. kvartal',
                                    '2. kvartal',
                                    '3. kvartal',
                                    '4. kvartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.',
                                    '5.',
                                    '6.',
                                    '7.',
                                    '8.',
                                    '9.',
                                    '10.',
                                    '11.',
                                    '12.'
                                ],
                                abbreviated: [
                                    'jan',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'maj',
                                    'jun',
                                    'jul',
                                    'avg',
                                    'sep',
                                    'okt',
                                    'nov',
                                    'dec'
                                ],
                                wide: [
                                    'januar',
                                    'februar',
                                    'mart',
                                    'april',
                                    'maj',
                                    'juni',
                                    'juli',
                                    'avgust',
                                    'septembar',
                                    'oktobar',
                                    'novembar',
                                    'decembar'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.',
                                    '5.',
                                    '6.',
                                    '7.',
                                    '8.',
                                    '9.',
                                    '10.',
                                    '11.',
                                    '12.'
                                ],
                                abbreviated: [
                                    'jan',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'maj',
                                    'jun',
                                    'jul',
                                    'avg',
                                    'sep',
                                    'okt',
                                    'nov',
                                    'dec'
                                ],
                                wide: [
                                    'januar',
                                    'februar',
                                    'mart',
                                    'april',
                                    'maj',
                                    'juni',
                                    'juli',
                                    'avgust',
                                    'septembar',
                                    'oktobar',
                                    'novembar',
                                    'decembar'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'N',
                                    'P',
                                    'U',
                                    'S',
                                    'Č',
                                    'P',
                                    'S'
                                ],
                                short: [
                                    'ned',
                                    'pon',
                                    'uto',
                                    'sre',
                                    'čet',
                                    'pet',
                                    'sub'
                                ],
                                abbreviated: [
                                    'ned',
                                    'pon',
                                    'uto',
                                    'sre',
                                    'čet',
                                    'pet',
                                    'sub'
                                ],
                                wide: [
                                    'nedjelja',
                                    'ponedjeljak',
                                    'utorak',
                                    'srijeda',
                                    'četvrtak',
                                    'petak',
                                    'subota'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'popodne',
                                    evening: 'uveče',
                                    night: 'noću'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'popodne',
                                    evening: 'uveče',
                                    night: 'noću'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'poslije podne',
                                    evening: 'uveče',
                                    night: 'noću'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'popodne',
                                    evening: 'uveče',
                                    night: 'noću'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'popodne',
                                    evening: 'uveče',
                                    night: 'noću'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'poslije podne',
                                    evening: 'uveče',
                                    night: 'noću'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\./i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(pr\.n\.e\.|AD)/i,
                                abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i,
                                wide: /^(Prije Hrista|prije nove ere|Poslije Hrista|nova era)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^pr/i,
                                    /^(po|nova)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]\.\s?kv\.?/i,
                                wide: /^[1234]\. kvartal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(10|11|12|[123456789])\./i,
                                abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,
                                wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(juni|juna)|(juli|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^1/i,
                                    /^2/i,
                                    /^3/i,
                                    /^4/i,
                                    /^5/i,
                                    /^6/i,
                                    /^7/i,
                                    /^8/i,
                                    /^9/i,
                                    /^10/i,
                                    /^11/i,
                                    /^12/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^maj/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^avg/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[npusčc]/i,
                                short: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,
                                abbreviated: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,
                                wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(četvrtak|cetvrtak)|petak|subota)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^m/i,
                                    /^t/i,
                                    /^w/i,
                                    /^t/i,
                                    /^f/i,
                                    /^s/i
                                ],
                                any: [
                                    /^su/i,
                                    /^m/i,
                                    /^tu/i,
                                    /^w/i,
                                    /^th/i,
                                    /^f/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(am|pm|ponoc|ponoć|(po)?podne|uvece|uveče|noću|poslije podne|ujutru)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^pono/i,
                                    noon: /^pod/i,
                                    morning: /jutro/i,
                                    afternoon: /(poslije\s|po)+podne/i,
                                    evening: /(uvece|uveče)/i,
                                    night: /(nocu|noću)/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Sl = {
                    lessThanXSeconds: {
                        one: 'menys d\'un segon',
                        eleven: 'menys d\'onze segons',
                        other: 'menys de {{count}} segons'
                    },
                    xSeconds: {
                        one: '1 segon',
                        other: '{{count}} segons'
                    },
                    halfAMinute: 'mig minut',
                    lessThanXMinutes: {
                        one: 'menys d\'un minut',
                        eleven: 'menys d\'onze minuts',
                        other: 'menys de {{count}} minuts'
                    },
                    xMinutes: {
                        one: '1 minut',
                        other: '{{count}} minuts'
                    },
                    aboutXHours: {
                        one: 'aproximadament una hora',
                        other: 'aproximadament {{count}} hores'
                    },
                    xHours: {
                        one: '1 hora',
                        other: '{{count}} hores'
                    },
                    xDays: {
                        one: '1 dia',
                        other: '{{count}} dies'
                    },
                    aboutXWeeks: {
                        one: 'aproximadament una setmana',
                        other: 'aproximadament {{count}} setmanes'
                    },
                    xWeeks: {
                        one: '1 setmana',
                        other: '{{count}} setmanes'
                    },
                    aboutXMonths: {
                        one: 'aproximadament un mes',
                        other: 'aproximadament {{count}} mesos'
                    },
                    xMonths: {
                        one: '1 mes',
                        other: '{{count}} mesos'
                    },
                    aboutXYears: {
                        one: 'aproximadament un any',
                        other: 'aproximadament {{count}} anys'
                    },
                    xYears: {
                        one: '1 any',
                        other: '{{count}} anys'
                    },
                    overXYears: {
                        one: 'més d\'un any',
                        eleven: 'més d\'onze anys',
                        other: 'més de {{count}} anys'
                    },
                    almostXYears: {
                        one: 'gairebé un any',
                        other: 'gairebé {{count}} anys'
                    }
                },
                Tl = {
                    date: at({
                        formats: {
                            full: 'EEEE, d \'de\' MMMM y',
                            long: 'd \'de\' MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'a les\' {{time}}',
                            long: '{{date}} \'a les\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Cl = {
                    lastWeek: '\'el\' eeee \'passat a la\' LT',
                    yesterday: '\'ahir a la\' p',
                    today: '\'avui a la\' p',
                    tomorrow: '\'demà a la\' p',
                    nextWeek: 'eeee \'a la\' p',
                    other: 'P'
                },
                Wl = {
                    lastWeek: '\'el\' eeee \'passat a les\' p',
                    yesterday: '\'ahir a les\' p',
                    today: '\'avui a les\' p',
                    tomorrow: '\'demà a les\' p',
                    nextWeek: 'eeee \'a les\' p',
                    other: 'P'
                },
                jl = {
                    code: 'ca',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Sl[e] ? Sl[e] : 1 === t ? Sl[e].one : 11 === t && Sl[e].eleven ? Sl[e].eleven : Sl[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'en ' + r : 'fa ' + r : r
                    },
                    formatLong: Tl,
                    formatRelative: function (e, t, n, r) {
                        return 1 !== t.getUTCHours() ? Wl[e] : Cl[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e),
                                r = n % 100;
                            if (r > 20 || r < 10) switch (r % 10) {
                                case 1:
                                case 3:
                                    return n + 'r';
                                case 2:
                                    return n + 'n';
                                case 4:
                                    return n + 't'
                            }
                            return n + 'è'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'aC',
                                    'dC'
                                ],
                                abbreviated: [
                                    'a. de C.',
                                    'd. de C.'
                                ],
                                wide: [
                                    'abans de Crist',
                                    'després de Crist'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'T1',
                                    'T2',
                                    'T3',
                                    'T4'
                                ],
                                wide: [
                                    '1r trimestre',
                                    '2n trimestre',
                                    '3r trimestre',
                                    '4t trimestre'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'GN',
                                    'FB',
                                    'MÇ',
                                    'AB',
                                    'MG',
                                    'JN',
                                    'JL',
                                    'AG',
                                    'ST',
                                    'OC',
                                    'NV',
                                    'DS'
                                ],
                                abbreviated: [
                                    'gen.',
                                    'febr.',
                                    'març',
                                    'abr.',
                                    'maig',
                                    'juny',
                                    'jul.',
                                    'ag.',
                                    'set.',
                                    'oct.',
                                    'nov.',
                                    'des.'
                                ],
                                wide: [
                                    'gener',
                                    'febrer',
                                    'març',
                                    'abril',
                                    'maig',
                                    'juny',
                                    'juliol',
                                    'agost',
                                    'setembre',
                                    'octubre',
                                    'novembre',
                                    'desembre'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'dg.',
                                    'dl.',
                                    'dt.',
                                    'dm.',
                                    'dj.',
                                    'dv.',
                                    'ds.'
                                ],
                                short: [
                                    'dg.',
                                    'dl.',
                                    'dt.',
                                    'dm.',
                                    'dj.',
                                    'dv.',
                                    'ds.'
                                ],
                                abbreviated: [
                                    'dg.',
                                    'dl.',
                                    'dt.',
                                    'dm.',
                                    'dj.',
                                    'dv.',
                                    'ds.'
                                ],
                                wide: [
                                    'diumenge',
                                    'dilluns',
                                    'dimarts',
                                    'dimecres',
                                    'dijous',
                                    'divendres',
                                    'dissabte'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'mitjanit',
                                    noon: 'migdia',
                                    morning: 'matí',
                                    afternoon: 'tarda',
                                    evening: 'vespre',
                                    night: 'nit'
                                },
                                abbreviated: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'mitjanit',
                                    noon: 'migdia',
                                    morning: 'matí',
                                    afternoon: 'tarda',
                                    evening: 'vespre',
                                    night: 'nit'
                                },
                                wide: {
                                    am: 'ante meridiem',
                                    pm: 'post meridiem',
                                    midnight: 'mitjanit',
                                    noon: 'migdia',
                                    morning: 'matí',
                                    afternoon: 'tarda',
                                    evening: 'vespre',
                                    night: 'nit'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'de la mitjanit',
                                    noon: 'del migdia',
                                    morning: 'del matí',
                                    afternoon: 'de la tarda',
                                    evening: 'del vespre',
                                    night: 'de la nit'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'de la mitjanit',
                                    noon: 'del migdia',
                                    morning: 'del matí',
                                    afternoon: 'de la tarda',
                                    evening: 'del vespre',
                                    night: 'de la nit'
                                },
                                wide: {
                                    am: 'ante meridiem',
                                    pm: 'post meridiem',
                                    midnight: 'de la mitjanit',
                                    noon: 'del migdia',
                                    morning: 'del matí',
                                    afternoon: 'de la tarda',
                                    evening: 'del vespre',
                                    night: 'de la nit'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(è|r|n|r|t)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(aC|dC)/i,
                                abbreviated: /^(a. de C.|d. de C.)/i,
                                wide: /^(abans de Crist|despr[eé]s de Crist)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^aC/i,
                                    /^dC/i
                                ],
                                abbreviated: [
                                    /^(a. de C.)/i,
                                    /^(d. de C.)/i
                                ],
                                wide: [
                                    /^(abans de Crist)/i,
                                    /^(despr[eé]s de Crist)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^T[1234]/i,
                                wide: /^[1234](è|r|n|r|t)? trimestre/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(GN|FB|MÇ|AB|MG|JN|JL|AG|ST|OC|NV|DS)/i,
                                abbreviated: /^(gen.|febr.|març|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.)/i,
                                wide: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^GN/i,
                                    /^FB/i,
                                    /^MÇ/i,
                                    /^AB/i,
                                    /^MG/i,
                                    /^JN/i,
                                    /^JL/i,
                                    /^AG/i,
                                    /^ST/i,
                                    /^OC/i,
                                    /^NV/i,
                                    /^DS/i
                                ],
                                abbreviated: [
                                    /^gen./i,
                                    /^febr./i,
                                    /^març/i,
                                    /^abr./i,
                                    /^maig/i,
                                    /^juny/i,
                                    /^jul./i,
                                    /^ag./i,
                                    /^set./i,
                                    /^oct./i,
                                    /^nov./i,
                                    /^des./i
                                ],
                                wide: [
                                    /^gener/i,
                                    /^febrer/i,
                                    /^març/i,
                                    /^abril/i,
                                    /^maig/i,
                                    /^juny/i,
                                    /^juliol/i,
                                    /^agost/i,
                                    /^setembre/i,
                                    /^octubre/i,
                                    /^novembre/i,
                                    /^desembre/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
                                short: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
                                abbreviated: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
                                wide: /^(diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^dg./i,
                                    /^dl./i,
                                    /^dt./i,
                                    /^dm./i,
                                    /^dj./i,
                                    /^dv./i,
                                    /^ds./i
                                ],
                                abbreviated: [
                                    /^dg./i,
                                    /^dl./i,
                                    /^dt./i,
                                    /^dm./i,
                                    /^dj./i,
                                    /^dv./i,
                                    /^ds./i
                                ],
                                wide: [
                                    /^diumenge/i,
                                    /^dilluns/i,
                                    /^dimarts/i,
                                    /^dimecres/i,
                                    /^dijous/i,
                                    /^divendres/i,
                                    /^disssabte/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mn|md|(del|de la) (matí|tarda|vespre|nit))/i,
                                abbreviated: /^([ap]\.?\s?m\.?|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i,
                                wide: /^(ante meridiem|post meridiem|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mitjanit/i,
                                    noon: /^migdia/i,
                                    morning: /matí/i,
                                    afternoon: /tarda/i,
                                    evening: /vespre/i,
                                    night: /nit/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Dl = {
                    lessThanXSeconds: {
                        one: {
                            regular: 'méně než sekunda',
                            past: 'před méně než sekundou',
                            future: 'za méně než sekundu'
                        },
                        few: {
                            regular: 'méně než {{count}} sekundy',
                            past: 'před méně než {{count}} sekundami',
                            future: 'za méně než {{count}} sekundy'
                        },
                        many: {
                            regular: 'méně než {{count}} sekund',
                            past: 'před méně než {{count}} sekundami',
                            future: 'za méně než {{count}} sekund'
                        }
                    },
                    xSeconds: {
                        one: {
                            regular: 'sekunda',
                            past: 'před sekundou',
                            future: 'za sekundu'
                        },
                        few: {
                            regular: '{{count}} sekundy',
                            past: 'před {{count}} sekundami',
                            future: 'za {{count}} sekundy'
                        },
                        many: {
                            regular: '{{count}} sekund',
                            past: 'před {{count}} sekundami',
                            future: 'za {{count}} sekund'
                        }
                    },
                    halfAMinute: {
                        other: {
                            regular: 'půl minuty',
                            past: 'před půl minutou',
                            future: 'za půl minuty'
                        }
                    },
                    lessThanXMinutes: {
                        one: {
                            regular: 'méně než minuta',
                            past: 'před méně než minutou',
                            future: 'za méně než minutu'
                        },
                        few: {
                            regular: 'méně než {{count}} minuty',
                            past: 'před méně než {{count}} minutami',
                            future: 'za méně než {{count}} minuty'
                        },
                        many: {
                            regular: 'méně než {{count}} minut',
                            past: 'před méně než {{count}} minutami',
                            future: 'za méně než {{count}} minut'
                        }
                    },
                    xMinutes: {
                        one: {
                            regular: 'minuta',
                            past: 'před minutou',
                            future: 'za minutu'
                        },
                        few: {
                            regular: '{{count}} minuty',
                            past: 'před {{count}} minutami',
                            future: 'za {{count}} minuty'
                        },
                        many: {
                            regular: '{{count}} minut',
                            past: 'před {{count}} minutami',
                            future: 'za {{count}} minut'
                        }
                    },
                    aboutXHours: {
                        one: {
                            regular: 'přibližně hodina',
                            past: 'přibližně před hodinou',
                            future: 'přibližně za hodinu'
                        },
                        few: {
                            regular: 'přibližně {{count}} hodiny',
                            past: 'přibližně před {{count}} hodinami',
                            future: 'přibližně za {{count}} hodiny'
                        },
                        many: {
                            regular: 'přibližně {{count}} hodin',
                            past: 'přibližně před {{count}} hodinami',
                            future: 'přibližně za {{count}} hodin'
                        }
                    },
                    xHours: {
                        one: {
                            regular: 'hodina',
                            past: 'před hodinou',
                            future: 'za hodinu'
                        },
                        few: {
                            regular: '{{count}} hodiny',
                            past: 'před {{count}} hodinami',
                            future: 'za {{count}} hodiny'
                        },
                        many: {
                            regular: '{{count}} hodin',
                            past: 'před {{count}} hodinami',
                            future: 'za {{count}} hodin'
                        }
                    },
                    xDays: {
                        one: {
                            regular: 'den',
                            past: 'před dnem',
                            future: 'za den'
                        },
                        few: {
                            regular: '{{count}} dny',
                            past: 'před {{count}} dny',
                            future: 'za {{count}} dny'
                        },
                        many: {
                            regular: '{{count}} dní',
                            past: 'před {{count}} dny',
                            future: 'za {{count}} dní'
                        }
                    },
                    aboutXWeeks: {
                        one: {
                            regular: 'přibližně týden',
                            past: 'přibližně před týdnem',
                            future: 'přibližně za týden'
                        },
                        few: {
                            regular: 'přibližně {{count}} týdny',
                            past: 'přibližně před {{count}} týdny',
                            future: 'přibližně za {{count}} týdny'
                        },
                        many: {
                            regular: 'přibližně {{count}} týdnů',
                            past: 'přibližně před {{count}} týdny',
                            future: 'přibližně za {{count}} týdnů'
                        }
                    },
                    xWeeks: {
                        one: {
                            regular: 'týden',
                            past: 'před týdnem',
                            future: 'za týden'
                        },
                        few: {
                            regular: '{{count}} týdny',
                            past: 'před {{count}} týdny',
                            future: 'za {{count}} týdny'
                        },
                        many: {
                            regular: '{{count}} týdnů',
                            past: 'před {{count}} týdny',
                            future: 'za {{count}} týdnů'
                        }
                    },
                    aboutXMonths: {
                        one: {
                            regular: 'přibližně měsíc',
                            past: 'přibližně před měsícem',
                            future: 'přibližně za měsíc'
                        },
                        few: {
                            regular: 'přibližně {{count}} měsíce',
                            past: 'přibližně před {{count}} měsíci',
                            future: 'přibližně za {{count}} měsíce'
                        },
                        many: {
                            regular: 'přibližně {{count}} měsíců',
                            past: 'přibližně před {{count}} měsíci',
                            future: 'přibližně za {{count}} měsíců'
                        }
                    },
                    xMonths: {
                        one: {
                            regular: 'měsíc',
                            past: 'před měsícem',
                            future: 'za měsíc'
                        },
                        few: {
                            regular: '{{count}} měsíce',
                            past: 'před {{count}} měsíci',
                            future: 'za {{count}} měsíce'
                        },
                        many: {
                            regular: '{{count}} měsíců',
                            past: 'před {{count}} měsíci',
                            future: 'za {{count}} měsíců'
                        }
                    },
                    aboutXYears: {
                        one: {
                            regular: 'přibližně rok',
                            past: 'přibližně před rokem',
                            future: 'přibližně za rok'
                        },
                        few: {
                            regular: 'přibližně {{count}} roky',
                            past: 'přibližně před {{count}} roky',
                            future: 'přibližně za {{count}} roky'
                        },
                        many: {
                            regular: 'přibližně {{count}} roků',
                            past: 'přibližně před {{count}} roky',
                            future: 'přibližně za {{count}} roků'
                        }
                    },
                    xYears: {
                        one: {
                            regular: 'rok',
                            past: 'před rokem',
                            future: 'za rok'
                        },
                        few: {
                            regular: '{{count}} roky',
                            past: 'před {{count}} roky',
                            future: 'za {{count}} roky'
                        },
                        many: {
                            regular: '{{count}} roků',
                            past: 'před {{count}} roky',
                            future: 'za {{count}} roků'
                        }
                    },
                    overXYears: {
                        one: {
                            regular: 'více než rok',
                            past: 'před více než rokem',
                            future: 'za více než rok'
                        },
                        few: {
                            regular: 'více než {{count}} roky',
                            past: 'před více než {{count}} roky',
                            future: 'za více než {{count}} roky'
                        },
                        many: {
                            regular: 'více než {{count}} roků',
                            past: 'před více než {{count}} roky',
                            future: 'za více než {{count}} roků'
                        }
                    },
                    almostXYears: {
                        one: {
                            regular: 'skoro rok',
                            past: 'skoro před rokem',
                            future: 'skoro za rok'
                        },
                        few: {
                            regular: 'skoro {{count}} roky',
                            past: 'skoro před {{count}} roky',
                            future: 'skoro za {{count}} roky'
                        },
                        many: {
                            regular: 'skoro {{count}} roků',
                            past: 'skoro před {{count}} roky',
                            future: 'skoro za {{count}} roků'
                        }
                    }
                },
                Nl = {
                    date: at({
                        formats: {
                            full: 'EEEE, d. MMMM yyyy',
                            long: 'd. MMMM yyyy',
                            medium: 'd. M. yyyy',
                            short: 'dd.MM.yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'v\' {{time}}',
                            long: '{{date}} \'v\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Il = [
                    'neděli',
                    'pondělí',
                    'úterý',
                    'středu',
                    'čtvrtek',
                    'pátek',
                    'sobotu'
                ],
                zl = {
                    lastWeek: '\'poslední\' eeee \'ve\' p',
                    yesterday: '\'včera v\' p',
                    today: '\'dnes v\' p',
                    tomorrow: '\'zítra v\' p',
                    nextWeek: function (e, t, n) {
                        var r = e.getUTCDay();
                        return '\'v ' + Il[r] + ' o\' p'
                    },
                    other: 'P'
                },
                Rl = {
                    code: 'cs',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a = Dl[e];
                        r = 'object' == typeof a.other ? 'other' : 1 === t ? 'one' : t > 1 && t < 5 ? 'few' : 'many';
                        var i,
                            o = !0 === n.addSuffix,
                            s = n.comparison;
                        return i = o && - 1 === s ? 'past' : o && 1 === s ? 'future' : 'regular',
                            a[r][i].replace('{{count}}', t)
                    },
                    formatLong: Nl,
                    formatRelative: function (e, t, n, r) {
                        var a = zl[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'př. n. l.',
                                    'n. l.'
                                ],
                                abbreviated: [
                                    'př. n. l.',
                                    'n. l.'
                                ],
                                wide: [
                                    'před naším letopočtem',
                                    'našeho letopočtu'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1. čtvrtletí',
                                    '2. čtvrtletí',
                                    '3. čtvrtletí',
                                    '4. čtvrtletí'
                                ],
                                wide: [
                                    '1. čtvrtletí',
                                    '2. čtvrtletí',
                                    '3. čtvrtletí',
                                    '4. čtvrtletí'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'L',
                                    'Ú',
                                    'B',
                                    'D',
                                    'K',
                                    'Č',
                                    'Č',
                                    'S',
                                    'Z',
                                    'Ř',
                                    'L',
                                    'P'
                                ],
                                abbreviated: [
                                    'led',
                                    'úno',
                                    'bře',
                                    'dub',
                                    'kvě',
                                    'čvn',
                                    'čvc',
                                    'srp',
                                    'zář',
                                    'říj',
                                    'lis',
                                    'pro'
                                ],
                                wide: [
                                    'leden',
                                    'únor',
                                    'březen',
                                    'duben',
                                    'květen',
                                    'červen',
                                    'červenec',
                                    'srpen',
                                    'září',
                                    'říjen',
                                    'listopad',
                                    'prosinec'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'L',
                                    'Ú',
                                    'B',
                                    'D',
                                    'K',
                                    'Č',
                                    'Č',
                                    'S',
                                    'Z',
                                    'Ř',
                                    'L',
                                    'P'
                                ],
                                abbreviated: [
                                    'led',
                                    'úno',
                                    'bře',
                                    'dub',
                                    'kvě',
                                    'čvn',
                                    'čvc',
                                    'srp',
                                    'zář',
                                    'říj',
                                    'lis',
                                    'pro'
                                ],
                                wide: [
                                    'ledna',
                                    'února',
                                    'března',
                                    'dubna',
                                    'května',
                                    'června',
                                    'července',
                                    'srpna',
                                    'září',
                                    'října',
                                    'listopadu',
                                    'prosince'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ne',
                                    'po',
                                    'út',
                                    'st',
                                    'čt',
                                    'pá',
                                    'so'
                                ],
                                short: [
                                    'ne',
                                    'po',
                                    'út',
                                    'st',
                                    'čt',
                                    'pá',
                                    'so'
                                ],
                                abbreviated: [
                                    'ned',
                                    'pon',
                                    'úte',
                                    'stř',
                                    'čtv',
                                    'pát',
                                    'sob'
                                ],
                                wide: [
                                    'neděle',
                                    'pondělí',
                                    'úterý',
                                    'středa',
                                    'čtvrtek',
                                    'pátek',
                                    'sobota'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'dop.',
                                    pm: 'odp.',
                                    midnight: 'půlnoc',
                                    noon: 'poledne',
                                    morning: 'ráno',
                                    afternoon: 'odpoledne',
                                    evening: 'večer',
                                    night: 'noc'
                                },
                                abbreviated: {
                                    am: 'dop.',
                                    pm: 'odp.',
                                    midnight: 'půlnoc',
                                    noon: 'poledne',
                                    morning: 'ráno',
                                    afternoon: 'odpoledne',
                                    evening: 'večer',
                                    night: 'noc'
                                },
                                wide: {
                                    am: 'dopoledne',
                                    pm: 'odpoledne',
                                    midnight: 'půlnoc',
                                    noon: 'poledne',
                                    morning: 'ráno',
                                    afternoon: 'odpoledne',
                                    evening: 'večer',
                                    night: 'noc'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'dop.',
                                    pm: 'odp.',
                                    midnight: 'půlnoc',
                                    noon: 'poledne',
                                    morning: 'ráno',
                                    afternoon: 'odpoledne',
                                    evening: 'večer',
                                    night: 'noc'
                                },
                                abbreviated: {
                                    am: 'dop.',
                                    pm: 'odp.',
                                    midnight: 'půlnoc',
                                    noon: 'poledne',
                                    morning: 'ráno',
                                    afternoon: 'odpoledne',
                                    evening: 'večer',
                                    night: 'noc'
                                },
                                wide: {
                                    am: 'dopoledne',
                                    pm: 'odpoledne',
                                    midnight: 'půlnoc',
                                    noon: 'poledne',
                                    morning: 'ráno',
                                    afternoon: 'odpoledne',
                                    evening: 'večer',
                                    night: 'noc'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\.?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(p[řr]ed Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
                                abbreviated: /^(pe[řr]ed Kr\.|pe[řr]ed n\. l\.|po Kr\.|n\. l\.)/i,
                                wide: /^(p[řr]ed Kristem|pred na[šs][íi]m letopo[čc]tem|po Kristu|na[šs]eho letopo[čc]tu)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^p[řr]/i,
                                    /^(po|n)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]\. [čc]tvrtlet[íi]/i,
                                wide: /^[1234]\. [čc]tvrtlet[íi]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[lúubdkčcszřrlp]/i,
                                abbreviated: /^(led|[úu]no|b[řr]e|dub|kv[ěe]|[čc]vn|[čc]vc|srp|z[áa][řr]|[řr][íi]j|lis|pro)/i,
                                wide: /^(leden|ledna|[úu]nora?|b[řr]ezen|b[řr]ezna|duben|dubna|kv[ěe]ten|kv[ěe]tna|[čc]erven(ec|ce)?|[čc]ervna|srpen|srpna|z[áa][řr][íi]|[řr][íi]jen|[řr][íi]jna|listopad(a|u)?|prosinec|prosince)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^l/i,
                                    /^[úu]/i,
                                    /^b/i,
                                    /^d/i,
                                    /^k/i,
                                    /^[čc]/i,
                                    /^[čc]/i,
                                    /^s/i,
                                    /^z/i,
                                    /^[řr]/i,
                                    /^l/i,
                                    /^p/i
                                ],
                                any: [
                                    /^led/i,
                                    /^[úu]n/i,
                                    /^b[řr]e/i,
                                    /^dub/i,
                                    /^kv[ěe]/i,
                                    /^[čc]vn|[čc]erven(?!\w)|[čc]ervna/i,
                                    /^[čc]vc|[čc]erven(ec|ce)/i,
                                    /^srp/i,
                                    /^z[áa][řr]/i,
                                    /^[řr][íi]j/i,
                                    /^lis/i,
                                    /^pro/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[npuúsčps]/i,
                                short: /^(ne|po|[úu]t|st|[čc]t|p[áa]|so)/i,
                                abbreviated: /^(ne|po|[úu]t|st|[čc]t|p[áa]|so)/i,
                                wide: /^(ned[ěe]le|pond[ěe]l[íi]|[úu]ter[ýy]|st[řr]eda|[čc]tvrtek|p[áa]tek|sobota)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^n/i,
                                    /^p/i,
                                    /^[úu]/i,
                                    /^s/i,
                                    /^[čc]/i,
                                    /^p/i,
                                    /^s/i
                                ],
                                any: [
                                    /^ne/i,
                                    /^po/i,
                                    /^ut/i,
                                    /^st/i,
                                    /^[čc]t/i,
                                    /^p/i,
                                    /^so/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^dopoledne|dop\.?|odpoledne|odp\.?|půlnoc|poledne|r[áa]no|odpoledne|ve[čc]er|(v )?noci/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^dop/i,
                                    pm: /^odp/i,
                                    midnight: /^p[ůu]lnoc/i,
                                    noon: /^poledne/i,
                                    morning: /r[áa]no/i,
                                    afternoon: /odpoledne/i,
                                    evening: /ve[čc]er/i,
                                    night: /noc/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Al = Rl,
                Ol = {
                    lessThanXSeconds: {
                        one: 'llai na eiliad',
                        other: 'llai na {{count}} eiliad'
                    },
                    xSeconds: {
                        one: '1 eiliad',
                        other: '{{count}} eiliad'
                    },
                    halfAMinute: 'hanner munud',
                    lessThanXMinutes: {
                        one: 'llai na munud',
                        two: 'llai na 2 funud',
                        other: 'llai na {{count}} munud'
                    },
                    xMinutes: {
                        one: '1 munud',
                        two: '2 funud',
                        other: '{{count}} munud'
                    },
                    aboutXHours: {
                        one: 'tua 1 awr',
                        other: 'tua {{count}} awr'
                    },
                    xHours: {
                        one: '1 awr',
                        other: '{{count}} awr'
                    },
                    xDays: {
                        one: '1 diwrnod',
                        two: '2 ddiwrnod',
                        other: '{{count}} diwrnod'
                    },
                    aboutXWeeks: {
                        one: 'tua 1 wythnos',
                        two: 'tua pythefnos',
                        other: 'tua {{count}} wythnos'
                    },
                    xWeeks: {
                        one: '1 wythnos',
                        two: 'pythefnos',
                        other: '{{count}} wythnos'
                    },
                    aboutXMonths: {
                        one: 'tua 1 mis',
                        two: 'tua 2 fis',
                        other: 'tua {{count}} mis'
                    },
                    xMonths: {
                        one: '1 mis',
                        two: '2 fis',
                        other: '{{count}} mis'
                    },
                    aboutXYears: {
                        one: 'tua 1 flwyddyn',
                        two: 'tua 2 flynedd',
                        other: 'tua {{count}} mlynedd'
                    },
                    xYears: {
                        one: '1 flwyddyn',
                        two: '2 flynedd',
                        other: '{{count}} mlynedd'
                    },
                    overXYears: {
                        one: 'dros 1 flwyddyn',
                        two: 'dros 2 flynedd',
                        other: 'dros {{count}} mlynedd'
                    },
                    almostXYears: {
                        one: 'bron 1 flwyddyn',
                        two: 'bron 2 flynedd',
                        other: 'bron {{count}} mlynedd'
                    }
                },
                Hl = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM yyyy',
                            long: 'd MMMM yyyy',
                            medium: 'd MMM yyyy',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'am\' {{time}}',
                            long: '{{date}} \'am\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                _l = {
                    lastWeek: 'eeee \'diwethaf am\' p',
                    yesterday: '\'ddoe am\' p',
                    today: '\'heddiw am\' p',
                    tomorrow: '\'yfory am\' p',
                    nextWeek: 'eeee \'am\' p',
                    other: 'P'
                },
                Ll = {
                    code: 'cy',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Ol[e] ? Ol[e] : 1 === t ? Ol[e].one : 2 === t && Ol[e].two ? Ol[e].two : Ol[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'mewn ' + r : r + ' yn ôl' : r
                    },
                    formatLong: Hl,
                    formatRelative: function (e, t, n, r) {
                        return _l[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            if (n < 20) switch (n) {
                                case 0:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 12:
                                case 15:
                                case 18:
                                    return n + 'fed';
                                case 1:
                                    return n + 'af';
                                case 2:
                                    return n + 'ail';
                                case 3:
                                case 4:
                                    return n + 'ydd';
                                case 5:
                                case 6:
                                    return n + 'ed';
                                case 11:
                                case 13:
                                case 14:
                                case 16:
                                case 17:
                                case 19:
                                    return n + 'eg'
                            } else if (n >= 50 && n <= 60 || 80 === n || n >= 100) return n + 'fed';
                            return n + 'ain'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'C',
                                    'O'
                                ],
                                abbreviated: [
                                    'CC',
                                    'OC'
                                ],
                                wide: [
                                    'Cyn Crist',
                                    'Ar ôl Crist'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Ch1',
                                    'Ch2',
                                    'Ch3',
                                    'Ch4'
                                ],
                                wide: [
                                    'Chwarter 1af',
                                    '2ail chwarter',
                                    '3ydd chwarter',
                                    '4ydd chwarter'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'I',
                                    'Ch',
                                    'Ma',
                                    'E',
                                    'Mi',
                                    'Me',
                                    'G',
                                    'A',
                                    'Md',
                                    'H',
                                    'T',
                                    'Rh'
                                ],
                                abbreviated: [
                                    'Ion',
                                    'Chwe',
                                    'Maw',
                                    'Ebr',
                                    'Mai',
                                    'Meh',
                                    'Gor',
                                    'Aws',
                                    'Med',
                                    'Hyd',
                                    'Tach',
                                    'Rhag'
                                ],
                                wide: [
                                    'Ionawr',
                                    'Chwefror',
                                    'Mawrth',
                                    'Ebrill',
                                    'Mai',
                                    'Mehefin',
                                    'Gorffennaf',
                                    'Awst',
                                    'Medi',
                                    'Hydref',
                                    'Tachwedd',
                                    'Rhagfyr'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'Ll',
                                    'M',
                                    'M',
                                    'I',
                                    'G',
                                    'S'
                                ],
                                short: [
                                    'Su',
                                    'Ll',
                                    'Ma',
                                    'Me',
                                    'Ia',
                                    'Gw',
                                    'Sa'
                                ],
                                abbreviated: [
                                    'Sul',
                                    'Llun',
                                    'Maw',
                                    'Mer',
                                    'Iau',
                                    'Gwe',
                                    'Sad'
                                ],
                                wide: [
                                    'dydd Sul',
                                    'dydd Llun',
                                    'dydd Mawrth',
                                    'dydd Mercher',
                                    'dydd Iau',
                                    'dydd Gwener',
                                    'dydd Sadwrn'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'b',
                                    pm: 'h',
                                    midnight: 'hn',
                                    noon: 'hd',
                                    morning: 'bore',
                                    afternoon: 'prynhawn',
                                    evening: 'gyda\'r nos',
                                    night: 'nos'
                                },
                                abbreviated: {
                                    am: 'yb',
                                    pm: 'yh',
                                    midnight: 'hanner nos',
                                    noon: 'hanner dydd',
                                    morning: 'bore',
                                    afternoon: 'prynhawn',
                                    evening: 'gyda\'r nos',
                                    night: 'nos'
                                },
                                wide: {
                                    am: 'y.b.',
                                    pm: 'y.h.',
                                    midnight: 'hanner nos',
                                    noon: 'hanner dydd',
                                    morning: 'bore',
                                    afternoon: 'prynhawn',
                                    evening: 'gyda\'r nos',
                                    night: 'nos'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'b',
                                    pm: 'h',
                                    midnight: 'hn',
                                    noon: 'hd',
                                    morning: 'yn y bore',
                                    afternoon: 'yn y prynhawn',
                                    evening: 'gyda\'r nos',
                                    night: 'yn y nos'
                                },
                                abbreviated: {
                                    am: 'yb',
                                    pm: 'yh',
                                    midnight: 'hanner nos',
                                    noon: 'hanner dydd',
                                    morning: 'yn y bore',
                                    afternoon: 'yn y prynhawn',
                                    evening: 'gyda\'r nos',
                                    night: 'yn y nos'
                                },
                                wide: {
                                    am: 'y.b.',
                                    pm: 'y.h.',
                                    midnight: 'hanner nos',
                                    noon: 'hanner dydd',
                                    morning: 'yn y bore',
                                    afternoon: 'yn y prynhawn',
                                    evening: 'gyda\'r nos',
                                    night: 'yn y nos'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(af|ail|ydd|ed|fed|eg|ain)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(c|o)/i,
                                abbreviated: /^(c\.?\s?c\.?|o\.?\s?c\.?)/i,
                                wide: /^(cyn christ|ar ôl crist|ar ol crist)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                wide: [
                                    /^c/i,
                                    /^(ar ôl crist|ar ol crist)/i
                                ],
                                any: [
                                    /^c/i,
                                    /^o/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^ch[1234]/i,
                                wide: /^(chwarter 1af)|([234](ail|ydd)? chwarter)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(i|ch|m|e|g|a|h|t|rh)/i,
                                abbreviated: /^(ion|chwe|maw|ebr|mai|meh|gor|aws|med|hyd|tach|rhag)/i,
                                wide: /^(ionawr|chwefror|mawrth|ebrill|mai|mehefin|gorffennaf|awst|medi|hydref|tachwedd|rhagfyr)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^i/i,
                                    /^ch/i,
                                    /^m/i,
                                    /^e/i,
                                    /^m/i,
                                    /^m/i,
                                    /^g/i,
                                    /^a/i,
                                    /^m/i,
                                    /^h/i,
                                    /^t/i,
                                    /^rh/i
                                ],
                                any: [
                                    /^io/i,
                                    /^ch/i,
                                    /^maw/i,
                                    /^e/i,
                                    /^mai/i,
                                    /^meh/i,
                                    /^g/i,
                                    /^a/i,
                                    /^med/i,
                                    /^h/i,
                                    /^t/i,
                                    /^rh/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(s|ll|m|i|g)/i,
                                short: /^(su|ll|ma|me|ia|gw|sa)/i,
                                abbreviated: /^(sul|llun|maw|mer|iau|gwe|sad)/i,
                                wide: /^dydd (sul|llun|mawrth|mercher|iau|gwener|sadwrn)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^ll/i,
                                    /^m/i,
                                    /^m/i,
                                    /^i/i,
                                    /^g/i,
                                    /^s/i
                                ],
                                wide: [
                                    /^dydd su/i,
                                    /^dydd ll/i,
                                    /^dydd ma/i,
                                    /^dydd me/i,
                                    /^dydd i/i,
                                    /^dydd g/i,
                                    /^dydd sa/i
                                ],
                                any: [
                                    /^su/i,
                                    /^ll/i,
                                    /^ma/i,
                                    /^me/i,
                                    /^i/i,
                                    /^g/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(b|h|hn|hd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,
                                any: /^(y\.?\s?[bh]\.?|hanner nos|hanner dydd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^b|(y\.?\s?b\.?)/i,
                                    pm: /^h|(y\.?\s?h\.?)|(yr hwyr)/i,
                                    midnight: /^hn|hanner nos/i,
                                    noon: /^hd|hanner dydd/i,
                                    morning: /bore/i,
                                    afternoon: /prynhawn/i,
                                    evening: /^gyda'r nos$/i,
                                    night: /blah/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Fl = {
                    lessThanXSeconds: {
                        one: 'mindre end ét sekund',
                        other: 'mindre end {{count}} sekunder'
                    },
                    xSeconds: {
                        one: '1 sekund',
                        other: '{{count}} sekunder'
                    },
                    halfAMinute: 'ét halvt minut',
                    lessThanXMinutes: {
                        one: 'mindre end ét minut',
                        other: 'mindre end {{count}} minutter'
                    },
                    xMinutes: {
                        one: '1 minut',
                        other: '{{count}} minutter'
                    },
                    aboutXHours: {
                        one: 'cirka 1 time',
                        other: 'cirka {{count}} timer'
                    },
                    xHours: {
                        one: '1 time',
                        other: '{{count}} timer'
                    },
                    xDays: {
                        one: '1 dag',
                        other: '{{count}} dage'
                    },
                    aboutXWeeks: {
                        one: 'cirka 1 uge',
                        other: 'cirka {{count}} uger'
                    },
                    xWeeks: {
                        one: '1 uge',
                        other: '{{count}} uger'
                    },
                    aboutXMonths: {
                        one: 'cirka 1 måned',
                        other: 'cirka {{count}} måneder'
                    },
                    xMonths: {
                        one: '1 måned',
                        other: '{{count}} måneder'
                    },
                    aboutXYears: {
                        one: 'cirka 1 år',
                        other: 'cirka {{count}} år'
                    },
                    xYears: {
                        one: '1 år',
                        other: '{{count}} år'
                    },
                    overXYears: {
                        one: 'over 1 år',
                        other: 'over {{count}} år'
                    },
                    almostXYears: {
                        one: 'næsten 1 år',
                        other: 'næsten {{count}} år'
                    }
                },
                Xl = {
                    date: at({
                        formats: {
                            full: 'EEEE \'den\' d. MMMM y',
                            long: 'd. MMMM y',
                            medium: 'd. MMM y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'kl\'. {{time}}',
                            long: '{{date}} \'kl\'. {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Ul = {
                    lastWeek: '\'sidste\' eeee \'kl.\' p',
                    yesterday: '\'i går kl.\' p',
                    today: '\'i dag kl.\' p',
                    tomorrow: '\'i morgen kl.\' p',
                    nextWeek: '\'på\' eeee \'kl.\' p',
                    other: 'P'
                },
                ql = {
                    code: 'da',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Fl[e] ? Fl[e] : 1 === t ? Fl[e].one : Fl[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'om ' + r : r + ' siden' : r
                    },
                    formatLong: Xl,
                    formatRelative: function (e, t, n, r) {
                        return Ul[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'fvt',
                                    'vt'
                                ],
                                abbreviated: [
                                    'f.v.t.',
                                    'v.t.'
                                ],
                                wide: [
                                    'før vesterlandsk tidsregning',
                                    'vesterlandsk tidsregning'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1. kvt.',
                                    '2. kvt.',
                                    '3. kvt.',
                                    '4. kvt.'
                                ],
                                wide: [
                                    '1. kvartal',
                                    '2. kvartal',
                                    '3. kvartal',
                                    '4. kvartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mar.',
                                    'apr.',
                                    'maj',
                                    'jun.',
                                    'jul.',
                                    'aug.',
                                    'sep.',
                                    'okt.',
                                    'nov.',
                                    'dec.'
                                ],
                                wide: [
                                    'januar',
                                    'februar',
                                    'marts',
                                    'april',
                                    'maj',
                                    'juni',
                                    'juli',
                                    'august',
                                    'september',
                                    'oktober',
                                    'november',
                                    'december'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'M',
                                    'T',
                                    'O',
                                    'T',
                                    'F',
                                    'L'
                                ],
                                short: [
                                    'sø',
                                    'ma',
                                    'ti',
                                    'on',
                                    'to',
                                    'fr',
                                    'lø'
                                ],
                                abbreviated: [
                                    'søn.',
                                    'man.',
                                    'tir.',
                                    'ons.',
                                    'tor.',
                                    'fre.',
                                    'lør.'
                                ],
                                wide: [
                                    'søndag',
                                    'mandag',
                                    'tirsdag',
                                    'onsdag',
                                    'torsdag',
                                    'fredag',
                                    'lørdag'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'midnat',
                                    noon: 'middag',
                                    morning: 'morgen',
                                    afternoon: 'eftermiddag',
                                    evening: 'aften',
                                    night: 'nat'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'midnat',
                                    noon: 'middag',
                                    morning: 'morgen',
                                    afternoon: 'eftermiddag',
                                    evening: 'aften',
                                    night: 'nat'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'midnat',
                                    noon: 'middag',
                                    morning: 'morgen',
                                    afternoon: 'eftermiddag',
                                    evening: 'aften',
                                    night: 'nat'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'midnat',
                                    noon: 'middag',
                                    morning: 'om morgenen',
                                    afternoon: 'om eftermiddagen',
                                    evening: 'om aftenen',
                                    night: 'om natten'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'midnat',
                                    noon: 'middag',
                                    morning: 'om morgenen',
                                    afternoon: 'om eftermiddagen',
                                    evening: 'om aftenen',
                                    night: 'om natten'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'midnat',
                                    noon: 'middag',
                                    morning: 'om morgenen',
                                    afternoon: 'om eftermiddagen',
                                    evening: 'om aftenen',
                                    night: 'om natten'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(\.)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(fKr|fvt|eKr|vt)/i,
                                abbreviated: /^(f\.Kr\.?|f\.v\.t\.?|e\.Kr\.?|v\.t\.)/i,
                                wide: /^(f.Kr.|før vesterlandsk tidsregning|e.Kr.|vesterlandsk tidsregning)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^f/i,
                                    /^(v|e)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]. kvt\./i,
                                wide: /^[1234]\.? kvartal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan.|feb.|mar.|apr.|maj|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
                                wide: /^(januar|februar|marts|april|maj|juni|juli|august|september|oktober|november|december)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^maj/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^au/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smtofl]/i,
                                short: /^(søn.|man.|tir.|ons.|tor.|fre.|lør.)/i,
                                abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i,
                                wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^m/i,
                                    /^t/i,
                                    /^o/i,
                                    /^t/i,
                                    /^f/i,
                                    /^l/i
                                ],
                                any: [
                                    /^s/i,
                                    /^m/i,
                                    /^ti/i,
                                    /^o/i,
                                    /^to/i,
                                    /^f/i,
                                    /^l/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,
                                any: /^([ap]\.?\s?m\.?|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /midnat/i,
                                    noon: /middag/i,
                                    morning: /morgen/i,
                                    afternoon: /eftermiddag/i,
                                    evening: /aften/i,
                                    night: /nat/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Gl = {
                    lessThanXSeconds: {
                        standalone: {
                            one: 'weniger als 1 Sekunde',
                            other: 'weniger als {{count}} Sekunden'
                        },
                        withPreposition: {
                            one: 'weniger als 1 Sekunde',
                            other: 'weniger als {{count}} Sekunden'
                        }
                    },
                    xSeconds: {
                        standalone: {
                            one: '1 Sekunde',
                            other: '{{count}} Sekunden'
                        },
                        withPreposition: {
                            one: '1 Sekunde',
                            other: '{{count}} Sekunden'
                        }
                    },
                    halfAMinute: {
                        standalone: 'halbe Minute',
                        withPreposition: 'halben Minute'
                    },
                    lessThanXMinutes: {
                        standalone: {
                            one: 'weniger als 1 Minute',
                            other: 'weniger als {{count}} Minuten'
                        },
                        withPreposition: {
                            one: 'weniger als 1 Minute',
                            other: 'weniger als {{count}} Minuten'
                        }
                    },
                    xMinutes: {
                        standalone: {
                            one: '1 Minute',
                            other: '{{count}} Minuten'
                        },
                        withPreposition: {
                            one: '1 Minute',
                            other: '{{count}} Minuten'
                        }
                    },
                    aboutXHours: {
                        standalone: {
                            one: 'etwa 1 Stunde',
                            other: 'etwa {{count}} Stunden'
                        },
                        withPreposition: {
                            one: 'etwa 1 Stunde',
                            other: 'etwa {{count}} Stunden'
                        }
                    },
                    xHours: {
                        standalone: {
                            one: '1 Stunde',
                            other: '{{count}} Stunden'
                        },
                        withPreposition: {
                            one: '1 Stunde',
                            other: '{{count}} Stunden'
                        }
                    },
                    xDays: {
                        standalone: {
                            one: '1 Tag',
                            other: '{{count}} Tage'
                        },
                        withPreposition: {
                            one: '1 Tag',
                            other: '{{count}} Tagen'
                        }
                    },
                    aboutXWeeks: {
                        standalone: {
                            one: 'etwa 1 Woche',
                            other: 'etwa {{count}} Wochen'
                        },
                        withPreposition: {
                            one: 'etwa 1 Woche',
                            other: 'etwa {{count}} Wochen'
                        }
                    },
                    xWeeks: {
                        standalone: {
                            one: '1 Woche',
                            other: '{{count}} Wochen'
                        },
                        withPreposition: {
                            one: '1 Woche',
                            other: '{{count}} Wochen'
                        }
                    },
                    aboutXMonths: {
                        standalone: {
                            one: 'etwa 1 Monat',
                            other: 'etwa {{count}} Monate'
                        },
                        withPreposition: {
                            one: 'etwa 1 Monat',
                            other: 'etwa {{count}} Monaten'
                        }
                    },
                    xMonths: {
                        standalone: {
                            one: '1 Monat',
                            other: '{{count}} Monate'
                        },
                        withPreposition: {
                            one: '1 Monat',
                            other: '{{count}} Monaten'
                        }
                    },
                    aboutXYears: {
                        standalone: {
                            one: 'etwa 1 Jahr',
                            other: 'etwa {{count}} Jahre'
                        },
                        withPreposition: {
                            one: 'etwa 1 Jahr',
                            other: 'etwa {{count}} Jahren'
                        }
                    },
                    xYears: {
                        standalone: {
                            one: '1 Jahr',
                            other: '{{count}} Jahre'
                        },
                        withPreposition: {
                            one: '1 Jahr',
                            other: '{{count}} Jahren'
                        }
                    },
                    overXYears: {
                        standalone: {
                            one: 'mehr als 1 Jahr',
                            other: 'mehr als {{count}} Jahre'
                        },
                        withPreposition: {
                            one: 'mehr als 1 Jahr',
                            other: 'mehr als {{count}} Jahren'
                        }
                    },
                    almostXYears: {
                        standalone: {
                            one: 'fast 1 Jahr',
                            other: 'fast {{count}} Jahre'
                        },
                        withPreposition: {
                            one: 'fast 1 Jahr',
                            other: 'fast {{count}} Jahren'
                        }
                    }
                },
                Vl = function (e, t, n) {
                    var r,
                        a = null != n && n.addSuffix ? Gl[e].withPreposition : Gl[e].standalone;
                    return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', String(t)),
                        null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'in ' + r : 'vor ' + r : r
                },
                Yl = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM y',
                            long: 'do MMMM y',
                            medium: 'do MMM y',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'um\' {{time}}',
                            long: '{{date}} \'um\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Bl = {
                    lastWeek: '\'letzten\' eeee \'um\' p',
                    yesterday: '\'gestern um\' p',
                    today: '\'heute um\' p',
                    tomorrow: '\'morgen um\' p',
                    nextWeek: 'eeee \'um\' p',
                    other: 'P'
                },
                $l = function (e, t, n, r) {
                    return Bl[e]
                },
                Ql = {
                    narrow: [
                        'J',
                        'F',
                        'M',
                        'A',
                        'M',
                        'J',
                        'J',
                        'A',
                        'S',
                        'O',
                        'N',
                        'D'
                    ],
                    abbreviated: [
                        'Jan',
                        'Feb',
                        'Mär',
                        'Apr',
                        'Mai',
                        'Jun',
                        'Jul',
                        'Aug',
                        'Sep',
                        'Okt',
                        'Nov',
                        'Dez'
                    ],
                    wide: [
                        'Januar',
                        'Februar',
                        'März',
                        'April',
                        'Mai',
                        'Juni',
                        'Juli',
                        'August',
                        'September',
                        'Oktober',
                        'November',
                        'Dezember'
                    ]
                },
                Kl = {
                    narrow: Ql.narrow,
                    abbreviated: [
                        'Jan.',
                        'Feb.',
                        'März',
                        'Apr.',
                        'Mai',
                        'Juni',
                        'Juli',
                        'Aug.',
                        'Sep.',
                        'Okt.',
                        'Nov.',
                        'Dez.'
                    ],
                    wide: Ql.wide
                },
                Jl = {
                    ordinalNumber: function (e) {
                        return Number(e) + '.'
                    },
                    era: ut({
                        values: {
                            narrow: [
                                'v.Chr.',
                                'n.Chr.'
                            ],
                            abbreviated: [
                                'v.Chr.',
                                'n.Chr.'
                            ],
                            wide: [
                                'vor Christus',
                                'nach Christus'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    quarter: ut({
                        values: {
                            narrow: [
                                '1',
                                '2',
                                '3',
                                '4'
                            ],
                            abbreviated: [
                                'Q1',
                                'Q2',
                                'Q3',
                                'Q4'
                            ],
                            wide: [
                                '1. Quartal',
                                '2. Quartal',
                                '3. Quartal',
                                '4. Quartal'
                            ]
                        },
                        defaultWidth: 'wide',
                        argumentCallback: function (e) {
                            return e - 1
                        }
                    }),
                    month: ut({
                        values: Ql,
                        formattingValues: Kl,
                        defaultWidth: 'wide'
                    }),
                    day: ut({
                        values: {
                            narrow: [
                                'S',
                                'M',
                                'D',
                                'M',
                                'D',
                                'F',
                                'S'
                            ],
                            short: [
                                'So',
                                'Mo',
                                'Di',
                                'Mi',
                                'Do',
                                'Fr',
                                'Sa'
                            ],
                            abbreviated: [
                                'So.',
                                'Mo.',
                                'Di.',
                                'Mi.',
                                'Do.',
                                'Fr.',
                                'Sa.'
                            ],
                            wide: [
                                'Sonntag',
                                'Montag',
                                'Dienstag',
                                'Mittwoch',
                                'Donnerstag',
                                'Freitag',
                                'Samstag'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    dayPeriod: ut({
                        values: {
                            narrow: {
                                am: 'vm.',
                                pm: 'nm.',
                                midnight: 'Mitternacht',
                                noon: 'Mittag',
                                morning: 'Morgen',
                                afternoon: 'Nachm.',
                                evening: 'Abend',
                                night: 'Nacht'
                            },
                            abbreviated: {
                                am: 'vorm.',
                                pm: 'nachm.',
                                midnight: 'Mitternacht',
                                noon: 'Mittag',
                                morning: 'Morgen',
                                afternoon: 'Nachmittag',
                                evening: 'Abend',
                                night: 'Nacht'
                            },
                            wide: {
                                am: 'vormittags',
                                pm: 'nachmittags',
                                midnight: 'Mitternacht',
                                noon: 'Mittag',
                                morning: 'Morgen',
                                afternoon: 'Nachmittag',
                                evening: 'Abend',
                                night: 'Nacht'
                            }
                        },
                        defaultWidth: 'wide',
                        formattingValues: {
                            narrow: {
                                am: 'vm.',
                                pm: 'nm.',
                                midnight: 'Mitternacht',
                                noon: 'Mittag',
                                morning: 'morgens',
                                afternoon: 'nachm.',
                                evening: 'abends',
                                night: 'nachts'
                            },
                            abbreviated: {
                                am: 'vorm.',
                                pm: 'nachm.',
                                midnight: 'Mitternacht',
                                noon: 'Mittag',
                                morning: 'morgens',
                                afternoon: 'nachmittags',
                                evening: 'abends',
                                night: 'nachts'
                            },
                            wide: {
                                am: 'vormittags',
                                pm: 'nachmittags',
                                midnight: 'Mitternacht',
                                noon: 'Mittag',
                                morning: 'morgens',
                                afternoon: 'nachmittags',
                                evening: 'abends',
                                night: 'nachts'
                            }
                        },
                        defaultFormattingWidth: 'wide'
                    })
                },
                Zl = {
                    ordinalNumber: ft({
                        matchPattern: /^(\d+)(\.)?/i,
                        parsePattern: /\d+/i,
                        valueCallback: function (e) {
                            return parseInt(e)
                        }
                    }),
                    era: dt({
                        matchPatterns: {
                            narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
                            abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
                            wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            any: [
                                /^v/i,
                                /^n/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    quarter: dt({
                        matchPatterns: {
                            narrow: /^[1234]/i,
                            abbreviated: /^q[1234]/i,
                            wide: /^[1234](\.)? Quartal/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            any: [
                                /1/i,
                                /2/i,
                                /3/i,
                                /4/i
                            ]
                        },
                        defaultParseWidth: 'any',
                        valueCallback: function (e) {
                            return e + 1
                        }
                    }),
                    month: dt({
                        matchPatterns: {
                            narrow: /^[jfmasond]/i,
                            abbreviated: /^(j[aä]n|feb|mär[z]?|apr|mai|jun[i]?|jul[i]?|aug|sep|okt|nov|dez)\.?/i,
                            wide: /^(januar|februar|märz|april|mai|juni|juli|august|september|oktober|november|dezember)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            narrow: [
                                /^j/i,
                                /^f/i,
                                /^m/i,
                                /^a/i,
                                /^m/i,
                                /^j/i,
                                /^j/i,
                                /^a/i,
                                /^s/i,
                                /^o/i,
                                /^n/i,
                                /^d/i
                            ],
                            any: [
                                /^j[aä]/i,
                                /^f/i,
                                /^mär/i,
                                /^ap/i,
                                /^mai/i,
                                /^jun/i,
                                /^jul/i,
                                /^au/i,
                                /^s/i,
                                /^o/i,
                                /^n/i,
                                /^d/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    day: dt({
                        matchPatterns: {
                            narrow: /^[smdmf]/i,
                            short: /^(so|mo|di|mi|do|fr|sa)/i,
                            abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\.?/i,
                            wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            any: [
                                /^so/i,
                                /^mo/i,
                                /^di/i,
                                /^mi/i,
                                /^do/i,
                                /^f/i,
                                /^sa/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    dayPeriod: dt({
                        matchPatterns: {
                            narrow: /^(vm\.?|nm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,
                            abbreviated: /^(vorm\.?|nachm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,
                            wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            any: {
                                am: /^v/i,
                                pm: /^n/i,
                                midnight: /^Mitte/i,
                                noon: /^Mitta/i,
                                morning: /morgens/i,
                                afternoon: /nachmittags/i,
                                evening: /abends/i,
                                night: /nachts/i
                            }
                        },
                        defaultParseWidth: 'any'
                    })
                },
                ed = {
                    code: 'de',
                    formatDistance: Vl,
                    formatLong: Yl,
                    formatRelative: $l,
                    localize: Jl,
                    match: Zl,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                td = {
                    narrow: [
                        'J',
                        'F',
                        'M',
                        'A',
                        'M',
                        'J',
                        'J',
                        'A',
                        'S',
                        'O',
                        'N',
                        'D'
                    ],
                    abbreviated: [
                        'Jän',
                        'Feb',
                        'Mär',
                        'Apr',
                        'Mai',
                        'Jun',
                        'Jul',
                        'Aug',
                        'Sep',
                        'Okt',
                        'Nov',
                        'Dez'
                    ],
                    wide: [
                        'Jänner',
                        'Februar',
                        'März',
                        'April',
                        'Mai',
                        'Juni',
                        'Juli',
                        'August',
                        'September',
                        'Oktober',
                        'November',
                        'Dezember'
                    ]
                },
                nd = {
                    narrow: td.narrow,
                    abbreviated: [
                        'Jän.',
                        'Feb.',
                        'März',
                        'Apr.',
                        'Mai',
                        'Juni',
                        'Juli',
                        'Aug.',
                        'Sep.',
                        'Okt.',
                        'Nov.',
                        'Dez.'
                    ],
                    wide: td.wide
                },
                rd = {
                    code: 'de-AT',
                    formatDistance: Vl,
                    formatLong: Yl,
                    formatRelative: $l,
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'v.Chr.',
                                    'n.Chr.'
                                ],
                                abbreviated: [
                                    'v.Chr.',
                                    'n.Chr.'
                                ],
                                wide: [
                                    'vor Christus',
                                    'nach Christus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1. Quartal',
                                    '2. Quartal',
                                    '3. Quartal',
                                    '4. Quartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: td,
                            formattingValues: nd,
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'M',
                                    'D',
                                    'M',
                                    'D',
                                    'F',
                                    'S'
                                ],
                                short: [
                                    'So',
                                    'Mo',
                                    'Di',
                                    'Mi',
                                    'Do',
                                    'Fr',
                                    'Sa'
                                ],
                                abbreviated: [
                                    'So.',
                                    'Mo.',
                                    'Di.',
                                    'Mi.',
                                    'Do.',
                                    'Fr.',
                                    'Sa.'
                                ],
                                wide: [
                                    'Sonntag',
                                    'Montag',
                                    'Dienstag',
                                    'Mittwoch',
                                    'Donnerstag',
                                    'Freitag',
                                    'Samstag'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'vm.',
                                    pm: 'nm.',
                                    midnight: 'Mitternacht',
                                    noon: 'Mittag',
                                    morning: 'Morgen',
                                    afternoon: 'Nachm.',
                                    evening: 'Abend',
                                    night: 'Nacht'
                                },
                                abbreviated: {
                                    am: 'vorm.',
                                    pm: 'nachm.',
                                    midnight: 'Mitternacht',
                                    noon: 'Mittag',
                                    morning: 'Morgen',
                                    afternoon: 'Nachmittag',
                                    evening: 'Abend',
                                    night: 'Nacht'
                                },
                                wide: {
                                    am: 'vormittags',
                                    pm: 'nachmittags',
                                    midnight: 'Mitternacht',
                                    noon: 'Mittag',
                                    morning: 'Morgen',
                                    afternoon: 'Nachmittag',
                                    evening: 'Abend',
                                    night: 'Nacht'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'vm.',
                                    pm: 'nm.',
                                    midnight: 'Mitternacht',
                                    noon: 'Mittag',
                                    morning: 'morgens',
                                    afternoon: 'nachm.',
                                    evening: 'abends',
                                    night: 'nachts'
                                },
                                abbreviated: {
                                    am: 'vorm.',
                                    pm: 'nachm.',
                                    midnight: 'Mitternacht',
                                    noon: 'Mittag',
                                    morning: 'morgens',
                                    afternoon: 'nachmittags',
                                    evening: 'abends',
                                    night: 'nachts'
                                },
                                wide: {
                                    am: 'vormittags',
                                    pm: 'nachmittags',
                                    midnight: 'Mitternacht',
                                    noon: 'Mittag',
                                    morning: 'morgens',
                                    afternoon: 'nachmittags',
                                    evening: 'abends',
                                    night: 'nachts'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: Zl,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                ad = {
                    lessThanXSeconds: {
                        one: 'λιγότερο από ένα δευτερόλεπτο',
                        other: 'λιγότερο από {{count}} δευτερόλεπτα'
                    },
                    xSeconds: {
                        one: '1 δευτερόλεπτο',
                        other: '{{count}} δευτερόλεπτα'
                    },
                    halfAMinute: 'μισό λεπτό',
                    lessThanXMinutes: {
                        one: 'λιγότερο από ένα λεπτό',
                        other: 'λιγότερο από {{count}} λεπτά'
                    },
                    xMinutes: {
                        one: '1 λεπτό',
                        other: '{{count}} λεπτά'
                    },
                    aboutXHours: {
                        one: 'περίπου 1 ώρα',
                        other: 'περίπου {{count}} ώρες'
                    },
                    xHours: {
                        one: '1 ώρα',
                        other: '{{count}} ώρες'
                    },
                    xDays: {
                        one: '1 ημέρα',
                        other: '{{count}} ημέρες'
                    },
                    aboutXWeeks: {
                        one: 'περίπου 1 εβδομάδα',
                        other: 'περίπου {{count}} εβδομάδες'
                    },
                    xWeeks: {
                        one: '1 εβδομάδα',
                        other: '{{count}} εβδομάδες'
                    },
                    aboutXMonths: {
                        one: 'περίπου 1 μήνας',
                        other: 'περίπου {{count}} μήνες'
                    },
                    xMonths: {
                        one: '1 μήνας',
                        other: '{{count}} μήνες'
                    },
                    aboutXYears: {
                        one: 'περίπου 1 χρόνο',
                        other: 'περίπου {{count}} χρόνια'
                    },
                    xYears: {
                        one: '1 χρόνο',
                        other: '{{count}} χρόνια'
                    },
                    overXYears: {
                        one: 'πάνω από 1 χρόνο',
                        other: 'πάνω από {{count}} χρόνια'
                    },
                    almostXYears: {
                        one: 'περίπου 1 χρόνο',
                        other: 'περίπου {{count}} χρόνια'
                    }
                },
                id = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'd/M/yy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} - {{time}}',
                            long: '{{date}} - {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                od = {
                    lastWeek: function (e) {
                        return 6 === e.getUTCDay() ? '\'το προηγούμενο\' eeee \'στις\' p' : '\'την προηγούμενη\' eeee \'στις\' p'
                    },
                    yesterday: '\'χθες στις\' p',
                    today: '\'σήμερα στις\' p',
                    tomorrow: '\'αύριο στις\' p',
                    nextWeek: 'eeee \'στις\' p',
                    other: 'P'
                },
                sd = {
                    code: 'el',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof ad[e] ? ad[e] : 1 === t ? ad[e].one : ad[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'σε ' + r : r + ' πριν' : r
                    },
                    formatLong: id,
                    formatRelative: function (e, t, n, r) {
                        var a = od[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = String((t || {
                            }).unit);
                            return e + ('year' === n || 'month' === n ? 'ος' : 'week' === n || 'dayOfYear' === n || 'day' === n || 'hour' === n || 'date' === n ? 'η' : 'ο')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'πΧ',
                                    'μΧ'
                                ],
                                abbreviated: [
                                    'π.Χ.',
                                    'μ.Χ.'
                                ],
                                wide: [
                                    'προ Χριστού',
                                    'μετά Χριστόν'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Τ1',
                                    'Τ2',
                                    'Τ3',
                                    'Τ4'
                                ],
                                wide: [
                                    '1ο τρίμηνο',
                                    '2ο τρίμηνο',
                                    '3ο τρίμηνο',
                                    '4ο τρίμηνο'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'Ι',
                                    'Φ',
                                    'Μ',
                                    'Α',
                                    'Μ',
                                    'Ι',
                                    'Ι',
                                    'Α',
                                    'Σ',
                                    'Ο',
                                    'Ν',
                                    'Δ'
                                ],
                                abbreviated: [
                                    'Ιαν',
                                    'Φεβ',
                                    'Μάρ',
                                    'Απρ',
                                    'Μάι',
                                    'Ιούν',
                                    'Ιούλ',
                                    'Αύγ',
                                    'Σεπ',
                                    'Οκτ',
                                    'Νοέ',
                                    'Δεκ'
                                ],
                                wide: [
                                    'Ιανουάριος',
                                    'Φεβρουάριος',
                                    'Μάρτιος',
                                    'Απρίλιος',
                                    'Μάιος',
                                    'Ιούνιος',
                                    'Ιούλιος',
                                    'Αύγουστος',
                                    'Σεπτέμβριος',
                                    'Οκτώβριος',
                                    'Νοέμβριος',
                                    'Δεκέμβριος'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'Ι',
                                    'Φ',
                                    'Μ',
                                    'Α',
                                    'Μ',
                                    'Ι',
                                    'Ι',
                                    'Α',
                                    'Σ',
                                    'Ο',
                                    'Ν',
                                    'Δ'
                                ],
                                abbreviated: [
                                    'Ιαν',
                                    'Φεβ',
                                    'Μαρ',
                                    'Απρ',
                                    'Μαΐ',
                                    'Ιουν',
                                    'Ιουλ',
                                    'Αυγ',
                                    'Σεπ',
                                    'Οκτ',
                                    'Νοε',
                                    'Δεκ'
                                ],
                                wide: [
                                    'Ιανουαρίου',
                                    'Φεβρουαρίου',
                                    'Μαρτίου',
                                    'Απριλίου',
                                    'Μαΐου',
                                    'Ιουνίου',
                                    'Ιουλίου',
                                    'Αυγούστου',
                                    'Σεπτεμβρίου',
                                    'Οκτωβρίου',
                                    'Νοεμβρίου',
                                    'Δεκεμβρίου'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Κ',
                                    'Δ',
                                    'T',
                                    'Τ',
                                    'Π',
                                    'Π',
                                    'Σ'
                                ],
                                short: [
                                    'Κυ',
                                    'Δε',
                                    'Τρ',
                                    'Τε',
                                    'Πέ',
                                    'Πα',
                                    'Σά'
                                ],
                                abbreviated: [
                                    'Κυρ',
                                    'Δευ',
                                    'Τρί',
                                    'Τετ',
                                    'Πέμ',
                                    'Παρ',
                                    'Σάβ'
                                ],
                                wide: [
                                    'Κυριακή',
                                    'Δευτέρα',
                                    'Τρίτη',
                                    'Τετάρτη',
                                    'Πέμπτη',
                                    'Παρασκευή',
                                    'Σάββατο'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'πμ',
                                    pm: 'μμ',
                                    midnight: 'μεσάνυχτα',
                                    noon: 'μεσημέρι',
                                    morning: 'πρωί',
                                    afternoon: 'απόγευμα',
                                    evening: 'βράδυ',
                                    night: 'νύχτα'
                                },
                                abbreviated: {
                                    am: 'π.μ.',
                                    pm: 'μ.μ.',
                                    midnight: 'μεσάνυχτα',
                                    noon: 'μεσημέρι',
                                    morning: 'πρωί',
                                    afternoon: 'απόγευμα',
                                    evening: 'βράδυ',
                                    night: 'νύχτα'
                                },
                                wide: {
                                    am: 'π.μ.',
                                    pm: 'μ.μ.',
                                    midnight: 'μεσάνυχτα',
                                    noon: 'μεσημέρι',
                                    morning: 'πρωί',
                                    afternoon: 'απόγευμα',
                                    evening: 'βράδυ',
                                    night: 'νύχτα'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(ος|η|ο)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(πΧ|μΧ)/i,
                                abbreviated: /^(π\.?\s?χ\.?|π\.?\s?κ\.?\s?χ\.?|μ\.?\s?χ\.?|κ\.?\s?χ\.?)/i,
                                wide: /^(προ Χριστο(ύ|υ)|πριν απ(ό|ο) την Κοιν(ή|η) Χρονολογ(ί|ι)α|μετ(ά|α) Χριστ(ό|ο)ν|Κοιν(ή|η) Χρονολογ(ί|ι)α)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^π/i,
                                    /^(μ|κ)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^τ[1234]/i,
                                wide: /^[1234]ο? τρ(ί|ι)μηνο/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[ιφμαμιιασονδ]/i,
                                abbreviated: /^(ιαν|φεβ|μ[άα]ρ|απρ|μ[άα][ιΐ]|ιο[ύυ]ν|ιο[ύυ]λ|α[ύυ]γ|σεπ|οκτ|νο[έε]|δεκ)/i,
                                wide: /^(μ[άα][ιΐ]|α[ύυ]γο[υύ]στ)(ος|ου)|(ιανου[άα]ρ|φεβρου[άα]ρ|μ[άα]ρτ|απρ[ίι]λ|ιο[ύυ]ν|ιο[ύυ]λ|σεπτ[έε]μβρ|οκτ[ώω]βρ|νο[έε]μβρ|δεκ[έε]μβρ)(ιος|ίου)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ι/i,
                                    /^φ/i,
                                    /^μ/i,
                                    /^α/i,
                                    /^μ/i,
                                    /^ι/i,
                                    /^ι/i,
                                    /^α/i,
                                    /^σ/i,
                                    /^ο/i,
                                    /^ν/i,
                                    /^δ/i
                                ],
                                any: [
                                    /^ια/i,
                                    /^φ/i,
                                    /^μ[άα]ρ/i,
                                    /^απ/i,
                                    /^μ[άα][ιΐ]/i,
                                    /^ιο[ύυ]ν/i,
                                    /^ιο[ύυ]λ/i,
                                    /^α[ύυ]/i,
                                    /^σ/i,
                                    /^ο/i,
                                    /^ν/i,
                                    /^δ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[κδτπσ]/i,
                                short: /^(κυ|δε|τρ|τε|π[εέ]|π[αά]|σ[αά])/i,
                                abbreviated: /^(κυρ|δευ|τρι|τετ|πεμ|παρ|σαβ)/i,
                                wide: /^(κυριακ(ή|η)|δευτ(έ|ε)ρα|τρ(ί|ι)τη|τετ(ά|α)ρτη|π(έ|ε)μπτη|παρασκευ(ή|η)|σ(ά|α)ββατο)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^κ/i,
                                    /^δ/i,
                                    /^τ/i,
                                    /^τ/i,
                                    /^π/i,
                                    /^π/i,
                                    /^σ/i
                                ],
                                any: [
                                    /^κ/i,
                                    /^δ/i,
                                    /^τρ/i,
                                    /^τε/i,
                                    /^π[εέ]/i,
                                    /^π[αά]/i,
                                    /^σ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(πμ|μμ|μεσ(ά|α)νυχτα|μεσημ(έ|ε)ρι|πρω(ί|ι)|απ(ό|ο)γευμα|βρ(ά|α)δυ|ν(ύ|υ)χτα)/i,
                                any: /^([πμ]\.?\s?μ\.?|μεσ(ά|α)νυχτα|μεσημ(έ|ε)ρι|πρω(ί|ι)|απ(ό|ο)γευμα|βρ(ά|α)δυ|ν(ύ|υ)χτα)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^πμ|π\.\s?μ\./i,
                                    pm: /^μμ|μ\.\s?μ\./i,
                                    midnight: /^μεσάν/i,
                                    noon: /^μεσημ(έ|ε)/i,
                                    morning: /πρω(ί|ι)/i,
                                    afternoon: /απ(ό|ο)γευμα/i,
                                    evening: /βρ(ά|α)δυ/i,
                                    night: /ν(ύ|υ)χτα/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                ud = sd,
                ld = {
                    code: 'en-AU',
                    formatDistance: rt,
                    formatLong: {
                        date: at({
                            formats: {
                                full: 'EEEE, d MMMM yyyy',
                                long: 'd MMMM yyyy',
                                medium: 'd MMM yyyy',
                                short: 'dd/MM/yyyy'
                            },
                            defaultWidth: 'full'
                        }),
                        time: at({
                            formats: {
                                full: 'h:mm:ss a zzzz',
                                long: 'h:mm:ss a z',
                                medium: 'h:mm:ss a',
                                short: 'h:mm a'
                            },
                            defaultWidth: 'full'
                        }),
                        dateTime: at({
                            formats: {
                                full: '{{date}} \'at\' {{time}}',
                                long: '{{date}} \'at\' {{time}}',
                                medium: '{{date}}, {{time}}',
                                short: '{{date}}, {{time}}'
                            },
                            defaultWidth: 'full'
                        })
                    },
                    formatRelative: st,
                    localize: lt,
                    match: ht,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                dd = {
                    lessThanXSeconds: {
                        one: 'less than a second',
                        other: 'less than {{count}} seconds'
                    },
                    xSeconds: {
                        one: 'a second',
                        other: '{{count}} seconds'
                    },
                    halfAMinute: 'half a minute',
                    lessThanXMinutes: {
                        one: 'less than a minute',
                        other: 'less than {{count}} minutes'
                    },
                    xMinutes: {
                        one: 'a minute',
                        other: '{{count}} minutes'
                    },
                    aboutXHours: {
                        one: 'about an hour',
                        other: 'about {{count}} hours'
                    },
                    xHours: {
                        one: 'an hour',
                        other: '{{count}} hours'
                    },
                    xDays: {
                        one: 'a day',
                        other: '{{count}} days'
                    },
                    aboutXWeeks: {
                        one: 'about a week',
                        other: 'about {{count}} weeks'
                    },
                    xWeeks: {
                        one: 'a week',
                        other: '{{count}} weeks'
                    },
                    aboutXMonths: {
                        one: 'about a month',
                        other: 'about {{count}} months'
                    },
                    xMonths: {
                        one: 'a month',
                        other: '{{count}} months'
                    },
                    aboutXYears: {
                        one: 'about a year',
                        other: 'about {{count}} years'
                    },
                    xYears: {
                        one: 'a year',
                        other: '{{count}} years'
                    },
                    overXYears: {
                        one: 'over a year',
                        other: 'over {{count}} years'
                    },
                    almostXYears: {
                        one: 'almost a year',
                        other: 'almost {{count}} years'
                    }
                },
                cd = {
                    code: 'en-CA',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = dd[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t.toString()),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'in ' + r : r + ' ago' : r
                    },
                    formatLong: {
                        date: at({
                            formats: {
                                full: 'EEEE, MMMM do, yyyy',
                                long: 'MMMM do, yyyy',
                                medium: 'MMM d, yyyy',
                                short: 'yyyy-MM-dd'
                            },
                            defaultWidth: 'full'
                        }),
                        time: at({
                            formats: {
                                full: 'h:mm:ss a zzzz',
                                long: 'h:mm:ss a z',
                                medium: 'h:mm:ss a',
                                short: 'h:mm a'
                            },
                            defaultWidth: 'full'
                        }),
                        dateTime: at({
                            formats: {
                                full: '{{date}} \'at\' {{time}}',
                                long: '{{date}} \'at\' {{time}}',
                                medium: '{{date}}, {{time}}',
                                short: '{{date}}, {{time}}'
                            },
                            defaultWidth: 'full'
                        })
                    },
                    formatRelative: st,
                    localize: lt,
                    match: ht,
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                md = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM yyyy',
                            long: 'd MMMM yyyy',
                            medium: 'd MMM yyyy',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'at\' {{time}}',
                            long: '{{date}} \'at\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                fd = {
                    code: 'en-GB',
                    formatDistance: rt,
                    formatLong: md,
                    formatRelative: st,
                    localize: lt,
                    match: ht,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                hd = {
                    code: 'en-IE',
                    formatDistance: rt,
                    formatLong: md,
                    formatRelative: st,
                    localize: lt,
                    match: ht,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                pd = {
                    code: 'en-IN',
                    formatDistance: rt,
                    formatLong: {
                        date: at({
                            formats: {
                                full: 'EEEE, d MMMM yyyy',
                                long: 'd MMMM, yyyy',
                                medium: 'd MMM, yyyy',
                                short: 'dd/MM/yyyy'
                            },
                            defaultWidth: 'full'
                        }),
                        time: at({
                            formats: {
                                full: 'h:mm:ss a zzzz',
                                long: 'h:mm:ss a z',
                                medium: 'h:mm:ss a',
                                short: 'h:mm a'
                            },
                            defaultWidth: 'full'
                        }),
                        dateTime: at({
                            formats: {
                                full: '{{date}} \'at\' {{time}}',
                                long: '{{date}} \'at\' {{time}}',
                                medium: '{{date}}, {{time}}',
                                short: '{{date}}, {{time}}'
                            },
                            defaultWidth: 'full'
                        })
                    },
                    formatRelative: st,
                    localize: lt,
                    match: ht,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                gd = {
                    code: 'en-NZ',
                    formatDistance: rt,
                    formatLong: {
                        date: at({
                            formats: {
                                full: 'EEEE, d MMMM yyyy',
                                long: 'd MMMM yyyy',
                                medium: 'd MMM yyyy',
                                short: 'dd/MM/yyyy'
                            },
                            defaultWidth: 'full'
                        }),
                        time: at({
                            formats: {
                                full: 'h:mm:ss a zzzz',
                                long: 'h:mm:ss a z',
                                medium: 'h:mm:ss a',
                                short: 'h:mm a'
                            },
                            defaultWidth: 'full'
                        }),
                        dateTime: at({
                            formats: {
                                full: '{{date}} \'at\' {{time}}',
                                long: '{{date}} \'at\' {{time}}',
                                medium: '{{date}}, {{time}}',
                                short: '{{date}}, {{time}}'
                            },
                            defaultWidth: 'full'
                        })
                    },
                    formatRelative: st,
                    localize: lt,
                    match: ht,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                vd = {
                    code: 'en-ZA',
                    formatDistance: rt,
                    formatLong: {
                        date: at({
                            formats: {
                                full: 'EEEE, d MMMM yyyy',
                                long: 'd MMMM yyyy',
                                medium: 'd MMM yyyy',
                                short: 'dd/MM/yyyy'
                            },
                            defaultWidth: 'full'
                        }),
                        time: at({
                            formats: {
                                full: 'h:mm:ss a zzzz',
                                long: 'h:mm:ss a z',
                                medium: 'h:mm:ss a',
                                short: 'h:mm a'
                            },
                            defaultWidth: 'full'
                        }),
                        dateTime: at({
                            formats: {
                                full: '{{date}} \'at\' {{time}}',
                                long: '{{date}} \'at\' {{time}}',
                                medium: '{{date}}, {{time}}',
                                short: '{{date}}, {{time}}'
                            },
                            defaultWidth: 'full'
                        })
                    },
                    formatRelative: st,
                    localize: lt,
                    match: ht,
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                yd = {
                    lessThanXSeconds: {
                        one: 'malpli ol sekundo',
                        other: 'malpli ol {{count}} sekundoj'
                    },
                    xSeconds: {
                        one: '1 sekundo',
                        other: '{{count}} sekundoj'
                    },
                    halfAMinute: 'duonminuto',
                    lessThanXMinutes: {
                        one: 'malpli ol minuto',
                        other: 'malpli ol {{count}} minutoj'
                    },
                    xMinutes: {
                        one: '1 minuto',
                        other: '{{count}} minutoj'
                    },
                    aboutXHours: {
                        one: 'proksimume 1 horo',
                        other: 'proksimume {{count}} horoj'
                    },
                    xHours: {
                        one: '1 horo',
                        other: '{{count}} horoj'
                    },
                    xDays: {
                        one: '1 tago',
                        other: '{{count}} tagoj'
                    },
                    aboutXMonths: {
                        one: 'proksimume 1 monato',
                        other: 'proksimume {{count}} monatoj'
                    },
                    xWeeks: {
                        one: '1 semajno',
                        other: '{{count}} semajnoj'
                    },
                    aboutXWeeks: {
                        one: 'proksimume 1 semajno',
                        other: 'proksimume {{count}} semajnoj'
                    },
                    xMonths: {
                        one: '1 monato',
                        other: '{{count}} monatoj'
                    },
                    aboutXYears: {
                        one: 'proksimume 1 jaro',
                        other: 'proksimume {{count}} jaroj'
                    },
                    xYears: {
                        one: '1 jaro',
                        other: '{{count}} jaroj'
                    },
                    overXYears: {
                        one: 'pli ol 1 jaro',
                        other: 'pli ol {{count}} jaroj'
                    },
                    almostXYears: {
                        one: 'preskaŭ 1 jaro',
                        other: 'preskaŭ {{count}} jaroj'
                    }
                },
                wd = {
                    date: at({
                        formats: {
                            full: 'EEEE, do \'de\' MMMM y',
                            long: 'y-MMMM-dd',
                            medium: 'y-MMM-dd',
                            short: 'yyyy-MM-dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'Ho \'horo kaj\' m:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            any: '{{date}} {{time}}'
                        },
                        defaultWidth: 'any'
                    })
                },
                bd = {
                    lastWeek: '\'pasinta\' eeee \'je\' p',
                    yesterday: '\'hieraŭ je\' p',
                    today: '\'hodiaŭ je\' p',
                    tomorrow: '\'morgaŭ je\' p',
                    nextWeek: 'eeee \'je\' p',
                    other: 'P'
                },
                kd = {
                    code: 'eo',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = yd[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', String(t)),
                            null != n && n.addSuffix ? null != n && n.comparison && n.comparison > 0 ? 'post ' + r : 'antaŭ ' + r : r
                    },
                    formatLong: wd,
                    formatRelative: function (e, t, n, r) {
                        return bd[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + '-a'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'aK',
                                    'pK'
                                ],
                                abbreviated: [
                                    'a.K.E.',
                                    'p.K.E.'
                                ],
                                wide: [
                                    'antaŭ Komuna Erao',
                                    'Komuna Erao'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'K1',
                                    'K2',
                                    'K3',
                                    'K4'
                                ],
                                wide: [
                                    '1-a kvaronjaro',
                                    '2-a kvaronjaro',
                                    '3-a kvaronjaro',
                                    '4-a kvaronjaro'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'maj',
                                    'jun',
                                    'jul',
                                    'aŭg',
                                    'sep',
                                    'okt',
                                    'nov',
                                    'dec'
                                ],
                                wide: [
                                    'januaro',
                                    'februaro',
                                    'marto',
                                    'aprilo',
                                    'majo',
                                    'junio',
                                    'julio',
                                    'aŭgusto',
                                    'septembro',
                                    'oktobro',
                                    'novembro',
                                    'decembro'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'D',
                                    'L',
                                    'M',
                                    'M',
                                    'Ĵ',
                                    'V',
                                    'S'
                                ],
                                short: [
                                    'di',
                                    'lu',
                                    'ma',
                                    'me',
                                    'ĵa',
                                    've',
                                    'sa'
                                ],
                                abbreviated: [
                                    'dim',
                                    'lun',
                                    'mar',
                                    'mer',
                                    'ĵaŭ',
                                    'ven',
                                    'sab'
                                ],
                                wide: [
                                    'dimanĉo',
                                    'lundo',
                                    'mardo',
                                    'merkredo',
                                    'ĵaŭdo',
                                    'vendredo',
                                    'sabato'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'noktomezo',
                                    noon: 'tagmezo',
                                    morning: 'matene',
                                    afternoon: 'posttagmeze',
                                    evening: 'vespere',
                                    night: 'nokte'
                                },
                                abbreviated: {
                                    am: 'a.t.m.',
                                    pm: 'p.t.m.',
                                    midnight: 'noktomezo',
                                    noon: 'tagmezo',
                                    morning: 'matene',
                                    afternoon: 'posttagmeze',
                                    evening: 'vespere',
                                    night: 'nokte'
                                },
                                wide: {
                                    am: 'antaŭtagmeze',
                                    pm: 'posttagmeze',
                                    midnight: 'noktomezo',
                                    noon: 'tagmezo',
                                    morning: 'matene',
                                    afternoon: 'posttagmeze',
                                    evening: 'vespere',
                                    night: 'nokte'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-?a)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^([ap]k)/i,
                                abbreviated: /^([ap]\.?\s?k\.?\s?e\.?)/i,
                                wide: /^((antaǔ |post )?komuna erao)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^a/i,
                                    /^[kp]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^k[1234]/i,
                                wide: /^[1234](-?a)? kvaronjaro/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|a(ŭ|ux|uh|u)g|sep|okt|nov|dec)/i,
                                wide: /^(januaro|februaro|marto|aprilo|majo|junio|julio|a(ŭ|ux|uh|u)gusto|septembro|oktobro|novembro|decembro)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^maj/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^a(u|ŭ)/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[dlmĵjvs]/i,
                                short: /^(di|lu|ma|me|(ĵ|jx|jh|j)a|ve|sa)/i,
                                abbreviated: /^(dim|lun|mar|mer|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)|ven|sab)/i,
                                wide: /^(diman(ĉ|cx|ch|c)o|lundo|mardo|merkredo|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)do|vendredo|sabato)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^l/i,
                                    /^m/i,
                                    /^m/i,
                                    /^(j|ĵ)/i,
                                    /^v/i,
                                    /^s/i
                                ],
                                any: [
                                    /^d/i,
                                    /^l/i,
                                    /^ma/i,
                                    /^me/i,
                                    /^(j|ĵ)/i,
                                    /^v/i,
                                    /^s/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^([ap]|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,
                                abbreviated: /^([ap][.\s]?t[.\s]?m[.\s]?|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,
                                wide: /^(anta(ŭ|ux)tagmez|posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^noktom/i,
                                    noon: /^t/i,
                                    morning: /^m/i,
                                    afternoon: /^posttagmeze/i,
                                    evening: /^v/i,
                                    night: /^n/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Md = {
                    lessThanXSeconds: {
                        one: 'menos de un segundo',
                        other: 'menos de {{count}} segundos'
                    },
                    xSeconds: {
                        one: '1 segundo',
                        other: '{{count}} segundos'
                    },
                    halfAMinute: 'medio minuto',
                    lessThanXMinutes: {
                        one: 'menos de un minuto',
                        other: 'menos de {{count}} minutos'
                    },
                    xMinutes: {
                        one: '1 minuto',
                        other: '{{count}} minutos'
                    },
                    aboutXHours: {
                        one: 'alrededor de 1 hora',
                        other: 'alrededor de {{count}} horas'
                    },
                    xHours: {
                        one: '1 hora',
                        other: '{{count}} horas'
                    },
                    xDays: {
                        one: '1 día',
                        other: '{{count}} días'
                    },
                    aboutXWeeks: {
                        one: 'alrededor de 1 semana',
                        other: 'alrededor de {{count}} semanas'
                    },
                    xWeeks: {
                        one: '1 semana',
                        other: '{{count}} semanas'
                    },
                    aboutXMonths: {
                        one: 'alrededor de 1 mes',
                        other: 'alrededor de {{count}} meses'
                    },
                    xMonths: {
                        one: '1 mes',
                        other: '{{count}} meses'
                    },
                    aboutXYears: {
                        one: 'alrededor de 1 año',
                        other: 'alrededor de {{count}} años'
                    },
                    xYears: {
                        one: '1 año',
                        other: '{{count}} años'
                    },
                    overXYears: {
                        one: 'más de 1 año',
                        other: 'más de {{count}} años'
                    },
                    almostXYears: {
                        one: 'casi 1 año',
                        other: 'casi {{count}} años'
                    }
                },
                Ed = {
                    date: at({
                        formats: {
                            full: 'EEEE, d \'de\' MMMM \'de\' y',
                            long: 'd \'de\' MMMM \'de\' y',
                            medium: 'd MMM y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'a las\' {{time}}',
                            long: '{{date}} \'a las\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Pd = {
                    lastWeek: '\'el\' eeee \'pasado a la\' p',
                    yesterday: '\'ayer a la\' p',
                    today: '\'hoy a la\' p',
                    tomorrow: '\'mañana a la\' p',
                    nextWeek: 'eeee \'a la\' p',
                    other: 'P'
                },
                xd = {
                    lastWeek: '\'el\' eeee \'pasado a las\' p',
                    yesterday: '\'ayer a las\' p',
                    today: '\'hoy a las\' p',
                    tomorrow: '\'mañana a las\' p',
                    nextWeek: 'eeee \'a las\' p',
                    other: 'P'
                },
                Sd = {
                    code: 'es',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = Md[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t.toString()),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'en ' + r : 'hace ' + r : r
                    },
                    formatLong: Ed,
                    formatRelative: function (e, t, n, r) {
                        return 1 !== t.getUTCHours() ? xd[e] : Pd[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + 'º'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'AC',
                                    'DC'
                                ],
                                abbreviated: [
                                    'AC',
                                    'DC'
                                ],
                                wide: [
                                    'antes de cristo',
                                    'después de cristo'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'T1',
                                    'T2',
                                    'T3',
                                    'T4'
                                ],
                                wide: [
                                    '1º trimestre',
                                    '2º trimestre',
                                    '3º trimestre',
                                    '4º trimestre'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'e',
                                    'f',
                                    'm',
                                    'a',
                                    'm',
                                    'j',
                                    'j',
                                    'a',
                                    's',
                                    'o',
                                    'n',
                                    'd'
                                ],
                                abbreviated: [
                                    'ene',
                                    'feb',
                                    'mar',
                                    'abr',
                                    'may',
                                    'jun',
                                    'jul',
                                    'ago',
                                    'sep',
                                    'oct',
                                    'nov',
                                    'dic'
                                ],
                                wide: [
                                    'enero',
                                    'febrero',
                                    'marzo',
                                    'abril',
                                    'mayo',
                                    'junio',
                                    'julio',
                                    'agosto',
                                    'septiembre',
                                    'octubre',
                                    'noviembre',
                                    'diciembre'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'd',
                                    'l',
                                    'm',
                                    'm',
                                    'j',
                                    'v',
                                    's'
                                ],
                                short: [
                                    'do',
                                    'lu',
                                    'ma',
                                    'mi',
                                    'ju',
                                    'vi',
                                    'sá'
                                ],
                                abbreviated: [
                                    'dom',
                                    'lun',
                                    'mar',
                                    'mié',
                                    'jue',
                                    'vie',
                                    'sáb'
                                ],
                                wide: [
                                    'domingo',
                                    'lunes',
                                    'martes',
                                    'miércoles',
                                    'jueves',
                                    'viernes',
                                    'sábado'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'mn',
                                    noon: 'md',
                                    morning: 'mañana',
                                    afternoon: 'tarde',
                                    evening: 'tarde',
                                    night: 'noche'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'medianoche',
                                    noon: 'mediodia',
                                    morning: 'mañana',
                                    afternoon: 'tarde',
                                    evening: 'tarde',
                                    night: 'noche'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'medianoche',
                                    noon: 'mediodia',
                                    morning: 'mañana',
                                    afternoon: 'tarde',
                                    evening: 'tarde',
                                    night: 'noche'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'mn',
                                    noon: 'md',
                                    morning: 'de la mañana',
                                    afternoon: 'de la tarde',
                                    evening: 'de la tarde',
                                    night: 'de la noche'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'medianoche',
                                    noon: 'mediodia',
                                    morning: 'de la mañana',
                                    afternoon: 'de la tarde',
                                    evening: 'de la tarde',
                                    night: 'de la noche'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'medianoche',
                                    noon: 'mediodia',
                                    morning: 'de la mañana',
                                    afternoon: 'de la tarde',
                                    evening: 'de la tarde',
                                    night: 'de la noche'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(º)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ac|dc|a|d)/i,
                                abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
                                wide: /^(antes de cristo|antes de la era com[uú]n|despu[eé]s de cristo|era com[uú]n)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ac/i,
                                    /^dc/i
                                ],
                                wide: [
                                    /^(antes de cristo|antes de la era com[uú]n)/i,
                                    /^(despu[eé]s de cristo|era com[uú]n)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^T[1234]/i,
                                wide: /^[1234](º)? trimestre/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[efmajsond]/i,
                                abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,
                                wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^e/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^en/i,
                                    /^feb/i,
                                    /^mar/i,
                                    /^abr/i,
                                    /^may/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^ago/i,
                                    /^sep/i,
                                    /^oct/i,
                                    /^nov/i,
                                    /^dic/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[dlmjvs]/i,
                                short: /^(do|lu|ma|mi|ju|vi|s[áa])/i,
                                abbreviated: /^(dom|lun|mar|mi[ée]|jue|vie|s[áa]b)/i,
                                wide: /^(domingo|lunes|martes|mi[ée]rcoles|jueves|viernes|s[áa]bado)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^l/i,
                                    /^m/i,
                                    /^m/i,
                                    /^j/i,
                                    /^v/i,
                                    /^s/i
                                ],
                                any: [
                                    /^do/i,
                                    /^lu/i,
                                    /^ma/i,
                                    /^mi/i,
                                    /^ju/i,
                                    /^vi/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mn|md|(de la|a las) (mañana|tarde|noche))/i,
                                any: /^([ap]\.?\s?m\.?|medianoche|mediodia|(de la|a las) (mañana|tarde|noche))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mn/i,
                                    noon: /^md/i,
                                    morning: /mañana/i,
                                    afternoon: /tarde/i,
                                    evening: /tarde/i,
                                    night: /noche/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                Td = {
                    lessThanXSeconds: {
                        standalone: {
                            one: 'vähem kui üks sekund',
                            other: 'vähem kui {{count}} sekundit'
                        },
                        withPreposition: {
                            one: 'vähem kui ühe sekundi',
                            other: 'vähem kui {{count}} sekundi'
                        }
                    },
                    xSeconds: {
                        standalone: {
                            one: 'üks sekund',
                            other: '{{count}} sekundit'
                        },
                        withPreposition: {
                            one: 'ühe sekundi',
                            other: '{{count}} sekundi'
                        }
                    },
                    halfAMinute: {
                        standalone: 'pool minutit',
                        withPreposition: 'poole minuti'
                    },
                    lessThanXMinutes: {
                        standalone: {
                            one: 'vähem kui üks minut',
                            other: 'vähem kui {{count}} minutit'
                        },
                        withPreposition: {
                            one: 'vähem kui ühe minuti',
                            other: 'vähem kui {{count}} minuti'
                        }
                    },
                    xMinutes: {
                        standalone: {
                            one: 'üks minut',
                            other: '{{count}} minutit'
                        },
                        withPreposition: {
                            one: 'ühe minuti',
                            other: '{{count}} minuti'
                        }
                    },
                    aboutXHours: {
                        standalone: {
                            one: 'umbes üks tund',
                            other: 'umbes {{count}} tundi'
                        },
                        withPreposition: {
                            one: 'umbes ühe tunni',
                            other: 'umbes {{count}} tunni'
                        }
                    },
                    xHours: {
                        standalone: {
                            one: 'üks tund',
                            other: '{{count}} tundi'
                        },
                        withPreposition: {
                            one: 'ühe tunni',
                            other: '{{count}} tunni'
                        }
                    },
                    xDays: {
                        standalone: {
                            one: 'üks päev',
                            other: '{{count}} päeva'
                        },
                        withPreposition: {
                            one: 'ühe päeva',
                            other: '{{count}} päeva'
                        }
                    },
                    aboutXWeeks: {
                        standalone: {
                            one: 'umbes üks nädal',
                            other: 'umbes {{count}} nädalat'
                        },
                        withPreposition: {
                            one: 'umbes ühe nädala',
                            other: 'umbes {{count}} nädala'
                        }
                    },
                    xWeeks: {
                        standalone: {
                            one: 'üks nädal',
                            other: '{{count}} nädalat'
                        },
                        withPreposition: {
                            one: 'ühe nädala',
                            other: '{{count}} nädala'
                        }
                    },
                    aboutXMonths: {
                        standalone: {
                            one: 'umbes üks kuu',
                            other: 'umbes {{count}} kuud'
                        },
                        withPreposition: {
                            one: 'umbes ühe kuu',
                            other: 'umbes {{count}} kuu'
                        }
                    },
                    xMonths: {
                        standalone: {
                            one: 'üks kuu',
                            other: '{{count}} kuud'
                        },
                        withPreposition: {
                            one: 'ühe kuu',
                            other: '{{count}} kuu'
                        }
                    },
                    aboutXYears: {
                        standalone: {
                            one: 'umbes üks aasta',
                            other: 'umbes {{count}} aastat'
                        },
                        withPreposition: {
                            one: 'umbes ühe aasta',
                            other: 'umbes {{count}} aasta'
                        }
                    },
                    xYears: {
                        standalone: {
                            one: 'üks aasta',
                            other: '{{count}} aastat'
                        },
                        withPreposition: {
                            one: 'ühe aasta',
                            other: '{{count}} aasta'
                        }
                    },
                    overXYears: {
                        standalone: {
                            one: 'rohkem kui üks aasta',
                            other: 'rohkem kui {{count}} aastat'
                        },
                        withPreposition: {
                            one: 'rohkem kui ühe aasta',
                            other: 'rohkem kui {{count}} aasta'
                        }
                    },
                    almostXYears: {
                        standalone: {
                            one: 'peaaegu üks aasta',
                            other: 'peaaegu {{count}} aastat'
                        },
                        withPreposition: {
                            one: 'peaaegu ühe aasta',
                            other: 'peaaegu {{count}} aasta'
                        }
                    }
                },
                Cd = {
                    date: at({
                        formats: {
                            full: 'EEEE, d. MMMM y',
                            long: 'd. MMMM y',
                            medium: 'd. MMM y',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'kell\' {{time}}',
                            long: '{{date}} \'kell\' {{time}}',
                            medium: '{{date}}. {{time}}',
                            short: '{{date}}. {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Wd = {
                    lastWeek: '\'eelmine\' eeee \'kell\' p',
                    yesterday: '\'eile kell\' p',
                    today: '\'täna kell\' p',
                    tomorrow: '\'homme kell\' p',
                    nextWeek: '\'järgmine\' eeee \'kell\' p',
                    other: 'P'
                },
                jd = {
                    narrow: [
                        'J',
                        'V',
                        'M',
                        'A',
                        'M',
                        'J',
                        'J',
                        'A',
                        'S',
                        'O',
                        'N',
                        'D'
                    ],
                    abbreviated: [
                        'jaan',
                        'veebr',
                        'märts',
                        'apr',
                        'mai',
                        'juuni',
                        'juuli',
                        'aug',
                        'sept',
                        'okt',
                        'nov',
                        'dets'
                    ],
                    wide: [
                        'jaanuar',
                        'veebruar',
                        'märts',
                        'aprill',
                        'mai',
                        'juuni',
                        'juuli',
                        'august',
                        'september',
                        'oktoober',
                        'november',
                        'detsember'
                    ]
                },
                Dd = {
                    narrow: [
                        'P',
                        'E',
                        'T',
                        'K',
                        'N',
                        'R',
                        'L'
                    ],
                    short: [
                        'P',
                        'E',
                        'T',
                        'K',
                        'N',
                        'R',
                        'L'
                    ],
                    abbreviated: [
                        'pühap.',
                        'esmasp.',
                        'teisip.',
                        'kolmap.',
                        'neljap.',
                        'reede.',
                        'laup.'
                    ],
                    wide: [
                        'pühapäev',
                        'esmaspäev',
                        'teisipäev',
                        'kolmapäev',
                        'neljapäev',
                        'reede',
                        'laupäev'
                    ]
                },
                Nd = {
                    code: 'et',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = (n = n || {
                            }).addSuffix ? Td[e].withPreposition : Td[e].standalone;
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + ' pärast' : r + ' eest' : r
                    },
                    formatLong: Cd,
                    formatRelative: function (e, t, n, r) {
                        return Wd[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'e.m.a',
                                    'm.a.j'
                                ],
                                abbreviated: [
                                    'e.m.a',
                                    'm.a.j'
                                ],
                                wide: [
                                    'enne meie ajaarvamist',
                                    'meie ajaarvamise järgi'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'K1',
                                    'K2',
                                    'K3',
                                    'K4'
                                ],
                                wide: [
                                    '1. kvartal',
                                    '2. kvartal',
                                    '3. kvartal',
                                    '4. kvartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: jd,
                            formattingValues: jd,
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: Dd,
                            formattingValues: Dd,
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'kesköö',
                                    noon: 'keskpäev',
                                    morning: 'hommik',
                                    afternoon: 'pärastlõuna',
                                    evening: 'õhtu',
                                    night: 'öö'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'kesköö',
                                    noon: 'keskpäev',
                                    morning: 'hommik',
                                    afternoon: 'pärastlõuna',
                                    evening: 'õhtu',
                                    night: 'öö'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'kesköö',
                                    noon: 'keskpäev',
                                    morning: 'hommik',
                                    afternoon: 'pärastlõuna',
                                    evening: 'õhtu',
                                    night: 'öö'
                                }
                            },
                            formattingValues: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'keskööl',
                                    noon: 'keskpäeval',
                                    morning: 'hommikul',
                                    afternoon: 'pärastlõunal',
                                    evening: 'õhtul',
                                    night: 'öösel'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'keskööl',
                                    noon: 'keskpäeval',
                                    morning: 'hommikul',
                                    afternoon: 'pärastlõunal',
                                    evening: 'õhtul',
                                    night: 'öösel'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'keskööl',
                                    noon: 'keskpäeval',
                                    morning: 'hommikul',
                                    afternoon: 'pärastlõunal',
                                    evening: 'õhtul',
                                    night: 'öösel'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^\d+\./i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
                                abbreviated: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
                                wide: /^(enne meie ajaarvamist|meie ajaarvamise järgi|enne Kristust|pärast Kristust)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^e/i,
                                    /^(m|p)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^K[1234]/i,
                                wide: /^[1234](\.)? kvartal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jvmasond]/i,
                                abbreviated: /^(jaan|veebr|märts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets)/i,
                                wide: /^(jaanuar|veebruar|märts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^v/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^v/i,
                                    /^mär/i,
                                    /^ap/i,
                                    /^mai/i,
                                    /^juun/i,
                                    /^juul/i,
                                    /^au/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[petknrl]/i,
                                short: /^[petknrl]/i,
                                abbreviated: /^(püh?|esm?|tei?|kolm?|nel?|ree?|laup?)\.?/i,
                                wide: /^(pühapäev|esmaspäev|teisipäev|kolmapäev|neljapäev|reede|laupäev)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^p/i,
                                    /^e/i,
                                    /^t/i,
                                    /^k/i,
                                    /^n/i,
                                    /^r/i,
                                    /^l/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(am|pm|keskööl?|keskpäev(al)?|hommik(ul)?|pärastlõunal?|õhtul?|öö(sel)?)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^keskö/i,
                                    noon: /^keskp/i,
                                    morning: /hommik/i,
                                    afternoon: /pärastlõuna/i,
                                    evening: /õhtu/i,
                                    night: /öö/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Id = {
                    lessThanXSeconds: {
                        one: 'segundo bat baino gutxiago',
                        other: '{{count}} segundo baino gutxiago'
                    },
                    xSeconds: {
                        one: '1 segundo',
                        other: '{{count}} segundo'
                    },
                    halfAMinute: 'minutu erdi',
                    lessThanXMinutes: {
                        one: 'minutu bat baino gutxiago',
                        other: '{{count}} minutu baino gutxiago'
                    },
                    xMinutes: {
                        one: '1 minutu',
                        other: '{{count}} minutu'
                    },
                    aboutXHours: {
                        one: '1 ordu gutxi gorabehera',
                        other: '{{count}} ordu gutxi gorabehera'
                    },
                    xHours: {
                        one: '1 ordu',
                        other: '{{count}} ordu'
                    },
                    xDays: {
                        one: '1 egun',
                        other: '{{count}} egun'
                    },
                    aboutXWeeks: {
                        one: 'aste 1 inguru',
                        other: '{{count}} aste inguru'
                    },
                    xWeeks: {
                        one: '1 aste',
                        other: '{{count}} astean'
                    },
                    aboutXMonths: {
                        one: '1 hilabete gutxi gorabehera',
                        other: '{{count}} hilabete gutxi gorabehera'
                    },
                    xMonths: {
                        one: '1 hilabete',
                        other: '{{count}} hilabete'
                    },
                    aboutXYears: {
                        one: '1 urte gutxi gorabehera',
                        other: '{{count}} urte gutxi gorabehera'
                    },
                    xYears: {
                        one: '1 urte',
                        other: '{{count}} urte'
                    },
                    overXYears: {
                        one: '1 urte baino gehiago',
                        other: '{{count}} urte baino gehiago'
                    },
                    almostXYears: {
                        one: 'ia 1 urte',
                        other: 'ia {{count}} urte'
                    }
                },
                zd = {
                    date: at({
                        formats: {
                            full: 'EEEE, y\'ko\' MMMM\'ren\' d\'a\' y\'ren\'',
                            long: 'y\'ko\' MMMM\'ren\' d\'a\'',
                            medium: 'y MMM d',
                            short: 'yy/MM/dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'tan\' {{time}}',
                            long: '{{date}} \'tan\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Rd = {
                    lastWeek: '\'joan den\' eeee, LT',
                    yesterday: '\'atzo,\' p',
                    today: '\'gaur,\' p',
                    tomorrow: '\'bihar,\' p',
                    nextWeek: 'eeee, p',
                    other: 'P'
                },
                Ad = {
                    lastWeek: '\'joan den\' eeee, p',
                    yesterday: '\'atzo,\' p',
                    today: '\'gaur,\' p',
                    tomorrow: '\'bihar,\' p',
                    nextWeek: 'eeee, p',
                    other: 'P'
                },
                Od = {
                    code: 'eu',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Id[e] ? Id[e] : 1 === t ? Id[e].one : Id[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'en ' + r : 'duela ' + r : r
                    },
                    formatLong: zd,
                    formatRelative: function (e, t, n, r) {
                        return 1 !== t.getUTCHours() ? Ad[e] : Rd[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'k.a.',
                                    'k.o.'
                                ],
                                abbreviated: [
                                    'k.a.',
                                    'k.o.'
                                ],
                                wide: [
                                    'kristo aurretik',
                                    'kristo ondoren'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1H',
                                    '2H',
                                    '3H',
                                    '4H'
                                ],
                                wide: [
                                    '1. hiruhilekoa',
                                    '2. hiruhilekoa',
                                    '3. hiruhilekoa',
                                    '4. hiruhilekoa'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'u',
                                    'o',
                                    'm',
                                    'a',
                                    'm',
                                    'e',
                                    'u',
                                    'a',
                                    'i',
                                    'u',
                                    'a',
                                    'a'
                                ],
                                abbreviated: [
                                    'urt',
                                    'ots',
                                    'mar',
                                    'api',
                                    'mai',
                                    'eka',
                                    'uzt',
                                    'abu',
                                    'ira',
                                    'urr',
                                    'aza',
                                    'abe'
                                ],
                                wide: [
                                    'urtarrila',
                                    'otsaila',
                                    'martxoa',
                                    'apirila',
                                    'maiatza',
                                    'ekaina',
                                    'uztaila',
                                    'abuztua',
                                    'iraila',
                                    'urria',
                                    'azaroa',
                                    'abendua'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'i',
                                    'a',
                                    'a',
                                    'a',
                                    'o',
                                    'o',
                                    'l'
                                ],
                                short: [
                                    'ig',
                                    'al',
                                    'as',
                                    'az',
                                    'og',
                                    'or',
                                    'lr'
                                ],
                                abbreviated: [
                                    'iga',
                                    'ast',
                                    'ast',
                                    'ast',
                                    'ost',
                                    'ost',
                                    'lar'
                                ],
                                wide: [
                                    'igandea',
                                    'astelehena',
                                    'asteartea',
                                    'asteazkena',
                                    'osteguna',
                                    'ostirala',
                                    'larunbata'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'ge',
                                    noon: 'eg',
                                    morning: 'goiza',
                                    afternoon: 'arratsaldea',
                                    evening: 'arratsaldea',
                                    night: 'gaua'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'gauerdia',
                                    noon: 'eguerdia',
                                    morning: 'goiza',
                                    afternoon: 'arratsaldea',
                                    evening: 'arratsaldea',
                                    night: 'gaua'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'gauerdia',
                                    noon: 'eguerdia',
                                    morning: 'goiza',
                                    afternoon: 'arratsaldea',
                                    evening: 'arratsaldea',
                                    night: 'gaua'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'ge',
                                    noon: 'eg',
                                    morning: 'goizean',
                                    afternoon: 'arratsaldean',
                                    evening: 'arratsaldean',
                                    night: 'gauean'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'gauerdia',
                                    noon: 'eguerdia',
                                    morning: 'goizean',
                                    afternoon: 'arratsaldean',
                                    evening: 'arratsaldean',
                                    night: 'gauean'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'gauerdia',
                                    noon: 'eguerdia',
                                    morning: 'goizean',
                                    afternoon: 'arratsaldean',
                                    evening: 'arratsaldean',
                                    night: 'gauean'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(.)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(k.a.|k.o.)/i,
                                abbreviated: /^(k.a.|k.o.)/i,
                                wide: /^(kristo aurretik|kristo ondoren)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^k.a./i,
                                    /^k.o./i
                                ],
                                abbreviated: [
                                    /^(k.a.)/i,
                                    /^(k.o.)/i
                                ],
                                wide: [
                                    /^(kristo aurretik)/i,
                                    /^(kristo ondoren)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]H/i,
                                wide: /^[1234](.)? hiruhilekoa/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[uomaei]/i,
                                abbreviated: /^(urt|ots|mar|api|mai|eka|uzt|abu|ira|urr|aza|abe)/i,
                                wide: /^(urtarrila|otsaila|martxoa|apirila|maiatza|ekaina|uztaila|abuztua|iraila|urria|azaroa|abendua)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^u/i,
                                    /^o/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^e/i,
                                    /^u/i,
                                    /^a/i,
                                    /^i/i,
                                    /^u/i,
                                    /^a/i,
                                    /^a/i
                                ],
                                any: [
                                    /^urt/i,
                                    /^ots/i,
                                    /^mar/i,
                                    /^api/i,
                                    /^mai/i,
                                    /^eka/i,
                                    /^uzt/i,
                                    /^abu/i,
                                    /^ira/i,
                                    /^urr/i,
                                    /^aza/i,
                                    /^abe/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[iaol]/i,
                                short: /^(ig|al|as|az|og|or|lr)/i,
                                abbreviated: /^(iga|ast|ast|ast|ost|ost|lar)/i,
                                wide: /^(igandea|astelehena|asteartea|asteazkena|osteguna|ostirala|larunbata)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^i/i,
                                    /^a/i,
                                    /^a/i,
                                    /^a/i,
                                    /^o/i,
                                    /^o/i,
                                    /^l/i
                                ],
                                short: [
                                    /^ig/i,
                                    /^al/i,
                                    /^as/i,
                                    /^az/i,
                                    /^og/i,
                                    /^or/i,
                                    /^lr/i
                                ],
                                abbreviated: [
                                    /^iga/i,
                                    /^ast/i,
                                    /^ast/i,
                                    /^ast/i,
                                    /^ost/i,
                                    /^ost/i,
                                    /^lar/i
                                ],
                                wide: [
                                    /^igandea/i,
                                    /^astelehena/i,
                                    /^asteartea/i,
                                    /^asteazkena/i,
                                    /^osteguna/i,
                                    /^ostirala/i,
                                    /^larunbata/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|ge|eg|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,
                                any: /^([ap]\.?\s?m\.?|gauerdia|eguerdia|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                narrow: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^ge/i,
                                    noon: /^eg/i,
                                    morning: /goiz/i,
                                    afternoon: /arratsaldea/i,
                                    evening: /arratsaldea/i,
                                    night: /gau/i
                                },
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^gauerdia/i,
                                    noon: /^eguerdia/i,
                                    morning: /goiz/i,
                                    afternoon: /arratsaldea/i,
                                    evening: /arratsaldea/i,
                                    night: /gau/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                Hd = {
                    lessThanXSeconds: {
                        one: 'کمتر از یک ثانیه',
                        other: 'کمتر از {{count}} ثانیه'
                    },
                    xSeconds: {
                        one: '1 ثانیه',
                        other: '{{count}} ثانیه'
                    },
                    halfAMinute: 'نیم دقیقه',
                    lessThanXMinutes: {
                        one: 'کمتر از یک دقیقه',
                        other: 'کمتر از {{count}} دقیقه'
                    },
                    xMinutes: {
                        one: '1 دقیقه',
                        other: '{{count}} دقیقه'
                    },
                    aboutXHours: {
                        one: 'حدود 1 ساعت',
                        other: 'حدود {{count}} ساعت'
                    },
                    xHours: {
                        one: '1 ساعت',
                        other: '{{count}} ساعت'
                    },
                    xDays: {
                        one: '1 روز',
                        other: '{{count}} روز'
                    },
                    aboutXWeeks: {
                        one: 'حدود 1 هفته',
                        other: 'حدود {{count}} هفته'
                    },
                    xWeeks: {
                        one: '1 هفته',
                        other: '{{count}} هفته'
                    },
                    aboutXMonths: {
                        one: 'حدود 1 ماه',
                        other: 'حدود {{count}} ماه'
                    },
                    xMonths: {
                        one: '1 ماه',
                        other: '{{count}} ماه'
                    },
                    aboutXYears: {
                        one: 'حدود 1 سال',
                        other: 'حدود {{count}} سال'
                    },
                    xYears: {
                        one: '1 سال',
                        other: '{{count}} سال'
                    },
                    overXYears: {
                        one: 'بیشتر از 1 سال',
                        other: 'بیشتر از {{count}} سال'
                    },
                    almostXYears: {
                        one: 'نزدیک 1 سال',
                        other: 'نزدیک {{count}} سال'
                    }
                },
                _d = {
                    date: at({
                        formats: {
                            full: 'EEEE do MMMM y',
                            long: 'do MMMM y',
                            medium: 'd MMM y',
                            short: 'yyyy/MM/dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'در\' {{time}}',
                            long: '{{date}} \'در\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Ld = {
                    lastWeek: 'eeee \'گذشته در\' p',
                    yesterday: '\'دیروز در\' p',
                    today: '\'امروز در\' p',
                    tomorrow: '\'فردا در\' p',
                    nextWeek: 'eeee \'در\' p',
                    other: 'P'
                },
                Fd = {
                    code: 'fa-IR',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Hd[e] ? Hd[e] : 1 === t ? Hd[e].one : Hd[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'در ' + r : r + ' قبل' : r
                    },
                    formatLong: _d,
                    formatRelative: function (e, t, n, r) {
                        return Ld[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return String(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ق',
                                    'ب'
                                ],
                                abbreviated: [
                                    'ق.م.',
                                    'ب.م.'
                                ],
                                wide: [
                                    'قبل از میلاد',
                                    'بعد از میلاد'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'س‌م1',
                                    'س‌م2',
                                    'س‌م3',
                                    'س‌م4'
                                ],
                                wide: [
                                    'سه‌ماهه 1',
                                    'سه‌ماهه 2',
                                    'سه‌ماهه 3',
                                    'سه‌ماهه 4'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ژ',
                                    'ف',
                                    'م',
                                    'آ',
                                    'م',
                                    'ج',
                                    'ج',
                                    'آ',
                                    'س',
                                    'ا',
                                    'ن',
                                    'د'
                                ],
                                abbreviated: [
                                    'ژانـ',
                                    'فور',
                                    'مارس',
                                    'آپر',
                                    'می',
                                    'جون',
                                    'جولـ',
                                    'آگو',
                                    'سپتـ',
                                    'اکتـ',
                                    'نوامـ',
                                    'دسامـ'
                                ],
                                wide: [
                                    'ژانویه',
                                    'فوریه',
                                    'مارس',
                                    'آپریل',
                                    'می',
                                    'جون',
                                    'جولای',
                                    'آگوست',
                                    'سپتامبر',
                                    'اکتبر',
                                    'نوامبر',
                                    'دسامبر'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ی',
                                    'د',
                                    'س',
                                    'چ',
                                    'پ',
                                    'ج',
                                    'ش'
                                ],
                                short: [
                                    '1ش',
                                    '2ش',
                                    '3ش',
                                    '4ش',
                                    '5ش',
                                    'ج',
                                    'ش'
                                ],
                                abbreviated: [
                                    'یکشنبه',
                                    'دوشنبه',
                                    'سه‌شنبه',
                                    'چهارشنبه',
                                    'پنجشنبه',
                                    'جمعه',
                                    'شنبه'
                                ],
                                wide: [
                                    'یکشنبه',
                                    'دوشنبه',
                                    'سه‌شنبه',
                                    'چهارشنبه',
                                    'پنجشنبه',
                                    'جمعه',
                                    'شنبه'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ق',
                                    pm: 'ب',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'ص',
                                    afternoon: 'ب.ظ.',
                                    evening: 'ع',
                                    night: 'ش'
                                },
                                abbreviated: {
                                    am: 'ق.ظ.',
                                    pm: 'ب.ظ.',
                                    midnight: 'نیمه‌شب',
                                    noon: 'ظهر',
                                    morning: 'صبح',
                                    afternoon: 'بعدازظهر',
                                    evening: 'عصر',
                                    night: 'شب'
                                },
                                wide: {
                                    am: 'قبل‌ازظهر',
                                    pm: 'بعدازظهر',
                                    midnight: 'نیمه‌شب',
                                    noon: 'ظهر',
                                    morning: 'صبح',
                                    afternoon: 'بعدازظهر',
                                    evening: 'عصر',
                                    night: 'شب'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ق',
                                    pm: 'ب',
                                    midnight: 'ن',
                                    noon: 'ظ',
                                    morning: 'ص',
                                    afternoon: 'ب.ظ.',
                                    evening: 'ع',
                                    night: 'ش'
                                },
                                abbreviated: {
                                    am: 'ق.ظ.',
                                    pm: 'ب.ظ.',
                                    midnight: 'نیمه‌شب',
                                    noon: 'ظهر',
                                    morning: 'صبح',
                                    afternoon: 'بعدازظهر',
                                    evening: 'عصر',
                                    night: 'شب'
                                },
                                wide: {
                                    am: 'قبل‌ازظهر',
                                    pm: 'بعدازظهر',
                                    midnight: 'نیمه‌شب',
                                    noon: 'ظهر',
                                    morning: 'صبح',
                                    afternoon: 'بعدازظهر',
                                    evening: 'عصر',
                                    night: 'شب'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ق|ب)/i,
                                abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?د\.?\s?م\.?|م\.?\s?|د\.?\s?م\.?)/i,
                                wide: /^(قبل از میلاد|قبل از دوران مشترک|میلادی|دوران مشترک|بعد از میلاد)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^قبل/i,
                                    /^بعد/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^س‌م[1234]/i,
                                wide: /^سه‌ماهه [1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[جژفمآاماسند]/i,
                                abbreviated: /^(جنو|ژانـ|ژانویه|فوریه|فور|مارس|آوریل|آپر|مه|می|ژوئن|جون|جول|جولـ|ژوئیه|اوت|آگو|سپتمبر|سپتامبر|اکتبر|اکتوبر|نوامبر|نوامـ|دسامبر|دسامـ|دسم)/i,
                                wide: /^(ژانویه|جنوری|فبروری|فوریه|مارچ|مارس|آپریل|اپریل|ایپریل|آوریل|مه|می|ژوئن|جون|جولای|ژوئیه|آگست|اگست|آگوست|اوت|سپتمبر|سپتامبر|اکتبر|اکتوبر|نوامبر|نومبر|دسامبر|دسمبر)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^(ژ|ج)/i,
                                    /^ف/i,
                                    /^م/i,
                                    /^(آ|ا)/i,
                                    /^م/i,
                                    /^(ژ|ج)/i,
                                    /^(ج|ژ)/i,
                                    /^(آ|ا)/i,
                                    /^س/i,
                                    /^ا/i,
                                    /^ن/i,
                                    /^د/i
                                ],
                                any: [
                                    /^ژا/i,
                                    /^ف/i,
                                    /^ما/i,
                                    /^آپ/i,
                                    /^(می|مه)/i,
                                    /^(ژوئن|جون)/i,
                                    /^(ژوئی|جول)/i,
                                    /^(اوت|آگ)/i,
                                    /^س/i,
                                    /^(اوک|اک)/i,
                                    /^ن/i,
                                    /^د/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[شیدسچپج]/i,
                                short: /^(ش|ج|1ش|2ش|3ش|4ش|5ش)/i,
                                abbreviated: /^(یکشنبه|دوشنبه|سه‌شنبه|چهارشنبه|پنج‌شنبه|جمعه|شنبه)/i,
                                wide: /^(یکشنبه|دوشنبه|سه‌شنبه|چهارشنبه|پنج‌شنبه|جمعه|شنبه)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ی/i,
                                    /^دو/i,
                                    /^س/i,
                                    /^چ/i,
                                    /^پ/i,
                                    /^ج/i,
                                    /^ش/i
                                ],
                                any: [
                                    /^(ی|1ش|یکشنبه)/i,
                                    /^(د|2ش|دوشنبه)/i,
                                    /^(س|3ش|سه‌شنبه)/i,
                                    /^(چ|4ش|چهارشنبه)/i,
                                    /^(پ|5ش|پنجشنبه)/i,
                                    /^(ج|جمعه)/i,
                                    /^(ش|شنبه)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ب|ق|ن|ظ|ص|ب.ظ.|ع|ش)/i,
                                abbreviated: /^(ق.ظ.|ب.ظ.|نیمه‌شب|ظهر|صبح|بعدازظهر|عصر|شب)/i,
                                wide: /^(قبل‌ازظهر|نیمه‌شب|ظهر|صبح|بعدازظهر|عصر|شب)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^(ق|ق.ظ.|قبل‌ازظهر)/i,
                                    pm: /^(ب|ب.ظ.|بعدازظهر)/i,
                                    midnight: /^(‌نیمه‌شب|ن)/i,
                                    noon: /^(ظ|ظهر)/i,
                                    morning: /(ص|صبح)/i,
                                    afternoon: /(ب|ب.ظ.|بعدازظهر)/i,
                                    evening: /(ع|عصر)/i,
                                    night: /(ش|شب)/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 6,
                        firstWeekContainsDate: 1
                    }
                };
            function Xd(e) {
                return e.replace(/sekuntia?/, 'sekunnin')
            }
            function Ud(e) {
                return e.replace(/minuuttia?/, 'minuutin')
            }
            function qd(e) {
                return e.replace(/tuntia?/, 'tunnin')
            }
            function Gd(e) {
                return e.replace(/(viikko|viikkoa)/, 'viikon')
            }
            function Vd(e) {
                return e.replace(/(kuukausi|kuukautta)/, 'kuukauden')
            }
            function Yd(e) {
                return e.replace(/(vuosi|vuotta)/, 'vuoden')
            }
            var Bd = {
                lessThanXSeconds: {
                    one: 'alle sekunti',
                    other: 'alle {{count}} sekuntia',
                    futureTense: Xd
                },
                xSeconds: {
                    one: 'sekunti',
                    other: '{{count}} sekuntia',
                    futureTense: Xd
                },
                halfAMinute: {
                    one: 'puoli minuuttia',
                    other: 'puoli minuuttia',
                    futureTense: function (e) {
                        return 'puolen minuutin'
                    }
                },
                lessThanXMinutes: {
                    one: 'alle minuutti',
                    other: 'alle {{count}} minuuttia',
                    futureTense: Ud
                },
                xMinutes: {
                    one: 'minuutti',
                    other: '{{count}} minuuttia',
                    futureTense: Ud
                },
                aboutXHours: {
                    one: 'noin tunti',
                    other: 'noin {{count}} tuntia',
                    futureTense: qd
                },
                xHours: {
                    one: 'tunti',
                    other: '{{count}} tuntia',
                    futureTense: qd
                },
                xDays: {
                    one: 'päivä',
                    other: '{{count}} päivää',
                    futureTense: function (e) {
                        return e.replace(/päivää?/, 'päivän')
                    }
                },
                aboutXWeeks: {
                    one: 'noin viikko',
                    other: 'noin {{count}} viikkoa',
                    futureTense: Gd
                },
                xWeeks: {
                    one: 'viikko',
                    other: '{{count}} viikkoa',
                    futureTense: Gd
                },
                aboutXMonths: {
                    one: 'noin kuukausi',
                    other: 'noin {{count}} kuukautta',
                    futureTense: Vd
                },
                xMonths: {
                    one: 'kuukausi',
                    other: '{{count}} kuukautta',
                    futureTense: Vd
                },
                aboutXYears: {
                    one: 'noin vuosi',
                    other: 'noin {{count}} vuotta',
                    futureTense: Yd
                },
                xYears: {
                    one: 'vuosi',
                    other: '{{count}} vuotta',
                    futureTense: Yd
                },
                overXYears: {
                    one: 'yli vuosi',
                    other: 'yli {{count}} vuotta',
                    futureTense: Yd
                },
                almostXYears: {
                    one: 'lähes vuosi',
                    other: 'lähes {{count}} vuotta',
                    futureTense: Yd
                }
            },
                $d = {
                    date: at({
                        formats: {
                            full: 'eeee d. MMMM y',
                            long: 'd. MMMM y',
                            medium: 'd. MMM y',
                            short: 'd.M.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH.mm.ss zzzz',
                            long: 'HH.mm.ss z',
                            medium: 'HH.mm.ss',
                            short: 'HH.mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'klo\' {{time}}',
                            long: '{{date}} \'klo\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Qd = {
                    lastWeek: '\'viime\' eeee \'klo\' p',
                    yesterday: '\'eilen klo\' p',
                    today: '\'tänään klo\' p',
                    tomorrow: '\'huomenna klo\' p',
                    nextWeek: '\'ensi\' eeee \'klo\' p',
                    other: 'P'
                },
                Kd = {
                    narrow: [
                        'T',
                        'H',
                        'M',
                        'H',
                        'T',
                        'K',
                        'H',
                        'E',
                        'S',
                        'L',
                        'M',
                        'J'
                    ],
                    abbreviated: [
                        'tammi',
                        'helmi',
                        'maalis',
                        'huhti',
                        'touko',
                        'kesä',
                        'heinä',
                        'elo',
                        'syys',
                        'loka',
                        'marras',
                        'joulu'
                    ],
                    wide: [
                        'tammikuu',
                        'helmikuu',
                        'maaliskuu',
                        'huhtikuu',
                        'toukokuu',
                        'kesäkuu',
                        'heinäkuu',
                        'elokuu',
                        'syyskuu',
                        'lokakuu',
                        'marraskuu',
                        'joulukuu'
                    ]
                },
                Jd = {
                    narrow: Kd.narrow,
                    abbreviated: Kd.abbreviated,
                    wide: Kd.wide.map((function (e) {
                        return e + 'ta'
                    }))
                },
                Zd = {
                    narrow: [
                        'S',
                        'M',
                        'T',
                        'K',
                        'T',
                        'P',
                        'L'
                    ],
                    short: [
                        'su',
                        'ma',
                        'ti',
                        'ke',
                        'to',
                        'pe',
                        'la'
                    ],
                    abbreviated: [
                        'sunn.',
                        'maan.',
                        'tiis.',
                        'kesk.',
                        'torst.',
                        'perj.',
                        'la'
                    ],
                    wide: [
                        'sunnuntai',
                        'maanantai',
                        'tiistai',
                        'keskiviikko',
                        'torstai',
                        'perjantai',
                        'lauantai'
                    ]
                },
                ec = {
                    narrow: Zd.narrow,
                    short: Zd.short,
                    abbreviated: Zd.abbreviated,
                    wide: Zd.wide.map((function (e) {
                        return e + 'na'
                    }))
                },
                tc = {
                    code: 'fi',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r = Bd[e],
                            a = 1 === t ? r.one : r.other.replace('{{count}}', t);
                        return n.addSuffix ? n.comparison > 0 ? r.futureTense(a) + ' kuluttua' : a + ' sitten' : a
                    },
                    formatLong: $d,
                    formatRelative: function (e, t, n, r) {
                        return Qd[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'eaa.',
                                    'jaa.'
                                ],
                                abbreviated: [
                                    'eaa.',
                                    'jaa.'
                                ],
                                wide: [
                                    'ennen ajanlaskun alkua',
                                    'jälkeen ajanlaskun alun'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1. kvartaali',
                                    '2. kvartaali',
                                    '3. kvartaali',
                                    '4. kvartaali'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: Kd,
                            formattingValues: Jd,
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: Zd,
                            formattingValues: ec,
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ap',
                                    pm: 'ip',
                                    midnight: 'keskiyö',
                                    noon: 'keskipäivä',
                                    morning: 'ap',
                                    afternoon: 'ip',
                                    evening: 'illalla',
                                    night: 'yöllä'
                                },
                                abbreviated: {
                                    am: 'ap',
                                    pm: 'ip',
                                    midnight: 'keskiyö',
                                    noon: 'keskipäivä',
                                    morning: 'ap',
                                    afternoon: 'ip',
                                    evening: 'illalla',
                                    night: 'yöllä'
                                },
                                wide: {
                                    am: 'ap',
                                    pm: 'ip',
                                    midnight: 'keskiyöllä',
                                    noon: 'keskipäivällä',
                                    morning: 'aamupäivällä',
                                    afternoon: 'iltapäivällä',
                                    evening: 'illalla',
                                    night: 'yöllä'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(\.)/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(e|j)/i,
                                abbreviated: /^(eaa.|jaa.)/i,
                                wide: /^(ennen ajanlaskun alkua|jälkeen ajanlaskun alun)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^e/i,
                                    /^j/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234]\.? kvartaali/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[thmkeslj]/i,
                                abbreviated: /^(tammi|helmi|maalis|huhti|touko|kesä|heinä|elo|syys|loka|marras|joulu)/i,
                                wide: /^(tammikuu|helmikuu|maaliskuu|huhtikuu|toukokuu|kesäkuu|heinäkuu|elokuu|syyskuu|lokakuu|marraskuu|joulukuu)(ta)?/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^t/i,
                                    /^h/i,
                                    /^m/i,
                                    /^h/i,
                                    /^t/i,
                                    /^k/i,
                                    /^h/i,
                                    /^e/i,
                                    /^s/i,
                                    /^l/i,
                                    /^m/i,
                                    /^j/i
                                ],
                                any: [
                                    /^ta/i,
                                    /^hel/i,
                                    /^maa/i,
                                    /^hu/i,
                                    /^to/i,
                                    /^k/i,
                                    /^hei/i,
                                    /^e/i,
                                    /^s/i,
                                    /^l/i,
                                    /^mar/i,
                                    /^j/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smtkpl]/i,
                                short: /^(su|ma|ti|ke|to|pe|la)/i,
                                abbreviated: /^(sunn.|maan.|tiis.|kesk.|torst.|perj.|la)/i,
                                wide: /^(sunnuntai|maanantai|tiistai|keskiviikko|torstai|perjantai|lauantai)(na)?/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^m/i,
                                    /^t/i,
                                    /^k/i,
                                    /^t/i,
                                    /^p/i,
                                    /^l/i
                                ],
                                any: [
                                    /^s/i,
                                    /^m/i,
                                    /^ti/i,
                                    /^k/i,
                                    /^to/i,
                                    /^p/i,
                                    /^l/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ap|ip|keskiyö|keskipäivä|aamupäivällä|iltapäivällä|illalla|yöllä)/i,
                                any: /^(ap|ip|keskiyöllä|keskipäivällä|aamupäivällä|iltapäivällä|illalla|yöllä)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ap/i,
                                    pm: /^ip/i,
                                    midnight: /^keskiyö/i,
                                    noon: /^keskipäivä/i,
                                    morning: /aamupäivällä/i,
                                    afternoon: /iltapäivällä/i,
                                    evening: /illalla/i,
                                    night: /yöllä/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                nc = {
                    lessThanXSeconds: {
                        one: 'moins d’une seconde',
                        other: 'moins de {{count}} secondes'
                    },
                    xSeconds: {
                        one: '1 seconde',
                        other: '{{count}} secondes'
                    },
                    halfAMinute: '30 secondes',
                    lessThanXMinutes: {
                        one: 'moins d’une minute',
                        other: 'moins de {{count}} minutes'
                    },
                    xMinutes: {
                        one: '1 minute',
                        other: '{{count}} minutes'
                    },
                    aboutXHours: {
                        one: 'environ 1 heure',
                        other: 'environ {{count}} heures'
                    },
                    xHours: {
                        one: '1 heure',
                        other: '{{count}} heures'
                    },
                    xDays: {
                        one: '1 jour',
                        other: '{{count}} jours'
                    },
                    aboutXWeeks: {
                        one: 'environ 1 semaine',
                        other: 'environ {{count}} semaines'
                    },
                    xWeeks: {
                        one: '1 semaine',
                        other: '{{count}} semaines'
                    },
                    aboutXMonths: {
                        one: 'environ 1 mois',
                        other: 'environ {{count}} mois'
                    },
                    xMonths: {
                        one: '1 mois',
                        other: '{{count}} mois'
                    },
                    aboutXYears: {
                        one: 'environ 1 an',
                        other: 'environ {{count}} ans'
                    },
                    xYears: {
                        one: '1 an',
                        other: '{{count}} ans'
                    },
                    overXYears: {
                        one: 'plus d’un an',
                        other: 'plus de {{count}} ans'
                    },
                    almostXYears: {
                        one: 'presqu’un an',
                        other: 'presque {{count}} ans'
                    }
                },
                rc = function (e, t, n) {
                    var r,
                        a = nc[e];
                    return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', String(t)),
                        null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'dans ' + r : 'il y a ' + r : r
                },
                ac = {
                    date: at({
                        formats: {
                            full: 'EEEE d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'à\' {{time}}',
                            long: '{{date}} \'à\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                ic = {
                    lastWeek: 'eeee \'dernier à\' p',
                    yesterday: '\'hier à\' p',
                    today: '\'aujourd’hui à\' p',
                    tomorrow: '\'demain à\' p\'',
                    nextWeek: 'eeee \'prochain à\' p',
                    other: 'P'
                },
                oc = function (e, t, n, r) {
                    return ic[e]
                },
                sc = {
                    ordinalNumber: function (e, t) {
                        var n = Number(e),
                            r = null == t ? void 0 : t.unit;
                        return 0 === n ? '0' : n + (1 === n ? r && [
                            'year',
                            'week',
                            'hour',
                            'minute',
                            'second'
                        ].includes(r) ? 'ère' : 'er' : 'ème')
                    },
                    era: ut({
                        values: {
                            narrow: [
                                'av. J.-C',
                                'ap. J.-C'
                            ],
                            abbreviated: [
                                'av. J.-C',
                                'ap. J.-C'
                            ],
                            wide: [
                                'avant Jésus-Christ',
                                'après Jésus-Christ'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    quarter: ut({
                        values: {
                            narrow: [
                                'T1',
                                'T2',
                                'T3',
                                'T4'
                            ],
                            abbreviated: [
                                '1er trim.',
                                '2ème trim.',
                                '3ème trim.',
                                '4ème trim.'
                            ],
                            wide: [
                                '1er trimestre',
                                '2ème trimestre',
                                '3ème trimestre',
                                '4ème trimestre'
                            ]
                        },
                        defaultWidth: 'wide',
                        argumentCallback: function (e) {
                            return e - 1
                        }
                    }),
                    month: ut({
                        values: {
                            narrow: [
                                'J',
                                'F',
                                'M',
                                'A',
                                'M',
                                'J',
                                'J',
                                'A',
                                'S',
                                'O',
                                'N',
                                'D'
                            ],
                            abbreviated: [
                                'janv.',
                                'févr.',
                                'mars',
                                'avr.',
                                'mai',
                                'juin',
                                'juil.',
                                'août',
                                'sept.',
                                'oct.',
                                'nov.',
                                'déc.'
                            ],
                            wide: [
                                'janvier',
                                'février',
                                'mars',
                                'avril',
                                'mai',
                                'juin',
                                'juillet',
                                'août',
                                'septembre',
                                'octobre',
                                'novembre',
                                'décembre'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    day: ut({
                        values: {
                            narrow: [
                                'D',
                                'L',
                                'M',
                                'M',
                                'J',
                                'V',
                                'S'
                            ],
                            short: [
                                'di',
                                'lu',
                                'ma',
                                'me',
                                'je',
                                've',
                                'sa'
                            ],
                            abbreviated: [
                                'dim.',
                                'lun.',
                                'mar.',
                                'mer.',
                                'jeu.',
                                'ven.',
                                'sam.'
                            ],
                            wide: [
                                'dimanche',
                                'lundi',
                                'mardi',
                                'mercredi',
                                'jeudi',
                                'vendredi',
                                'samedi'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    dayPeriod: ut({
                        values: {
                            narrow: {
                                am: 'AM',
                                pm: 'PM',
                                midnight: 'minuit',
                                noon: 'midi',
                                morning: 'mat.',
                                afternoon: 'ap.m.',
                                evening: 'soir',
                                night: 'mat.'
                            },
                            abbreviated: {
                                am: 'AM',
                                pm: 'PM',
                                midnight: 'minuit',
                                noon: 'midi',
                                morning: 'matin',
                                afternoon: 'après-midi',
                                evening: 'soir',
                                night: 'matin'
                            },
                            wide: {
                                am: 'AM',
                                pm: 'PM',
                                midnight: 'minuit',
                                noon: 'midi',
                                morning: 'du matin',
                                afternoon: 'de l’après-midi',
                                evening: 'du soir',
                                night: 'du matin'
                            }
                        },
                        defaultWidth: 'wide'
                    })
                },
                uc = {
                    ordinalNumber: ft({
                        matchPattern: /^(\d+)(ième|ère|ème|er|e)?/i,
                        parsePattern: /\d+/i,
                        valueCallback: function (e) {
                            return parseInt(e)
                        }
                    }),
                    era: dt({
                        matchPatterns: {
                            narrow: /^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,
                            abbreviated: /^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,
                            wide: /^(avant Jésus-Christ|après Jésus-Christ)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            any: [
                                /^av/i,
                                /^ap/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    quarter: dt({
                        matchPatterns: {
                            narrow: /^T?[1234]/i,
                            abbreviated: /^[1234](er|ème|e)? trim\.?/i,
                            wide: /^[1234](er|ème|e)? trimestre/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            any: [
                                /1/i,
                                /2/i,
                                /3/i,
                                /4/i
                            ]
                        },
                        defaultParseWidth: 'any',
                        valueCallback: function (e) {
                            return e + 1
                        }
                    }),
                    month: dt({
                        matchPatterns: {
                            narrow: /^[jfmasond]/i,
                            abbreviated: /^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\.?/i,
                            wide: /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            narrow: [
                                /^j/i,
                                /^f/i,
                                /^m/i,
                                /^a/i,
                                /^m/i,
                                /^j/i,
                                /^j/i,
                                /^a/i,
                                /^s/i,
                                /^o/i,
                                /^n/i,
                                /^d/i
                            ],
                            any: [
                                /^ja/i,
                                /^f/i,
                                /^mar/i,
                                /^av/i,
                                /^ma/i,
                                /^juin/i,
                                /^juil/i,
                                /^ao/i,
                                /^s/i,
                                /^o/i,
                                /^n/i,
                                /^d/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    day: dt({
                        matchPatterns: {
                            narrow: /^[lmjvsd]/i,
                            short: /^(di|lu|ma|me|je|ve|sa)/i,
                            abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,
                            wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            narrow: [
                                /^d/i,
                                /^l/i,
                                /^m/i,
                                /^m/i,
                                /^j/i,
                                /^v/i,
                                /^s/i
                            ],
                            any: [
                                /^di/i,
                                /^lu/i,
                                /^ma/i,
                                /^me/i,
                                /^je/i,
                                /^ve/i,
                                /^sa/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    dayPeriod: dt({
                        matchPatterns: {
                            narrow: /^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,
                            any: /^([ap]\.?\s?m\.?|du matin|de l'après[-\s]midi|du soir|de la nuit)/i
                        },
                        defaultMatchWidth: 'any',
                        parsePatterns: {
                            any: {
                                am: /^a/i,
                                pm: /^p/i,
                                midnight: /^min/i,
                                noon: /^mid/i,
                                morning: /mat/i,
                                afternoon: /ap/i,
                                evening: /soir/i,
                                night: /nuit/i
                            }
                        },
                        defaultParseWidth: 'any'
                    })
                },
                lc = {
                    code: 'fr',
                    formatDistance: rc,
                    formatLong: ac,
                    formatRelative: oc,
                    localize: sc,
                    match: uc,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                dc = {
                    code: 'fr-CA',
                    formatDistance: rc,
                    formatLong: {
                        date: at({
                            formats: {
                                full: 'EEEE d MMMM y',
                                long: 'd MMMM y',
                                medium: 'd MMM y',
                                short: 'yy-MM-dd'
                            },
                            defaultWidth: 'full'
                        }),
                        time: at({
                            formats: {
                                full: 'HH:mm:ss zzzz',
                                long: 'HH:mm:ss z',
                                medium: 'HH:mm:ss',
                                short: 'HH:mm'
                            },
                            defaultWidth: 'full'
                        }),
                        dateTime: at({
                            formats: {
                                full: '{{date}} \'à\' {{time}}',
                                long: '{{date}} \'à\' {{time}}',
                                medium: '{{date}}, {{time}}',
                                short: '{{date}}, {{time}}'
                            },
                            defaultWidth: 'full'
                        })
                    },
                    formatRelative: oc,
                    localize: sc,
                    match: uc,
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                cc = {
                    date: at({
                        formats: {
                            full: 'EEEE d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'à\' {{time}}',
                            long: '{{date}} \'à\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                mc = {
                    lastWeek: 'eeee \'la semaine dernière à\' p',
                    yesterday: '\'hier à\' p',
                    today: '\'aujourd’hui à\' p',
                    tomorrow: '\'demain à\' p\'',
                    nextWeek: 'eeee \'la semaine prochaine à\' p',
                    other: 'P'
                },
                fc = {
                    code: 'fr-CH',
                    formatDistance: rc,
                    formatLong: cc,
                    formatRelative: function (e, t, n, r) {
                        return mc[e]
                    },
                    localize: sc,
                    match: uc,
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                hc = {
                    lessThanXSeconds: {
                        one: 'minder as 1 sekonde',
                        other: 'minder as {{count}} sekonden'
                    },
                    xSeconds: {
                        one: '1 sekonde',
                        other: '{{count}} sekonden'
                    },
                    halfAMinute: 'oardel minút',
                    lessThanXMinutes: {
                        one: 'minder as 1 minút',
                        other: 'minder as {{count}} minuten'
                    },
                    xMinutes: {
                        one: '1 minút',
                        other: '{{count}} minuten'
                    },
                    aboutXHours: {
                        one: 'sawat 1 oere',
                        other: 'sawat {{count}} oere'
                    },
                    xHours: {
                        one: '1 oere',
                        other: '{{count}} oere'
                    },
                    xDays: {
                        one: '1 dei',
                        other: '{{count}} dagen'
                    },
                    aboutXWeeks: {
                        one: 'sawat 1 wike',
                        other: 'sawat {{count}} wiken'
                    },
                    xWeeks: {
                        one: '1 wike',
                        other: '{{count}} wiken'
                    },
                    aboutXMonths: {
                        one: 'sawat 1 moanne',
                        other: 'sawat {{count}} moannen'
                    },
                    xMonths: {
                        one: '1 moanne',
                        other: '{{count}} moannen'
                    },
                    aboutXYears: {
                        one: 'sawat 1 jier',
                        other: 'sawat {{count}} jier'
                    },
                    xYears: {
                        one: '1 jier',
                        other: '{{count}} jier'
                    },
                    overXYears: {
                        one: 'mear as 1 jier',
                        other: 'mear as {{count}}s jier'
                    },
                    almostXYears: {
                        one: 'hast 1 jier',
                        other: 'hast {{count}} jier'
                    }
                },
                pc = {
                    date: at({
                        formats: {
                            full: 'EEEE d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'dd-MM-y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'om\' {{time}}',
                            long: '{{date}} \'om\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                gc = {
                    lastWeek: '\'ôfrûne\' eeee \'om\' p',
                    yesterday: '\'juster om\' p',
                    today: '\'hjoed om\' p',
                    tomorrow: '\'moarn om\' p',
                    nextWeek: 'eeee \'om\' p',
                    other: 'P'
                },
                vc = {
                    code: 'fy',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof hc[e] ? hc[e] : 1 === t ? hc[e].one : hc[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'oer ' + r : r + ' lyn' : r
                    },
                    formatLong: pc,
                    formatRelative: function (e, t, n, r) {
                        return gc[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + 'e'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'f.K.',
                                    'n.K.'
                                ],
                                abbreviated: [
                                    'f.Kr.',
                                    'n.Kr.'
                                ],
                                wide: [
                                    'foar Kristus',
                                    'nei Kristus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'K1',
                                    'K2',
                                    'K3',
                                    'K4'
                                ],
                                wide: [
                                    '1e fearnsjier',
                                    '2e fearnsjier',
                                    '3e fearnsjier',
                                    '4e fearnsjier'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'j',
                                    'f',
                                    'm',
                                    'a',
                                    'm',
                                    'j',
                                    'j',
                                    'a',
                                    's',
                                    'o',
                                    'n',
                                    'd'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mrt.',
                                    'apr.',
                                    'mai.',
                                    'jun.',
                                    'jul.',
                                    'aug.',
                                    'sep.',
                                    'okt.',
                                    'nov.',
                                    'des.'
                                ],
                                wide: [
                                    'jannewaris',
                                    'febrewaris',
                                    'maart',
                                    'april',
                                    'maaie',
                                    'juny',
                                    'july',
                                    'augustus',
                                    'septimber',
                                    'oktober',
                                    'novimber',
                                    'desimber'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    's',
                                    'm',
                                    't',
                                    'w',
                                    't',
                                    'f',
                                    's'
                                ],
                                short: [
                                    'si',
                                    'mo',
                                    'ti',
                                    'wo',
                                    'to',
                                    'fr',
                                    'so'
                                ],
                                abbreviated: [
                                    'snein',
                                    'moa',
                                    'tii',
                                    'woa',
                                    'ton',
                                    'fre',
                                    'sneon'
                                ],
                                wide: [
                                    'snein',
                                    'moandei',
                                    'tiisdei',
                                    'woansdei',
                                    'tongersdei',
                                    'freed',
                                    'sneon'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'middei',
                                    morning: 'moarns',
                                    afternoon: 'middeis',
                                    evening: 'jûns',
                                    night: 'nachts'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'middei',
                                    morning: 'moarns',
                                    afternoon: 'middeis',
                                    evening: 'jûns',
                                    night: 'nachts'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'middei',
                                    morning: 'moarns',
                                    afternoon: 'middeis',
                                    evening: 'jûns',
                                    night: 'nachts'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)e?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^([fn]\.? ?K\.?)/,
                                abbreviated: /^([fn]\. ?Kr\.?)/,
                                wide: /^((foar|nei) Kristus)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^f/,
                                    /^n/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^K[1234]/i,
                                wide: /^[1234]e fearnsjier/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan.|feb.|mrt.|apr.|mai.|jun.|jul.|aug.|sep.|okt.|nov.|des.)/i,
                                wide: /^(jannewaris|febrewaris|maart|april|maaie|juny|july|augustus|septimber|oktober|novimber|desimber)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^jan/i,
                                    /^feb/i,
                                    /^m(r|a)/i,
                                    /^apr/i,
                                    /^mai/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^aug/i,
                                    /^sep/i,
                                    /^okt/i,
                                    /^nov/i,
                                    /^des/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smtwf]/i,
                                short: /^(si|mo|ti|wo|to|fr|so)/i,
                                abbreviated: /^(snein|moa|tii|woa|ton|fre|sneon)/i,
                                wide: /^(snein|moandei|tiisdei|woansdei|tongersdei|freed|sneon)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^m/i,
                                    /^t/i,
                                    /^w/i,
                                    /^t/i,
                                    /^f/i,
                                    /^s/i
                                ],
                                any: [
                                    /^sn/i,
                                    /^mo/i,
                                    /^ti/i,
                                    /^wo/i,
                                    /^to/i,
                                    /^fr/i,
                                    /^sn/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(am|pm|middernacht|middeis|moarns|middei|jûns|nachts)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^am/i,
                                    pm: /^pm/i,
                                    midnight: /^middernacht/i,
                                    noon: /^middei/i,
                                    morning: /moarns/i,
                                    afternoon: /^middeis/i,
                                    evening: /jûns/i,
                                    night: /nachts/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                yc = {
                    lessThanXSeconds: {
                        one: 'nas lugha na diog',
                        other: 'nas lugha na {{count}} diogan'
                    },
                    xSeconds: {
                        one: '1 diog',
                        two: '2 dhiog',
                        twenty: '20 diog',
                        other: '{{count}} diogan'
                    },
                    halfAMinute: 'leth mhionaid',
                    lessThanXMinutes: {
                        one: 'nas lugha na mionaid',
                        other: 'nas lugha na {{count}} mionaidean'
                    },
                    xMinutes: {
                        one: '1 mionaid',
                        two: '2 mhionaid',
                        twenty: '20 mionaid',
                        other: '{{count}} mionaidean'
                    },
                    aboutXHours: {
                        one: 'mu uair de thìde',
                        other: 'mu {{count}} uairean de thìde'
                    },
                    xHours: {
                        one: '1 uair de thìde',
                        two: '2 uair de thìde',
                        twenty: '20 uair de thìde',
                        other: '{{count}} uairean de thìde'
                    },
                    xDays: {
                        one: '1 là',
                        other: '{{count}} là'
                    },
                    aboutXWeeks: {
                        one: 'mu 1 seachdain',
                        other: 'mu {{count}} seachdainean'
                    },
                    xWeeks: {
                        one: '1 seachdain',
                        other: '{{count}} seachdainean'
                    },
                    aboutXMonths: {
                        one: 'mu mhìos',
                        other: 'mu {{count}} mìosan'
                    },
                    xMonths: {
                        one: '1 mìos',
                        other: '{{count}} mìosan'
                    },
                    aboutXYears: {
                        one: 'mu bhliadhna',
                        other: 'mu {{count}} bliadhnaichean'
                    },
                    xYears: {
                        one: '1 bhliadhna',
                        other: '{{count}} bliadhna'
                    },
                    overXYears: {
                        one: 'còrr is bliadhna',
                        other: 'còrr is {{count}} bliadhnaichean'
                    },
                    almostXYears: {
                        one: 'cha mhòr bliadhna',
                        other: 'cha mhòr {{count}} bliadhnaichean'
                    }
                },
                wc = {
                    date: at({
                        formats: {
                            full: 'EEEE, MMMM do, y',
                            long: 'MMMM do, y',
                            medium: 'MMM d, y',
                            short: 'MM/dd/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'aig\' {{time}}',
                            long: '{{date}} \'aig\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                bc = {
                    lastWeek: '\'mu dheireadh\' eeee \'aig\' p',
                    yesterday: '\'an-dè aig\' p',
                    today: '\'an-diugh aig\' p',
                    tomorrow: '\'a-màireach aig\' p',
                    nextWeek: 'eeee \'aig\' p',
                    other: 'P'
                },
                kc = {
                    code: 'gd',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof yc[e] ? yc[e] : 1 === t ? yc[e].one : 2 === t && yc[e].two ? yc[e].two : 9 === t && yc[e].nine ? yc[e].nine : 20 === t && yc[e].twenty ? yc[e].twenty : 30 === t && yc[e].thirty ? yc[e].thirty : yc[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'ann an ' + r : 'o chionn ' + r : r
                    },
                    formatLong: wc,
                    formatRelative: function (e, t, n, r) {
                        return bc[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e),
                                r = n % 100;
                            if (r > 20 || r < 10) switch (r % 10) {
                                case 1:
                                    return n + 'd';
                                case 2:
                                    return n + 'na'
                            }
                            return 12 === r ? n + 'na' : n + 'mh'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'R',
                                    'A'
                                ],
                                abbreviated: [
                                    'RC',
                                    'AD'
                                ],
                                wide: [
                                    'ro Chrìosta',
                                    'anno domini'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'C1',
                                    'C2',
                                    'C3',
                                    'C4'
                                ],
                                wide: [
                                    'a\' chiad chairteal',
                                    'an dàrna cairteal',
                                    'an treas cairteal',
                                    'an ceathramh cairteal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'F',
                                    'G',
                                    'M',
                                    'G',
                                    'C',
                                    'Ò',
                                    'I',
                                    'L',
                                    'S',
                                    'D',
                                    'S',
                                    'D'
                                ],
                                abbreviated: [
                                    'Faoi',
                                    'Gear',
                                    'Màrt',
                                    'Gibl',
                                    'Cèit',
                                    'Ògmh',
                                    'Iuch',
                                    'Lùn',
                                    'Sult',
                                    'Dàmh',
                                    'Samh',
                                    'Dùbh'
                                ],
                                wide: [
                                    'Am Faoilleach',
                                    'An Gearran',
                                    'Am Màrt',
                                    'An Giblean',
                                    'An Cèitean',
                                    'An t-Ògmhios',
                                    'An t-Iuchar',
                                    'An Lùnastal',
                                    'An t-Sultain',
                                    'An Dàmhair',
                                    'An t-Samhain',
                                    'An Dùbhlachd'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'D',
                                    'L',
                                    'M',
                                    'C',
                                    'A',
                                    'H',
                                    'S'
                                ],
                                short: [
                                    'Dò',
                                    'Lu',
                                    'Mà',
                                    'Ci',
                                    'Ar',
                                    'Ha',
                                    'Sa'
                                ],
                                abbreviated: [
                                    'Did',
                                    'Dil',
                                    'Dim',
                                    'Dic',
                                    'Dia',
                                    'Dih',
                                    'Dis'
                                ],
                                wide: [
                                    'Didòmhnaich',
                                    'Diluain',
                                    'Dimàirt',
                                    'Diciadain',
                                    'Diardaoin',
                                    'Dihaoine',
                                    'Disathairne'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'm',
                                    pm: 'f',
                                    midnight: 'm.o.',
                                    noon: 'm.l.',
                                    morning: 'madainn',
                                    afternoon: 'feasgar',
                                    evening: 'feasgar',
                                    night: 'oidhche'
                                },
                                abbreviated: {
                                    am: 'M.',
                                    pm: 'F.',
                                    midnight: 'meadhan oidhche',
                                    noon: 'meadhan là',
                                    morning: 'madainn',
                                    afternoon: 'feasgar',
                                    evening: 'feasgar',
                                    night: 'oidhche'
                                },
                                wide: {
                                    am: 'm.',
                                    pm: 'f.',
                                    midnight: 'meadhan oidhche',
                                    noon: 'meadhan là',
                                    morning: 'madainn',
                                    afternoon: 'feasgar',
                                    evening: 'feasgar',
                                    night: 'oidhche'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'm',
                                    pm: 'f',
                                    midnight: 'm.o.',
                                    noon: 'm.l.',
                                    morning: 'sa mhadainn',
                                    afternoon: 'feasgar',
                                    evening: 'feasgar',
                                    night: 'air an oidhche'
                                },
                                abbreviated: {
                                    am: 'M.',
                                    pm: 'F.',
                                    midnight: 'meadhan oidhche',
                                    noon: 'meadhan là',
                                    morning: 'sa mhadainn',
                                    afternoon: 'feasgar',
                                    evening: 'feasgar',
                                    night: 'air an oidhche'
                                },
                                wide: {
                                    am: 'm.',
                                    pm: 'f.',
                                    midnight: 'meadhan oidhche',
                                    noon: 'meadhan là',
                                    morning: 'sa mhadainn',
                                    afternoon: 'feasgar',
                                    evening: 'feasgar',
                                    night: 'air an oidhche'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(d|na|tr|mh)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(r|a)/i,
                                abbreviated: /^(r\.?\s?c\.?|r\.?\s?a\.?\s?c\.?|a\.?\s?d\.?|a\.?\s?c\.?)/i,
                                wide: /^(ro Chrìosta|ron aois choitchinn|anno domini|aois choitcheann)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^b/i,
                                    /^(a|c)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^c[1234]/i,
                                wide: /^[1234](cd|na|tr|mh)? cairteal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[fgmcòilsd]/i,
                                abbreviated: /^(faoi|gear|màrt|gibl|cèit|ògmh|iuch|lùn|sult|dàmh|samh|dùbh)/i,
                                wide: /^(am faoilleach|an gearran|am màrt|an giblean|an cèitean|an t-Ògmhios|an t-Iuchar|an lùnastal|an t-Sultain|an dàmhair|an t-Samhain|an dùbhlachd)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^f/i,
                                    /^g/i,
                                    /^m/i,
                                    /^g/i,
                                    /^c/i,
                                    /^ò/i,
                                    /^i/i,
                                    /^l/i,
                                    /^s/i,
                                    /^d/i,
                                    /^s/i,
                                    /^d/i
                                ],
                                any: [
                                    /^fa/i,
                                    /^ge/i,
                                    /^mà/i,
                                    /^gi/i,
                                    /^c/i,
                                    /^ò/i,
                                    /^i/i,
                                    /^l/i,
                                    /^su/i,
                                    /^d/i,
                                    /^sa/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[dlmcahs]/i,
                                short: /^(dò|lu|mà|ci|ar|ha|sa)/i,
                                abbreviated: /^(did|dil|dim|dic|dia|dih|dis)/i,
                                wide: /^(didòmhnaich|diluain|dimàirt|diciadain|diardaoin|dihaoine|disathairne)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^l/i,
                                    /^m/i,
                                    /^c/i,
                                    /^a/i,
                                    /^h/i,
                                    /^s/i
                                ],
                                any: [
                                    /^d/i,
                                    /^l/i,
                                    /^m/i,
                                    /^c/i,
                                    /^a/i,
                                    /^h/i,
                                    /^s/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mi|n|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,
                                any: /^([ap]\.?\s?m\.?|meadhan oidhche|meadhan là|(san|aig) (madainn|feasgar|feasgar|oidhche))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^m/i,
                                    pm: /^f/i,
                                    midnight: /^meadhan oidhche/i,
                                    noon: /^meadhan là/i,
                                    morning: /sa mhadainn/i,
                                    afternoon: /feasgar/i,
                                    evening: /feasgar/i,
                                    night: /air an oidhche/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Mc = {
                    lessThanXSeconds: {
                        one: 'menos dun segundo',
                        other: 'menos de {{count}} segundos'
                    },
                    xSeconds: {
                        one: '1 segundo',
                        other: '{{count}} segundos'
                    },
                    halfAMinute: 'medio minuto',
                    lessThanXMinutes: {
                        one: 'menos dun minuto',
                        other: 'menos de {{count}} minutos'
                    },
                    xMinutes: {
                        one: '1 minuto',
                        other: '{{count}} minutos'
                    },
                    aboutXHours: {
                        one: 'arredor dunha hora',
                        other: 'arredor de {{count}} horas'
                    },
                    xHours: {
                        one: '1 hora',
                        other: '{{count}} horas'
                    },
                    xDays: {
                        one: '1 día',
                        other: '{{count}} días'
                    },
                    aboutXWeeks: {
                        one: 'arredor dunha semana',
                        other: 'arredor de {{count}} semanas'
                    },
                    xWeeks: {
                        one: '1 semana',
                        other: '{{count}} semanas'
                    },
                    aboutXMonths: {
                        one: 'arredor de 1 mes',
                        other: 'arredor de {{count}} meses'
                    },
                    xMonths: {
                        one: '1 mes',
                        other: '{{count}} meses'
                    },
                    aboutXYears: {
                        one: 'arredor dun ano',
                        other: 'arredor de {{count}} anos'
                    },
                    xYears: {
                        one: '1 ano',
                        other: '{{count}} anos'
                    },
                    overXYears: {
                        one: 'máis dun ano',
                        other: 'máis de {{count}} anos'
                    },
                    almostXYears: {
                        one: 'case un ano',
                        other: 'case {{count}} anos'
                    }
                },
                Ec = {
                    date: at({
                        formats: {
                            full: 'EEEE, d \'de\' MMMM y',
                            long: 'd \'de\' MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'ás\' {{time}}',
                            long: '{{date}} \'ás\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Pc = {
                    lastWeek: '\'o\' eeee \'pasado á\' LT',
                    yesterday: '\'onte á\' p',
                    today: '\'hoxe á\' p',
                    tomorrow: '\'mañá á\' p',
                    nextWeek: 'eeee \'á\' p',
                    other: 'P'
                },
                xc = {
                    lastWeek: '\'o\' eeee \'pasado ás\' p',
                    yesterday: '\'onte ás\' p',
                    today: '\'hoxe ás\' p',
                    tomorrow: '\'mañá ás\' p',
                    nextWeek: 'eeee \'ás\' p',
                    other: 'P'
                },
                Sc = {
                    code: 'gl',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Mc[e] ? Mc[e] : 1 === t ? Mc[e].one : Mc[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'en ' + r : 'hai ' + r : r
                    },
                    formatLong: Ec,
                    formatRelative: function (e, t, n, r) {
                        return 1 !== t.getUTCHours() ? xc[e] : Pc[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + 'º'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'AC',
                                    'DC'
                                ],
                                abbreviated: [
                                    'AC',
                                    'DC'
                                ],
                                wide: [
                                    'antes de cristo',
                                    'despois de cristo'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'T1',
                                    'T2',
                                    'T3',
                                    'T4'
                                ],
                                wide: [
                                    '1º trimestre',
                                    '2º trimestre',
                                    '3º trimestre',
                                    '4º trimestre'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'e',
                                    'f',
                                    'm',
                                    'a',
                                    'm',
                                    'j',
                                    'j',
                                    'a',
                                    's',
                                    'o',
                                    'n',
                                    'd'
                                ],
                                abbreviated: [
                                    'xan',
                                    'feb',
                                    'mar',
                                    'abr',
                                    'mai',
                                    'xun',
                                    'xul',
                                    'ago',
                                    'set',
                                    'out',
                                    'nov',
                                    'dec'
                                ],
                                wide: [
                                    'xaneiro',
                                    'febreiro',
                                    'marzo',
                                    'abril',
                                    'maio',
                                    'xuño',
                                    'xullo',
                                    'agosto',
                                    'setembro',
                                    'outubro',
                                    'novembro',
                                    'decembro'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'd',
                                    'l',
                                    'm',
                                    'm',
                                    'j',
                                    'v',
                                    's'
                                ],
                                short: [
                                    'do',
                                    'lu',
                                    'ma',
                                    'me',
                                    'xo',
                                    've',
                                    'sa'
                                ],
                                abbreviated: [
                                    'dom',
                                    'lun',
                                    'mar',
                                    'mer',
                                    'xov',
                                    'ven',
                                    'sab'
                                ],
                                wide: [
                                    'domingo',
                                    'luns',
                                    'martes',
                                    'mércores',
                                    'xoves',
                                    'venres',
                                    'sábado'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'mn',
                                    noon: 'md',
                                    morning: 'mañá',
                                    afternoon: 'tarde',
                                    evening: 'tarde',
                                    night: 'noite'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'medianoite',
                                    noon: 'mediodía',
                                    morning: 'mañá',
                                    afternoon: 'tarde',
                                    evening: 'tardiña',
                                    night: 'noite'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'medianoite',
                                    noon: 'mediodía',
                                    morning: 'mañá',
                                    afternoon: 'tarde',
                                    evening: 'tardiña',
                                    night: 'noite'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'mn',
                                    noon: 'md',
                                    morning: 'da mañá',
                                    afternoon: 'da tarde',
                                    evening: 'da tardiña',
                                    night: 'da noite'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'medianoite',
                                    noon: 'mediodía',
                                    morning: 'da mañá',
                                    afternoon: 'da tarde',
                                    evening: 'da tardiña',
                                    night: 'da noite'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'medianoite',
                                    noon: 'mediodía',
                                    morning: 'da mañá',
                                    afternoon: 'da tarde',
                                    evening: 'da tardiña',
                                    night: 'da noite'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(º)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ac|dc|a|d)/i,
                                abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
                                wide: /^(antes de cristo|antes da era com[uú]n|despois de cristo|era com[uú]n)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ac/i,
                                    /^dc/i
                                ],
                                wide: [
                                    /^(antes de cristo|antes da era com[uú]n)/i,
                                    /^(despois de cristo|era com[uú]n)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^T[1234]/i,
                                wide: /^[1234](º)? trimestre/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[xfmasond]/i,
                                abbreviated: /^(xan|feb|mar|abr|mai|xun|xul|ago|set|out|nov|dec)/i,
                                wide: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^x/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^x/i,
                                    /^x/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^xan/i,
                                    /^feb/i,
                                    /^mar/i,
                                    /^abr/i,
                                    /^mai/i,
                                    /^xun/i,
                                    /^xul/i,
                                    /^ago/i,
                                    /^set/i,
                                    /^out/i,
                                    /^nov/i,
                                    /^dec/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[dlmxvs]/i,
                                short: /^(do|lu|ma|me|xo|ve|sa)/i,
                                abbreviated: /^(dom|lun|mar|mer|xov|ven|sab)/i,
                                wide: /^(domingo|luns|martes|m[eé]rcores|xoves|venres|s[áa]bado)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^l/i,
                                    /^m/i,
                                    /^m/i,
                                    /^x/i,
                                    /^v/i,
                                    /^s/i
                                ],
                                any: [
                                    /^do/i,
                                    /^lu/i,
                                    /^ma/i,
                                    /^me/i,
                                    /^xo/i,
                                    /^ve/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mn|md|(da|[aá]s) (mañ[aá]|tarde|noite))/i,
                                any: /^([ap]\.?\s?m\.?|medianoite|mediod[ií]a|(da|[aá]s) (mañ[aá]|tarde|noite))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mn/i,
                                    noon: /^md/i,
                                    morning: /mañ[aá]/i,
                                    afternoon: /tarde/i,
                                    evening: /tardiña/i,
                                    night: /noite/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                Tc = {
                    lessThanXSeconds: {
                        one: 'હમણાં',
                        other: '​આશરે {{count}} સેકંડ'
                    },
                    xSeconds: {
                        one: '1 સેકંડ',
                        other: '{{count}} સેકંડ'
                    },
                    halfAMinute: 'અડધી મિનિટ',
                    lessThanXMinutes: {
                        one: 'આ મિનિટ',
                        other: '​આશરે {{count}} મિનિટ'
                    },
                    xMinutes: {
                        one: '1 મિનિટ',
                        other: '{{count}} મિનિટ'
                    },
                    aboutXHours: {
                        one: '​આશરે 1 કલાક',
                        other: '​આશરે {{count}} કલાક'
                    },
                    xHours: {
                        one: '1 કલાક',
                        other: '{{count}} કલાક'
                    },
                    xDays: {
                        one: '1 દિવસ',
                        other: '{{count}} દિવસ'
                    },
                    aboutXWeeks: {
                        one: 'આશરે 1 અઠવાડિયું',
                        other: 'આશરે {{count}} અઠવાડિયા'
                    },
                    xWeeks: {
                        one: '1 અઠવાડિયું',
                        other: '{{count}} અઠવાડિયા'
                    },
                    aboutXMonths: {
                        one: 'આશરે 1 મહિનો',
                        other: 'આશરે {{count}} મહિના'
                    },
                    xMonths: {
                        one: '1 મહિનો',
                        other: '{{count}} મહિના'
                    },
                    aboutXYears: {
                        one: 'આશરે 1 વર્ષ',
                        other: 'આશરે {{count}} વર્ષ'
                    },
                    xYears: {
                        one: '1 વર્ષ',
                        other: '{{count}} વર્ષ'
                    },
                    overXYears: {
                        one: '1 વર્ષથી વધુ',
                        other: '{{count}} વર્ષથી વધુ'
                    },
                    almostXYears: {
                        one: 'લગભગ 1 વર્ષ',
                        other: 'લગભગ {{count}} વર્ષ'
                    }
                },
                Cc = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM, y',
                            long: 'd MMMM, y',
                            medium: 'd MMM, y',
                            short: 'd/M/yy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'hh:mm:ss a zzzz',
                            long: 'hh:mm:ss a z',
                            medium: 'hh:mm:ss a',
                            short: 'hh:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Wc = {
                    lastWeek: '\'પાછલા\' eeee p',
                    yesterday: '\'ગઈકાલે\' p',
                    today: '\'આજે\' p',
                    tomorrow: '\'આવતીકાલે\' p',
                    nextWeek: 'eeee p',
                    other: 'P'
                },
                jc = {
                    code: 'gu',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Tc[e] ? Tc[e] : 1 === t ? Tc[e].one : Tc[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + 'માં' : r + ' પહેલાં' : r
                    },
                    formatLong: Cc,
                    formatRelative: function (e, t, n, r) {
                        return Wc[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ઈસપૂ',
                                    'ઈસ'
                                ],
                                abbreviated: [
                                    'ઈ.સ.પૂર્વે',
                                    'ઈ.સ.'
                                ],
                                wide: [
                                    'ઈસવીસન પૂર્વે',
                                    'ઈસવીસન'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1લો ત્રિમાસ',
                                    '2જો ત્રિમાસ',
                                    '3જો ત્રિમાસ',
                                    '4થો ત્રિમાસ'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'જા',
                                    'ફે',
                                    'મા',
                                    'એ',
                                    'મે',
                                    'જૂ',
                                    'જુ',
                                    'ઓ',
                                    'સ',
                                    'ઓ',
                                    'ન',
                                    'ડિ'
                                ],
                                abbreviated: [
                                    'જાન્યુ',
                                    'ફેબ્રુ',
                                    'માર્ચ',
                                    'એપ્રિલ',
                                    'મે',
                                    'જૂન',
                                    'જુલાઈ',
                                    'ઑગસ્ટ',
                                    'સપ્ટે',
                                    'ઓક્ટો',
                                    'નવે',
                                    'ડિસે'
                                ],
                                wide: [
                                    'જાન્યુઆરી',
                                    'ફેબ્રુઆરી',
                                    'માર્ચ',
                                    'એપ્રિલ',
                                    'મે',
                                    'જૂન',
                                    'જુલાઇ',
                                    'ઓગસ્ટ',
                                    'સપ્ટેમ્બર',
                                    'ઓક્ટોબર',
                                    'નવેમ્બર',
                                    'ડિસેમ્બર'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ર',
                                    'સો',
                                    'મં',
                                    'બુ',
                                    'ગુ',
                                    'શુ',
                                    'શ'
                                ],
                                short: [
                                    'ર',
                                    'સો',
                                    'મં',
                                    'બુ',
                                    'ગુ',
                                    'શુ',
                                    'શ'
                                ],
                                abbreviated: [
                                    'રવિ',
                                    'સોમ',
                                    'મંગળ',
                                    'બુધ',
                                    'ગુરુ',
                                    'શુક્ર',
                                    'શનિ'
                                ],
                                wide: [
                                    'રવિવાર',
                                    'સોમવાર',
                                    'મંગળવાર',
                                    'બુધવાર',
                                    'ગુરુવાર',
                                    'શુક્રવાર',
                                    'શનિવાર'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'મ.રાત્રિ',
                                    noon: 'બ.',
                                    morning: 'સવારે',
                                    afternoon: 'બપોરે',
                                    evening: 'સાંજે',
                                    night: 'રાત્રે'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: '​મધ્યરાત્રિ',
                                    noon: 'બપોરે',
                                    morning: 'સવારે',
                                    afternoon: 'બપોરે',
                                    evening: 'સાંજે',
                                    night: 'રાત્રે'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: '​મધ્યરાત્રિ',
                                    noon: 'બપોરે',
                                    morning: 'સવારે',
                                    afternoon: 'બપોરે',
                                    evening: 'સાંજે',
                                    night: 'રાત્રે'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'મ.રાત્રિ',
                                    noon: 'બપોરે',
                                    morning: 'સવારે',
                                    afternoon: 'બપોરે',
                                    evening: 'સાંજે',
                                    night: 'રાત્રે'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'મધ્યરાત્રિ',
                                    noon: 'બપોરે',
                                    morning: 'સવારે',
                                    afternoon: 'બપોરે',
                                    evening: 'સાંજે',
                                    night: 'રાત્રે'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: '​મધ્યરાત્રિ',
                                    noon: 'બપોરે',
                                    morning: 'સવારે',
                                    afternoon: 'બપોરે',
                                    evening: 'સાંજે',
                                    night: 'રાત્રે'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(લ|જ|થ|ઠ્ઠ|મ)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ઈસપૂ|ઈસ)/i,
                                abbreviated: /^(ઈ\.સ\.પૂર્વે|ઈ\.સ\.)/i,
                                wide: /^(ઈસવીસન\sપૂર્વે|ઈસવીસન)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(ઈસપૂ|ઈસ)/i,
                                    /^(ઈ\.સ\.પૂર્વે|ઈ\.સ\.)/i,
                                    /^(ઈસવીસન\sપૂર્વે|ઈસવીસન)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234](લો|જો|થો)? ત્રિમાસ/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[જાફેમાએમેજૂજુઓસઓનડિ]/i,
                                abbreviated: /^(જાન્યુ|ફેબ્રુ|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઈ|ઑગસ્ટ|સપ્ટે|ઓક્ટો|નવે|ડિસે)/i,
                                wide: /^(જાન્યુઆરી|ફેબ્રુઆરી|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઇ|ઓગસ્ટ|સપ્ટેમ્બર|ઓક્ટોબર|નવેમ્બર|ડિસેમ્બર)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^જા/i,
                                    /^ફે/i,
                                    /^મા/i,
                                    /^એ/i,
                                    /^મે/i,
                                    /^જૂ/i,
                                    /^જુ/i,
                                    /^ઑગ/i,
                                    /^સ/i,
                                    /^ઓક્ટો/i,
                                    /^ન/i,
                                    /^ડિ/i
                                ],
                                any: [
                                    /^જા/i,
                                    /^ફે/i,
                                    /^મા/i,
                                    /^એ/i,
                                    /^મે/i,
                                    /^જૂ/i,
                                    /^જુ/i,
                                    /^ઑગ/i,
                                    /^સ/i,
                                    /^ઓક્ટો/i,
                                    /^ન/i,
                                    /^ડિ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(ર|સો|મં|બુ|ગુ|શુ|શ)/i,
                                short: /^(ર|સો|મં|બુ|ગુ|શુ|શ)/i,
                                abbreviated: /^(રવિ|સોમ|મંગળ|બુધ|ગુરુ|શુક્ર|શનિ)/i,
                                wide: /^(રવિવાર|સોમવાર|મંગળવાર|બુધવાર|ગુરુવાર|શુક્રવાર|શનિવાર)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ર/i,
                                    /^સો/i,
                                    /^મં/i,
                                    /^બુ/i,
                                    /^ગુ/i,
                                    /^શુ/i,
                                    /^શ/i
                                ],
                                any: [
                                    /^ર/i,
                                    /^સો/i,
                                    /^મં/i,
                                    /^બુ/i,
                                    /^ગુ/i,
                                    /^શુ/i,
                                    /^શ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|મ\.?|સ|બ|સાં|રા)/i,
                                any: /^(a|p|મ\.?|સ|બ|સાં|રા)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^મ\.?/i,
                                    noon: /^બ/i,
                                    morning: /સ/i,
                                    afternoon: /બ/i,
                                    evening: /સાં/i,
                                    night: /રા/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Dc = {
                    lessThanXSeconds: {
                        one: 'פחות משנייה',
                        two: 'פחות משתי שניות',
                        other: 'פחות מ־{{count}} שניות'
                    },
                    xSeconds: {
                        one: 'שנייה',
                        two: 'שתי שניות',
                        other: '{{count}} שניות'
                    },
                    halfAMinute: 'חצי דקה',
                    lessThanXMinutes: {
                        one: 'פחות מדקה',
                        two: 'פחות משתי דקות',
                        other: 'פחות מ־{{count}} דקות'
                    },
                    xMinutes: {
                        one: 'דקה',
                        two: 'שתי דקות',
                        other: '{{count}} דקות'
                    },
                    aboutXHours: {
                        one: 'כשעה',
                        two: 'כשעתיים',
                        other: 'כ־{{count}} שעות'
                    },
                    xHours: {
                        one: 'שעה',
                        two: 'שעתיים',
                        other: '{{count}} שעות'
                    },
                    xDays: {
                        one: 'יום',
                        two: 'יומיים',
                        other: '{{count}} ימים'
                    },
                    aboutXWeeks: {
                        one: 'כשבוע',
                        two: 'כשבועיים',
                        other: 'כ־{{count}} שבועות'
                    },
                    xWeeks: {
                        one: 'שבוע',
                        two: 'שבועיים',
                        other: '{{count}} שבועות'
                    },
                    aboutXMonths: {
                        one: 'כחודש',
                        two: 'כחודשיים',
                        other: 'כ־{{count}} חודשים'
                    },
                    xMonths: {
                        one: 'חודש',
                        two: 'חודשיים',
                        other: '{{count}} חודשים'
                    },
                    aboutXYears: {
                        one: 'כשנה',
                        two: 'כשנתיים',
                        other: 'כ־{{count}} שנים'
                    },
                    xYears: {
                        one: 'שנה',
                        two: 'שנתיים',
                        other: '{{count}} שנים'
                    },
                    overXYears: {
                        one: 'יותר משנה',
                        two: 'יותר משנתיים',
                        other: 'יותר מ־{{count}} שנים'
                    },
                    almostXYears: {
                        one: 'כמעט שנה',
                        two: 'כמעט שנתיים',
                        other: 'כמעט {{count}} שנים'
                    }
                },
                Nc = {
                    date: at({
                        formats: {
                            full: 'EEEE, d בMMMM y',
                            long: 'd בMMMM y',
                            medium: 'd בMMM y',
                            short: 'd.M.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'בשעה\' {{time}}',
                            long: '{{date}} \'בשעה\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Ic = {
                    lastWeek: 'eeee \'שעבר בשעה\' p',
                    yesterday: '\'אתמול בשעה\' p',
                    today: '\'היום בשעה\' p',
                    tomorrow: '\'מחר בשעה\' p',
                    nextWeek: 'eeee \'בשעה\' p',
                    other: 'P'
                },
                zc = {
                    ordinalNumber: function (e, t) {
                        var n = Number(e);
                        if (n <= 0 || n > 10) return n;
                        var r = String((t || {
                        }).unit),
                            a = n - 1;
                        return ['year',
                            'hour',
                            'minute',
                            'second'].indexOf(r) >= 0 ? [
                                'ראשונה',
                                'שנייה',
                                'שלישית',
                                'רביעית',
                                'חמישית',
                                'שישית',
                                'שביעית',
                                'שמינית',
                                'תשיעית',
                                'עשירית'
                            ][a] : [
                                'ראשון',
                                'שני',
                                'שלישי',
                                'רביעי',
                                'חמישי',
                                'שישי',
                                'שביעי',
                                'שמיני',
                                'תשיעי',
                                'עשירי'
                            ][a]
                    },
                    era: ut({
                        values: {
                            narrow: [
                                'לפנה״ס',
                                'לספירה'
                            ],
                            abbreviated: [
                                'לפנה״ס',
                                'לספירה'
                            ],
                            wide: [
                                'לפני הספירה',
                                'לספירה'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    quarter: ut({
                        values: {
                            narrow: [
                                '1',
                                '2',
                                '3',
                                '4'
                            ],
                            abbreviated: [
                                'Q1',
                                'Q2',
                                'Q3',
                                'Q4'
                            ],
                            wide: [
                                'רבעון 1',
                                'רבעון 2',
                                'רבעון 3',
                                'רבעון 4'
                            ]
                        },
                        defaultWidth: 'wide',
                        argumentCallback: function (e) {
                            return Number(e) - 1
                        }
                    }),
                    month: ut({
                        values: {
                            narrow: [
                                '1',
                                '2',
                                '3',
                                '4',
                                '5',
                                '6',
                                '7',
                                '8',
                                '9',
                                '10',
                                '11',
                                '12'
                            ],
                            abbreviated: [
                                'ינו׳',
                                'פבר׳',
                                'מרץ',
                                'אפר׳',
                                'מאי',
                                'יוני',
                                'יולי',
                                'אוג׳',
                                'ספט׳',
                                'אוק׳',
                                'נוב׳',
                                'דצמ׳'
                            ],
                            wide: [
                                'ינואר',
                                'פברואר',
                                'מרץ',
                                'אפריל',
                                'מאי',
                                'יוני',
                                'יולי',
                                'אוגוסט',
                                'ספטמבר',
                                'אוקטובר',
                                'נובמבר',
                                'דצמבר'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    day: ut({
                        values: {
                            narrow: [
                                'א׳',
                                'ב׳',
                                'ג׳',
                                'ד׳',
                                'ה׳',
                                'ו׳',
                                'ש׳'
                            ],
                            short: [
                                'א׳',
                                'ב׳',
                                'ג׳',
                                'ד׳',
                                'ה׳',
                                'ו׳',
                                'ש׳'
                            ],
                            abbreviated: [
                                'יום א׳',
                                'יום ב׳',
                                'יום ג׳',
                                'יום ד׳',
                                'יום ה׳',
                                'יום ו׳',
                                'שבת'
                            ],
                            wide: [
                                'יום ראשון',
                                'יום שני',
                                'יום שלישי',
                                'יום רביעי',
                                'יום חמישי',
                                'יום שישי',
                                'יום שבת'
                            ]
                        },
                        defaultWidth: 'wide'
                    }),
                    dayPeriod: ut({
                        values: {
                            narrow: {
                                am: 'לפנה״צ',
                                pm: 'אחה״צ',
                                midnight: 'חצות',
                                noon: 'צהריים',
                                morning: 'בוקר',
                                afternoon: 'אחר הצהריים',
                                evening: 'ערב',
                                night: 'לילה'
                            },
                            abbreviated: {
                                am: 'לפנה״צ',
                                pm: 'אחה״צ',
                                midnight: 'חצות',
                                noon: 'צהריים',
                                morning: 'בוקר',
                                afternoon: 'אחר הצהריים',
                                evening: 'ערב',
                                night: 'לילה'
                            },
                            wide: {
                                am: 'לפנה״צ',
                                pm: 'אחה״צ',
                                midnight: 'חצות',
                                noon: 'צהריים',
                                morning: 'בוקר',
                                afternoon: 'אחר הצהריים',
                                evening: 'ערב',
                                night: 'לילה'
                            }
                        },
                        defaultWidth: 'wide',
                        formattingValues: {
                            narrow: {
                                am: 'לפנה״צ',
                                pm: 'אחה״צ',
                                midnight: 'חצות',
                                noon: 'צהריים',
                                morning: 'בבוקר',
                                afternoon: 'בצהריים',
                                evening: 'בערב',
                                night: 'בלילה'
                            },
                            abbreviated: {
                                am: 'לפנה״צ',
                                pm: 'אחה״צ',
                                midnight: 'חצות',
                                noon: 'צהריים',
                                morning: 'בבוקר',
                                afternoon: 'אחר הצהריים',
                                evening: 'בערב',
                                night: 'בלילה'
                            },
                            wide: {
                                am: 'לפנה״צ',
                                pm: 'אחה״צ',
                                midnight: 'חצות',
                                noon: 'צהריים',
                                morning: 'בבוקר',
                                afternoon: 'אחר הצהריים',
                                evening: 'בערב',
                                night: 'בלילה'
                            }
                        },
                        defaultFormattingWidth: 'wide'
                    })
                },
                Rc = [
                    'רא',
                    'שנ',
                    'של',
                    'רב',
                    'ח',
                    'שי',
                    'שב',
                    'שמ',
                    'ת',
                    'ע'
                ],
                Ac = {
                    code: 'he',
                    formatDistance: function (e, t, n) {
                        return n = n || {
                        },
                            'xDays' === e && n.addSuffix && t <= 2 ? n.comparison > 0 ? {
                                1: 'מחר',
                                2: 'מחרתיים'
                            }
                            [
                                t
                            ] : {
                                1: 'אתמול',
                                2: 'שלשום'
                            }
                            [
                            t
                            ] : (r = 'string' == typeof Dc[e] ? Dc[e] : 1 === t ? Dc[e].one : 2 === t ? Dc[e].two : Dc[e].other.replace('{{count}}', t), n.addSuffix ? n.comparison > 0 ? 'בעוד ' + r : 'לפני ' + r : r);
                        var r
                    },
                    formatLong: Nc,
                    formatRelative: function (e, t, n, r) {
                        return Ic[e]
                    },
                    localize: zc,
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+|(ראשון|שני|שלישי|רביעי|חמישי|שישי|שביעי|שמיני|תשיעי|עשירי|ראשונה|שנייה|שלישית|רביעית|חמישית|שישית|שביעית|שמינית|תשיעית|עשירית))/i,
                            parsePattern: /^(\d+|רא|שנ|של|רב|ח|שי|שב|שמ|ת|ע)/i,
                            valueCallback: function (e) {
                                var t = parseInt(e, 10);
                                return isNaN(t) ? Rc.indexOf(e) + 1 : t
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^ל(ספירה|פנה״ס)/i,
                                abbreviated: /^ל(ספירה|פנה״ס)/i,
                                wide: /^ל(פני ה)?ספירה/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^לפ/i,
                                    /^לס/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^רבעון [1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^\d+/i,
                                abbreviated: /^(ינו|פבר|מרץ|אפר|מאי|יוני|יולי|אוג|ספט|אוק|נוב|דצמ)׳?/i,
                                wide: /^(ינואר|פברואר|מרץ|אפריל|מאי|יוני|יולי|אוגוסט|ספטמבר|אוקטובר|נובמבר|דצמבר)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^1$/i,
                                    /^2/i,
                                    /^3/i,
                                    /^4/i,
                                    /^5/i,
                                    /^6/i,
                                    /^7/i,
                                    /^8/i,
                                    /^9/i,
                                    /^10/i,
                                    /^11/i,
                                    /^12/i
                                ],
                                any: [
                                    /^ינ/i,
                                    /^פ/i,
                                    /^מר/i,
                                    /^אפ/i,
                                    /^מא/i,
                                    /^יונ/i,
                                    /^יול/i,
                                    /^אוג/i,
                                    /^ס/i,
                                    /^אוק/i,
                                    /^נ/i,
                                    /^ד/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[אבגדהוש]׳/i,
                                short: /^[אבגדהוש]׳/i,
                                abbreviated: /^(שבת|יום (א|ב|ג|ד|ה|ו)׳)/i,
                                wide: /^יום (ראשון|שני|שלישי|רביעי|חמישי|שישי|שבת)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                abbreviated: [
                                    /א׳$/i,
                                    /ב׳$/i,
                                    /ג׳$/i,
                                    /ד׳$/i,
                                    /ה׳$/i,
                                    /ו׳$/i,
                                    /^ש/i
                                ],
                                wide: [
                                    /ן$/i,
                                    /ני$/i,
                                    /לישי$/i,
                                    /עי$/i,
                                    /מישי$/i,
                                    /שישי$/i,
                                    /ת$/i
                                ],
                                any: [
                                    /^א/i,
                                    /^ב/i,
                                    /^ג/i,
                                    /^ד/i,
                                    /^ה/i,
                                    /^ו/i,
                                    /^ש/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(אחר ה|ב)?(חצות|צהריים|בוקר|ערב|לילה|אחה״צ|לפנה״צ)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^לפ/i,
                                    pm: /^אחה/i,
                                    midnight: /^ח/i,
                                    noon: /^צ/i,
                                    morning: /בוקר/i,
                                    afternoon: /בצ|אחר/i,
                                    evening: /ערב/i,
                                    night: /לילה/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Oc = {
                    locale: {
                        1: '१',
                        2: '२',
                        3: '३',
                        4: '४',
                        5: '५',
                        6: '६',
                        7: '७',
                        8: '८',
                        9: '९',
                        0: '०'
                    },
                    number: {
                        '१': '1',
                        '२': '2',
                        '३': '3',
                        '४': '4',
                        '५': '5',
                        '६': '6',
                        '७': '7',
                        '८': '8',
                        '९': '9',
                        '०': '0'
                    }
                };
            function Hc(e) {
                return e.toString().replace(/\d/g, (function (e) {
                    return Oc.locale[e]
                }))
            }
            var _c = {
                ordinalNumber: function (e, t) {
                    return Hc(Number(e))
                },
                era: ut({
                    values: {
                        narrow: [
                            'ईसा-पूर्व',
                            'ईस्वी'
                        ],
                        abbreviated: [
                            'ईसा-पूर्व',
                            'ईस्वी'
                        ],
                        wide: [
                            'ईसा-पूर्व',
                            'ईसवी सन'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                quarter: ut({
                    values: {
                        narrow: [
                            '1',
                            '2',
                            '3',
                            '4'
                        ],
                        abbreviated: [
                            'ति1',
                            'ति2',
                            'ति3',
                            'ति4'
                        ],
                        wide: [
                            'पहली तिमाही',
                            'दूसरी तिमाही',
                            'तीसरी तिमाही',
                            'चौथी तिमाही'
                        ]
                    },
                    defaultWidth: 'wide',
                    argumentCallback: function (e) {
                        return e - 1
                    }
                }),
                month: ut({
                    values: {
                        narrow: [
                            'ज',
                            'फ़',
                            'मा',
                            'अ',
                            'मई',
                            'जू',
                            'जु',
                            'अग',
                            'सि',
                            'अक्टू',
                            'न',
                            'दि'
                        ],
                        abbreviated: [
                            'जन',
                            'फ़र',
                            'मार्च',
                            'अप्रैल',
                            'मई',
                            'जून',
                            'जुल',
                            'अग',
                            'सित',
                            'अक्टू',
                            'नव',
                            'दिस'
                        ],
                        wide: [
                            'जनवरी',
                            'फ़रवरी',
                            'मार्च',
                            'अप्रैल',
                            'मई',
                            'जून',
                            'जुलाई',
                            'अगस्त',
                            'सितंबर',
                            'अक्टूबर',
                            'नवंबर',
                            'दिसंबर'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                day: ut({
                    values: {
                        narrow: [
                            'र',
                            'सो',
                            'मं',
                            'बु',
                            'गु',
                            'शु',
                            'श'
                        ],
                        short: [
                            'र',
                            'सो',
                            'मं',
                            'बु',
                            'गु',
                            'शु',
                            'श'
                        ],
                        abbreviated: [
                            'रवि',
                            'सोम',
                            'मंगल',
                            'बुध',
                            'गुरु',
                            'शुक्र',
                            'शनि'
                        ],
                        wide: [
                            'रविवार',
                            'सोमवार',
                            'मंगलवार',
                            'बुधवार',
                            'गुरुवार',
                            'शुक्रवार',
                            'शनिवार'
                        ]
                    },
                    defaultWidth: 'wide'
                }),
                dayPeriod: ut({
                    values: {
                        narrow: {
                            am: 'पूर्वाह्न',
                            pm: 'अपराह्न',
                            midnight: 'मध्यरात्रि',
                            noon: 'दोपहर',
                            morning: 'सुबह',
                            afternoon: 'दोपहर',
                            evening: 'शाम',
                            night: 'रात'
                        },
                        abbreviated: {
                            am: 'पूर्वाह्न',
                            pm: 'अपराह्न',
                            midnight: 'मध्यरात्रि',
                            noon: 'दोपहर',
                            morning: 'सुबह',
                            afternoon: 'दोपहर',
                            evening: 'शाम',
                            night: 'रात'
                        },
                        wide: {
                            am: 'पूर्वाह्न',
                            pm: 'अपराह्न',
                            midnight: 'मध्यरात्रि',
                            noon: 'दोपहर',
                            morning: 'सुबह',
                            afternoon: 'दोपहर',
                            evening: 'शाम',
                            night: 'रात'
                        }
                    },
                    defaultWidth: 'wide',
                    formattingValues: {
                        narrow: {
                            am: 'पूर्वाह्न',
                            pm: 'अपराह्न',
                            midnight: 'मध्यरात्रि',
                            noon: 'दोपहर',
                            morning: 'सुबह',
                            afternoon: 'दोपहर',
                            evening: 'शाम',
                            night: 'रात'
                        },
                        abbreviated: {
                            am: 'पूर्वाह्न',
                            pm: 'अपराह्न',
                            midnight: 'मध्यरात्रि',
                            noon: 'दोपहर',
                            morning: 'सुबह',
                            afternoon: 'दोपहर',
                            evening: 'शाम',
                            night: 'रात'
                        },
                        wide: {
                            am: 'पूर्वाह्न',
                            pm: 'अपराह्न',
                            midnight: 'मध्यरात्रि',
                            noon: 'दोपहर',
                            morning: 'सुबह',
                            afternoon: 'दोपहर',
                            evening: 'शाम',
                            night: 'रात'
                        }
                    },
                    defaultFormattingWidth: 'wide'
                })
            },
                Lc = {
                    lessThanXSeconds: {
                        one: '१ सेकंड से कम',
                        other: '{{count}} सेकंड से कम'
                    },
                    xSeconds: {
                        one: '१ सेकंड',
                        other: '{{count}} सेकंड'
                    },
                    halfAMinute: 'आधा मिनट',
                    lessThanXMinutes: {
                        one: '१ मिनट से कम',
                        other: '{{count}} मिनट से कम'
                    },
                    xMinutes: {
                        one: '१ मिनट',
                        other: '{{count}} मिनट'
                    },
                    aboutXHours: {
                        one: 'लगभग १ घंटा',
                        other: 'लगभग {{count}} घंटे'
                    },
                    xHours: {
                        one: '१ घंटा',
                        other: '{{count}} घंटे'
                    },
                    xDays: {
                        one: '१ दिन',
                        other: '{{count}} दिन'
                    },
                    aboutXWeeks: {
                        one: 'लगभग १ सप्ताह',
                        other: 'लगभग {{count}} सप्ताह'
                    },
                    xWeeks: {
                        one: '१ सप्ताह',
                        other: '{{count}} सप्ताह'
                    },
                    aboutXMonths: {
                        one: 'लगभग १ महीना',
                        other: 'लगभग {{count}} महीने'
                    },
                    xMonths: {
                        one: '१ महीना',
                        other: '{{count}} महीने'
                    },
                    aboutXYears: {
                        one: 'लगभग १ वर्ष',
                        other: 'लगभग {{count}} वर्ष'
                    },
                    xYears: {
                        one: '१ वर्ष',
                        other: '{{count}} वर्ष'
                    },
                    overXYears: {
                        one: '१ वर्ष से अधिक',
                        other: '{{count}} वर्ष से अधिक'
                    },
                    almostXYears: {
                        one: 'लगभग १ वर्ष',
                        other: 'लगभग {{count}} वर्ष'
                    }
                },
                Fc = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM, y',
                            long: 'do MMMM, y',
                            medium: 'd MMM, y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'को\' {{time}}',
                            long: '{{date}} \'को\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Xc = {
                    lastWeek: '\'पिछले\' eeee p',
                    yesterday: '\'कल\' p',
                    today: '\'आज\' p',
                    tomorrow: '\'कल\' p',
                    nextWeek: 'eeee \'को\' p',
                    other: 'P'
                },
                Uc = {
                    ordinalNumber: ft({
                        matchPattern: /^[०१२३४५६७८९]+/i,
                        parsePattern: /^[०१२३४५६७८९]+/i,
                        valueCallback: function (e) {
                            var t = e.toString().replace(/[१२३४५६७८९०]/g, (function (e) {
                                return Oc.number[e]
                            }));
                            return Number(t)
                        }
                    }),
                    era: dt({
                        matchPatterns: {
                            narrow: /^(ईसा-पूर्व|ईस्वी)/i,
                            abbreviated: /^(ईसा\.?\s?पूर्व\.?|ईसा\.?)/i,
                            wide: /^(ईसा-पूर्व|ईसवी पूर्व|ईसवी सन|ईसवी)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            any: [
                                /^b/i,
                                /^(a|c)/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    quarter: dt({
                        matchPatterns: {
                            narrow: /^[1234]/i,
                            abbreviated: /^ति[1234]/i,
                            wide: /^[1234](पहली|दूसरी|तीसरी|चौथी)? तिमाही/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            any: [
                                /1/i,
                                /2/i,
                                /3/i,
                                /4/i
                            ]
                        },
                        defaultParseWidth: 'any',
                        valueCallback: function (e) {
                            return e + 1
                        }
                    }),
                    month: dt({
                        matchPatterns: {
                            narrow: /^[जफ़माअप्मईजूनजुअगसिअक्तनदि]/i,
                            abbreviated: /^(जन|फ़र|मार्च|अप्|मई|जून|जुल|अग|सित|अक्तू|नव|दिस)/i,
                            wide: /^(जनवरी|फ़रवरी|मार्च|अप्रैल|मई|जून|जुलाई|अगस्त|सितंबर|अक्तूबर|नवंबर|दिसंबर)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            narrow: [
                                /^ज/i,
                                /^फ़/i,
                                /^मा/i,
                                /^अप्/i,
                                /^मई/i,
                                /^जू/i,
                                /^जु/i,
                                /^अग/i,
                                /^सि/i,
                                /^अक्तू/i,
                                /^न/i,
                                /^दि/i
                            ],
                            any: [
                                /^जन/i,
                                /^फ़/i,
                                /^मा/i,
                                /^अप्/i,
                                /^मई/i,
                                /^जू/i,
                                /^जु/i,
                                /^अग/i,
                                /^सि/i,
                                /^अक्तू/i,
                                /^नव/i,
                                /^दिस/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    day: dt({
                        matchPatterns: {
                            narrow: /^[रविसोममंगलबुधगुरुशुक्रशनि]/i,
                            short: /^(रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि)/i,
                            abbreviated: /^(रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि)/i,
                            wide: /^(रविवार|सोमवार|मंगलवार|बुधवार|गुरुवार|शुक्रवार|शनिवार)/i
                        },
                        defaultMatchWidth: 'wide',
                        parsePatterns: {
                            narrow: [
                                /^रवि/i,
                                /^सोम/i,
                                /^मंगल/i,
                                /^बुध/i,
                                /^गुरु/i,
                                /^शुक्र/i,
                                /^शनि/i
                            ],
                            any: [
                                /^रवि/i,
                                /^सोम/i,
                                /^मंगल/i,
                                /^बुध/i,
                                /^गुरु/i,
                                /^शुक्र/i,
                                /^शनि/i
                            ]
                        },
                        defaultParseWidth: 'any'
                    }),
                    dayPeriod: dt({
                        matchPatterns: {
                            narrow: /^(पू|अ|म|द.\?|सु|दो|शा|रा)/i,
                            any: /^(पूर्वाह्न|अपराह्न|म|द.\?|सु|दो|शा|रा)/i
                        },
                        defaultMatchWidth: 'any',
                        parsePatterns: {
                            any: {
                                am: /^पूर्वाह्न/i,
                                pm: /^अपराह्न/i,
                                midnight: /^मध्य/i,
                                noon: /^दो/i,
                                morning: /सु/i,
                                afternoon: /दो/i,
                                evening: /शा/i,
                                night: /रा/i
                            }
                        },
                        defaultParseWidth: 'any'
                    })
                },
                qc = {
                    code: 'hi',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = Lc[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', Hc(t)),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? r + 'मे ' : r + ' पहले' : r
                    },
                    formatLong: Fc,
                    formatRelative: function (e, t, n, r) {
                        return Xc[e]
                    },
                    localize: _c,
                    match: Uc,
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 4
                    }
                },
                Gc = {
                    lessThanXSeconds: {
                        one: {
                            standalone: 'manje od 1 sekunde',
                            withPrepositionAgo: 'manje od 1 sekunde',
                            withPrepositionIn: 'manje od 1 sekundu'
                        },
                        dual: 'manje od {{count}} sekunde',
                        other: 'manje od {{count}} sekundi'
                    },
                    xSeconds: {
                        one: {
                            standalone: '1 sekunda',
                            withPrepositionAgo: '1 sekunde',
                            withPrepositionIn: '1 sekundu'
                        },
                        dual: '{{count}} sekunde',
                        other: '{{count}} sekundi'
                    },
                    halfAMinute: 'pola minute',
                    lessThanXMinutes: {
                        one: {
                            standalone: 'manje od 1 minute',
                            withPrepositionAgo: 'manje od 1 minute',
                            withPrepositionIn: 'manje od 1 minutu'
                        },
                        dual: 'manje od {{count}} minute',
                        other: 'manje od {{count}} minuta'
                    },
                    xMinutes: {
                        one: {
                            standalone: '1 minuta',
                            withPrepositionAgo: '1 minute',
                            withPrepositionIn: '1 minutu'
                        },
                        dual: '{{count}} minute',
                        other: '{{count}} minuta'
                    },
                    aboutXHours: {
                        one: {
                            standalone: 'oko 1 sat',
                            withPrepositionAgo: 'oko 1 sat',
                            withPrepositionIn: 'oko 1 sat'
                        },
                        dual: 'oko {{count}} sata',
                        other: 'oko {{count}} sati'
                    },
                    xHours: {
                        one: {
                            standalone: '1 sat',
                            withPrepositionAgo: '1 sat',
                            withPrepositionIn: '1 sat'
                        },
                        dual: '{{count}} sata',
                        other: '{{count}} sati'
                    },
                    xDays: {
                        one: {
                            standalone: '1 dan',
                            withPrepositionAgo: '1 dan',
                            withPrepositionIn: '1 dan'
                        },
                        dual: '{{count}} dana',
                        other: '{{count}} dana'
                    },
                    aboutXWeeks: {
                        one: {
                            standalone: 'oko 1 tjedan',
                            withPrepositionAgo: 'oko 1 tjedan',
                            withPrepositionIn: 'oko 1 tjedan'
                        },
                        dual: 'oko {{count}} tjedna',
                        other: 'oko {{count}} tjedana'
                    },
                    xWeeks: {
                        one: {
                            standalone: '1 tjedan',
                            withPrepositionAgo: '1 tjedan',
                            withPrepositionIn: '1 tjedan'
                        },
                        dual: '{{count}} tjedna',
                        other: '{{count}} tjedana'
                    },
                    aboutXMonths: {
                        one: {
                            standalone: 'oko 1 mjesec',
                            withPrepositionAgo: 'oko 1 mjesec',
                            withPrepositionIn: 'oko 1 mjesec'
                        },
                        dual: 'oko {{count}} mjeseca',
                        other: 'oko {{count}} mjeseci'
                    },
                    xMonths: {
                        one: {
                            standalone: '1 mjesec',
                            withPrepositionAgo: '1 mjesec',
                            withPrepositionIn: '1 mjesec'
                        },
                        dual: '{{count}} mjeseca',
                        other: '{{count}} mjeseci'
                    },
                    aboutXYears: {
                        one: {
                            standalone: 'oko 1 godinu',
                            withPrepositionAgo: 'oko 1 godinu',
                            withPrepositionIn: 'oko 1 godinu'
                        },
                        dual: 'oko {{count}} godine',
                        other: 'oko {{count}} godina'
                    },
                    xYears: {
                        one: {
                            standalone: '1 godina',
                            withPrepositionAgo: '1 godine',
                            withPrepositionIn: '1 godinu'
                        },
                        dual: '{{count}} godine',
                        other: '{{count}} godina'
                    },
                    overXYears: {
                        one: {
                            standalone: 'preko 1 godinu',
                            withPrepositionAgo: 'preko 1 godinu',
                            withPrepositionIn: 'preko 1 godinu'
                        },
                        dual: 'preko {{count}} godine',
                        other: 'preko {{count}} godina'
                    },
                    almostXYears: {
                        one: {
                            standalone: 'gotovo 1 godinu',
                            withPrepositionAgo: 'gotovo 1 godinu',
                            withPrepositionIn: 'gotovo 1 godinu'
                        },
                        dual: 'gotovo {{count}} godine',
                        other: 'gotovo {{count}} godina'
                    }
                },
                Vc = {
                    date: at({
                        formats: {
                            full: 'EEEE, d. MMMM y.',
                            long: 'd. MMMM y.',
                            medium: 'd. MMM y.',
                            short: 'dd. MM. y.'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss (zzzz)',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'u\' {{time}}',
                            long: '{{date}} \'u\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Yc = {
                    lastWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'prošlu nedjelju u\' p';
                            case 3:
                                return '\'prošlu srijedu u\' p';
                            case 6:
                                return '\'prošlu subotu u\' p';
                            default:
                                return '\'prošli\' EEEE \'u\' p'
                        }
                    },
                    yesterday: '\'jučer u\' p',
                    today: '\'danas u\' p',
                    tomorrow: '\'sutra u\' p',
                    nextWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'iduću nedjelju u\' p';
                            case 3:
                                return '\'iduću srijedu u\' p';
                            case 6:
                                return '\'iduću subotu u\' p';
                            default:
                                return '\'prošli\' EEEE \'u\' p'
                        }
                    },
                    other: 'P'
                },
                Bc = {
                    code: 'hr',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Gc[e] ? Gc[e] : 1 === t ? n.addSuffix ? n.comparison > 0 ? Gc[e].one.withPrepositionIn : Gc[e].one.withPrepositionAgo : Gc[e].one.standalone : t % 10 > 1 && t % 10 < 5 && '1' !== String(t).substr(- 2, 1) ? Gc[e].dual.replace('{{count}}', t) : Gc[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'za ' + r : 'prije ' + r : r
                    },
                    formatLong: Vc,
                    formatRelative: function (e, t, n, r) {
                        var a = Yc[e];
                        return 'function' == typeof a ? a(t) : a
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e);
                            return String(t).concat('.')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'pr.n.e.',
                                    'AD'
                                ],
                                abbreviated: [
                                    'pr. Kr.',
                                    'po. Kr.'
                                ],
                                wide: [
                                    'Prije Krista',
                                    'Poslije Krista'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.'
                                ],
                                abbreviated: [
                                    '1. kv.',
                                    '2. kv.',
                                    '3. kv.',
                                    '4. kv.'
                                ],
                                wide: [
                                    '1. kvartal',
                                    '2. kvartal',
                                    '3. kvartal',
                                    '4. kvartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.',
                                    '5.',
                                    '6.',
                                    '7.',
                                    '8.',
                                    '9.',
                                    '10.',
                                    '11.',
                                    '12.'
                                ],
                                abbreviated: [
                                    'sij',
                                    'velj',
                                    'ožu',
                                    'tra',
                                    'svi',
                                    'lip',
                                    'srp',
                                    'kol',
                                    'ruj',
                                    'lis',
                                    'stu',
                                    'pro'
                                ],
                                wide: [
                                    'siječanj',
                                    'veljača',
                                    'ožujak',
                                    'travanj',
                                    'svibanj',
                                    'lipanj',
                                    'srpanj',
                                    'kolovoz',
                                    'rujan',
                                    'listopad',
                                    'studeni',
                                    'prosinac'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.',
                                    '5.',
                                    '6.',
                                    '7.',
                                    '8.',
                                    '9.',
                                    '10.',
                                    '11.',
                                    '12.'
                                ],
                                abbreviated: [
                                    'sij',
                                    'velj',
                                    'ožu',
                                    'tra',
                                    'svi',
                                    'lip',
                                    'srp',
                                    'kol',
                                    'ruj',
                                    'lis',
                                    'stu',
                                    'pro'
                                ],
                                wide: [
                                    'siječnja',
                                    'veljače',
                                    'ožujka',
                                    'travnja',
                                    'svibnja',
                                    'lipnja',
                                    'srpnja',
                                    'kolovoza',
                                    'rujna',
                                    'listopada',
                                    'studenog',
                                    'prosinca'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'N',
                                    'P',
                                    'U',
                                    'S',
                                    'Č',
                                    'P',
                                    'S'
                                ],
                                short: [
                                    'ned',
                                    'pon',
                                    'uto',
                                    'sri',
                                    'čet',
                                    'pet',
                                    'sub'
                                ],
                                abbreviated: [
                                    'ned',
                                    'pon',
                                    'uto',
                                    'sri',
                                    'čet',
                                    'pet',
                                    'sub'
                                ],
                                wide: [
                                    'nedjelja',
                                    'ponedjeljak',
                                    'utorak',
                                    'srijeda',
                                    'četvrtak',
                                    'petak',
                                    'subota'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutro',
                                    afternoon: 'popodne',
                                    evening: 'navečer',
                                    night: 'noću'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutro',
                                    afternoon: 'popodne',
                                    evening: 'navečer',
                                    night: 'noću'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutro',
                                    afternoon: 'poslije podne',
                                    evening: 'navečer',
                                    night: 'noću'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutro',
                                    afternoon: 'popodne',
                                    evening: 'navečer',
                                    night: 'noću'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutro',
                                    afternoon: 'popodne',
                                    evening: 'navečer',
                                    night: 'noću'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutro',
                                    afternoon: 'poslije podne',
                                    evening: 'navečer',
                                    night: 'noću'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\./i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(pr\.n\.e\.|AD)/i,
                                abbreviated: /^(pr\.\s?Kr\.|po\.\s?Kr\.)/i,
                                wide: /^(Prije Krista|prije nove ere|Poslije Krista|nova era)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^pr/i,
                                    /^(po|nova)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]\.\s?kv\.?/i,
                                wide: /^[1234]\. kvartal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(10|11|12|[123456789])\./i,
                                abbreviated: /^(sij|velj|(ožu|ozu)|tra|svi|lip|srp|kol|ruj|lis|stu|pro)/i,
                                wide: /^((siječanj|siječnja|sijecanj|sijecnja)|(veljača|veljače|veljaca|veljace)|(ožujak|ožujka|ozujak|ozujka)|(travanj|travnja)|(svibanj|svibnja)|(lipanj|lipnja)|(srpanj|srpnja)|(kolovoz|kolovoza)|(rujan|rujna)|(listopad|listopada)|(studeni|studenog)|(prosinac|prosinca))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /(10|11|12|[123456789])/i
                                ],
                                abbreviated: [
                                    /^sij/i,
                                    /^velj/i,
                                    /^(ožu|ozu)/i,
                                    /^tra/i,
                                    /^svi/i,
                                    /^lip/i,
                                    /^srp/i,
                                    /^kol/i,
                                    /^ruj/i,
                                    /^lis/i,
                                    /^stu/i,
                                    /^pro/i
                                ],
                                wide: [
                                    /^sij/i,
                                    /^velj/i,
                                    /^(ožu|ozu)/i,
                                    /^tra/i,
                                    /^svi/i,
                                    /^lip/i,
                                    /^srp/i,
                                    /^kol/i,
                                    /^ruj/i,
                                    /^lis/i,
                                    /^stu/i,
                                    /^pro/i
                                ]
                            },
                            defaultParseWidth: 'wide'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[npusčc]/i,
                                short: /^(ned|pon|uto|sri|(čet|cet)|pet|sub)/i,
                                abbreviated: /^(ned|pon|uto|sri|(čet|cet)|pet|sub)/i,
                                wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(četvrtak|cetvrtak)|petak|subota)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^m/i,
                                    /^t/i,
                                    /^w/i,
                                    /^t/i,
                                    /^f/i,
                                    /^s/i
                                ],
                                any: [
                                    /^su/i,
                                    /^m/i,
                                    /^tu/i,
                                    /^w/i,
                                    /^th/i,
                                    /^f/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(am|pm|ponoc|ponoć|(po)?podne|navecer|navečer|noću|poslije podne|ujutro)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^pono/i,
                                    noon: /^pod/i,
                                    morning: /jutro/i,
                                    afternoon: /(poslije\s|po)+podne/i,
                                    evening: /(navece|naveče)/i,
                                    night: /(nocu|noću)/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                $c = Bc,
                Qc = {
                    lessThanXSeconds: {
                        one: 'mwens pase yon segond',
                        other: 'mwens pase {{count}} segond'
                    },
                    xSeconds: {
                        one: '1 segond',
                        other: '{{count}} segond'
                    },
                    halfAMinute: '30 segond',
                    lessThanXMinutes: {
                        one: 'mwens pase yon minit',
                        other: 'mwens pase {{count}} minit'
                    },
                    xMinutes: {
                        one: '1 minit',
                        other: '{{count}} minit'
                    },
                    aboutXHours: {
                        one: 'anviwon inè',
                        other: 'anviwon {{count}} è'
                    },
                    xHours: {
                        one: '1 lè',
                        other: '{{count}} lè'
                    },
                    xDays: {
                        one: '1 jou',
                        other: '{{count}} jou'
                    },
                    aboutXWeeks: {
                        one: 'anviwon 1 semèn',
                        other: 'anviwon {{count}} semèn'
                    },
                    xWeeks: {
                        one: '1 semèn',
                        other: '{{count}} semèn'
                    },
                    aboutXMonths: {
                        one: 'anviwon 1 mwa',
                        other: 'anviwon {{count}} mwa'
                    },
                    xMonths: {
                        one: '1 mwa',
                        other: '{{count}} mwa'
                    },
                    aboutXYears: {
                        one: 'anviwon 1 an',
                        other: 'anviwon {{count}} an'
                    },
                    xYears: {
                        one: '1 an',
                        other: '{{count}} an'
                    },
                    overXYears: {
                        one: 'plis pase 1 an',
                        other: 'plis pase {{count}} an'
                    },
                    almostXYears: {
                        one: 'prèske 1 an',
                        other: 'prèske {{count}} an'
                    }
                },
                Kc = {
                    date: at({
                        formats: {
                            full: 'EEEE d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'nan lè\' {{time}}',
                            long: '{{date}} \'nan lè\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Jc = {
                    lastWeek: 'eeee \'pase nan lè\' p',
                    yesterday: '\'yè nan lè\' p',
                    today: '\'jodi a\' p',
                    tomorrow: '\'demen nan lè\' p\'',
                    nextWeek: 'eeee \'pwochen nan lè\' p',
                    other: 'P'
                },
                Zc = {
                    code: 'ht',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Qc[e] ? Qc[e] : 1 === t ? Qc[e].one : Qc[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'nan ' + r : 'sa fè ' + r : r
                    },
                    formatLong: Kc,
                    formatRelative: function (e, t, n, r) {
                        return Jc[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            return String((t || {
                            }).unit),
                                0 === n ? n : n + (1 === n ? 'ye' : 'yèm')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'av. J.-K',
                                    'ap. J.-K'
                                ],
                                abbreviated: [
                                    'av. J.-K',
                                    'ap. J.-K'
                                ],
                                wide: [
                                    'anvan Jezi Kris',
                                    'apre Jezi Kris'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    'T1',
                                    'T2',
                                    'T3',
                                    'T4'
                                ],
                                abbreviated: [
                                    '1ye trim.',
                                    '2yèm trim.',
                                    '3yèm trim.',
                                    '4yèm trim.'
                                ],
                                wide: [
                                    '1ye trimès',
                                    '2yèm trimès',
                                    '3yèm trimès',
                                    '4yèm trimès'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'O',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'janv.',
                                    'fevr.',
                                    'mas',
                                    'avr.',
                                    'me',
                                    'jen',
                                    'jiyè',
                                    'out',
                                    'sept.',
                                    'okt.',
                                    'nov.',
                                    'des.'
                                ],
                                wide: [
                                    'janvye',
                                    'fevrye',
                                    'mas',
                                    'avril',
                                    'me',
                                    'jen',
                                    'jiyè',
                                    'out',
                                    'septanm',
                                    'oktòb',
                                    'novanm',
                                    'desanm'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'D',
                                    'L',
                                    'M',
                                    'M',
                                    'J',
                                    'V',
                                    'S'
                                ],
                                short: [
                                    'di',
                                    'le',
                                    'ma',
                                    'mè',
                                    'je',
                                    'va',
                                    'sa'
                                ],
                                abbreviated: [
                                    'dim.',
                                    'len.',
                                    'mad.',
                                    'mèk.',
                                    'jed.',
                                    'van.',
                                    'sam.'
                                ],
                                wide: [
                                    'dimanch',
                                    'lendi',
                                    'madi',
                                    'mèkredi',
                                    'jedi',
                                    'vandredi',
                                    'samdi'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'minwit',
                                    noon: 'midi',
                                    morning: 'mat.',
                                    afternoon: 'ap.m.',
                                    evening: 'swa',
                                    night: 'mat.'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'minwit',
                                    noon: 'midi',
                                    morning: 'maten',
                                    afternoon: 'aprèmidi',
                                    evening: 'swa',
                                    night: 'maten'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'minwit',
                                    noon: 'midi',
                                    morning: 'nan maten',
                                    afternoon: 'nan aprèmidi',
                                    evening: 'nan aswè',
                                    night: 'nan maten'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(ye|yèm)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(av\.J\.K|ap\.J\.K|ap\.J\.-K)/i,
                                abbreviated: /^(av\.J\.-K|av\.J-K|apr\.J\.-K|apr\.J-K|ap\.J-K)/i,
                                wide: /^(avan Jezi Kris|apre Jezi Kris)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^av/i,
                                    /^ap/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^t[1234]/i,
                                wide: /^[1234](ye|yèm)? trimès/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(janv|fevr|mas|avr|me|jen|jiyè|out|sept|okt|nov|des)\.?/i,
                                wide: /^(janvye|fevrye|mas|avril|me|jen|jiyè|out|septanm|oktòb|novanm|desanm)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^o/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^ma/i,
                                    /^av/i,
                                    /^me/i,
                                    /^je/i,
                                    /^ji/i,
                                    /^ou/i,
                                    /^s/i,
                                    /^ok/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[lmjvsd]/i,
                                short: /^(di|le|ma|me|je|va|sa)/i,
                                abbreviated: /^(dim|len|mad|mèk|jed|van|sam)\.?/i,
                                wide: /^(dimanch|lendi|madi|mèkredi|jedi|vandredi|samdi)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^l/i,
                                    /^m/i,
                                    /^m/i,
                                    /^j/i,
                                    /^v/i,
                                    /^s/i
                                ],
                                any: [
                                    /^di/i,
                                    /^le/i,
                                    /^ma/i,
                                    /^mè/i,
                                    /^je/i,
                                    /^va/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|minwit|midi|mat\.?|ap\.?m\.?|swa)/i,
                                any: /^([ap]\.?\s?m\.?|nan maten|nan aprèmidi|nan aswè)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^min/i,
                                    noon: /^mid/i,
                                    morning: /mat/i,
                                    afternoon: /ap/i,
                                    evening: /sw/i,
                                    night: /nwit/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                em = {
                    about: 'körülbelül',
                    over: 'több mint',
                    almost: 'majdnem',
                    lessthan: 'kevesebb mint'
                },
                tm = {
                    xseconds: ' másodperc',
                    halfaminute: 'fél perc',
                    xminutes: ' perc',
                    xhours: ' óra',
                    xdays: ' nap',
                    xweeks: ' hét',
                    xmonths: ' hónap',
                    xyears: ' év'
                },
                nm = {
                    xseconds: {
                        '-1': ' másodperccel ezelőtt',
                        1: ' másodperc múlva',
                        0: ' másodperce'
                    },
                    halfaminute: {
                        '-1': 'fél perccel ezelőtt',
                        1: 'fél perc múlva',
                        0: 'fél perce'
                    },
                    xminutes: {
                        '-1': ' perccel ezelőtt',
                        1: ' perc múlva',
                        0: ' perce'
                    },
                    xhours: {
                        '-1': ' órával ezelőtt',
                        1: ' óra múlva',
                        0: ' órája'
                    },
                    xdays: {
                        '-1': ' nappal ezelőtt',
                        1: ' nap múlva',
                        0: ' napja'
                    },
                    xweeks: {
                        '-1': ' héttel ezelőtt',
                        1: ' hét múlva',
                        0: ' hete'
                    },
                    xmonths: {
                        '-1': ' hónappal ezelőtt',
                        1: ' hónap múlva',
                        0: ' hónapja'
                    },
                    xyears: {
                        '-1': ' évvel ezelőtt',
                        1: ' év múlva',
                        0: ' éve'
                    }
                },
                rm = {
                    date: at({
                        formats: {
                            full: 'y. MMMM d., EEEE',
                            long: 'y. MMMM d.',
                            medium: 'y. MMM d.',
                            short: 'y. MM. dd.'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                am = [
                    'vasárnap',
                    'hétfőn',
                    'kedden',
                    'szerdán',
                    'csütörtökön',
                    'pénteken',
                    'szombaton'
                ];
            function im(e) {
                return function (t, n, r) {
                    var a = t.getUTCDay();
                    return (e ? '' : '\'múlt\' ') + '\'' + am[a] + '\' p\'-kor\''
                }
            }
            var om = {
                lastWeek: im(!1),
                yesterday: '\'tegnap\' p\'-kor\'',
                today: '\'ma\' p\'-kor\'',
                tomorrow: '\'holnap\' p\'-kor\'',
                nextWeek: im(!0),
                other: 'P'
            },
                sm = {
                    code: 'hu',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a,
                            i,
                            o,
                            s,
                            u,
                            l = e.match(/about|over|almost|lessthan/i),
                            d = e.replace(l, '');
                        return a = t,
                            i = n.addSuffix,
                            o = d.toLowerCase(),
                            s = n.comparison,
                            u = i ? nm[o][s] : tm[o],
                            r = 'halfaminute' === o ? u : a + u,
                            l && (r = em[l[0].toLowerCase()] + ' ' + r),
                            r
                    },
                    formatLong: rm,
                    formatRelative: function (e, t, n, r) {
                        var a = om[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ie.',
                                    'isz.'
                                ],
                                abbreviated: [
                                    'i. e.',
                                    'i. sz.'
                                ],
                                wide: [
                                    'Krisztus előtt',
                                    'időszámításunk szerint'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.'
                                ],
                                abbreviated: [
                                    '1. n.év',
                                    '2. n.év',
                                    '3. n.év',
                                    '4. n.év'
                                ],
                                wide: [
                                    '1. negyedév',
                                    '2. negyedév',
                                    '3. negyedév',
                                    '4. negyedév'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'I.',
                                    'II.',
                                    'III.',
                                    'IV.'
                                ],
                                abbreviated: [
                                    'I. n.év',
                                    'II. n.év',
                                    'III. n.év',
                                    'IV. n.év'
                                ],
                                wide: [
                                    'I. negyedév',
                                    'II. negyedév',
                                    'III. negyedév',
                                    'IV. negyedév'
                                ]
                            },
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'Á',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'Sz',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'febr.',
                                    'márc.',
                                    'ápr.',
                                    'máj.',
                                    'jún.',
                                    'júl.',
                                    'aug.',
                                    'szept.',
                                    'okt.',
                                    'nov.',
                                    'dec.'
                                ],
                                wide: [
                                    'január',
                                    'február',
                                    'március',
                                    'április',
                                    'május',
                                    'június',
                                    'július',
                                    'augusztus',
                                    'szeptember',
                                    'október',
                                    'november',
                                    'december'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'V',
                                    'H',
                                    'K',
                                    'Sz',
                                    'Cs',
                                    'P',
                                    'Sz'
                                ],
                                short: [
                                    'V',
                                    'H',
                                    'K',
                                    'Sze',
                                    'Cs',
                                    'P',
                                    'Szo'
                                ],
                                abbreviated: [
                                    'V',
                                    'H',
                                    'K',
                                    'Sze',
                                    'Cs',
                                    'P',
                                    'Szo'
                                ],
                                wide: [
                                    'vasárnap',
                                    'hétfő',
                                    'kedd',
                                    'szerda',
                                    'csütörtök',
                                    'péntek',
                                    'szombat'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'de.',
                                    pm: 'du.',
                                    midnight: 'éjfél',
                                    noon: 'dél',
                                    morning: 'reggel',
                                    afternoon: 'du.',
                                    evening: 'este',
                                    night: 'éjjel'
                                },
                                abbreviated: {
                                    am: 'de.',
                                    pm: 'du.',
                                    midnight: 'éjfél',
                                    noon: 'dél',
                                    morning: 'reggel',
                                    afternoon: 'du.',
                                    evening: 'este',
                                    night: 'éjjel'
                                },
                                wide: {
                                    am: 'de.',
                                    pm: 'du.',
                                    midnight: 'éjfél',
                                    noon: 'dél',
                                    morning: 'reggel',
                                    afternoon: 'délután',
                                    evening: 'este',
                                    night: 'éjjel'
                                }
                            },
                            defaultWidth: 'wide',
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\.?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ie\.|isz\.)/i,
                                abbreviated: /^(i\.\s?e\.?|b?\s?c\s?e|i\.\s?sz\.?)/i,
                                wide: /^(Krisztus előtt|időszámításunk előtt|időszámításunk szerint|i\. sz\.)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /ie/i,
                                    /isz/i
                                ],
                                abbreviated: [
                                    /^(i\.?\s?e\.?|b\s?ce)/i,
                                    /^(i\.?\s?sz\.?|c\s?e)/i
                                ],
                                any: [
                                    /előtt/i,
                                    /(szerint|i. sz.)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]\.?/i,
                                abbreviated: /^[1234]?\.?\s?n\.év/i,
                                wide: /^([1234]|I|II|III|IV)?\.?\s?negyedév/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1|I$/i,
                                    /2|II$/i,
                                    /3|III/i,
                                    /4|IV/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmaásond]|sz/i,
                                abbreviated: /^(jan\.?|febr\.?|márc\.?|ápr\.?|máj\.?|jún\.?|júl\.?|aug\.?|szept\.?|okt\.?|nov\.?|dec\.?)/i,
                                wide: /^(január|február|március|április|május|június|július|augusztus|szeptember|október|november|december)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a|á/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s|sz/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^már/i,
                                    /^áp/i,
                                    /^máj/i,
                                    /^jún/i,
                                    /^júl/i,
                                    /^au/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^([vhkpc]|sz|cs|sz)/i,
                                short: /^([vhkp]|sze|cs|szo)/i,
                                abbreviated: /^([vhkp]|sze|cs|szo)/i,
                                wide: /^(vasárnap|hétfő|kedd|szerda|csütörtök|péntek|szombat)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^v/i,
                                    /^h/i,
                                    /^k/i,
                                    /^sz/i,
                                    /^c/i,
                                    /^p/i,
                                    /^sz/i
                                ],
                                any: [
                                    /^v/i,
                                    /^h/i,
                                    /^k/i,
                                    /^sze/i,
                                    /^c/i,
                                    /^p/i,
                                    /^szo/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^((de|du)\.?|éjfél|délután|dél|reggel|este|éjjel)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^de\.?/i,
                                    pm: /^du\.?/i,
                                    midnight: /^éjf/i,
                                    noon: /^dé/i,
                                    morning: /reg/i,
                                    afternoon: /^délu\.?/i,
                                    evening: /es/i,
                                    night: /éjj/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                um = sm,
                lm = {
                    lessThanXSeconds: {
                        one: 'ավելի քիչ քան 1 վայրկյան',
                        other: 'ավելի քիչ քան {{count}} վայրկյան'
                    },
                    xSeconds: {
                        one: '1 վայրկյան',
                        other: '{{count}} վայրկյան'
                    },
                    halfAMinute: 'կես րոպե',
                    lessThanXMinutes: {
                        one: 'ավելի քիչ քան 1 րոպե',
                        other: 'ավելի քիչ քան {{count}} րոպե'
                    },
                    xMinutes: {
                        one: '1 րոպե',
                        other: '{{count}} րոպե'
                    },
                    aboutXHours: {
                        one: 'մոտ 1 ժամ',
                        other: 'մոտ {{count}} ժամ'
                    },
                    xHours: {
                        one: '1 ժամ',
                        other: '{{count}} ժամ'
                    },
                    xDays: {
                        one: '1 օր',
                        other: '{{count}} օր'
                    },
                    aboutXWeeks: {
                        one: 'մոտ 1 շաբաթ',
                        other: 'մոտ {{count}} շաբաթ'
                    },
                    xWeeks: {
                        one: '1 շաբաթ',
                        other: '{{count}} շաբաթ'
                    },
                    aboutXMonths: {
                        one: 'մոտ 1 ամիս',
                        other: 'մոտ {{count}} ամիս'
                    },
                    xMonths: {
                        one: '1 ամիս',
                        other: '{{count}} ամիս'
                    },
                    aboutXYears: {
                        one: 'մոտ 1 տարի',
                        other: 'մոտ {{count}} տարի'
                    },
                    xYears: {
                        one: '1 տարի',
                        other: '{{count}} տարի'
                    },
                    overXYears: {
                        one: 'ավելի քան 1 տարի',
                        other: 'ավելի քան {{count}} տարի'
                    },
                    almostXYears: {
                        one: 'համարյա 1 տարի',
                        other: 'համարյա {{count}} տարի'
                    }
                },
                dm = {
                    date: at({
                        formats: {
                            full: 'd MMMM, y, EEEE',
                            long: 'd MMMM, y',
                            medium: 'd MMM, y',
                            short: 'dd.MM.yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'ժ․\'{{time}}',
                            long: '{{date}} \'ժ․\'{{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                cm = {
                    lastWeek: '\'նախորդ\' eeee p\'֊ին\'',
                    yesterday: '\'երեկ\' p\'֊ին\'',
                    today: '\'այսօր\' p\'֊ին\'',
                    tomorrow: '\'վաղը\' p\'֊ին\'',
                    nextWeek: '\'հաջորդ\' eeee p\'֊ին\'',
                    other: 'P'
                },
                mm = {
                    code: 'hy',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof lm[e] ? lm[e] : 1 === t ? lm[e].one : lm[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + ' հետո' : r + ' առաջ' : r
                    },
                    formatLong: dm,
                    formatRelative: function (e, t, n, r) {
                        return cm[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e),
                                r = n % 100;
                            return r < 10 && r % 10 == 1 ? n + '֊ին' : n + '֊րդ'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'Ք',
                                    'Մ'
                                ],
                                abbreviated: [
                                    'ՔԱ',
                                    'ՄԹ'
                                ],
                                wide: [
                                    'Քրիստոսից առաջ',
                                    'Մեր թվարկության'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Ք1',
                                    'Ք2',
                                    'Ք3',
                                    'Ք4'
                                ],
                                wide: [
                                    '1֊ին քառորդ',
                                    '2֊րդ քառորդ',
                                    '3֊րդ քառորդ',
                                    '4֊րդ քառորդ'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'Հ',
                                    'Փ',
                                    'Մ',
                                    'Ա',
                                    'Մ',
                                    'Հ',
                                    'Հ',
                                    'Օ',
                                    'Ս',
                                    'Հ',
                                    'Ն',
                                    'Դ'
                                ],
                                abbreviated: [
                                    'հուն',
                                    'փետ',
                                    'մար',
                                    'ապր',
                                    'մայ',
                                    'հուն',
                                    'հուլ',
                                    'օգս',
                                    'սեպ',
                                    'հոկ',
                                    'նոյ',
                                    'դեկ'
                                ],
                                wide: [
                                    'հունվար',
                                    'փետրվար',
                                    'մարտ',
                                    'ապրիլ',
                                    'մայիս',
                                    'հունիս',
                                    'հուլիս',
                                    'օգոստոս',
                                    'սեպտեմբեր',
                                    'հոկտեմբեր',
                                    'նոյեմբեր',
                                    'դեկտեմբեր'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Կ',
                                    'Ե',
                                    'Ե',
                                    'Չ',
                                    'Հ',
                                    'Ո',
                                    'Շ'
                                ],
                                short: [
                                    'կր',
                                    'եր',
                                    'եք',
                                    'չք',
                                    'հգ',
                                    'ուր',
                                    'շբ'
                                ],
                                abbreviated: [
                                    'կիր',
                                    'երկ',
                                    'երք',
                                    'չոր',
                                    'հնգ',
                                    'ուրբ',
                                    'շաբ'
                                ],
                                wide: [
                                    'կիրակի',
                                    'երկուշաբթի',
                                    'երեքշաբթի',
                                    'չորեքշաբթի',
                                    'հինգշաբթի',
                                    'ուրբաթ',
                                    'շաբաթ'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'կեսգշ',
                                    noon: 'կեսօր',
                                    morning: 'առավոտ',
                                    afternoon: 'ցերեկ',
                                    evening: 'երեկո',
                                    night: 'գիշեր'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'կեսգիշեր',
                                    noon: 'կեսօր',
                                    morning: 'առավոտ',
                                    afternoon: 'ցերեկ',
                                    evening: 'երեկո',
                                    night: 'գիշեր'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'կեսգիշեր',
                                    noon: 'կեսօր',
                                    morning: 'առավոտ',
                                    afternoon: 'ցերեկ',
                                    evening: 'երեկո',
                                    night: 'գիշեր'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'կեսգշ',
                                    noon: 'կեսօր',
                                    morning: 'առավոտը',
                                    afternoon: 'ցերեկը',
                                    evening: 'երեկոյան',
                                    night: 'գիշերը'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'կեսգիշերին',
                                    noon: 'կեսօրին',
                                    morning: 'առավոտը',
                                    afternoon: 'ցերեկը',
                                    evening: 'երեկոյան',
                                    night: 'գիշերը'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'կեսգիշերին',
                                    noon: 'կեսօրին',
                                    morning: 'առավոտը',
                                    afternoon: 'ցերեկը',
                                    evening: 'երեկոյան',
                                    night: 'գիշերը'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)((-|֊)?(ին|րդ))?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(Ք|Մ)/i,
                                abbreviated: /^(Ք\.?\s?Ա\.?|Մ\.?\s?Թ\.?\s?Ա\.?|Մ\.?\s?Թ\.?|Ք\.?\s?Հ\.?)/i,
                                wide: /^(քրիստոսից առաջ|մեր թվարկությունից առաջ|մեր թվարկության|քրիստոսից հետո)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(ք|մ)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^ք[1234]/i,
                                wide: /^[1234]((-|֊)?(ին|րդ)) քառորդ/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[հփմաօսնդ]/i,
                                abbreviated: /^(հուն|փետ|մար|ապր|մայ|հուն|հուլ|օգս|սեպ|հոկ|նոյ|դեկ)/i,
                                wide: /^(հունվար|փետրվար|մարտ|ապրիլ|մայիս|հունիս|հուլիս|օգոստոս|սեպտեմբեր|հոկտեմբեր|նոյեմբեր|դեկտեմբեր)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^հ/i,
                                    /^փ/i,
                                    /^մ/i,
                                    /^ա/i,
                                    /^մ/i,
                                    /^հ/i,
                                    /^հ/i,
                                    /^օ/i,
                                    /^ս/i,
                                    /^հ/i,
                                    /^ն/i,
                                    /^դ/i
                                ],
                                any: [
                                    /^հու/i,
                                    /^փ/i,
                                    /^մար/i,
                                    /^ա/i,
                                    /^մայ/i,
                                    /^հուն/i,
                                    /^հուլ/i,
                                    /^օ/i,
                                    /^ս/i,
                                    /^հոկ/i,
                                    /^ն/i,
                                    /^դ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[եչհոշկ]/i,
                                short: /^(կր|եր|եք|չք|հգ|ուր|շբ)/i,
                                abbreviated: /^(կիր|երկ|երք|չոր|հնգ|ուրբ|շաբ)/i,
                                wide: /^(կիրակի|երկուշաբթի|երեքշաբթի|չորեքշաբթի|հինգշաբթի|ուրբաթ|շաբաթ)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^կ/i,
                                    /^ե/i,
                                    /^ե/i,
                                    /^չ/i,
                                    /^հ/i,
                                    /^(ո|Ո)/,
                                    /^շ/i
                                ],
                                short: [
                                    /^կ/i,
                                    /^եր/i,
                                    /^եք/i,
                                    /^չ/i,
                                    /^հ/i,
                                    /^(ո|Ո)/,
                                    /^շ/i
                                ],
                                abbreviated: [
                                    /^կ/i,
                                    /^երկ/i,
                                    /^երք/i,
                                    /^չ/i,
                                    /^հ/i,
                                    /^(ո|Ո)/,
                                    /^շ/i
                                ],
                                wide: [
                                    /^կ/i,
                                    /^երկ/i,
                                    /^երե/i,
                                    /^չ/i,
                                    /^հ/i,
                                    /^(ո|Ո)/,
                                    /^շ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^([ap]|կեսգշ|կեսօր|(առավոտը?|ցերեկը?|երեկո(յան)?|գիշերը?))/i,
                                any: /^([ap]\.?\s?m\.?|կեսգիշեր(ին)?|կեսօր(ին)?|(առավոտը?|ցերեկը?|երեկո(յան)?|գիշերը?))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /կեսգիշեր/i,
                                    noon: /կեսօր/i,
                                    morning: /առավոտ/i,
                                    afternoon: /ցերեկ/i,
                                    evening: /երեկո/i,
                                    night: /գիշեր/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                fm = {
                    lessThanXSeconds: {
                        one: 'kurang dari 1 detik',
                        other: 'kurang dari {{count}} detik'
                    },
                    xSeconds: {
                        one: '1 detik',
                        other: '{{count}} detik'
                    },
                    halfAMinute: 'setengah menit',
                    lessThanXMinutes: {
                        one: 'kurang dari 1 menit',
                        other: 'kurang dari {{count}} menit'
                    },
                    xMinutes: {
                        one: '1 menit',
                        other: '{{count}} menit'
                    },
                    aboutXHours: {
                        one: 'sekitar 1 jam',
                        other: 'sekitar {{count}} jam'
                    },
                    xHours: {
                        one: '1 jam',
                        other: '{{count}} jam'
                    },
                    xDays: {
                        one: '1 hari',
                        other: '{{count}} hari'
                    },
                    aboutXWeeks: {
                        one: 'sekitar 1 minggu',
                        other: 'sekitar {{count}} minggu'
                    },
                    xWeeks: {
                        one: '1 minggu',
                        other: '{{count}} minggu'
                    },
                    aboutXMonths: {
                        one: 'sekitar 1 bulan',
                        other: 'sekitar {{count}} bulan'
                    },
                    xMonths: {
                        one: '1 bulan',
                        other: '{{count}} bulan'
                    },
                    aboutXYears: {
                        one: 'sekitar 1 tahun',
                        other: 'sekitar {{count}} tahun'
                    },
                    xYears: {
                        one: '1 tahun',
                        other: '{{count}} tahun'
                    },
                    overXYears: {
                        one: 'lebih dari 1 tahun',
                        other: 'lebih dari {{count}} tahun'
                    },
                    almostXYears: {
                        one: 'hampir 1 tahun',
                        other: 'hampir {{count}} tahun'
                    }
                },
                hm = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM yyyy',
                            long: 'd MMMM yyyy',
                            medium: 'd MMM yyyy',
                            short: 'd/M/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH.mm.ss',
                            long: 'HH.mm.ss',
                            medium: 'HH.mm',
                            short: 'HH.mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'pukul\' {{time}}',
                            long: '{{date}} \'pukul\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                pm = {
                    lastWeek: 'eeee \'lalu pukul\' p',
                    yesterday: '\'Kemarin pukul\' p',
                    today: '\'Hari ini pukul\' p',
                    tomorrow: '\'Besok pukul\' p',
                    nextWeek: 'eeee \'pukul\' p',
                    other: 'P'
                },
                gm = {
                    code: 'id',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = fm[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t.toString()),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'dalam waktu ' + r : r + ' yang lalu' : r
                    },
                    formatLong: hm,
                    formatRelative: function (e, t, n, r) {
                        return pm[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return 'ke-' + Number(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'SM',
                                    'M'
                                ],
                                abbreviated: [
                                    'SM',
                                    'M'
                                ],
                                wide: [
                                    'Sebelum Masehi',
                                    'Masehi'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'K1',
                                    'K2',
                                    'K3',
                                    'K4'
                                ],
                                wide: [
                                    'Kuartal ke-1',
                                    'Kuartal ke-2',
                                    'Kuartal ke-3',
                                    'Kuartal ke-4'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'Jan',
                                    'Feb',
                                    'Mar',
                                    'Apr',
                                    'Mei',
                                    'Jun',
                                    'Jul',
                                    'Agt',
                                    'Sep',
                                    'Okt',
                                    'Nov',
                                    'Des'
                                ],
                                wide: [
                                    'Januari',
                                    'Februari',
                                    'Maret',
                                    'April',
                                    'Mei',
                                    'Juni',
                                    'Juli',
                                    'Agustus',
                                    'September',
                                    'Oktober',
                                    'November',
                                    'Desember'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'M',
                                    'S',
                                    'S',
                                    'R',
                                    'K',
                                    'J',
                                    'S'
                                ],
                                short: [
                                    'Min',
                                    'Sen',
                                    'Sel',
                                    'Rab',
                                    'Kam',
                                    'Jum',
                                    'Sab'
                                ],
                                abbreviated: [
                                    'Min',
                                    'Sen',
                                    'Sel',
                                    'Rab',
                                    'Kam',
                                    'Jum',
                                    'Sab'
                                ],
                                wide: [
                                    'Minggu',
                                    'Senin',
                                    'Selasa',
                                    'Rabu',
                                    'Kamis',
                                    'Jumat',
                                    'Sabtu'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'siang',
                                    evening: 'sore',
                                    night: 'malam'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'siang',
                                    evening: 'sore',
                                    night: 'malam'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'siang',
                                    evening: 'sore',
                                    night: 'malam'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'siang',
                                    evening: 'sore',
                                    night: 'malam'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'siang',
                                    evening: 'sore',
                                    night: 'malam'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'siang',
                                    evening: 'sore',
                                    night: 'malam'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^ke-(\d+)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(sm|m)/i,
                                abbreviated: /^(s\.?\s?m\.?|s\.?\s?e\.?\s?u\.?|m\.?|e\.?\s?u\.?)/i,
                                wide: /^(sebelum masehi|sebelum era umum|masehi|era umum)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^s/i,
                                    /^(m|e)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^K-?\s[1234]/i,
                                wide: /^Kuartal ke-?\s?[1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i,
                                wide: /^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^ma/i,
                                    /^ap/i,
                                    /^me/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^ag/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[srkjm]/i,
                                short: /^(min|sen|sel|rab|kam|jum|sab)/i,
                                abbreviated: /^(min|sen|sel|rab|kam|jum|sab)/i,
                                wide: /^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^m/i,
                                    /^s/i,
                                    /^s/i,
                                    /^r/i,
                                    /^k/i,
                                    /^j/i,
                                    /^s/i
                                ],
                                any: [
                                    /^m/i,
                                    /^sen/i,
                                    /^sel/i,
                                    /^r/i,
                                    /^k/i,
                                    /^j/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|tengah m|tengah h|(di(\swaktu)?) (pagi|siang|sore|malam))/i,
                                any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|(di(\swaktu)?) (pagi|siang|sore|malam))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^pm/i,
                                    midnight: /^tengah m/i,
                                    noon: /^tengah h/i,
                                    morning: /pagi/i,
                                    afternoon: /siang/i,
                                    evening: /sore/i,
                                    night: /malam/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                vm = {
                    lessThanXSeconds: {
                        one: 'minna en 1 sekúnda',
                        other: 'minna en {{count}} sekúndur'
                    },
                    xSeconds: {
                        one: '1 sekúnda',
                        other: '{{count}} sekúndur'
                    },
                    halfAMinute: 'hálf mínúta',
                    lessThanXMinutes: {
                        one: 'minna en 1 mínúta',
                        other: 'minna en {{count}} mínútur'
                    },
                    xMinutes: {
                        one: '1 mínúta',
                        other: '{{count}} mínútur'
                    },
                    aboutXHours: {
                        one: 'u.þ.b. 1 klukkustund',
                        other: 'u.þ.b. {{count}} klukkustundir'
                    },
                    xHours: {
                        one: '1 klukkustund',
                        other: '{{count}} klukkustundir'
                    },
                    xDays: {
                        one: '1 dagur',
                        other: '{{count}} dagar'
                    },
                    aboutXWeeks: {
                        one: 'um viku',
                        other: 'um {{count}} vikur'
                    },
                    xWeeks: {
                        one: '1 viku',
                        other: '{{count}} vikur'
                    },
                    aboutXMonths: {
                        one: 'u.þ.b. 1 mánuður',
                        other: 'u.þ.b. {{count}} mánuðir'
                    },
                    xMonths: {
                        one: '1 mánuður',
                        other: '{{count}} mánuðir'
                    },
                    aboutXYears: {
                        one: 'u.þ.b. 1 ár',
                        other: 'u.þ.b. {{count}} ár'
                    },
                    xYears: {
                        one: '1 ár',
                        other: '{{count}} ár'
                    },
                    overXYears: {
                        one: 'meira en 1 ár',
                        other: 'meira en {{count}} ár'
                    },
                    almostXYears: {
                        one: 'næstum 1 ár',
                        other: 'næstum {{count}} ár'
                    }
                },
                ym = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM y',
                            long: 'do MMMM y',
                            medium: 'do MMM y',
                            short: 'd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: '\'kl\'. HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'kl.\' {{time}}',
                            long: '{{date}} \'kl.\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                wm = {
                    lastWeek: '\'síðasta\' dddd \'kl.\' p',
                    yesterday: '\'í gær kl.\' p',
                    today: '\'í dag kl.\' p',
                    tomorrow: '\'á morgun kl.\' p',
                    nextWeek: 'dddd \'kl.\' p',
                    other: 'P'
                },
                bm = {
                    code: 'is',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = vm[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t.toString()),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'í ' + r : r + ' síðan' : r
                    },
                    formatLong: ym,
                    formatRelative: function (e, t, n, r) {
                        return wm[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'f.Kr.',
                                    'e.Kr.'
                                ],
                                abbreviated: [
                                    'f.Kr.',
                                    'e.Kr.'
                                ],
                                wide: [
                                    'fyrir Krist',
                                    'eftir Krist'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1F',
                                    '2F',
                                    '3F',
                                    '4F'
                                ],
                                wide: [
                                    '1. fjórðungur',
                                    '2. fjórðungur',
                                    '3. fjórðungur',
                                    '4. fjórðungur'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'Á',
                                    'S',
                                    'Ó',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mars',
                                    'apríl',
                                    'maí',
                                    'júní',
                                    'júlí',
                                    'ágúst',
                                    'sept.',
                                    'okt.',
                                    'nóv.',
                                    'des.'
                                ],
                                wide: [
                                    'janúar',
                                    'febrúar',
                                    'mars',
                                    'apríl',
                                    'maí',
                                    'júní',
                                    'júlí',
                                    'ágúst',
                                    'september',
                                    'október',
                                    'nóvember',
                                    'desember'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'M',
                                    'Þ',
                                    'M',
                                    'F',
                                    'F',
                                    'L'
                                ],
                                short: [
                                    'Su',
                                    'Má',
                                    'Þr',
                                    'Mi',
                                    'Fi',
                                    'Fö',
                                    'La'
                                ],
                                abbreviated: [
                                    'sun.',
                                    'mán.',
                                    'þri.',
                                    'mið.',
                                    'fim.',
                                    'fös.',
                                    'lau'
                                ],
                                wide: [
                                    'sunnudagur',
                                    'mánudagur',
                                    'þriðjudagur',
                                    'miðvikudagur',
                                    'fimmtudagur',
                                    'föstudagur',
                                    'laugardagur'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'f',
                                    pm: 'e',
                                    midnight: 'miðnætti',
                                    noon: 'hádegi',
                                    morning: 'morgunn',
                                    afternoon: 'síðdegi',
                                    evening: 'kvöld',
                                    night: 'nótt'
                                },
                                abbreviated: {
                                    am: 'f.h.',
                                    pm: 'e.h.',
                                    midnight: 'miðnætti',
                                    noon: 'hádegi',
                                    morning: 'morgunn',
                                    afternoon: 'síðdegi',
                                    evening: 'kvöld',
                                    night: 'nótt'
                                },
                                wide: {
                                    am: 'fyrir hádegi',
                                    pm: 'eftir hádegi',
                                    midnight: 'miðnætti',
                                    noon: 'hádegi',
                                    morning: 'morgunn',
                                    afternoon: 'síðdegi',
                                    evening: 'kvöld',
                                    night: 'nótt'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'f',
                                    pm: 'e',
                                    midnight: 'á miðnætti',
                                    noon: 'á hádegi',
                                    morning: 'að morgni',
                                    afternoon: 'síðdegis',
                                    evening: 'um kvöld',
                                    night: 'um nótt'
                                },
                                abbreviated: {
                                    am: 'f.h.',
                                    pm: 'e.h.',
                                    midnight: 'á miðnætti',
                                    noon: 'á hádegi',
                                    morning: 'að morgni',
                                    afternoon: 'síðdegis',
                                    evening: 'um kvöld',
                                    night: 'um nótt'
                                },
                                wide: {
                                    am: 'fyrir hádegi',
                                    pm: 'eftir hádegi',
                                    midnight: 'á miðnætti',
                                    noon: 'á hádegi',
                                    morning: 'að morgni',
                                    afternoon: 'síðdegis',
                                    evening: 'um kvöld',
                                    night: 'um nótt'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(\.)?/i,
                            parsePattern: /\d+(\.)?/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(f\.Kr\.|e\.Kr\.)/i,
                                abbreviated: /^(f\.Kr\.|e\.Kr\.)/i,
                                wide: /^(fyrir Krist|eftir Krist)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(f\.Kr\.)/i,
                                    /^(e\.Kr\.)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]\.?/i,
                                abbreviated: /^q[1234]\.?/i,
                                wide: /^[1234]\.? fjórðungur/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1\.?/i,
                                    /2\.?/i,
                                    /3\.?/i,
                                    /4\.?/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmásónd]/i,
                                abbreviated: /^(jan\.|feb\.|mars\.|apríl\.|maí|júní|júlí|águst|sep\.|oct\.|nov\.|dec\.)/i,
                                wide: /^(januar|febrúar|mars|apríl|maí|júní|júlí|águst|september|október|nóvember|desember)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^á/i,
                                    /^s/i,
                                    /^ó/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^maí/i,
                                    /^jún/i,
                                    /^júl/i,
                                    /^áu/i,
                                    /^s/i,
                                    /^ó/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smtwf]/i,
                                short: /^(su|má|þr|mi|fi|fö|la)/i,
                                abbreviated: /^(sun|mán|þri|mið|fim|fös|lau)\.?/i,
                                wide: /^(sunnudagur|mánudagur|þriðjudagur|miðvikudagur|fimmtudagur|föstudagur|laugardagur)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^m/i,
                                    /^þ/i,
                                    /^m/i,
                                    /^f/i,
                                    /^f/i,
                                    /^l/i
                                ],
                                any: [
                                    /^su/i,
                                    /^má/i,
                                    /^þr/i,
                                    /^mi/i,
                                    /^fi/i,
                                    /^fö/i,
                                    /^la/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(f|e|síðdegis|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i,
                                any: /^(fyrir hádegi|eftir hádegi|[ef]\.?h\.?|síðdegis|morgunn|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^f/i,
                                    pm: /^e/i,
                                    midnight: /^mi/i,
                                    noon: /^há/i,
                                    morning: /morgunn/i,
                                    afternoon: /síðdegi/i,
                                    evening: /kvöld/i,
                                    night: /nótt/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                km = {
                    lessThanXSeconds: {
                        one: 'meno di un secondo',
                        other: 'meno di {{count}} secondi'
                    },
                    xSeconds: {
                        one: 'un secondo',
                        other: '{{count}} secondi'
                    },
                    halfAMinute: 'alcuni secondi',
                    lessThanXMinutes: {
                        one: 'meno di un minuto',
                        other: 'meno di {{count}} minuti'
                    },
                    xMinutes: {
                        one: 'un minuto',
                        other: '{{count}} minuti'
                    },
                    aboutXHours: {
                        one: 'circa un\'ora',
                        other: 'circa {{count}} ore'
                    },
                    xHours: {
                        one: 'un\'ora',
                        other: '{{count}} ore'
                    },
                    xDays: {
                        one: 'un giorno',
                        other: '{{count}} giorni'
                    },
                    aboutXWeeks: {
                        one: 'circa una settimana',
                        other: 'circa {{count}} settimane'
                    },
                    xWeeks: {
                        one: 'una settimana',
                        other: '{{count}} settimane'
                    },
                    aboutXMonths: {
                        one: 'circa un mese',
                        other: 'circa {{count}} mesi'
                    },
                    xMonths: {
                        one: 'un mese',
                        other: '{{count}} mesi'
                    },
                    aboutXYears: {
                        one: 'circa un anno',
                        other: 'circa {{count}} anni'
                    },
                    xYears: {
                        one: 'un anno',
                        other: '{{count}} anni'
                    },
                    overXYears: {
                        one: 'più di un anno',
                        other: 'più di {{count}} anni'
                    },
                    almostXYears: {
                        one: 'quasi un anno',
                        other: 'quasi {{count}} anni'
                    }
                },
                Mm = {
                    date: at({
                        formats: {
                            full: 'EEEE d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Em = [
                    'domenica',
                    'lunedì',
                    'martedì',
                    'mercoledì',
                    'giovedì',
                    'venerdì',
                    'sabato'
                ];
            function Pm(e) {
                return '\'' + Em[e] + ' alle\' p'
            }
            var xm = {
                lastWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? Pm(r) : function (e) {
                        return 0 === e ? '\'domenica scorsa alle\' p' : '\'' + Em[e] + ' scorso alle\' p'
                    }(r)
                },
                yesterday: '\'ieri alle\' p',
                today: '\'oggi alle\' p',
                tomorrow: '\'domani alle\' p',
                nextWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? Pm(r) : function (e) {
                        return 0 === e ? '\'domenica prossima alle\' p' : '\'' + Em[e] + ' prossimo alle\' p'
                    }(r)
                },
                other: 'P'
            },
                Sm = {
                    code: 'it',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = km[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t.toString()),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'tra ' + r : r + ' fa' : r
                    },
                    formatLong: Mm,
                    formatRelative: function (e, t, n, r) {
                        var a = xm[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + 'º'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'aC',
                                    'dC'
                                ],
                                abbreviated: [
                                    'a.C.',
                                    'd.C.'
                                ],
                                wide: [
                                    'avanti Cristo',
                                    'dopo Cristo'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'T1',
                                    'T2',
                                    'T3',
                                    'T4'
                                ],
                                wide: [
                                    '1º trimestre',
                                    '2º trimestre',
                                    '3º trimestre',
                                    '4º trimestre'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'G',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'G',
                                    'L',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'gen',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'mag',
                                    'giu',
                                    'lug',
                                    'ago',
                                    'set',
                                    'ott',
                                    'nov',
                                    'dic'
                                ],
                                wide: [
                                    'gennaio',
                                    'febbraio',
                                    'marzo',
                                    'aprile',
                                    'maggio',
                                    'giugno',
                                    'luglio',
                                    'agosto',
                                    'settembre',
                                    'ottobre',
                                    'novembre',
                                    'dicembre'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'D',
                                    'L',
                                    'M',
                                    'M',
                                    'G',
                                    'V',
                                    'S'
                                ],
                                short: [
                                    'dom',
                                    'lun',
                                    'mar',
                                    'mer',
                                    'gio',
                                    'ven',
                                    'sab'
                                ],
                                abbreviated: [
                                    'dom',
                                    'lun',
                                    'mar',
                                    'mer',
                                    'gio',
                                    'ven',
                                    'sab'
                                ],
                                wide: [
                                    'domenica',
                                    'lunedì',
                                    'martedì',
                                    'mercoledì',
                                    'giovedì',
                                    'venerdì',
                                    'sabato'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'm.',
                                    pm: 'p.',
                                    midnight: 'mezzanotte',
                                    noon: 'mezzogiorno',
                                    morning: 'mattina',
                                    afternoon: 'pomeriggio',
                                    evening: 'sera',
                                    night: 'notte'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'mezzanotte',
                                    noon: 'mezzogiorno',
                                    morning: 'mattina',
                                    afternoon: 'pomeriggio',
                                    evening: 'sera',
                                    night: 'notte'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'mezzanotte',
                                    noon: 'mezzogiorno',
                                    morning: 'mattina',
                                    afternoon: 'pomeriggio',
                                    evening: 'sera',
                                    night: 'notte'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'm.',
                                    pm: 'p.',
                                    midnight: 'mezzanotte',
                                    noon: 'mezzogiorno',
                                    morning: 'di mattina',
                                    afternoon: 'del pomeriggio',
                                    evening: 'di sera',
                                    night: 'di notte'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'mezzanotte',
                                    noon: 'mezzogiorno',
                                    morning: 'di mattina',
                                    afternoon: 'del pomeriggio',
                                    evening: 'di sera',
                                    night: 'di notte'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'mezzanotte',
                                    noon: 'mezzogiorno',
                                    morning: 'di mattina',
                                    afternoon: 'del pomeriggio',
                                    evening: 'di sera',
                                    night: 'di notte'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(º)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(aC|dC)/i,
                                abbreviated: /^(a\.?\s?C\.?|a\.?\s?e\.?\s?v\.?|d\.?\s?C\.?|e\.?\s?v\.?)/i,
                                wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^a/i,
                                    /^(d|e)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^t[1234]/i,
                                wide: /^[1234](º)? trimestre/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[gfmalsond]/i,
                                abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i,
                                wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^g/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^g/i,
                                    /^l/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ge/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^mag/i,
                                    /^gi/i,
                                    /^l/i,
                                    /^ag/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[dlmgvs]/i,
                                short: /^(do|lu|ma|me|gi|ve|sa)/i,
                                abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i,
                                wide: /^(domenica|luned[i|ì]|marted[i|ì]|mercoled[i|ì]|gioved[i|ì]|venerd[i|ì]|sabato)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^l/i,
                                    /^m/i,
                                    /^m/i,
                                    /^g/i,
                                    /^v/i,
                                    /^s/i
                                ],
                                any: [
                                    /^d/i,
                                    /^l/i,
                                    /^ma/i,
                                    /^me/i,
                                    /^g/i,
                                    /^v/i,
                                    /^s/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|m\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,
                                any: /^([ap]\.?\s?m\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mezza/i,
                                    noon: /^mezzo/i,
                                    morning: /mattina/i,
                                    afternoon: /pomeriggio/i,
                                    evening: /sera/i,
                                    night: /notte/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Tm = {
                    lessThanXSeconds: {
                        one: '1秒未満',
                        other: '{{count}}秒未満',
                        oneWithSuffix: '約1秒',
                        otherWithSuffix: '約{{count}}秒'
                    },
                    xSeconds: {
                        one: '1秒',
                        other: '{{count}}秒'
                    },
                    halfAMinute: '30秒',
                    lessThanXMinutes: {
                        one: '1分未満',
                        other: '{{count}}分未満',
                        oneWithSuffix: '約1分',
                        otherWithSuffix: '約{{count}}分'
                    },
                    xMinutes: {
                        one: '1分',
                        other: '{{count}}分'
                    },
                    aboutXHours: {
                        one: '約1時間',
                        other: '約{{count}}時間'
                    },
                    xHours: {
                        one: '1時間',
                        other: '{{count}}時間'
                    },
                    xDays: {
                        one: '1日',
                        other: '{{count}}日'
                    },
                    aboutXWeeks: {
                        one: '約1週間',
                        other: '約{{count}}週間'
                    },
                    xWeeks: {
                        one: '1週間',
                        other: '{{count}}週間'
                    },
                    aboutXMonths: {
                        one: '約1か月',
                        other: '約{{count}}か月'
                    },
                    xMonths: {
                        one: '1か月',
                        other: '{{count}}か月'
                    },
                    aboutXYears: {
                        one: '約1年',
                        other: '約{{count}}年'
                    },
                    xYears: {
                        one: '1年',
                        other: '{{count}}年'
                    },
                    overXYears: {
                        one: '1年以上',
                        other: '{{count}}年以上'
                    },
                    almostXYears: {
                        one: '1年近く',
                        other: '{{count}}年近く'
                    }
                },
                Cm = {
                    date: at({
                        formats: {
                            full: 'y年M月d日EEEE',
                            long: 'y年M月d日',
                            medium: 'y/MM/dd',
                            short: 'y/MM/dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H時mm分ss秒 zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Wm = {
                    lastWeek: '先週のeeeeのp',
                    yesterday: '昨日のp',
                    today: '今日のp',
                    tomorrow: '明日のp',
                    nextWeek: '翌週のeeeeのp',
                    other: 'P'
                },
                jm = {
                    code: 'ja',
                    formatDistance: function (e, t, n) {
                        var r;
                        n = n || {
                        };
                        var a = Tm[e];
                        return r = 'string' == typeof a ? a : 1 === t ? n.addSuffix && a.oneWithSuffix ? a.oneWithSuffix : a.one : n.addSuffix && a.otherWithSuffix ? a.otherWithSuffix.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            n.addSuffix ? n.comparison && n.comparison > 0 ? r + '後' : r + '前' : r
                    },
                    formatLong: Cm,
                    formatRelative: function (e, t, n, r) {
                        return Wm[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            switch (String((t || {
                            }).unit)) {
                                case 'year':
                                    return ''.concat(n, '年');
                                case 'quarter':
                                    return '第'.concat(n, '四半期');
                                case 'month':
                                    return ''.concat(n, '月');
                                case 'week':
                                    return '第'.concat(n, '週');
                                case 'date':
                                    return ''.concat(n, '日');
                                case 'hour':
                                    return ''.concat(n, '時');
                                case 'minute':
                                    return ''.concat(n, '分');
                                case 'second':
                                    return ''.concat(n, '秒');
                                default:
                                    return ''.concat(n)
                            }
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'BC',
                                    'AC'
                                ],
                                abbreviated: [
                                    '紀元前',
                                    '西暦'
                                ],
                                wide: [
                                    '紀元前',
                                    '西暦'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '第1四半期',
                                    '第2四半期',
                                    '第3四半期',
                                    '第4四半期'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4',
                                    '5',
                                    '6',
                                    '7',
                                    '8',
                                    '9',
                                    '10',
                                    '11',
                                    '12'
                                ],
                                abbreviated: [
                                    '1月',
                                    '2月',
                                    '3月',
                                    '4月',
                                    '5月',
                                    '6月',
                                    '7月',
                                    '8月',
                                    '9月',
                                    '10月',
                                    '11月',
                                    '12月'
                                ],
                                wide: [
                                    '1月',
                                    '2月',
                                    '3月',
                                    '4月',
                                    '5月',
                                    '6月',
                                    '7月',
                                    '8月',
                                    '9月',
                                    '10月',
                                    '11月',
                                    '12月'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    '日',
                                    '月',
                                    '火',
                                    '水',
                                    '木',
                                    '金',
                                    '土'
                                ],
                                short: [
                                    '日',
                                    '月',
                                    '火',
                                    '水',
                                    '木',
                                    '金',
                                    '土'
                                ],
                                abbreviated: [
                                    '日',
                                    '月',
                                    '火',
                                    '水',
                                    '木',
                                    '金',
                                    '土'
                                ],
                                wide: [
                                    '日曜日',
                                    '月曜日',
                                    '火曜日',
                                    '水曜日',
                                    '木曜日',
                                    '金曜日',
                                    '土曜日'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: '午前',
                                    pm: '午後',
                                    midnight: '深夜',
                                    noon: '正午',
                                    morning: '朝',
                                    afternoon: '午後',
                                    evening: '夜',
                                    night: '深夜'
                                },
                                abbreviated: {
                                    am: '午前',
                                    pm: '午後',
                                    midnight: '深夜',
                                    noon: '正午',
                                    morning: '朝',
                                    afternoon: '午後',
                                    evening: '夜',
                                    night: '深夜'
                                },
                                wide: {
                                    am: '午前',
                                    pm: '午後',
                                    midnight: '深夜',
                                    noon: '正午',
                                    morning: '朝',
                                    afternoon: '午後',
                                    evening: '夜',
                                    night: '深夜'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: '午前',
                                    pm: '午後',
                                    midnight: '深夜',
                                    noon: '正午',
                                    morning: '朝',
                                    afternoon: '午後',
                                    evening: '夜',
                                    night: '深夜'
                                },
                                abbreviated: {
                                    am: '午前',
                                    pm: '午後',
                                    midnight: '深夜',
                                    noon: '正午',
                                    morning: '朝',
                                    afternoon: '午後',
                                    evening: '夜',
                                    night: '深夜'
                                },
                                wide: {
                                    am: '午前',
                                    pm: '午後',
                                    midnight: '深夜',
                                    noon: '正午',
                                    morning: '朝',
                                    afternoon: '午後',
                                    evening: '夜',
                                    night: '深夜'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^第?\d+(年|四半期|月|週|日|時|分|秒)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(B\.?C\.?|A\.?D\.?)/i,
                                abbreviated: /^(紀元[前後]|西暦)/i,
                                wide: /^(紀元[前後]|西暦)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^B/i,
                                    /^A/i
                                ],
                                any: [
                                    /^(紀元前)/i,
                                    /^(西暦|紀元後)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^Q[1234]/i,
                                wide: /^第[1234一二三四１２３４]四半期/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /(1|一|１)/i,
                                    /(2|二|２)/i,
                                    /(3|三|３)/i,
                                    /(4|四|４)/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^([123456789]|1[012])/,
                                abbreviated: /^([123456789]|1[012])月/i,
                                wide: /^([123456789]|1[012])月/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^1\D/,
                                    /^2/,
                                    /^3/,
                                    /^4/,
                                    /^5/,
                                    /^6/,
                                    /^7/,
                                    /^8/,
                                    /^9/,
                                    /^10/,
                                    /^11/,
                                    /^12/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[日月火水木金土]/,
                                short: /^[日月火水木金土]/,
                                abbreviated: /^[日月火水木金土]/,
                                wide: /^[日月火水木金土]曜日/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^日/,
                                    /^月/,
                                    /^火/,
                                    /^水/,
                                    /^木/,
                                    /^金/,
                                    /^土/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(AM|PM|午前|午後|正午|深夜|真夜中|夜|朝)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^(A|午前)/i,
                                    pm: /^(P|午後)/i,
                                    midnight: /^深夜|真夜中/i,
                                    noon: /^正午/i,
                                    morning: /^朝/i,
                                    afternoon: /^午後/i,
                                    evening: /^夜/i,
                                    night: /^深夜/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Dm = {
                    lessThanXSeconds: {
                        one: '1びょうみまん',
                        other: '{{count}}びょうみまん',
                        oneWithSuffix: 'やく1びょう',
                        otherWithSuffix: 'やく{{count}}びょう'
                    },
                    xSeconds: {
                        one: '1びょう',
                        other: '{{count}}びょう'
                    },
                    halfAMinute: '30びょう',
                    lessThanXMinutes: {
                        one: '1ぷんみまん',
                        other: '{{count}}ふんみまん',
                        oneWithSuffix: 'やく1ぷん',
                        otherWithSuffix: 'やく{{count}}ふん'
                    },
                    xMinutes: {
                        one: '1ぷん',
                        other: '{{count}}ふん'
                    },
                    aboutXHours: {
                        one: 'やく1じかん',
                        other: 'やく{{count}}じかん'
                    },
                    xHours: {
                        one: '1じかん',
                        other: '{{count}}じかん'
                    },
                    xDays: {
                        one: '1にち',
                        other: '{{count}}にち'
                    },
                    aboutXWeeks: {
                        one: 'やく1しゅうかん',
                        other: 'やく{{count}}しゅうかん'
                    },
                    xWeeks: {
                        one: '1しゅうかん',
                        other: '{{count}}しゅうかん'
                    },
                    aboutXMonths: {
                        one: 'やく1かげつ',
                        other: 'やく{{count}}かげつ'
                    },
                    xMonths: {
                        one: '1かげつ',
                        other: '{{count}}かげつ'
                    },
                    aboutXYears: {
                        one: 'やく1ねん',
                        other: 'やく{{count}}ねん'
                    },
                    xYears: {
                        one: '1ねん',
                        other: '{{count}}ねん'
                    },
                    overXYears: {
                        one: '1ねんいじょう',
                        other: '{{count}}ねんいじょう'
                    },
                    almostXYears: {
                        one: '1ねんちかく',
                        other: '{{count}}ねんちかく'
                    }
                },
                Nm = {
                    date: at({
                        formats: {
                            full: 'yねんMがつdにちEEEE',
                            long: 'yねんMがつdにち',
                            medium: 'y/MM/dd',
                            short: 'y/MM/dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'Hじmmふんssびょう zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Im = {
                    lastWeek: 'せんしゅうのeeeeのp',
                    yesterday: 'きのうのp',
                    today: 'きょうのp',
                    tomorrow: 'あしたのp',
                    nextWeek: 'よくしゅうのeeeeのp',
                    other: 'P'
                },
                zm = {
                    code: 'ja-Hira',
                    formatDistance: function (e, t, n) {
                        var r;
                        n = n || {
                        };
                        var a = Dm[e];
                        return r = 'string' == typeof a ? a : 1 === t ? n.addSuffix && a.oneWithSuffix ? a.oneWithSuffix : a.one : n.addSuffix && a.otherWithSuffix ? a.otherWithSuffix.replace('{{count}}', String(t)) : a.other.replace('{{count}}', String(t)),
                            n.addSuffix ? n.comparison && n.comparison > 0 ? r + 'あと' : r + 'まえ' : r
                    },
                    formatLong: Nm,
                    formatRelative: function (e, t, n, r) {
                        return Im[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            switch (String((t || {
                            }).unit)) {
                                case 'year':
                                    return ''.concat(n, 'ねん');
                                case 'quarter':
                                    return 'だい'.concat(n, 'しはんき');
                                case 'month':
                                    return ''.concat(n, 'がつ');
                                case 'week':
                                    return 'だい'.concat(n, 'しゅう');
                                case 'date':
                                    return ''.concat(n, 'にち');
                                case 'hour':
                                    return ''.concat(n, 'じ');
                                case 'minute':
                                    return ''.concat(n, 'ふん');
                                case 'second':
                                    return ''.concat(n, 'びょう');
                                default:
                                    return ''.concat(n)
                            }
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'BC',
                                    'AC'
                                ],
                                abbreviated: [
                                    'きげんぜん',
                                    'せいれき'
                                ],
                                wide: [
                                    'きげんぜん',
                                    'せいれき'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    'だい1しはんき',
                                    'だい2しはんき',
                                    'だい3しはんき',
                                    'だい4しはんき'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4',
                                    '5',
                                    '6',
                                    '7',
                                    '8',
                                    '9',
                                    '10',
                                    '11',
                                    '12'
                                ],
                                abbreviated: [
                                    '1がつ',
                                    '2がつ',
                                    '3がつ',
                                    '4がつ',
                                    '5がつ',
                                    '6がつ',
                                    '7がつ',
                                    '8がつ',
                                    '9がつ',
                                    '10がつ',
                                    '11がつ',
                                    '12がつ'
                                ],
                                wide: [
                                    '1がつ',
                                    '2がつ',
                                    '3がつ',
                                    '4がつ',
                                    '5がつ',
                                    '6がつ',
                                    '7がつ',
                                    '8がつ',
                                    '9がつ',
                                    '10がつ',
                                    '11がつ',
                                    '12がつ'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'にち',
                                    'げつ',
                                    'か',
                                    'すい',
                                    'もく',
                                    'きん',
                                    'ど'
                                ],
                                short: [
                                    'にち',
                                    'げつ',
                                    'か',
                                    'すい',
                                    'もく',
                                    'きん',
                                    'ど'
                                ],
                                abbreviated: [
                                    'にち',
                                    'げつ',
                                    'か',
                                    'すい',
                                    'もく',
                                    'きん',
                                    'ど'
                                ],
                                wide: [
                                    'にちようび',
                                    'げつようび',
                                    'かようび',
                                    'すいようび',
                                    'もくようび',
                                    'きんようび',
                                    'どようび'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ごぜん',
                                    pm: 'ごご',
                                    midnight: 'しんや',
                                    noon: 'しょうご',
                                    morning: 'あさ',
                                    afternoon: 'ごご',
                                    evening: 'よる',
                                    night: 'しんや'
                                },
                                abbreviated: {
                                    am: 'ごぜん',
                                    pm: 'ごご',
                                    midnight: 'しんや',
                                    noon: 'しょうご',
                                    morning: 'あさ',
                                    afternoon: 'ごご',
                                    evening: 'よる',
                                    night: 'しんや'
                                },
                                wide: {
                                    am: 'ごぜん',
                                    pm: 'ごご',
                                    midnight: 'しんや',
                                    noon: 'しょうご',
                                    morning: 'あさ',
                                    afternoon: 'ごご',
                                    evening: 'よる',
                                    night: 'しんや'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ごぜん',
                                    pm: 'ごご',
                                    midnight: 'しんや',
                                    noon: 'しょうご',
                                    morning: 'あさ',
                                    afternoon: 'ごご',
                                    evening: 'よる',
                                    night: 'しんや'
                                },
                                abbreviated: {
                                    am: 'ごぜん',
                                    pm: 'ごご',
                                    midnight: 'しんや',
                                    noon: 'しょうご',
                                    morning: 'あさ',
                                    afternoon: 'ごご',
                                    evening: 'よる',
                                    night: 'しんや'
                                },
                                wide: {
                                    am: 'ごぜん',
                                    pm: 'ごご',
                                    midnight: 'しんや',
                                    noon: 'しょうご',
                                    morning: 'あさ',
                                    afternoon: 'ごご',
                                    evening: 'よる',
                                    night: 'しんや'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^だ?い?\d+(ねん|しはんき|がつ|しゅう|にち|じ|ふん|びょう)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(B\.?C\.?|A\.?D\.?)/i,
                                abbreviated: /^(きげん[前後]|せいれき)/i,
                                wide: /^(きげん[前後]|せいれき)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^B/i,
                                    /^A/i
                                ],
                                any: [
                                    /^(きげんぜん)/i,
                                    /^(せいれき|きげんご)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^Q[1234]/i,
                                wide: /^だい[1234一二三四１２３４]しはんき/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /(1|一|１)/i,
                                    /(2|二|２)/i,
                                    /(3|三|３)/i,
                                    /(4|四|４)/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^([123456789]|1[012])/,
                                abbreviated: /^([123456789]|1[012])がつ/i,
                                wide: /^([123456789]|1[012])がつ/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^1\D/,
                                    /^2/,
                                    /^3/,
                                    /^4/,
                                    /^5/,
                                    /^6/,
                                    /^7/,
                                    /^8/,
                                    /^9/,
                                    /^10/,
                                    /^11/,
                                    /^12/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(にち|げつ|か|すい|もく|きん|ど)/,
                                short: /^(にち|げつ|か|すい|もく|きん|ど)/,
                                abbreviated: /^(にち|げつ|か|すい|もく|きん|ど)/,
                                wide: /^(にち|げつ|か|すい|もく|きん|ど)ようび/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^にち/,
                                    /^げつ/,
                                    /^か/,
                                    /^すい/,
                                    /^もく/,
                                    /^きん/,
                                    /^ど/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(AM|PM|ごぜん|ごご|しょうご|しんや|まよなか|よる|あさ)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^(A|ごぜん)/i,
                                    pm: /^(P|ごご)/i,
                                    midnight: /^しんや|まよなか/i,
                                    noon: /^しょうご/i,
                                    morning: /^あさ/i,
                                    afternoon: /^ごご/i,
                                    evening: /^よる/i,
                                    night: /^しんや/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Rm = {
                    lessThanXSeconds: {
                        past: '{{count}} წამზე ნაკლები ხნის წინ',
                        present: '{{count}} წამზე ნაკლები',
                        future: '{{count}} წამზე ნაკლებში'
                    },
                    xSeconds: {
                        past: '{{count}} წამის წინ',
                        present: '{{count}} წამი',
                        future: '{{count}} წამში'
                    },
                    halfAMinute: {
                        past: 'ნახევარი წუთის წინ',
                        present: 'ნახევარი წუთი',
                        future: 'ნახევარი წუთში'
                    },
                    lessThanXMinutes: {
                        past: '{{count}} წუთზე ნაკლები ხნის წინ',
                        present: '{{count}} წუთზე ნაკლები',
                        future: '{{count}} წუთზე ნაკლებში'
                    },
                    xMinutes: {
                        past: '{{count}} წუთის წინ',
                        present: '{{count}} წუთი',
                        future: '{{count}} წუთში'
                    },
                    aboutXHours: {
                        past: 'დაახლოებით {{count}} საათის წინ',
                        present: 'დაახლოებით {{count}} საათი',
                        future: 'დაახლოებით {{count}} საათში'
                    },
                    xHours: {
                        past: '{{count}} საათის წინ',
                        present: '{{count}} საათი',
                        future: '{{count}} საათში'
                    },
                    xDays: {
                        past: '{{count}} დღის წინ',
                        present: '{{count}} დღე',
                        future: '{{count}} დღეში'
                    },
                    aboutXWeeks: {
                        past: 'დაახლოებით {{count}} კვირას წინ',
                        present: 'დაახლოებით {{count}} კვირა',
                        future: 'დაახლოებით {{count}} კვირაში'
                    },
                    xWeeks: {
                        past: '{{count}} კვირას კვირა',
                        present: '{{count}} კვირა',
                        future: '{{count}} კვირაში'
                    },
                    aboutXMonths: {
                        past: 'დაახლოებით {{count}} თვის წინ',
                        present: 'დაახლოებით {{count}} თვე',
                        future: 'დაახლოებით {{count}} თვეში'
                    },
                    xMonths: {
                        past: '{{count}} თვის წინ',
                        present: '{{count}} თვე',
                        future: '{{count}} თვეში'
                    },
                    aboutXYears: {
                        past: 'დაახლოებით {{count}} წლის წინ',
                        present: 'დაახლოებით {{count}} წელი',
                        future: 'დაახლოებით {{count}} წელში'
                    },
                    xYears: {
                        past: '{{count}} წლის წინ',
                        present: '{{count}} წელი',
                        future: '{{count}} წელში'
                    },
                    overXYears: {
                        past: '{{count}} წელზე მეტი ხნის წინ',
                        present: '{{count}} წელზე მეტი',
                        future: '{{count}} წელზე მეტი ხნის შემდეგ'
                    },
                    almostXYears: {
                        past: 'თითქმის {{count}} წლის წინ',
                        present: 'თითქმის {{count}} წელი',
                        future: 'თითქმის {{count}} წელში'
                    }
                },
                Am = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM, y',
                            long: 'do, MMMM, y',
                            medium: 'd, MMM, y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}\'-ზე\'',
                            long: '{{date}} {{time}}\'-ზე\'',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Om = {
                    lastWeek: '\'წინა\' eeee p\'-ზე\'',
                    yesterday: '\'გუშინ\' p\'-ზე\'',
                    today: '\'დღეს\' p\'-ზე\'',
                    tomorrow: '\'ხვალ\' p\'-ზე\'',
                    nextWeek: '\'შემდეგი\' eeee p\'-ზე\'',
                    other: 'P'
                },
                Hm = {
                    code: 'ka',
                    formatDistance: function (e, t, n) {
                        return n = n || {
                        },
                            'string' == typeof Rm[e] ? Rm[e] : n.addSuffix && n.comparison > 0 ? Rm[e].future.replace('{{count}}', t) : n.addSuffix && n.comparison <= 0 ? Rm[e].past.replace('{{count}}', t) : Rm[e].present.replace('{{count}}', t)
                    },
                    formatLong: Am,
                    formatRelative: function (e, t, n, r) {
                        return Om[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            return 1 === n ? n + '-ლი' : n + '-ე'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ჩ.წ-მდე',
                                    'ჩ.წ'
                                ],
                                abbreviated: [
                                    'ჩვ.წ-მდე',
                                    'ჩვ.წ'
                                ],
                                wide: [
                                    'ჩვენს წელთაღრიცხვამდე',
                                    'ჩვენი წელთაღრიცხვით'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1-ლი კვ',
                                    '2-ე კვ',
                                    '3-ე კვ',
                                    '4-ე კვ'
                                ],
                                wide: [
                                    '1-ლი კვარტალი',
                                    '2-ე კვარტალი',
                                    '3-ე კვარტალი',
                                    '4-ე კვარტალი'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ია',
                                    'თე',
                                    'მა',
                                    'აპ',
                                    'მს',
                                    'ვნ',
                                    'ვლ',
                                    'აგ',
                                    'სე',
                                    'ოქ',
                                    'ნო',
                                    'დე'
                                ],
                                abbreviated: [
                                    'იან',
                                    'თებ',
                                    'მარ',
                                    'აპრ',
                                    'მაი',
                                    'ივნ',
                                    'ივლ',
                                    'აგვ',
                                    'სექ',
                                    'ოქტ',
                                    'ნოე',
                                    'დეკ'
                                ],
                                wide: [
                                    'იანვარი',
                                    'თებერვალი',
                                    'მარტი',
                                    'აპრილი',
                                    'მაისი',
                                    'ივნისი',
                                    'ივლისი',
                                    'აგვისტო',
                                    'სექტემბერი',
                                    'ოქტომბერი',
                                    'ნოემბერი',
                                    'დეკემბერი'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'კვ',
                                    'ორ',
                                    'სა',
                                    'ოთ',
                                    'ხუ',
                                    'პა',
                                    'შა'
                                ],
                                short: [
                                    'კვი',
                                    'ორშ',
                                    'სამ',
                                    'ოთხ',
                                    'ხუთ',
                                    'პარ',
                                    'შაბ'
                                ],
                                abbreviated: [
                                    'კვი',
                                    'ორშ',
                                    'სამ',
                                    'ოთხ',
                                    'ხუთ',
                                    'პარ',
                                    'შაბ'
                                ],
                                wide: [
                                    'კვირა',
                                    'ორშაბათი',
                                    'სამშაბათი',
                                    'ოთხშაბათი',
                                    'ხუთშაბათი',
                                    'პარასკევი',
                                    'შაბათი'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'შუაღამე',
                                    noon: 'შუადღე',
                                    morning: 'დილა',
                                    afternoon: 'საღამო',
                                    evening: 'საღამო',
                                    night: 'ღამე'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'შუაღამე',
                                    noon: 'შუადღე',
                                    morning: 'დილა',
                                    afternoon: 'საღამო',
                                    evening: 'საღამო',
                                    night: 'ღამე'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'შუაღამე',
                                    noon: 'შუადღე',
                                    morning: 'დილა',
                                    afternoon: 'საღამო',
                                    evening: 'საღამო',
                                    night: 'ღამე'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'შუაღამით',
                                    noon: 'შუადღისას',
                                    morning: 'დილით',
                                    afternoon: 'ნაშუადღევს',
                                    evening: 'საღამოს',
                                    night: 'ღამით'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'შუაღამით',
                                    noon: 'შუადღისას',
                                    morning: 'დილით',
                                    afternoon: 'ნაშუადღევს',
                                    evening: 'საღამოს',
                                    night: 'ღამით'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'შუაღამით',
                                    noon: 'შუადღისას',
                                    morning: 'დილით',
                                    afternoon: 'ნაშუადღევს',
                                    evening: 'საღამოს',
                                    night: 'ღამით'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-ლი|-ე)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ჩვ?\.წ)/i,
                                abbreviated: /^(ჩვ?\.წ)/i,
                                wide: /^(ჩვენს წელთაღრიცხვამდე|ქრისტეშობამდე|ჩვენი წელთაღრიცხვით|ქრისტეშობიდან)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(ჩვენს წელთაღრიცხვამდე|ქრისტეშობამდე)/i,
                                    /^(ჩვენი წელთაღრიცხვით|ქრისტეშობიდან)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]-(ლი|ე)? კვ/i,
                                wide: /^[1234]-(ლი|ე)? კვარტალი/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                any: /^(ია|თე|მა|აპ|მს|ვნ|ვლ|აგ|სე|ოქ|ნო|დე)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ია/i,
                                    /^თ/i,
                                    /^მარ/i,
                                    /^აპ/i,
                                    /^მაი/i,
                                    /^ი?ვნ/i,
                                    /^ი?ვლ/i,
                                    /^აგ/i,
                                    /^ს/i,
                                    /^ო/i,
                                    /^ნ/i,
                                    /^დ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(კვ|ორ|სა|ოთ|ხუ|პა|შა)/i,
                                short: /^(კვი|ორშ|სამ|ოთხ|ხუთ|პარ|შაბ)/i,
                                long: /^(კვირა|ორშაბათი|სამშაბათი|ოთხშაბათი|ხუთშაბათი|პარასკევი|შაბათი)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^კვ/i,
                                    /^ორ/i,
                                    /^სა/i,
                                    /^ოთ/i,
                                    /^ხუ/i,
                                    /^პა/i,
                                    /^შა/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^([ap]\.?\s?m\.?|შუაღ|დილ)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^შუაღ/i,
                                    noon: /^შუადღ/i,
                                    morning: /^დილ/i,
                                    afternoon: /ნაშუადღევს/i,
                                    evening: /საღამო/i,
                                    night: /ღამ/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                };
            function _m(e, t) {
                if (void 0 !== e.one && 1 === t) return e.one;
                var n = t % 10,
                    r = t % 100;
                return 1 === n && 11 !== r ? e.singularNominative.replace('{{count}}', t) : n >= 2 && n <= 4 && (r < 10 || r > 20) ? e.singularGenitive.replace('{{count}}', t) : e.pluralGenitive.replace('{{count}}', t)
            }
            function Lm(e) {
                return function (t, n) {
                    return n.addSuffix ? n.comparison > 0 ? e.future ? _m(e.future, t) : _m(e.regular, t) + ' кейін' : e.past ? _m(e.past, t) : _m(e.regular, t) + ' бұрын' : _m(e.regular, t)
                }
            }
            var Fm = {
                lessThanXSeconds: Lm({
                    regular: {
                        one: '1 секундтан аз',
                        singularNominative: '{{count}} секундтан аз',
                        singularGenitive: '{{count}} секундтан аз',
                        pluralGenitive: '{{count}} секундтан аз'
                    },
                    future: {
                        one: 'бір секундтан кейін',
                        singularNominative: '{{count}} секундтан кейін',
                        singularGenitive: '{{count}} секундтан кейін',
                        pluralGenitive: '{{count}} секундтан кейін'
                    }
                }),
                xSeconds: Lm({
                    regular: {
                        singularNominative: '{{count}} секунд',
                        singularGenitive: '{{count}} секунд',
                        pluralGenitive: '{{count}} секунд'
                    },
                    past: {
                        singularNominative: '{{count}} секунд бұрын',
                        singularGenitive: '{{count}} секунд бұрын',
                        pluralGenitive: '{{count}} секунд бұрын'
                    },
                    future: {
                        singularNominative: '{{count}} секундтан кейін',
                        singularGenitive: '{{count}} секундтан кейін',
                        pluralGenitive: '{{count}} секундтан кейін'
                    }
                }),
                halfAMinute: function (e, t) {
                    return t.addSuffix ? t.comparison > 0 ? 'жарты минут ішінде' : 'жарты минут бұрын' : 'жарты минут'
                },
                lessThanXMinutes: Lm({
                    regular: {
                        one: '1 минуттан аз',
                        singularNominative: '{{count}} минуттан аз',
                        singularGenitive: '{{count}} минуттан аз',
                        pluralGenitive: '{{count}} минуттан аз'
                    },
                    future: {
                        one: 'минуттан кем ',
                        singularNominative: '{{count}} минуттан кем',
                        singularGenitive: '{{count}} минуттан кем',
                        pluralGenitive: '{{count}} минуттан кем'
                    }
                }),
                xMinutes: Lm({
                    regular: {
                        singularNominative: '{{count}} минут',
                        singularGenitive: '{{count}} минут',
                        pluralGenitive: '{{count}} минут'
                    },
                    past: {
                        singularNominative: '{{count}} минут бұрын',
                        singularGenitive: '{{count}} минут бұрын',
                        pluralGenitive: '{{count}} минут бұрын'
                    },
                    future: {
                        singularNominative: '{{count}} минуттан кейін',
                        singularGenitive: '{{count}} минуттан кейін',
                        pluralGenitive: '{{count}} минуттан кейін'
                    }
                }),
                aboutXHours: Lm({
                    regular: {
                        singularNominative: 'шамамен {{count}} сағат',
                        singularGenitive: 'шамамен {{count}} сағат',
                        pluralGenitive: 'шамамен {{count}} сағат'
                    },
                    future: {
                        singularNominative: 'шамамен {{count}} сағаттан кейін',
                        singularGenitive: 'шамамен {{count}} сағаттан кейін',
                        pluralGenitive: 'шамамен {{count}} сағаттан кейін'
                    }
                }),
                xHours: Lm({
                    regular: {
                        singularNominative: '{{count}} сағат',
                        singularGenitive: '{{count}} сағат',
                        pluralGenitive: '{{count}} сағат'
                    }
                }),
                xDays: Lm({
                    regular: {
                        singularNominative: '{{count}} күн',
                        singularGenitive: '{{count}} күн',
                        pluralGenitive: '{{count}} күн'
                    },
                    future: {
                        singularNominative: '{{count}} күннен кейін',
                        singularGenitive: '{{count}} күннен кейін',
                        pluralGenitive: '{{count}} күннен кейін'
                    }
                }),
                aboutXWeeks: {
                    one: 'шамамен 1 апта',
                    other: 'шамамен {{count}} апта'
                },
                xWeeks: {
                    one: '1 апта',
                    other: '{{count}} апта'
                },
                aboutXMonths: Lm({
                    regular: {
                        singularNominative: 'шамамен {{count}} ай',
                        singularGenitive: 'шамамен {{count}} ай',
                        pluralGenitive: 'шамамен {{count}} ай'
                    },
                    future: {
                        singularNominative: 'шамамен {{count}} айдан кейін',
                        singularGenitive: 'шамамен {{count}} айдан кейін',
                        pluralGenitive: 'шамамен {{count}} айдан кейін'
                    }
                }),
                xMonths: Lm({
                    regular: {
                        singularNominative: '{{count}} ай',
                        singularGenitive: '{{count}} ай',
                        pluralGenitive: '{{count}} ай'
                    }
                }),
                aboutXYears: Lm({
                    regular: {
                        singularNominative: 'шамамен {{count}} жыл',
                        singularGenitive: 'шамамен {{count}} жыл',
                        pluralGenitive: 'шамамен {{count}} жыл'
                    },
                    future: {
                        singularNominative: 'шамамен {{count}} жылдан кейін',
                        singularGenitive: 'шамамен {{count}} жылдан кейін',
                        pluralGenitive: 'шамамен {{count}} жылдан кейін'
                    }
                }),
                xYears: Lm({
                    regular: {
                        singularNominative: '{{count}} жыл',
                        singularGenitive: '{{count}} жыл',
                        pluralGenitive: '{{count}} жыл'
                    },
                    future: {
                        singularNominative: '{{count}} жылдан кейін',
                        singularGenitive: '{{count}} жылдан кейін',
                        pluralGenitive: '{{count}} жылдан кейін'
                    }
                }),
                overXYears: Lm({
                    regular: {
                        singularNominative: '{{count}} жылдан астам',
                        singularGenitive: '{{count}} жылдан астам',
                        pluralGenitive: '{{count}} жылдан астам'
                    },
                    future: {
                        singularNominative: '{{count}} жылдан астам',
                        singularGenitive: '{{count}} жылдан астам',
                        pluralGenitive: '{{count}} жылдан астам'
                    }
                }),
                almostXYears: Lm({
                    regular: {
                        singularNominative: '{{count}} жылға жақын',
                        singularGenitive: '{{count}} жылға жақын',
                        pluralGenitive: '{{count}} жылға жақын'
                    },
                    future: {
                        singularNominative: '{{count}} жылдан кейін',
                        singularGenitive: '{{count}} жылдан кейін',
                        pluralGenitive: '{{count}} жылдан кейін'
                    }
                })
            },
                Xm = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM y \'ж.\'',
                            long: 'do MMMM y \'ж.\'',
                            medium: 'd MMM y \'ж.\'',
                            short: 'dd.MM.yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            any: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'any'
                    })
                },
                Um = [
                    'жексенбіде',
                    'дүйсенбіде',
                    'сейсенбіде',
                    'сәрсенбіде',
                    'бейсенбіде',
                    'жұмада',
                    'сенбіде'
                ];
            function qm(e) {
                return '\'' + Um[e] + ' сағат\' p\'-де\''
            }
            var Gm = {
                lastWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? qm(r) : function (e) {
                        return '\'өткен ' + Um[e] + ' сағат\' p\'-де\''
                    }(r)
                },
                yesterday: '\'кеше сағат\' p\'-де\'',
                today: '\'бүгін сағат\' p\'-де\'',
                tomorrow: '\'ертең сағат\' p\'-де\'',
                nextWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? qm(r) : function (e) {
                        return '\'келесі ' + Um[e] + ' сағат\' p\'-де\''
                    }(r)
                },
                other: 'P'
            },
                Vm = {
                    0: '-ші',
                    1: '-ші',
                    2: '-ші',
                    3: '-ші',
                    4: '-ші',
                    5: '-ші',
                    6: '-шы',
                    7: '-ші',
                    8: '-ші',
                    9: '-шы',
                    10: '-шы',
                    20: '-шы',
                    30: '-шы',
                    40: '-шы',
                    50: '-ші',
                    60: '-шы',
                    70: '-ші',
                    80: '-ші',
                    90: '-шы',
                    100: '-ші'
                },
                Ym = {
                    code: 'kk',
                    formatDistance: function (e, t, n) {
                        return n = n || {
                        },
                            Fm[e](t, n)
                    },
                    formatLong: Xm,
                    formatRelative: function (e, t, n, r) {
                        var a = Gm[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e);
                            return t + (Vm[t] || Vm[t % 10] || Vm[t >= 100 ? 100 : null])
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'б.з.д.',
                                    'б.з.'
                                ],
                                abbreviated: [
                                    'б.з.д.',
                                    'б.з.'
                                ],
                                wide: [
                                    'біздің заманымызға дейін',
                                    'біздің заманымыз'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1-ші тоқ.',
                                    '2-ші тоқ.',
                                    '3-ші тоқ.',
                                    '4-ші тоқ.'
                                ],
                                wide: [
                                    '1-ші тоқсан',
                                    '2-ші тоқсан',
                                    '3-ші тоқсан',
                                    '4-ші тоқсан'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'Қ',
                                    'А',
                                    'Н',
                                    'С',
                                    'М',
                                    'М',
                                    'Ш',
                                    'Т',
                                    'Қ',
                                    'Қ',
                                    'Қ',
                                    'Ж'
                                ],
                                abbreviated: [
                                    'қаң',
                                    'ақп',
                                    'нау',
                                    'сәу',
                                    'мам',
                                    'мау',
                                    'шіл',
                                    'там',
                                    'қыр',
                                    'қаз',
                                    'қар',
                                    'жел'
                                ],
                                wide: [
                                    'қаңтар',
                                    'ақпан',
                                    'наурыз',
                                    'сәуір',
                                    'мамыр',
                                    'маусым',
                                    'шілде',
                                    'тамыз',
                                    'қыркүйек',
                                    'қазан',
                                    'қараша',
                                    'желтоқсан'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'Қ',
                                    'А',
                                    'Н',
                                    'С',
                                    'М',
                                    'М',
                                    'Ш',
                                    'Т',
                                    'Қ',
                                    'Қ',
                                    'Қ',
                                    'Ж'
                                ],
                                abbreviated: [
                                    'қаң',
                                    'ақп',
                                    'нау',
                                    'сәу',
                                    'мам',
                                    'мау',
                                    'шіл',
                                    'там',
                                    'қыр',
                                    'қаз',
                                    'қар',
                                    'жел'
                                ],
                                wide: [
                                    'қаңтар',
                                    'ақпан',
                                    'наурыз',
                                    'сәуір',
                                    'мамыр',
                                    'маусым',
                                    'шілде',
                                    'тамыз',
                                    'қыркүйек',
                                    'қазан',
                                    'қараша',
                                    'желтоқсан'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Ж',
                                    'Д',
                                    'С',
                                    'С',
                                    'Б',
                                    'Ж',
                                    'С'
                                ],
                                short: [
                                    'жс',
                                    'дс',
                                    'сс',
                                    'ср',
                                    'бс',
                                    'жм',
                                    'сб'
                                ],
                                abbreviated: [
                                    'жс',
                                    'дс',
                                    'сс',
                                    'ср',
                                    'бс',
                                    'жм',
                                    'сб'
                                ],
                                wide: [
                                    'жексенбі',
                                    'дүйсенбі',
                                    'сейсенбі',
                                    'сәрсенбі',
                                    'бейсенбі',
                                    'жұма',
                                    'сенбі'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ТД',
                                    pm: 'ТК',
                                    midnight: 'түн ортасы',
                                    noon: 'түс',
                                    morning: 'таң',
                                    afternoon: 'күндіз',
                                    evening: 'кеш',
                                    night: 'түн'
                                },
                                wide: {
                                    am: 'ТД',
                                    pm: 'ТК',
                                    midnight: 'түн ортасы',
                                    noon: 'түс',
                                    morning: 'таң',
                                    afternoon: 'күндіз',
                                    evening: 'кеш',
                                    night: 'түн'
                                }
                            },
                            defaultWidth: 'any',
                            formattingValues: {
                                narrow: {
                                    am: 'ТД',
                                    pm: 'ТК',
                                    midnight: 'түн ортасында',
                                    noon: 'түс',
                                    morning: 'таң',
                                    afternoon: 'күн',
                                    evening: 'кеш',
                                    night: 'түн'
                                },
                                wide: {
                                    am: 'ТД',
                                    pm: 'ТК',
                                    midnight: 'түн ортасында',
                                    noon: 'түсте',
                                    morning: 'таңертең',
                                    afternoon: 'күндіз',
                                    evening: 'кеште',
                                    night: 'түнде'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-?(ші|шы))?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^((б )?з\.?\s?д\.?)/i,
                                abbreviated: /^((б )?з\.?\s?д\.?)/i,
                                wide: /^(біздің заманымызға дейін|біздің заманымыз|біздің заманымыздан)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^б/i,
                                    /^з/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234](-?ші)? тоқ.?/i,
                                wide: /^[1234](-?ші)? тоқсан/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(қ|а|н|с|м|мау|ш|т|қыр|қаз|қар|ж)/i,
                                abbreviated: /^(қаң|ақп|нау|сәу|мам|мау|шіл|там|қыр|қаз|қар|жел)/i,
                                wide: /^(қаңтар|ақпан|наурыз|сәуір|мамыр|маусым|шілде|тамыз|қыркүйек|қазан|қараша|желтоқсан)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^қ/i,
                                    /^а/i,
                                    /^н/i,
                                    /^с/i,
                                    /^м/i,
                                    /^м/i,
                                    /^ш/i,
                                    /^т/i,
                                    /^қ/i,
                                    /^қ/i,
                                    /^қ/i,
                                    /^ж/i
                                ],
                                abbreviated: [
                                    /^қаң/i,
                                    /^ақп/i,
                                    /^нау/i,
                                    /^сәу/i,
                                    /^мам/i,
                                    /^мау/i,
                                    /^шіл/i,
                                    /^там/i,
                                    /^қыр/i,
                                    /^қаз/i,
                                    /^қар/i,
                                    /^жел/i
                                ],
                                any: [
                                    /^қ/i,
                                    /^а/i,
                                    /^н/i,
                                    /^с/i,
                                    /^м/i,
                                    /^м/i,
                                    /^ш/i,
                                    /^т/i,
                                    /^қ/i,
                                    /^қ/i,
                                    /^қ/i,
                                    /^ж/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(ж|д|с|с|б|ж|с)/i,
                                short: /^(жс|дс|сс|ср|бс|жм|сб)/i,
                                wide: /^(жексенбі|дүйсенбі|сейсенбі|сәрсенбі|бейсенбі|жұма|сенбі)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ж/i,
                                    /^д/i,
                                    /^с/i,
                                    /^с/i,
                                    /^б/i,
                                    /^ж/i,
                                    /^с/i
                                ],
                                short: [
                                    /^жс/i,
                                    /^дс/i,
                                    /^сс/i,
                                    /^ср/i,
                                    /^бс/i,
                                    /^жм/i,
                                    /^сб/i
                                ],
                                any: [
                                    /^ж[ек]/i,
                                    /^д[үй]/i,
                                    /^сe[й]/i,
                                    /^сә[р]/i,
                                    /^б[ей]/i,
                                    /^ж[ұм]/i,
                                    /^се[н]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i,
                                wide: /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i,
                                any: /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: {
                                    am: /^ТД/i,
                                    pm: /^ТК/i,
                                    midnight: /^түн орта/i,
                                    noon: /^күндіз/i,
                                    morning: /таң/i,
                                    afternoon: /түс/i,
                                    evening: /кеш/i,
                                    night: /түн/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                Bm = Ym,
                $m = {
                    lessThanXSeconds: 'តិចជាង {{count}} វិនាទី',
                    xSeconds: '{{count}} វិនាទី',
                    halfAMinute: 'កន្លះនាទី',
                    lessThanXMinutes: 'តិចជាង {{count}} នាទី',
                    xMinutes: '{{count}} នាទី',
                    aboutXHours: 'ប្រហែល {{count}} ម៉ោង',
                    xHours: '{{count}} ម៉ោង',
                    xDays: '{{count}} ថ្ងៃ',
                    aboutXWeeks: 'ប្រហែល {{count}} សប្តាហ៍',
                    xWeeks: '{{count}} សប្តាហ៍',
                    aboutXMonths: 'ប្រហែល {{count}} ខែ',
                    xMonths: '{{count}} ខែ',
                    aboutXYears: 'ប្រហែល {{count}} ឆ្នាំ',
                    xYears: '{{count}} ឆ្នាំ',
                    overXYears: 'ជាង {{count}} ឆ្នាំ',
                    almostXYears: 'ជិត {{count}} ឆ្នាំ'
                },
                Qm = {
                    date: at({
                        formats: {
                            full: 'EEEE do MMMM y',
                            long: 'do MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a',
                            long: 'h:mm:ss a',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'ម៉ោង\' {{time}}',
                            long: '{{date}} \'ម៉ោង\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Km = {
                    lastWeek: '\'ថ្ងៃ\'eeee\'ស​ប្តា​ហ៍​មុនម៉ោង\' p',
                    yesterday: '\'ម្សិលមិញនៅម៉ោង\' p',
                    today: '\'ថ្ងៃនេះម៉ោង\' p',
                    tomorrow: '\'ថ្ងៃស្អែកម៉ោង\' p',
                    nextWeek: '\'ថ្ងៃ\'eeee\'ស​ប្តា​ហ៍​ក្រោយម៉ោង\' p',
                    other: 'P'
                },
                Jm = {
                    code: 'km',
                    formatDistance: function (e, t, n) {
                        var r = $m[e];
                        return 'number' == typeof t && (r = r.replace('{{count}}', t.toString())),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? 'ក្នុងរយៈពេល ' + r : r + 'មុន' : r
                    },
                    formatLong: Qm,
                    formatRelative: function (e, t, n, r) {
                        return Km[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e).toString()
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ម.គស',
                                    'គស'
                                ],
                                abbreviated: [
                                    'មុនគ.ស',
                                    'គ.ស'
                                ],
                                wide: [
                                    'មុនគ្រិស្តសករាជ',
                                    'នៃគ្រិស្តសករាជ'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    'ត្រីមាសទី 1',
                                    'ត្រីមាសទី 2',
                                    'ត្រីមាសទី 3',
                                    'ត្រីមាសទី 4'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ម.ក',
                                    'ក.ម',
                                    'មិ',
                                    'ម.ស',
                                    'ឧ.ស',
                                    'ម.ថ',
                                    'ក.ដ',
                                    'សី',
                                    'កញ',
                                    'តុ',
                                    'វិ',
                                    'ធ'
                                ],
                                abbreviated: [
                                    'មករា',
                                    'កុម្ភៈ',
                                    'មីនា',
                                    'មេសា',
                                    'ឧសភា',
                                    'មិថុនា',
                                    'កក្កដា',
                                    'សីហា',
                                    'កញ្ញា',
                                    'តុលា',
                                    'វិច្ឆិកា',
                                    'ធ្នូ'
                                ],
                                wide: [
                                    'មករា',
                                    'កុម្ភៈ',
                                    'មីនា',
                                    'មេសា',
                                    'ឧសភា',
                                    'មិថុនា',
                                    'កក្កដា',
                                    'សីហា',
                                    'កញ្ញា',
                                    'តុលា',
                                    'វិច្ឆិកា',
                                    'ធ្នូ'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'អា',
                                    'ច',
                                    'អ',
                                    'ព',
                                    'ព្រ',
                                    'សុ',
                                    'ស'
                                ],
                                short: [
                                    'អា',
                                    'ច',
                                    'អ',
                                    'ព',
                                    'ព្រ',
                                    'សុ',
                                    'ស'
                                ],
                                abbreviated: [
                                    'អា',
                                    'ច',
                                    'អ',
                                    'ព',
                                    'ព្រ',
                                    'សុ',
                                    'ស'
                                ],
                                wide: [
                                    'អាទិត្យ',
                                    'ចន្ទ',
                                    'អង្គារ',
                                    'ពុធ',
                                    'ព្រហស្បតិ៍',
                                    'សុក្រ',
                                    'សៅរ៍'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ព្រឹក',
                                    pm: 'ល្ងាច',
                                    midnight: '​ពេលកណ្ដាលអធ្រាត្រ',
                                    noon: 'ពេលថ្ងៃត្រង់',
                                    morning: 'ពេលព្រឹក',
                                    afternoon: 'ពេលរសៀល',
                                    evening: 'ពេលល្ងាច',
                                    night: 'ពេលយប់'
                                },
                                abbreviated: {
                                    am: 'ព្រឹក',
                                    pm: 'ល្ងាច',
                                    midnight: '​ពេលកណ្ដាលអធ្រាត្រ',
                                    noon: 'ពេលថ្ងៃត្រង់',
                                    morning: 'ពេលព្រឹក',
                                    afternoon: 'ពេលរសៀល',
                                    evening: 'ពេលល្ងាច',
                                    night: 'ពេលយប់'
                                },
                                wide: {
                                    am: 'ព្រឹក',
                                    pm: 'ល្ងាច',
                                    midnight: '​ពេលកណ្ដាលអធ្រាត្រ',
                                    noon: 'ពេលថ្ងៃត្រង់',
                                    morning: 'ពេលព្រឹក',
                                    afternoon: 'ពេលរសៀល',
                                    evening: 'ពេលល្ងាច',
                                    night: 'ពេលយប់'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ព្រឹក',
                                    pm: 'ល្ងាច',
                                    midnight: '​ពេលកណ្ដាលអធ្រាត្រ',
                                    noon: 'ពេលថ្ងៃត្រង់',
                                    morning: 'ពេលព្រឹក',
                                    afternoon: 'ពេលរសៀល',
                                    evening: 'ពេលល្ងាច',
                                    night: 'ពេលយប់'
                                },
                                abbreviated: {
                                    am: 'ព្រឹក',
                                    pm: 'ល្ងាច',
                                    midnight: '​ពេលកណ្ដាលអធ្រាត្រ',
                                    noon: 'ពេលថ្ងៃត្រង់',
                                    morning: 'ពេលព្រឹក',
                                    afternoon: 'ពេលរសៀល',
                                    evening: 'ពេលល្ងាច',
                                    night: 'ពេលយប់'
                                },
                                wide: {
                                    am: 'ព្រឹក',
                                    pm: 'ល្ងាច',
                                    midnight: '​ពេលកណ្ដាលអធ្រាត្រ',
                                    noon: 'ពេលថ្ងៃត្រង់',
                                    morning: 'ពេលព្រឹក',
                                    afternoon: 'ពេលរសៀល',
                                    evening: 'ពេលល្ងាច',
                                    night: 'ពេលយប់'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ម\.)?គស/i,
                                abbreviated: /^(មុន)?គ\.ស/i,
                                wide: /^(មុន|នៃ)គ្រិស្តសករាជ/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(ម|មុន)គ\.?ស/i,
                                    /^(នៃ)?គ\.?ស/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^(ត្រីមាស)(ទី)?\s?[1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(ម\.ក|ក\.ម|មិ|ម\.ស|ឧ\.ស|ម\.ថ|ក\.ដ|សី|កញ|តុ|វិ|ធ)/i,
                                abbreviated: /^(មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ)/i,
                                wide: /^(មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ម\.ក/i,
                                    /^ក\.ម/i,
                                    /^មិ/i,
                                    /^ម\.ស/i,
                                    /^ឧ\.ស/i,
                                    /^ម\.ថ/i,
                                    /^ក\.ដ/i,
                                    /^សី/i,
                                    /^កញ/i,
                                    /^តុ/i,
                                    /^វិ/i,
                                    /^ធ/i
                                ],
                                any: [
                                    /^មក/i,
                                    /^កុ/i,
                                    /^មីន/i,
                                    /^មេ/i,
                                    /^ឧស/i,
                                    /^មិថ/i,
                                    /^កក/i,
                                    /^សី/i,
                                    /^កញ/i,
                                    /^តុ/i,
                                    /^វិច/i,
                                    /^ធ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,
                                short: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,
                                abbreviated: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,
                                wide: /^(អាទិត្យ|ចន្ទ|អង្គារ|ពុធ|ព្រហស្បតិ៍|សុក្រ|សៅរ៍)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^អា/i,
                                    /^ច/i,
                                    /^អ/i,
                                    /^ព/i,
                                    /^ព្រ/i,
                                    /^សុ/i,
                                    /^ស/i
                                ],
                                any: [
                                    /^អា/i,
                                    /^ច/i,
                                    /^អ/i,
                                    /^ព/i,
                                    /^ព្រ/i,
                                    /^សុ/i,
                                    /^សៅ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ព្រឹក|ល្ងាច|ពេលព្រឹក|ពេលថ្ងៃត្រង់|ពេលល្ងាច|ពេលរសៀល|ពេលយប់|ពេលកណ្ដាលអធ្រាត្រ)/i,
                                any: /^(ព្រឹក|ល្ងាច|ពេលព្រឹក|ពេលថ្ងៃត្រង់|ពេលល្ងាច|ពេលរសៀល|ពេលយប់|ពេលកណ្ដាលអធ្រាត្រ)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ព្រឹក/i,
                                    pm: /^ល្ងាច/i,
                                    midnight: /^ពេលកណ្ដាលអធ្រាត្រ/i,
                                    noon: /^ពេលថ្ងៃត្រង់/i,
                                    morning: /ពេលព្រឹក/i,
                                    afternoon: /ពេលរសៀល/i,
                                    evening: /ពេលល្ងាច/i,
                                    night: /ពេលយប់/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Zm = {
                    lessThanXSeconds: {
                        one: {
                            default:
                                '1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ',
                            future: '1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ',
                            past: '1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ'
                        },
                        other: {
                            default:
                                '{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ',
                            future: '{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ',
                            past: '{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ'
                        }
                    },
                    xSeconds: {
                        one: {
                            default:
                                '1 ಸೆಕೆಂಡ್',
                            future: '1 ಸೆಕೆಂಡ್‌ನಲ್ಲಿ',
                            past: '1 ಸೆಕೆಂಡ್ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                '{{count}} ಸೆಕೆಂಡುಗಳು',
                            future: '{{count}} ಸೆಕೆಂಡ್‌ಗಳಲ್ಲಿ',
                            past: '{{count}} ಸೆಕೆಂಡ್ ಹಿಂದೆ'
                        }
                    },
                    halfAMinute: {
                        other: {
                            default:
                                'ಅರ್ಧ ನಿಮಿಷ',
                            future: 'ಅರ್ಧ ನಿಮಿಷದಲ್ಲಿ',
                            past: 'ಅರ್ಧ ನಿಮಿಷದ ಹಿಂದೆ'
                        }
                    },
                    lessThanXMinutes: {
                        one: {
                            default:
                                '1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ',
                            future: '1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ',
                            past: '1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ'
                        },
                        other: {
                            default:
                                '{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ',
                            future: '{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ',
                            past: '{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ'
                        }
                    },
                    xMinutes: {
                        one: {
                            default:
                                '1 ನಿಮಿಷ',
                            future: '1 ನಿಮಿಷದಲ್ಲಿ',
                            past: '1 ನಿಮಿಷದ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                '{{count}} ನಿಮಿಷಗಳು',
                            future: '{{count}} ನಿಮಿಷಗಳಲ್ಲಿ',
                            past: '{{count}} ನಿಮಿಷಗಳ ಹಿಂದೆ'
                        }
                    },
                    aboutXHours: {
                        one: {
                            default:
                                'ಸುಮಾರು 1 ಗಂಟೆ',
                            future: 'ಸುಮಾರು 1 ಗಂಟೆಯಲ್ಲಿ',
                            past: 'ಸುಮಾರು 1 ಗಂಟೆ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                'ಸುಮಾರು {{count}} ಗಂಟೆಗಳು',
                            future: 'ಸುಮಾರು {{count}} ಗಂಟೆಗಳಲ್ಲಿ',
                            past: 'ಸುಮಾರು {{count}} ಗಂಟೆಗಳ ಹಿಂದೆ'
                        }
                    },
                    xHours: {
                        one: {
                            default:
                                '1 ಗಂಟೆ',
                            future: '1 ಗಂಟೆಯಲ್ಲಿ',
                            past: '1 ಗಂಟೆ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                '{{count}} ಗಂಟೆಗಳು',
                            future: '{{count}} ಗಂಟೆಗಳಲ್ಲಿ',
                            past: '{{count}} ಗಂಟೆಗಳ ಹಿಂದೆ'
                        }
                    },
                    xDays: {
                        one: {
                            default:
                                '1 ದಿನ',
                            future: '1 ದಿನದಲ್ಲಿ',
                            past: '1 ದಿನದ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                '{{count}} ದಿನಗಳು',
                            future: '{{count}} ದಿನಗಳಲ್ಲಿ',
                            past: '{{count}} ದಿನಗಳ ಹಿಂದೆ'
                        }
                    },
                    aboutXMonths: {
                        one: {
                            default:
                                'ಸುಮಾರು 1 ತಿಂಗಳು',
                            future: 'ಸುಮಾರು 1 ತಿಂಗಳಲ್ಲಿ',
                            past: 'ಸುಮಾರು 1 ತಿಂಗಳ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                'ಸುಮಾರು {{count}} ತಿಂಗಳು',
                            future: 'ಸುಮಾರು {{count}} ತಿಂಗಳುಗಳಲ್ಲಿ',
                            past: 'ಸುಮಾರು {{count}} ತಿಂಗಳುಗಳ ಹಿಂದೆ'
                        }
                    },
                    xMonths: {
                        one: {
                            default:
                                '1 ತಿಂಗಳು',
                            future: '1 ತಿಂಗಳಲ್ಲಿ',
                            past: '1 ತಿಂಗಳ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                '{{count}} ತಿಂಗಳು',
                            future: '{{count}} ತಿಂಗಳುಗಳಲ್ಲಿ',
                            past: '{{count}} ತಿಂಗಳುಗಳ ಹಿಂದೆ'
                        }
                    },
                    aboutXYears: {
                        one: {
                            default:
                                'ಸುಮಾರು 1 ವರ್ಷ',
                            future: 'ಸುಮಾರು 1 ವರ್ಷದಲ್ಲಿ',
                            past: 'ಸುಮಾರು 1 ವರ್ಷದ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                'ಸುಮಾರು {{count}} ವರ್ಷಗಳು',
                            future: 'ಸುಮಾರು {{count}} ವರ್ಷಗಳಲ್ಲಿ',
                            past: 'ಸುಮಾರು {{count}} ವರ್ಷಗಳ ಹಿಂದೆ'
                        }
                    },
                    xYears: {
                        one: {
                            default:
                                '1 ವರ್ಷ',
                            future: '1 ವರ್ಷದಲ್ಲಿ',
                            past: '1 ವರ್ಷದ ಹಿಂದೆ'
                        },
                        other: {
                            default:
                                '{{count}} ವರ್ಷಗಳು',
                            future: '{{count}} ವರ್ಷಗಳಲ್ಲಿ',
                            past: '{{count}} ವರ್ಷಗಳ ಹಿಂದೆ'
                        }
                    },
                    overXYears: {
                        one: {
                            default:
                                '1 ವರ್ಷದ ಮೇಲೆ',
                            future: '1 ವರ್ಷದ ಮೇಲೆ',
                            past: '1 ವರ್ಷದ ಮೇಲೆ'
                        },
                        other: {
                            default:
                                '{{count}} ವರ್ಷಗಳ ಮೇಲೆ',
                            future: '{{count}} ವರ್ಷಗಳ ಮೇಲೆ',
                            past: '{{count}} ವರ್ಷಗಳ ಮೇಲೆ'
                        }
                    },
                    almostXYears: {
                        one: {
                            default:
                                'ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ',
                            future: 'ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ',
                            past: 'ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ'
                        },
                        other: {
                            default:
                                'ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ',
                            future: 'ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ',
                            past: 'ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ'
                        }
                    }
                };
            var ef = {
                date: at({
                    formats: {
                        full: 'EEEE, MMMM d, y',
                        long: 'MMMM d, y',
                        medium: 'MMM d, y',
                        short: 'd/M/yy'
                    },
                    defaultWidth: 'full'
                }),
                time: at({
                    formats: {
                        full: 'hh:mm:ss a zzzz',
                        long: 'hh:mm:ss a z',
                        medium: 'hh:mm:ss a',
                        short: 'hh:mm a'
                    },
                    defaultWidth: 'full'
                }),
                dateTime: at({
                    formats: {
                        full: '{{date}} {{time}}',
                        long: '{{date}} {{time}}',
                        medium: '{{date}} {{time}}',
                        short: '{{date}} {{time}}'
                    },
                    defaultWidth: 'full'
                })
            },
                tf = {
                    lastWeek: '\'ಕಳೆದ\' eeee p \'ಕ್ಕೆ\'',
                    yesterday: '\'ನಿನ್ನೆ\' p \'ಕ್ಕೆ\'',
                    today: '\'ಇಂದು\' p \'ಕ್ಕೆ\'',
                    tomorrow: '\'ನಾಳೆ\' p \'ಕ್ಕೆ\'',
                    nextWeek: 'eeee p \'ಕ್ಕೆ\'',
                    other: 'P'
                },
                nf = {
                    code: 'kn',
                    formatDistance: function (e, t, n) {
                        return n = n || {
                        },
                            ('string' == typeof Zm[e] ? Zm[e] : function (e, t) {
                                return t.addSuffix ? t.comparison > 0 ? e.future : e.past : e.default
                            }(1 === t ? Zm[e].one : Zm[e].other, n)).replace('{{count}}', t)
                    },
                    formatLong: ef,
                    formatRelative: function (e, t, n, r) {
                        return tf[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + 'ನೇ'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ಕ್ರಿ.ಪೂ',
                                    'ಕ್ರಿ.ಶ'
                                ],
                                abbreviated: [
                                    'ಕ್ರಿ.ಪೂ',
                                    'ಕ್ರಿ.ಶ'
                                ],
                                wide: [
                                    'ಕ್ರಿಸ್ತ ಪೂರ್ವ',
                                    'ಕ್ರಿಸ್ತ ಶಕ'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'ತ್ರೈ 1',
                                    'ತ್ರೈ 2',
                                    'ತ್ರೈ 3',
                                    'ತ್ರೈ 4'
                                ],
                                wide: [
                                    '1ನೇ ತ್ರೈಮಾಸಿಕ',
                                    '2ನೇ ತ್ರೈಮಾಸಿಕ',
                                    '3ನೇ ತ್ರೈಮಾಸಿಕ',
                                    '4ನೇ ತ್ರೈಮಾಸಿಕ'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ಜ',
                                    'ಫೆ',
                                    'ಮಾ',
                                    'ಏ',
                                    'ಮೇ',
                                    'ಜೂ',
                                    'ಜು',
                                    'ಆ',
                                    'ಸೆ',
                                    'ಅ',
                                    'ನ',
                                    'ಡಿ'
                                ],
                                abbreviated: [
                                    'ಜನ',
                                    'ಫೆಬ್ರ',
                                    'ಮಾರ್ಚ್',
                                    'ಏಪ್ರಿ',
                                    'ಮೇ',
                                    'ಜೂನ್',
                                    'ಜುಲೈ',
                                    'ಆಗ',
                                    'ಸೆಪ್ಟೆಂ',
                                    'ಅಕ್ಟೋ',
                                    'ನವೆಂ',
                                    'ಡಿಸೆಂ'
                                ],
                                wide: [
                                    'ಜನವರಿ',
                                    'ಫೆಬ್ರವರಿ',
                                    'ಮಾರ್ಚ್',
                                    'ಏಪ್ರಿಲ್',
                                    'ಮೇ',
                                    'ಜೂನ್',
                                    'ಜುಲೈ',
                                    'ಆಗಸ್ಟ್',
                                    'ಸೆಪ್ಟೆಂಬರ್',
                                    'ಅಕ್ಟೋಬರ್',
                                    'ನವೆಂಬರ್',
                                    'ಡಿಸೆಂಬರ್'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ಭಾ',
                                    'ಸೋ',
                                    'ಮಂ',
                                    'ಬು',
                                    'ಗು',
                                    'ಶು',
                                    'ಶ'
                                ],
                                short: [
                                    'ಭಾನು',
                                    'ಸೋಮ',
                                    'ಮಂಗಳ',
                                    'ಬುಧ',
                                    'ಗುರು',
                                    'ಶುಕ್ರ',
                                    'ಶನಿ'
                                ],
                                abbreviated: [
                                    'ಭಾನು',
                                    'ಸೋಮ',
                                    'ಮಂಗಳ',
                                    'ಬುಧ',
                                    'ಗುರು',
                                    'ಶುಕ್ರ',
                                    'ಶನಿ'
                                ],
                                wide: [
                                    'ಭಾನುವಾರ',
                                    'ಸೋಮವಾರ',
                                    'ಮಂಗಳವಾರ',
                                    'ಬುಧವಾರ',
                                    'ಗುರುವಾರ',
                                    'ಶುಕ್ರವಾರ',
                                    'ಶನಿವಾರ'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ಪೂರ್ವಾಹ್ನ',
                                    pm: 'ಅಪರಾಹ್ನ',
                                    midnight: 'ಮಧ್ಯರಾತ್ರಿ',
                                    noon: 'ಮಧ್ಯಾಹ್ನ',
                                    morning: 'ಬೆಳಗ್ಗೆ',
                                    afternoon: 'ಮಧ್ಯಾಹ್ನ',
                                    evening: 'ಸಂಜೆ',
                                    night: 'ರಾತ್ರಿ'
                                },
                                abbreviated: {
                                    am: 'ಪೂರ್ವಾಹ್ನ',
                                    pm: 'ಅಪರಾಹ್ನ',
                                    midnight: 'ಮಧ್ಯರಾತ್ರಿ',
                                    noon: 'ಮಧ್ಯಾನ್ಹ',
                                    morning: 'ಬೆಳಗ್ಗೆ',
                                    afternoon: 'ಮಧ್ಯಾನ್ಹ',
                                    evening: 'ಸಂಜೆ',
                                    night: 'ರಾತ್ರಿ'
                                },
                                wide: {
                                    am: 'ಪೂರ್ವಾಹ್ನ',
                                    pm: 'ಅಪರಾಹ್ನ',
                                    midnight: 'ಮಧ್ಯರಾತ್ರಿ',
                                    noon: 'ಮಧ್ಯಾನ್ಹ',
                                    morning: 'ಬೆಳಗ್ಗೆ',
                                    afternoon: 'ಮಧ್ಯಾನ್ಹ',
                                    evening: 'ಸಂಜೆ',
                                    night: 'ರಾತ್ರಿ'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ಪೂ',
                                    pm: 'ಅ',
                                    midnight: 'ಮಧ್ಯರಾತ್ರಿ',
                                    noon: 'ಮಧ್ಯಾನ್ಹ',
                                    morning: 'ಬೆಳಗ್ಗೆ',
                                    afternoon: 'ಮಧ್ಯಾನ್ಹ',
                                    evening: 'ಸಂಜೆ',
                                    night: 'ರಾತ್ರಿ'
                                },
                                abbreviated: {
                                    am: 'ಪೂರ್ವಾಹ್ನ',
                                    pm: 'ಅಪರಾಹ್ನ',
                                    midnight: 'ಮಧ್ಯ ರಾತ್ರಿ',
                                    noon: 'ಮಧ್ಯಾನ್ಹ',
                                    morning: 'ಬೆಳಗ್ಗೆ',
                                    afternoon: 'ಮಧ್ಯಾನ್ಹ',
                                    evening: 'ಸಂಜೆ',
                                    night: 'ರಾತ್ರಿ'
                                },
                                wide: {
                                    am: 'ಪೂರ್ವಾಹ್ನ',
                                    pm: 'ಅಪರಾಹ್ನ',
                                    midnight: 'ಮಧ್ಯ ರಾತ್ರಿ',
                                    noon: 'ಮಧ್ಯಾನ್ಹ',
                                    morning: 'ಬೆಳಗ್ಗೆ',
                                    afternoon: 'ಮಧ್ಯಾನ್ಹ',
                                    evening: 'ಸಂಜೆ',
                                    night: 'ರಾತ್ರಿ'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(ನೇ|ನೆ)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ಕ್ರಿ.ಪೂ|ಕ್ರಿ.ಶ)/i,
                                abbreviated: /^(ಕ್ರಿ\.?\s?ಪೂ\.?|ಕ್ರಿ\.?\s?ಶ\.?|ಪ್ರ\.?\s?ಶ\.?)/i,
                                wide: /^(ಕ್ರಿಸ್ತ ಪೂರ್ವ|ಕ್ರಿಸ್ತ ಶಕ|ಪ್ರಸಕ್ತ ಶಕ)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ಪೂ/i,
                                    /^(ಶ|ಪ್ರ)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^ತ್ರೈ[1234]|ತ್ರೈ [1234]| [1234]ತ್ರೈ/i,
                                wide: /^[1234](ನೇ)? ತ್ರೈಮಾಸಿಕ/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(ಜೂ|ಜು|ಜ|ಫೆ|ಮಾ|ಏ|ಮೇ|ಆ|ಸೆ|ಅ|ನ|ಡಿ)/i,
                                abbreviated: /^(ಜನ|ಫೆಬ್ರ|ಮಾರ್ಚ್|ಏಪ್ರಿ|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗ|ಸೆಪ್ಟೆಂ|ಅಕ್ಟೋ|ನವೆಂ|ಡಿಸೆಂ)/i,
                                wide: /^(ಜನವರಿ|ಫೆಬ್ರವರಿ|ಮಾರ್ಚ್|ಏಪ್ರಿಲ್|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗಸ್ಟ್|ಸೆಪ್ಟೆಂಬರ್|ಅಕ್ಟೋಬರ್|ನವೆಂಬರ್|ಡಿಸೆಂಬರ್)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ಜ$/i,
                                    /^ಫೆ/i,
                                    /^ಮಾ/i,
                                    /^ಏ/i,
                                    /^ಮೇ/i,
                                    /^ಜೂ/i,
                                    /^ಜು$/i,
                                    /^ಆ/i,
                                    /^ಸೆ/i,
                                    /^ಅ/i,
                                    /^ನ/i,
                                    /^ಡಿ/i
                                ],
                                any: [
                                    /^ಜನ/i,
                                    /^ಫೆ/i,
                                    /^ಮಾ/i,
                                    /^ಏ/i,
                                    /^ಮೇ/i,
                                    /^ಜೂನ್/i,
                                    /^ಜುಲೈ/i,
                                    /^ಆ/i,
                                    /^ಸೆ/i,
                                    /^ಅ/i,
                                    /^ನ/i,
                                    /^ಡಿ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(ಭಾ|ಸೋ|ಮ|ಬು|ಗು|ಶು|ಶ)/i,
                                short: /^(ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ)/i,
                                abbreviated: /^(ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ)/i,
                                wide: /^(ಭಾನುವಾರ|ಸೋಮವಾರ|ಮಂಗಳವಾರ|ಬುಧವಾರ|ಗುರುವಾರ|ಶುಕ್ರವಾರ|ಶನಿವಾರ)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ಭಾ/i,
                                    /^ಸೋ/i,
                                    /^ಮ/i,
                                    /^ಬು/i,
                                    /^ಗು/i,
                                    /^ಶು/i,
                                    /^ಶ/i
                                ],
                                any: [
                                    /^ಭಾ/i,
                                    /^ಸೋ/i,
                                    /^ಮ/i,
                                    /^ಬು/i,
                                    /^ಗು/i,
                                    /^ಶು/i,
                                    /^ಶ/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ಪೂ|ಅ|ಮಧ್ಯರಾತ್ರಿ|ಮಧ್ಯಾನ್ಹ|ಬೆಳಗ್ಗೆ|ಸಂಜೆ|ರಾತ್ರಿ)/i,
                                any: /^(ಪೂರ್ವಾಹ್ನ|ಅಪರಾಹ್ನ|ಮಧ್ಯರಾತ್ರಿ|ಮಧ್ಯಾನ್ಹ|ಬೆಳಗ್ಗೆ|ಸಂಜೆ|ರಾತ್ರಿ)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ಪೂ/i,
                                    pm: /^ಅ/i,
                                    midnight: /ಮಧ್ಯರಾತ್ರಿ/i,
                                    noon: /ಮಧ್ಯಾನ್ಹ/i,
                                    morning: /ಬೆಳಗ್ಗೆ/i,
                                    afternoon: /ಮಧ್ಯಾನ್ಹ/i,
                                    evening: /ಸಂಜೆ/i,
                                    night: /ರಾತ್ರಿ/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                rf = {
                    lessThanXSeconds: {
                        one: '1초 미만',
                        other: '{{count}}초 미만'
                    },
                    xSeconds: {
                        one: '1초',
                        other: '{{count}}초'
                    },
                    halfAMinute: '30초',
                    lessThanXMinutes: {
                        one: '1분 미만',
                        other: '{{count}}분 미만'
                    },
                    xMinutes: {
                        one: '1분',
                        other: '{{count}}분'
                    },
                    aboutXHours: {
                        one: '약 1시간',
                        other: '약 {{count}}시간'
                    },
                    xHours: {
                        one: '1시간',
                        other: '{{count}}시간'
                    },
                    xDays: {
                        one: '1일',
                        other: '{{count}}일'
                    },
                    aboutXWeeks: {
                        one: '약 1주',
                        other: '약 {{count}}주'
                    },
                    xWeeks: {
                        one: '1주',
                        other: '{{count}}주'
                    },
                    aboutXMonths: {
                        one: '약 1개월',
                        other: '약 {{count}}개월'
                    },
                    xMonths: {
                        one: '1개월',
                        other: '{{count}}개월'
                    },
                    aboutXYears: {
                        one: '약 1년',
                        other: '약 {{count}}년'
                    },
                    xYears: {
                        one: '1년',
                        other: '{{count}}년'
                    },
                    overXYears: {
                        one: '1년 이상',
                        other: '{{count}}년 이상'
                    },
                    almostXYears: {
                        one: '거의 1년',
                        other: '거의 {{count}}년'
                    }
                },
                af = {
                    date: at({
                        formats: {
                            full: 'y년 M월 d일 EEEE',
                            long: 'y년 M월 d일',
                            medium: 'y.MM.dd',
                            short: 'y.MM.dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'a H시 mm분 ss초 zzzz',
                            long: 'a H:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                of = {
                    lastWeek: '\'지난\' eeee p',
                    yesterday: '\'어제\' p',
                    today: '\'오늘\' p',
                    tomorrow: '\'내일\' p',
                    nextWeek: '\'다음\' eeee p',
                    other: 'P'
                },
                sf = {
                    code: 'ko',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = rf[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t.toString()),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? r + ' 후' : r + ' 전' : r
                    },
                    formatLong: af,
                    formatRelative: function (e, t, n, r) {
                        return of[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            switch (String((t || {
                            }).unit)) {
                                case 'minute':
                                case 'second':
                                    return String(n);
                                case 'date':
                                    return n + '일';
                                default:
                                    return n + '번째'
                            }
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'BC',
                                    'AD'
                                ],
                                abbreviated: [
                                    'BC',
                                    'AD'
                                ],
                                wide: [
                                    '기원전',
                                    '서기'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1분기',
                                    '2분기',
                                    '3분기',
                                    '4분기'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4',
                                    '5',
                                    '6',
                                    '7',
                                    '8',
                                    '9',
                                    '10',
                                    '11',
                                    '12'
                                ],
                                abbreviated: [
                                    '1월',
                                    '2월',
                                    '3월',
                                    '4월',
                                    '5월',
                                    '6월',
                                    '7월',
                                    '8월',
                                    '9월',
                                    '10월',
                                    '11월',
                                    '12월'
                                ],
                                wide: [
                                    '1월',
                                    '2월',
                                    '3월',
                                    '4월',
                                    '5월',
                                    '6월',
                                    '7월',
                                    '8월',
                                    '9월',
                                    '10월',
                                    '11월',
                                    '12월'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    '일',
                                    '월',
                                    '화',
                                    '수',
                                    '목',
                                    '금',
                                    '토'
                                ],
                                short: [
                                    '일',
                                    '월',
                                    '화',
                                    '수',
                                    '목',
                                    '금',
                                    '토'
                                ],
                                abbreviated: [
                                    '일',
                                    '월',
                                    '화',
                                    '수',
                                    '목',
                                    '금',
                                    '토'
                                ],
                                wide: [
                                    '일요일',
                                    '월요일',
                                    '화요일',
                                    '수요일',
                                    '목요일',
                                    '금요일',
                                    '토요일'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: '오전',
                                    pm: '오후',
                                    midnight: '자정',
                                    noon: '정오',
                                    morning: '아침',
                                    afternoon: '오후',
                                    evening: '저녁',
                                    night: '밤'
                                },
                                abbreviated: {
                                    am: '오전',
                                    pm: '오후',
                                    midnight: '자정',
                                    noon: '정오',
                                    morning: '아침',
                                    afternoon: '오후',
                                    evening: '저녁',
                                    night: '밤'
                                },
                                wide: {
                                    am: '오전',
                                    pm: '오후',
                                    midnight: '자정',
                                    noon: '정오',
                                    morning: '아침',
                                    afternoon: '오후',
                                    evening: '저녁',
                                    night: '밤'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: '오전',
                                    pm: '오후',
                                    midnight: '자정',
                                    noon: '정오',
                                    morning: '아침',
                                    afternoon: '오후',
                                    evening: '저녁',
                                    night: '밤'
                                },
                                abbreviated: {
                                    am: '오전',
                                    pm: '오후',
                                    midnight: '자정',
                                    noon: '정오',
                                    morning: '아침',
                                    afternoon: '오후',
                                    evening: '저녁',
                                    night: '밤'
                                },
                                wide: {
                                    am: '오전',
                                    pm: '오후',
                                    midnight: '자정',
                                    noon: '정오',
                                    morning: '아침',
                                    afternoon: '오후',
                                    evening: '저녁',
                                    night: '밤'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(일|번째)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                                abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                                wide: /^(기원전|서기)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(bc|기원전)/i,
                                    /^(ad|서기)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234]사?분기/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(1[012]|[123456789])/,
                                abbreviated: /^(1[012]|[123456789])월/i,
                                wide: /^(1[012]|[123456789])월/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^1월?$/,
                                    /^2/,
                                    /^3/,
                                    /^4/,
                                    /^5/,
                                    /^6/,
                                    /^7/,
                                    /^8/,
                                    /^9/,
                                    /^10/,
                                    /^11/,
                                    /^12/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[일월화수목금토]/,
                                short: /^[일월화수목금토]/,
                                abbreviated: /^[일월화수목금토]/,
                                wide: /^[일월화수목금토]요일/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^일/,
                                    /^월/,
                                    /^화/,
                                    /^수/,
                                    /^목/,
                                    /^금/,
                                    /^토/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(am|pm|오전|오후|자정|정오|아침|저녁|밤)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^(am|오전)/i,
                                    pm: /^(pm|오후)/i,
                                    midnight: /^자정/i,
                                    noon: /^정오/i,
                                    morning: /^아침/i,
                                    afternoon: /^오후/i,
                                    evening: /^저녁/i,
                                    night: /^밤/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                uf = {
                    lessThanXSeconds: {
                        standalone: {
                            one: 'manner wéi eng Sekonn',
                            other: 'manner wéi {{count}} Sekonnen'
                        },
                        withPreposition: {
                            one: 'manner wéi enger Sekonn',
                            other: 'manner wéi {{count}} Sekonnen'
                        }
                    },
                    xSeconds: {
                        standalone: {
                            one: 'eng Sekonn',
                            other: '{{count}} Sekonnen'
                        },
                        withPreposition: {
                            one: 'enger Sekonn',
                            other: '{{count}} Sekonnen'
                        }
                    },
                    halfAMinute: {
                        standalone: 'eng hallef Minutt',
                        withPreposition: 'enger hallwer Minutt'
                    },
                    lessThanXMinutes: {
                        standalone: {
                            one: 'manner wéi eng Minutt',
                            other: 'manner wéi {{count}} Minutten'
                        },
                        withPreposition: {
                            one: 'manner wéi enger Minutt',
                            other: 'manner wéi {{count}} Minutten'
                        }
                    },
                    xMinutes: {
                        standalone: {
                            one: 'eng Minutt',
                            other: '{{count}} Minutten'
                        },
                        withPreposition: {
                            one: 'enger Minutt',
                            other: '{{count}} Minutten'
                        }
                    },
                    aboutXHours: {
                        standalone: {
                            one: 'ongeféier eng Stonn',
                            other: 'ongeféier {{count}} Stonnen'
                        },
                        withPreposition: {
                            one: 'ongeféier enger Stonn',
                            other: 'ongeféier {{count}} Stonnen'
                        }
                    },
                    xHours: {
                        standalone: {
                            one: 'eng Stonn',
                            other: '{{count}} Stonnen'
                        },
                        withPreposition: {
                            one: 'enger Stonn',
                            other: '{{count}} Stonnen'
                        }
                    },
                    xDays: {
                        standalone: {
                            one: 'een Dag',
                            other: '{{count}} Deeg'
                        },
                        withPreposition: {
                            one: 'engem Dag',
                            other: '{{count}} Deeg'
                        }
                    },
                    aboutXWeeks: {
                        standalone: {
                            one: 'ongeféier eng Woch',
                            other: 'ongeféier {{count}} Wochen'
                        },
                        withPreposition: {
                            one: 'ongeféier enger Woche',
                            other: 'ongeféier {{count}} Wochen'
                        }
                    },
                    xWeeks: {
                        standalone: {
                            one: 'eng Woch',
                            other: '{{count}} Wochen'
                        },
                        withPreposition: {
                            one: 'enger Woch',
                            other: '{{count}} Wochen'
                        }
                    },
                    aboutXMonths: {
                        standalone: {
                            one: 'ongeféier ee Mount',
                            other: 'ongeféier {{count}} Méint'
                        },
                        withPreposition: {
                            one: 'ongeféier engem Mount',
                            other: 'ongeféier {{count}} Méint'
                        }
                    },
                    xMonths: {
                        standalone: {
                            one: 'ee Mount',
                            other: '{{count}} Méint'
                        },
                        withPreposition: {
                            one: 'engem Mount',
                            other: '{{count}} Méint'
                        }
                    },
                    aboutXYears: {
                        standalone: {
                            one: 'ongeféier ee Joer',
                            other: 'ongeféier {{count}} Joer'
                        },
                        withPreposition: {
                            one: 'ongeféier engem Joer',
                            other: 'ongeféier {{count}} Joer'
                        }
                    },
                    xYears: {
                        standalone: {
                            one: 'ee Joer',
                            other: '{{count}} Joer'
                        },
                        withPreposition: {
                            one: 'engem Joer',
                            other: '{{count}} Joer'
                        }
                    },
                    overXYears: {
                        standalone: {
                            one: 'méi wéi ee Joer',
                            other: 'méi wéi {{count}} Joer'
                        },
                        withPreposition: {
                            one: 'méi wéi engem Joer',
                            other: 'méi wéi {{count}} Joer'
                        }
                    },
                    almostXYears: {
                        standalone: {
                            one: 'bal ee Joer',
                            other: 'bal {{count}} Joer'
                        },
                        withPreposition: {
                            one: 'bal engem Joer',
                            other: 'bal {{count}} Joer'
                        }
                    }
                },
                lf = [
                    'd',
                    'h',
                    'n',
                    't',
                    'z'
                ],
                df = [
                    'a,',
                    'e',
                    'i',
                    'o',
                    'u'
                ],
                cf = [
                    0,
                    1,
                    2,
                    3,
                    8,
                    9
                ],
                mf = [
                    40,
                    50,
                    60,
                    70
                ];
            function ff(e) {
                var t = e.charAt(0).toLowerCase();
                if (- 1 != df.indexOf(t) || - 1 != lf.indexOf(t)) return !0;
                var n = e.split(' ')[0],
                    r = parseInt(n);
                return !isNaN(r) && - 1 != cf.indexOf(r % 10) && - 1 == mf.indexOf(parseInt(n.substring(0, 2)))
            }
            var hf = {
                date: at({
                    formats: {
                        full: 'EEEE, do MMMM y',
                        long: 'do MMMM y',
                        medium: 'do MMM y',
                        short: 'dd.MM.yy'
                    },
                    defaultWidth: 'full'
                }),
                time: at({
                    formats: {
                        full: 'HH:mm:ss zzzz',
                        long: 'HH:mm:ss z',
                        medium: 'HH:mm:ss',
                        short: 'HH:mm'
                    },
                    defaultWidth: 'full'
                }),
                dateTime: at({
                    formats: {
                        full: '{{date}} \'um\' {{time}}',
                        long: '{{date}} \'um\' {{time}}',
                        medium: '{{date}} {{time}}',
                        short: '{{date}} {{time}}'
                    },
                    defaultWidth: 'full'
                })
            },
                pf = {
                    lastWeek: function (e) {
                        var t = e.getUTCDay(),
                            n = '\'läschte';
                        return 2 !== t && 4 !== t || (n += 'n'),
                            n + '\' eeee \'um\' p'
                    },
                    yesterday: '\'gëschter um\' p',
                    today: '\'haut um\' p',
                    tomorrow: '\'moien um\' p',
                    nextWeek: 'eeee \'um\' p',
                    other: 'P'
                },
                gf = {
                    code: 'lb',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = (n = n || {
                            }).addSuffix ? uf[e].withPreposition : uf[e].standalone;
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'a' + (ff(r) ? 'n' : '') + ' ' + r : 'viru' + (ff(r) ? 'n' : '') + ' ' + r : r
                    },
                    formatLong: hf,
                    formatRelative: function (e, t, n, r) {
                        var a = pf[e];
                        return 'function' == typeof a ? a(t) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'v.Chr.',
                                    'n.Chr.'
                                ],
                                abbreviated: [
                                    'v.Chr.',
                                    'n.Chr.'
                                ],
                                wide: [
                                    'viru Christus',
                                    'no Christus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1. Quartal',
                                    '2. Quartal',
                                    '3. Quartal',
                                    '4. Quartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'Jan',
                                    'Feb',
                                    'Mäe',
                                    'Abr',
                                    'Mee',
                                    'Jun',
                                    'Jul',
                                    'Aug',
                                    'Sep',
                                    'Okt',
                                    'Nov',
                                    'Dez'
                                ],
                                wide: [
                                    'Januar',
                                    'Februar',
                                    'Mäerz',
                                    'Abrëll',
                                    'Mee',
                                    'Juni',
                                    'Juli',
                                    'August',
                                    'September',
                                    'Oktober',
                                    'November',
                                    'Dezember'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'M',
                                    'D',
                                    'M',
                                    'D',
                                    'F',
                                    'S'
                                ],
                                short: [
                                    'So',
                                    'Mé',
                                    'Dë',
                                    'Më',
                                    'Do',
                                    'Fr',
                                    'Sa'
                                ],
                                abbreviated: [
                                    'So.',
                                    'Mé.',
                                    'Dë.',
                                    'Më.',
                                    'Do.',
                                    'Fr.',
                                    'Sa.'
                                ],
                                wide: [
                                    'Sonndeg',
                                    'Méindeg',
                                    'Dënschdeg',
                                    'Mëttwoch',
                                    'Donneschdeg',
                                    'Freideg',
                                    'Samschdeg'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'mo.',
                                    pm: 'nomë.',
                                    midnight: 'Mëtternuecht',
                                    noon: 'Mëtteg',
                                    morning: 'Moien',
                                    afternoon: 'Nomëtteg',
                                    evening: 'Owend',
                                    night: 'Nuecht'
                                },
                                abbreviated: {
                                    am: 'moies',
                                    pm: 'nomëttes',
                                    midnight: 'Mëtternuecht',
                                    noon: 'Mëtteg',
                                    morning: 'Moien',
                                    afternoon: 'Nomëtteg',
                                    evening: 'Owend',
                                    night: 'Nuecht'
                                },
                                wide: {
                                    am: 'moies',
                                    pm: 'nomëttes',
                                    midnight: 'Mëtternuecht',
                                    noon: 'Mëtteg',
                                    morning: 'Moien',
                                    afternoon: 'Nomëtteg',
                                    evening: 'Owend',
                                    night: 'Nuecht'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'mo.',
                                    pm: 'nom.',
                                    midnight: 'Mëtternuecht',
                                    noon: 'mëttes',
                                    morning: 'moies',
                                    afternoon: 'nomëttes',
                                    evening: 'owes',
                                    night: 'nuets'
                                },
                                abbreviated: {
                                    am: 'moies',
                                    pm: 'nomëttes',
                                    midnight: 'Mëtternuecht',
                                    noon: 'mëttes',
                                    morning: 'moies',
                                    afternoon: 'nomëttes',
                                    evening: 'owes',
                                    night: 'nuets'
                                },
                                wide: {
                                    am: 'moies',
                                    pm: 'nomëttes',
                                    midnight: 'Mëtternuecht',
                                    noon: 'mëttes',
                                    morning: 'moies',
                                    afternoon: 'nomëttes',
                                    evening: 'owes',
                                    night: 'nuets'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(\.)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
                                abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
                                wide: /^(viru Christus|virun eiser Zäitrechnung|no Christus|eiser Zäitrechnung)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^v/i,
                                    /^n/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234](\.)? Quartal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|feb|mäe|abr|mee|jun|jul|aug|sep|okt|nov|dez)/i,
                                wide: /^(januar|februar|mäerz|abrëll|mee|juni|juli|august|september|oktober|november|dezember)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mä/i,
                                    /^ab/i,
                                    /^me/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^au/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smdf]/i,
                                short: /^(so|mé|dë|më|do|fr|sa)/i,
                                abbreviated: /^(son?|méi?|dën?|mët?|don?|fre?|sam?)\.?/i,
                                wide: /^(sonndeg|méindeg|dënschdeg|mëttwoch|donneschdeg|freideg|samschdeg)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^so/i,
                                    /^mé/i,
                                    /^dë/i,
                                    /^më/i,
                                    /^do/i,
                                    /^f/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(mo\.?|nomë\.?|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i,
                                abbreviated: /^(moi\.?|nomët\.?|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i,
                                wide: /^(moies|nomëttes|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: {
                                    am: /^m/i,
                                    pm: /^n/i,
                                    midnight: /^Mëtter/i,
                                    noon: /^mëttes/i,
                                    morning: /moies/i,
                                    afternoon: /nomëttes/i,
                                    evening: /owes/i,
                                    night: /nuets/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                vf = gf,
                yf = {
                    lessThanXSeconds: {
                        one: bf,
                        other: Pf
                    },
                    xSeconds: {
                        one: bf,
                        other: Pf
                    },
                    halfAMinute: 'pusė minutės',
                    lessThanXMinutes: {
                        one: kf,
                        other: Pf
                    },
                    xMinutes: {
                        one: kf,
                        other: Pf
                    },
                    aboutXHours: {
                        one: kf,
                        other: Pf
                    },
                    xHours: {
                        one: kf,
                        other: Pf
                    },
                    xDays: {
                        one: kf,
                        other: Pf
                    },
                    aboutWeeks: {
                        one: kf,
                        other: Pf
                    },
                    xWeeks: {
                        one: kf,
                        other: Pf
                    },
                    aboutXMonths: {
                        one: kf,
                        other: Pf
                    },
                    xMonths: {
                        one: kf,
                        other: Pf
                    },
                    aboutXYears: {
                        one: kf,
                        other: Pf
                    },
                    xYears: {
                        one: kf,
                        other: Pf
                    },
                    overXYears: {
                        one: kf,
                        other: Pf
                    },
                    almostXYears: {
                        one: kf,
                        other: Pf
                    }
                },
                wf = {
                    xseconds_other: 'sekundė_sekundžių_sekundes',
                    xminutes_one: 'minutė_minutės_minutę',
                    xminutes_other: 'minutės_minučių_minutes',
                    xhours_one: 'valanda_valandos_valandą',
                    xhours_other: 'valandos_valandų_valandas',
                    xdays_one: 'diena_dienos_dieną',
                    xdays_other: 'dienos_dienų_dienas',
                    xweeks_one: 'savaitė_savaitės_savaitę',
                    xweeks_other: 'savaitės_savaičių_savaites',
                    xmonths_one: 'mėnuo_mėnesio_mėnesį',
                    xmonths_other: 'mėnesiai_mėnesių_mėnesius',
                    xyears_one: 'metai_metų_metus',
                    xyears_other: 'metai_metų_metus',
                    about: 'apie',
                    over: 'daugiau nei',
                    almost: 'beveik',
                    lessthan: 'mažiau nei'
                };
            function bf(e, t, n, r) {
                return t ? r ? 'kelių sekundžių' : 'kelias sekundes' : 'kelios sekundės'
            }
            function kf(e, t, n, r) {
                return t ? r ? Ef(n)[1] : Ef(n)[2] : Ef(n)[0]
            }
            function Mf(e) {
                return e % 10 == 0 || e > 10 && e < 20
            }
            function Ef(e) {
                return wf[e].split('_')
            }
            function Pf(e, t, n, r) {
                var a = e + ' ';
                return 1 === e ? a + kf(0, t, n[0], r) : t ? r ? a + Ef(n)[1] : a + (Mf(e) ? Ef(n)[1] : Ef(n)[2]) : a + (Mf(e) ? Ef(n)[1] : Ef(n)[0])
            }
            var xf = {
                date: at({
                    formats: {
                        full: 'y \'m\'. MMMM d \'d\'., EEEE',
                        long: 'y \'m\'. MMMM d \'d\'.',
                        medium: 'y-MM-dd',
                        short: 'y-MM-dd'
                    },
                    defaultWidth: 'full'
                }),
                time: at({
                    formats: {
                        full: 'HH:mm:ss zzzz',
                        long: 'HH:mm:ss z',
                        medium: 'HH:mm:ss',
                        short: 'HH:mm'
                    },
                    defaultWidth: 'full'
                }),
                dateTime: at({
                    formats: {
                        full: '{{date}} {{time}}',
                        long: '{{date}} {{time}}',
                        medium: '{{date}} {{time}}',
                        short: '{{date}} {{time}}'
                    },
                    defaultWidth: 'full'
                })
            },
                Sf = {
                    lastWeek: '\'Praėjusį\' eeee p',
                    yesterday: '\'Vakar\' p',
                    today: '\'Šiandien\' p',
                    tomorrow: '\'Rytoj\' p',
                    nextWeek: 'eeee p',
                    other: 'P'
                },
                Tf = {
                    code: 'lt',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a = e.match(/about|over|almost|lessthan/i),
                            i = e.replace(a, '');
                        return r = 'string' == typeof yf[e] ? yf[e] : 1 === t ? yf[e].one(t, n.addSuffix, i.toLowerCase() + '_one') : yf[e].other(t, n.addSuffix, i.toLowerCase() + '_other'),
                            a && (r = wf[a[0].toLowerCase()] + ' ' + r),
                            n.addSuffix ? n.comparison > 0 ? 'po ' + r : 'prieš ' + r : r
                    },
                    formatLong: xf,
                    formatRelative: function (e, t, n, r) {
                        return Sf[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + '-oji'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'pr. Kr.',
                                    'po Kr.'
                                ],
                                abbreviated: [
                                    'pr. Kr.',
                                    'po Kr.'
                                ],
                                wide: [
                                    'prieš Kristų',
                                    'po Kristaus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'I ketv.',
                                    'II ketv.',
                                    'III ketv.',
                                    'IV ketv.'
                                ],
                                wide: [
                                    'I ketvirtis',
                                    'II ketvirtis',
                                    'III ketvirtis',
                                    'IV ketvirtis'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'I k.',
                                    'II k.',
                                    'III k.',
                                    'IV k.'
                                ],
                                wide: [
                                    'I ketvirtis',
                                    'II ketvirtis',
                                    'III ketvirtis',
                                    'IV ketvirtis'
                                ]
                            },
                            defaultFormattingWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'V',
                                    'K',
                                    'B',
                                    'G',
                                    'B',
                                    'L',
                                    'R',
                                    'R',
                                    'S',
                                    'L',
                                    'G'
                                ],
                                abbreviated: [
                                    'saus.',
                                    'vas.',
                                    'kov.',
                                    'bal.',
                                    'geg.',
                                    'birž.',
                                    'liep.',
                                    'rugp.',
                                    'rugs.',
                                    'spal.',
                                    'lapkr.',
                                    'gruod.'
                                ],
                                wide: [
                                    'sausis',
                                    'vasaris',
                                    'kovas',
                                    'balandis',
                                    'gegužė',
                                    'birželis',
                                    'liepa',
                                    'rugpjūtis',
                                    'rugsėjis',
                                    'spalis',
                                    'lapkritis',
                                    'gruodis'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'S',
                                    'V',
                                    'K',
                                    'B',
                                    'G',
                                    'B',
                                    'L',
                                    'R',
                                    'R',
                                    'S',
                                    'L',
                                    'G'
                                ],
                                abbreviated: [
                                    'saus.',
                                    'vas.',
                                    'kov.',
                                    'bal.',
                                    'geg.',
                                    'birž.',
                                    'liep.',
                                    'rugp.',
                                    'rugs.',
                                    'spal.',
                                    'lapkr.',
                                    'gruod.'
                                ],
                                wide: [
                                    'sausio',
                                    'vasario',
                                    'kovo',
                                    'balandžio',
                                    'gegužės',
                                    'birželio',
                                    'liepos',
                                    'rugpjūčio',
                                    'rugsėjo',
                                    'spalio',
                                    'lapkričio',
                                    'gruodžio'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'P',
                                    'A',
                                    'T',
                                    'K',
                                    'P',
                                    'Š'
                                ],
                                short: [
                                    'Sk',
                                    'Pr',
                                    'An',
                                    'Tr',
                                    'Kt',
                                    'Pn',
                                    'Št'
                                ],
                                abbreviated: [
                                    'sk',
                                    'pr',
                                    'an',
                                    'tr',
                                    'kt',
                                    'pn',
                                    'št'
                                ],
                                wide: [
                                    'sekmadienis',
                                    'pirmadienis',
                                    'antradienis',
                                    'trečiadienis',
                                    'ketvirtadienis',
                                    'penktadienis',
                                    'šeštadienis'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'S',
                                    'P',
                                    'A',
                                    'T',
                                    'K',
                                    'P',
                                    'Š'
                                ],
                                short: [
                                    'Sk',
                                    'Pr',
                                    'An',
                                    'Tr',
                                    'Kt',
                                    'Pn',
                                    'Št'
                                ],
                                abbreviated: [
                                    'sk',
                                    'pr',
                                    'an',
                                    'tr',
                                    'kt',
                                    'pn',
                                    'št'
                                ],
                                wide: [
                                    'sekmadienį',
                                    'pirmadienį',
                                    'antradienį',
                                    'trečiadienį',
                                    'ketvirtadienį',
                                    'penktadienį',
                                    'šeštadienį'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'pr. p.',
                                    pm: 'pop.',
                                    midnight: 'vidurnaktis',
                                    noon: 'vidurdienis',
                                    morning: 'rytas',
                                    afternoon: 'diena',
                                    evening: 'vakaras',
                                    night: 'naktis'
                                },
                                abbreviated: {
                                    am: 'priešpiet',
                                    pm: 'popiet',
                                    midnight: 'vidurnaktis',
                                    noon: 'vidurdienis',
                                    morning: 'rytas',
                                    afternoon: 'diena',
                                    evening: 'vakaras',
                                    night: 'naktis'
                                },
                                wide: {
                                    am: 'priešpiet',
                                    pm: 'popiet',
                                    midnight: 'vidurnaktis',
                                    noon: 'vidurdienis',
                                    morning: 'rytas',
                                    afternoon: 'diena',
                                    evening: 'vakaras',
                                    night: 'naktis'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'pr. p.',
                                    pm: 'pop.',
                                    midnight: 'vidurnaktis',
                                    noon: 'perpiet',
                                    morning: 'rytas',
                                    afternoon: 'popietė',
                                    evening: 'vakaras',
                                    night: 'naktis'
                                },
                                abbreviated: {
                                    am: 'priešpiet',
                                    pm: 'popiet',
                                    midnight: 'vidurnaktis',
                                    noon: 'perpiet',
                                    morning: 'rytas',
                                    afternoon: 'popietė',
                                    evening: 'vakaras',
                                    night: 'naktis'
                                },
                                wide: {
                                    am: 'priešpiet',
                                    pm: 'popiet',
                                    midnight: 'vidurnaktis',
                                    noon: 'perpiet',
                                    morning: 'rytas',
                                    afternoon: 'popietė',
                                    evening: 'vakaras',
                                    night: 'naktis'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-oji)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^p(r|o)\.?\s?(kr\.?|me)/i,
                                abbreviated: /^(pr\.\s?(kr\.|m\.\s?e\.)|po\s?kr\.|mūsų eroje)/i,
                                wide: /^(prieš Kristų|prieš mūsų erą|po Kristaus|mūsų eroje)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                wide: [
                                    /prieš/i,
                                    /(po|mūsų)/i
                                ],
                                any: [
                                    /^pr/i,
                                    /^(po|m)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^([1234])/i,
                                abbreviated: /^(I|II|III|IV)\s?ketv?\.?/i,
                                wide: /^(I|II|III|IV)\s?ketvirtis/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ],
                                any: [
                                    /I$/i,
                                    /II$/i,
                                    /III/i,
                                    /IV/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[svkbglr]/i,
                                abbreviated: /^(saus\.|vas\.|kov\.|bal\.|geg\.|birž\.|liep\.|rugp\.|rugs\.|spal\.|lapkr\.|gruod\.)/i,
                                wide: /^(sausi(s|o)|vasari(s|o)|kov(a|o)s|balandž?i(s|o)|gegužės?|birželi(s|o)|liep(a|os)|rugpjū(t|č)i(s|o)|rugsėj(is|o)|spali(s|o)|lapkri(t|č)i(s|o)|gruodž?i(s|o))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^v/i,
                                    /^k/i,
                                    /^b/i,
                                    /^g/i,
                                    /^b/i,
                                    /^l/i,
                                    /^r/i,
                                    /^r/i,
                                    /^s/i,
                                    /^l/i,
                                    /^g/i
                                ],
                                any: [
                                    /^saus/i,
                                    /^vas/i,
                                    /^kov/i,
                                    /^bal/i,
                                    /^geg/i,
                                    /^birž/i,
                                    /^liep/i,
                                    /^rugp/i,
                                    /^rugs/i,
                                    /^spal/i,
                                    /^lapkr/i,
                                    /^gruod/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[spatkš]/i,
                                short: /^(sk|pr|an|tr|kt|pn|št)/i,
                                abbreviated: /^(sk|pr|an|tr|kt|pn|št)/i,
                                wide: /^(sekmadien(is|į)|pirmadien(is|į)|antradien(is|į)|trečiadien(is|į)|ketvirtadien(is|į)|penktadien(is|į)|šeštadien(is|į))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^p/i,
                                    /^a/i,
                                    /^t/i,
                                    /^k/i,
                                    /^p/i,
                                    /^š/i
                                ],
                                wide: [
                                    /^se/i,
                                    /^pi/i,
                                    /^an/i,
                                    /^tr/i,
                                    /^ke/i,
                                    /^pe/i,
                                    /^še/i
                                ],
                                any: [
                                    /^sk/i,
                                    /^pr/i,
                                    /^an/i,
                                    /^tr/i,
                                    /^kt/i,
                                    /^pn/i,
                                    /^št/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(pr.\s?p.|pop.|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietė)|vakaras|naktis)/i,
                                any: /^(priešpiet|popiet$|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietė)|vakaras|naktis)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                narrow: {
                                    am: /^pr/i,
                                    pm: /^pop./i,
                                    midnight: /^vidurnaktis/i,
                                    noon: /^(vidurdienis|perp)/i,
                                    morning: /rytas/i,
                                    afternoon: /(die|popietė)/i,
                                    evening: /vakaras/i,
                                    night: /naktis/i
                                },
                                any: {
                                    am: /^pr/i,
                                    pm: /^popiet$/i,
                                    midnight: /^vidurnaktis/i,
                                    noon: /^(vidurdienis|perp)/i,
                                    morning: /rytas/i,
                                    afternoon: /(die|popietė)/i,
                                    evening: /vakaras/i,
                                    night: /naktis/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                };
            function Cf(e) {
                return function (t, n) {
                    if (1 === t) return n.addSuffix ? e.one[0].replace('{{time}}', e.one[2]) : e.one[0].replace('{{time}}', e.one[1]);
                    var r = t % 10 == 1 && t % 100 != 11;
                    return n.addSuffix ? e.other[0].replace('{{time}}', r ? e.other[3] : e.other[4]).replace('{{count}}', t) : e.other[0].replace('{{time}}', r ? e.other[1] : e.other[2]).replace('{{count}}', t)
                }
            }
            var Wf = {
                lessThanXSeconds: Cf({
                    one: [
                        'mazāk par {{time}}',
                        'sekundi',
                        'sekundi'
                    ],
                    other: [
                        'mazāk nekā {{count}} {{time}}',
                        'sekunde',
                        'sekundes',
                        'sekundes',
                        'sekundēm'
                    ]
                }),
                xSeconds: Cf({
                    one: [
                        '1 {{time}}',
                        'sekunde',
                        'sekundes'
                    ],
                    other: [
                        '{{count}} {{time}}',
                        'sekunde',
                        'sekundes',
                        'sekundes',
                        'sekundēm'
                    ]
                }),
                halfAMinute: function (e, t) {
                    return t.addSuffix ? 'pusminūtes' : 'pusminūte'
                },
                lessThanXMinutes: Cf({
                    one: [
                        'mazāk par {{time}}',
                        'minūti',
                        'minūti'
                    ],
                    other: [
                        'mazāk nekā {{count}} {{time}}',
                        'minūte',
                        'minūtes',
                        'minūtes',
                        'minūtēm'
                    ]
                }),
                xMinutes: Cf({
                    one: [
                        '1 {{time}}',
                        'minūte',
                        'minūtes'
                    ],
                    other: [
                        '{{count}} {{time}}',
                        'minūte',
                        'minūtes',
                        'minūtes',
                        'minūtēm'
                    ]
                }),
                aboutXHours: Cf({
                    one: [
                        'apmēram 1 {{time}}',
                        'stunda',
                        'stundas'
                    ],
                    other: [
                        'apmēram {{count}} {{time}}',
                        'stunda',
                        'stundas',
                        'stundas',
                        'stundām'
                    ]
                }),
                xHours: Cf({
                    one: [
                        '1 {{time}}',
                        'stunda',
                        'stundas'
                    ],
                    other: [
                        '{{count}} {{time}}',
                        'stunda',
                        'stundas',
                        'stundas',
                        'stundām'
                    ]
                }),
                xDays: Cf({
                    one: [
                        '1 {{time}}',
                        'diena',
                        'dienas'
                    ],
                    other: [
                        '{{count}} {{time}}',
                        'diena',
                        'dienas',
                        'dienas',
                        'dienām'
                    ]
                }),
                aboutXWeeks: Cf({
                    one: [
                        'apmēram 1 {{time}}',
                        'nedēļa',
                        'nedēļas'
                    ],
                    other: [
                        'apmēram {{count}} {{time}}',
                        'nedēļa',
                        'nedēļu',
                        'nedēļas',
                        'nedēļām'
                    ]
                }),
                xWeeks: Cf({
                    one: [
                        '1 {{time}}',
                        'nedēļa',
                        'nedēļas'
                    ],
                    other: [
                        '{{count}} {{time}}',
                        'nedēļa',
                        'nedēļu',
                        'nedēļas',
                        'nedēļām'
                    ]
                }),
                aboutXMonths: Cf({
                    one: [
                        'apmēram 1 {{time}}',
                        'mēnesis',
                        'mēneša'
                    ],
                    other: [
                        'apmēram {{count}} {{time}}',
                        'mēnesis',
                        'mēneši',
                        'mēneša',
                        'mēnešiem'
                    ]
                }),
                xMonths: Cf({
                    one: [
                        '1 {{time}}',
                        'mēnesis',
                        'mēneša'
                    ],
                    other: [
                        '{{count}} {{time}}',
                        'mēnesis',
                        'mēneši',
                        'mēneša',
                        'mēnešiem'
                    ]
                }),
                aboutXYears: Cf({
                    one: [
                        'apmēram 1 {{time}}',
                        'gads',
                        'gada'
                    ],
                    other: [
                        'apmēram {{count}} {{time}}',
                        'gads',
                        'gadi',
                        'gada',
                        'gadiem'
                    ]
                }),
                xYears: Cf({
                    one: [
                        '1 {{time}}',
                        'gads',
                        'gada'
                    ],
                    other: [
                        '{{count}} {{time}}',
                        'gads',
                        'gadi',
                        'gada',
                        'gadiem'
                    ]
                }),
                overXYears: Cf({
                    one: [
                        'ilgāk par 1 {{time}}',
                        'gadu',
                        'gadu'
                    ],
                    other: [
                        'vairāk nekā {{count}} {{time}}',
                        'gads',
                        'gadi',
                        'gada',
                        'gadiem'
                    ]
                }),
                almostXYears: Cf({
                    one: [
                        'gandrīz 1 {{time}}',
                        'gads',
                        'gada'
                    ],
                    other: [
                        'vairāk nekā {{count}} {{time}}',
                        'gads',
                        'gadi',
                        'gada',
                        'gadiem'
                    ]
                })
            },
                jf = {
                    date: at({
                        formats: {
                            full: 'EEEE, y. \'gada\' d. MMMM',
                            long: 'y. \'gada\' d. MMMM',
                            medium: 'dd.MM.y.',
                            short: 'dd.MM.y.'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'plkst.\' {{time}}',
                            long: '{{date}} \'plkst.\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Df = [
                    'svētdienā',
                    'pirmdienā',
                    'otrdienā',
                    'trešdienā',
                    'ceturtdienā',
                    'piektdienā',
                    'sestdienā'
                ],
                Nf = {
                    lastWeek: function (e, t, n) {
                        return nl(e, t, n) ? 'eeee \'plkst.\' p' : '\'Pagājušā ' + Df[e.getUTCDay()] + ' plkst.\' p'
                    },
                    yesterday: '\'Vakar plkst.\' p',
                    today: '\'Šodien plkst.\' p',
                    tomorrow: '\'Rīt plkst.\' p',
                    nextWeek: function (e, t, n) {
                        return nl(e, t, n) ? 'eeee \'plkst.\' p' : '\'Nākamajā ' + Df[e.getUTCDay()] + ' plkst.\' p'
                    },
                    other: 'P'
                },
                If = {
                    code: 'lv',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r = Wf[e](t, n);
                        return n.addSuffix ? n.comparison > 0 ? 'pēc ' + r : 'pirms ' + r : r
                    },
                    formatLong: jf,
                    formatRelative: function (e, t, n, r) {
                        var a = Nf[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return e + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'p.m.ē',
                                    'm.ē'
                                ],
                                abbreviated: [
                                    'p. m. ē.',
                                    'm. ē.'
                                ],
                                wide: [
                                    'pirms mūsu ēras',
                                    'mūsu ērā'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1. cet.',
                                    '2. cet.',
                                    '3. cet.',
                                    '4. cet.'
                                ],
                                wide: [
                                    'pirmais ceturksnis',
                                    'otrais ceturksnis',
                                    'trešais ceturksnis',
                                    'ceturtais ceturksnis'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1. cet.',
                                    '2. cet.',
                                    '3. cet.',
                                    '4. cet.'
                                ],
                                wide: [
                                    'pirmajā ceturksnī',
                                    'otrajā ceturksnī',
                                    'trešajā ceturksnī',
                                    'ceturtajā ceturksnī'
                                ]
                            },
                            defaultFormattingWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'janv.',
                                    'febr.',
                                    'marts',
                                    'apr.',
                                    'maijs',
                                    'jūn.',
                                    'jūl.',
                                    'aug.',
                                    'sept.',
                                    'okt.',
                                    'nov.',
                                    'dec.'
                                ],
                                wide: [
                                    'janvāris',
                                    'februāris',
                                    'marts',
                                    'aprīlis',
                                    'maijs',
                                    'jūnijs',
                                    'jūlijs',
                                    'augusts',
                                    'septembris',
                                    'oktobris',
                                    'novembris',
                                    'decembris'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'janv.',
                                    'febr.',
                                    'martā',
                                    'apr.',
                                    'maijs',
                                    'jūn.',
                                    'jūl.',
                                    'aug.',
                                    'sept.',
                                    'okt.',
                                    'nov.',
                                    'dec.'
                                ],
                                wide: [
                                    'janvārī',
                                    'februārī',
                                    'martā',
                                    'aprīlī',
                                    'maijā',
                                    'jūnijā',
                                    'jūlijā',
                                    'augustā',
                                    'septembrī',
                                    'oktobrī',
                                    'novembrī',
                                    'decembrī'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'P',
                                    'O',
                                    'T',
                                    'C',
                                    'P',
                                    'S'
                                ],
                                short: [
                                    'Sv',
                                    'P',
                                    'O',
                                    'T',
                                    'C',
                                    'Pk',
                                    'S'
                                ],
                                abbreviated: [
                                    'svētd.',
                                    'pirmd.',
                                    'otrd.',
                                    'trešd.',
                                    'ceturtd.',
                                    'piektd.',
                                    'sestd.'
                                ],
                                wide: [
                                    'svētdiena',
                                    'pirmdiena',
                                    'otrdiena',
                                    'trešdiena',
                                    'ceturtdiena',
                                    'piektdiena',
                                    'sestdiena'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'S',
                                    'P',
                                    'O',
                                    'T',
                                    'C',
                                    'P',
                                    'S'
                                ],
                                short: [
                                    'Sv',
                                    'P',
                                    'O',
                                    'T',
                                    'C',
                                    'Pk',
                                    'S'
                                ],
                                abbreviated: [
                                    'svētd.',
                                    'pirmd.',
                                    'otrd.',
                                    'trešd.',
                                    'ceturtd.',
                                    'piektd.',
                                    'sestd.'
                                ],
                                wide: [
                                    'svētdienā',
                                    'pirmdienā',
                                    'otrdienā',
                                    'trešdienā',
                                    'ceturtdienā',
                                    'piektdienā',
                                    'sestdienā'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'pusn.',
                                    noon: 'pusd.',
                                    morning: 'rīts',
                                    afternoon: 'diena',
                                    evening: 'vakars',
                                    night: 'nakts'
                                },
                                abbreviated: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'pusn.',
                                    noon: 'pusd.',
                                    morning: 'rīts',
                                    afternoon: 'pēcpusd.',
                                    evening: 'vakars',
                                    night: 'nakts'
                                },
                                wide: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'pusnakts',
                                    noon: 'pusdienlaiks',
                                    morning: 'rīts',
                                    afternoon: 'pēcpusdiena',
                                    evening: 'vakars',
                                    night: 'nakts'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'pusn.',
                                    noon: 'pusd.',
                                    morning: 'rītā',
                                    afternoon: 'dienā',
                                    evening: 'vakarā',
                                    night: 'naktī'
                                },
                                abbreviated: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'pusn.',
                                    noon: 'pusd.',
                                    morning: 'rītā',
                                    afternoon: 'pēcpusd.',
                                    evening: 'vakarā',
                                    night: 'naktī'
                                },
                                wide: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'pusnaktī',
                                    noon: 'pusdienlaikā',
                                    morning: 'rītā',
                                    afternoon: 'pēcpusdienā',
                                    evening: 'vakarā',
                                    night: 'naktī'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\./i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(p\.m\.ē|m\.ē)/i,
                                abbreviated: /^(p\. m\. ē\.|m\. ē\.)/i,
                                wide: /^(pirms mūsu ēras|mūsu ērā)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^p/i,
                                    /^m/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234](\. cet\.)/i,
                                wide: /^(pirma(is|jā)|otra(is|jā)|treša(is|jā)|ceturta(is|jā)) ceturksn(is|ī)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^1/i,
                                    /^2/i,
                                    /^3/i,
                                    /^4/i
                                ],
                                abbreviated: [
                                    /^1/i,
                                    /^2/i,
                                    /^3/i,
                                    /^4/i
                                ],
                                wide: [
                                    /^p/i,
                                    /^o/i,
                                    /^t/i,
                                    /^c/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(janv\.|febr\.|marts|apr\.|maijs|jūn\.|jūl\.|aug\.|sept\.|okt\.|nov\.|dec\.)/i,
                                wide: /^(janvār(is|ī)|februār(is|ī)|mart[sā]|aprīl(is|ī)|maij[sā]|jūnij[sā]|jūlij[sā]|august[sā]|septembr(is|ī)|oktobr(is|ī)|novembr(is|ī)|decembr(is|ī))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^mai/i,
                                    /^jūn/i,
                                    /^jūl/i,
                                    /^au/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[spotc]/i,
                                short: /^(sv|pi|o|t|c|pk|s)/i,
                                abbreviated: /^(svētd\.|pirmd\.|otrd.\|trešd\.|ceturtd\.|piektd\.|sestd\.)/i,
                                wide: /^(svētdien(a|ā)|pirmdien(a|ā)|otrdien(a|ā)|trešdien(a|ā)|ceturtdien(a|ā)|piektdien(a|ā)|sestdien(a|ā))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^p/i,
                                    /^o/i,
                                    /^t/i,
                                    /^c/i,
                                    /^p/i,
                                    /^s/i
                                ],
                                any: [
                                    /^sv/i,
                                    /^pi/i,
                                    /^o/i,
                                    /^t/i,
                                    /^c/i,
                                    /^p/i,
                                    /^se/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(am|pm|pusn\.|pusd\.|rīt(s|ā)|dien(a|ā)|vakar(s|ā)|nakt(s|ī))/,
                                abbreviated: /^(am|pm|pusn\.|pusd\.|rīt(s|ā)|pēcpusd\.|vakar(s|ā)|nakt(s|ī))/,
                                wide: /^(am|pm|pusnakt(s|ī)|pusdienlaik(s|ā)|rīt(s|ā)|pēcpusdien(a|ā)|vakar(s|ā)|nakt(s|ī))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^am/i,
                                    pm: /^pm/i,
                                    midnight: /^pusn/i,
                                    noon: /^pusd/i,
                                    morning: /^r/i,
                                    afternoon: /^(d|pēc)/i,
                                    evening: /^v/i,
                                    night: /^n/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                zf = If,
                Rf = {
                    lessThanXSeconds: {
                        one: 'помалку од секунда',
                        other: 'помалку од {{count}} секунди'
                    },
                    xSeconds: {
                        one: '1 секунда',
                        other: '{{count}} секунди'
                    },
                    halfAMinute: 'половина минута',
                    lessThanXMinutes: {
                        one: 'помалку од минута',
                        other: 'помалку од {{count}} минути'
                    },
                    xMinutes: {
                        one: '1 минута',
                        other: '{{count}} минути'
                    },
                    aboutXHours: {
                        one: 'околу 1 час',
                        other: 'околу {{count}} часа'
                    },
                    xHours: {
                        one: '1 час',
                        other: '{{count}} часа'
                    },
                    xDays: {
                        one: '1 ден',
                        other: '{{count}} дена'
                    },
                    aboutXWeeks: {
                        one: 'околу 1 недела',
                        other: 'околу {{count}} месеци'
                    },
                    xWeeks: {
                        one: '1 недела',
                        other: '{{count}} недели'
                    },
                    aboutXMonths: {
                        one: 'околу 1 месец',
                        other: 'околу {{count}} недели'
                    },
                    xMonths: {
                        one: '1 месец',
                        other: '{{count}} месеци'
                    },
                    aboutXYears: {
                        one: 'околу 1 година',
                        other: 'околу {{count}} години'
                    },
                    xYears: {
                        one: '1 година',
                        other: '{{count}} години'
                    },
                    overXYears: {
                        one: 'повеќе од 1 година',
                        other: 'повеќе од {{count}} години'
                    },
                    almostXYears: {
                        one: 'безмалку 1 година',
                        other: 'безмалку {{count}} години'
                    }
                },
                Af = {
                    date: at({
                        formats: {
                            full: 'EEEE, dd MMMM yyyy',
                            long: 'dd MMMM yyyy',
                            medium: 'dd MMM yyyy',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            any: '{{date}} {{time}}'
                        },
                        defaultWidth: 'any'
                    })
                },
                Of = [
                    'недела',
                    'понеделник',
                    'вторник',
                    'среда',
                    'четврток',
                    'петок',
                    'сабота'
                ];
            function Hf(e) {
                var t = Of[e];
                switch (e) {
                    case 0:
                    case 3:
                    case 6:
                        return '\'ова ' + t + ' вo\' p';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '\'овој ' + t + ' вo\' p'
                }
            }
            var _f = {
                lastWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? Hf(r) : function (e) {
                        var t = Of[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 6:
                                return '\'минатата ' + t + ' во\' p';
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return '\'минатиот ' + t + ' во\' p'
                        }
                    }(r)
                },
                yesterday: '\'вчера во\' p',
                today: '\'денес во\' p',
                tomorrow: '\'утре во\' p',
                nextWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? Hf(r) : function (e) {
                        var t = Of[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 6:
                                return '\'следната ' + t + ' вo\' p';
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return '\'следниот ' + t + ' вo\' p'
                        }
                    }(r)
                },
                other: 'P'
            },
                Lf = {
                    code: 'mk',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Rf[e] ? Rf[e] : 1 === t ? Rf[e].one : Rf[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'за ' + r : 'пред ' + r : r
                    },
                    formatLong: Af,
                    formatRelative: function (e, t, n, r) {
                        var a = _f[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e),
                                n = t % 100;
                            if (n > 20 || n < 10) switch (n % 10) {
                                case 1:
                                    return t + '-ви';
                                case 2:
                                    return t + '-ри';
                                case 7:
                                case 8:
                                    return t + '-ми'
                            }
                            return t + '-ти'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'пр.н.е.',
                                    'н.е.'
                                ],
                                abbreviated: [
                                    'пред н. е.',
                                    'н. е.'
                                ],
                                wide: [
                                    'пред нашата ера',
                                    'нашата ера'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1-ви кв.',
                                    '2-ри кв.',
                                    '3-ти кв.',
                                    '4-ти кв.'
                                ],
                                wide: [
                                    '1-ви квартал',
                                    '2-ри квартал',
                                    '3-ти квартал',
                                    '4-ти квартал'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                abbreviated: [
                                    'јан',
                                    'фев',
                                    'мар',
                                    'апр',
                                    'мај',
                                    'јун',
                                    'јул',
                                    'авг',
                                    'септ',
                                    'окт',
                                    'ноем',
                                    'дек'
                                ],
                                wide: [
                                    'јануари',
                                    'февруари',
                                    'март',
                                    'април',
                                    'мај',
                                    'јуни',
                                    'јули',
                                    'август',
                                    'септември',
                                    'октомври',
                                    'ноември',
                                    'декември'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Н',
                                    'П',
                                    'В',
                                    'С',
                                    'Ч',
                                    'П',
                                    'С'
                                ],
                                short: [
                                    'не',
                                    'по',
                                    'вт',
                                    'ср',
                                    'че',
                                    'пе',
                                    'са'
                                ],
                                abbreviated: [
                                    'нед',
                                    'пон',
                                    'вто',
                                    'сре',
                                    'чет',
                                    'пет',
                                    'саб'
                                ],
                                wide: [
                                    'недела',
                                    'понеделник',
                                    'вторник',
                                    'среда',
                                    'четврток',
                                    'петок',
                                    'сабота'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                wide: {
                                    am: 'претпладне',
                                    pm: 'попладне',
                                    midnight: 'полноќ',
                                    noon: 'напладне',
                                    morning: 'наутро',
                                    afternoon: 'попладне',
                                    evening: 'навечер',
                                    night: 'ноќе'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-?[врмт][и])?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^((пр)?н\.?\s?е\.?)/i,
                                abbreviated: /^((пр)?н\.?\s?е\.?)/i,
                                wide: /^(пред нашата ера|нашата ера)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^п/i,
                                    /^н/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234](-?[врт]?и?)? кв.?/i,
                                wide: /^[1234](-?[врт]?и?)? квартал/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                abbreviated: /^(јан|фев|мар|апр|мај|јун|јул|авг|сеп|окт|ноем|дек)/i,
                                wide: /^(јануари|февруари|март|април|мај|јуни|јули|август|септември|октомври|ноември|декември)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ја/i,
                                    /^Ф/i,
                                    /^мар/i,
                                    /^ап/i,
                                    /^мај/i,
                                    /^јун/i,
                                    /^јул/i,
                                    /^ав/i,
                                    /^се/i,
                                    /^окт/i,
                                    /^но/i,
                                    /^де/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[нпвсч]/i,
                                short: /^(не|по|вт|ср|че|пе|са)/i,
                                abbreviated: /^(нед|пон|вто|сре|чет|пет|саб)/i,
                                wide: /^(недела|понеделник|вторник|среда|четврток|петок|сабота)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^н/i,
                                    /^п/i,
                                    /^в/i,
                                    /^с/i,
                                    /^ч/i,
                                    /^п/i,
                                    /^с/i
                                ],
                                any: [
                                    /^н[ед]/i,
                                    /^п[он]/i,
                                    /^вт/i,
                                    /^ср/i,
                                    /^ч[ет]/i,
                                    /^п[ет]/i,
                                    /^с[аб]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(претп|попл|полноќ|утро|пладне|вечер|ноќ)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /претпладне/i,
                                    pm: /попладне/i,
                                    midnight: /полноќ/i,
                                    noon: /напладне/i,
                                    morning: /наутро/i,
                                    afternoon: /попладне/i,
                                    evening: /навечер/i,
                                    night: /ноќе/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Ff = Lf,
                Xf = {
                    lessThanXSeconds: {
                        one: 'секунд хүрэхгүй',
                        other: '{{count}} секунд хүрэхгүй'
                    },
                    xSeconds: {
                        one: '1 секунд',
                        other: '{{count}} секунд'
                    },
                    halfAMinute: 'хагас минут',
                    lessThanXMinutes: {
                        one: 'минут хүрэхгүй',
                        other: '{{count}} минут хүрэхгүй'
                    },
                    xMinutes: {
                        one: '1 минут',
                        other: '{{count}} минут'
                    },
                    aboutXHours: {
                        one: 'ойролцоогоор 1 цаг',
                        other: 'ойролцоогоор {{count}} цаг'
                    },
                    xHours: {
                        one: '1 цаг',
                        other: '{{count}} цаг'
                    },
                    xDays: {
                        one: '1 өдөр',
                        other: '{{count}} өдөр'
                    },
                    aboutXWeeks: {
                        one: 'ойролцоогоор 1 долоо хоног',
                        other: 'ойролцоогоор {{count}} долоо хоног'
                    },
                    xWeeks: {
                        one: '1 долоо хоног',
                        other: '{{count}} долоо хоног'
                    },
                    aboutXMonths: {
                        one: 'ойролцоогоор 1 сар',
                        other: 'ойролцоогоор {{count}} сар'
                    },
                    xMonths: {
                        one: '1 сар',
                        other: '{{count}} сар'
                    },
                    aboutXYears: {
                        one: 'ойролцоогоор 1 жил',
                        other: 'ойролцоогоор {{count}} жил'
                    },
                    xYears: {
                        one: '1 жил',
                        other: '{{count}} жил'
                    },
                    overXYears: {
                        one: '1 жил гаран',
                        other: '{{count}} жил гаран'
                    },
                    almostXYears: {
                        one: 'бараг 1 жил',
                        other: 'бараг {{count}} жил'
                    }
                },
                Uf = {
                    date: at({
                        formats: {
                            full: 'y \'оны\' MMMM\'ын\' d, EEEE \'гараг\'',
                            long: 'y \'оны\' MMMM\'ын\' d',
                            medium: 'y \'оны\' MMM\'ын\' d',
                            short: 'y.MM.dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                qf = {
                    lastWeek: '\'өнгөрсөн\' eeee \'гарагийн\' p \'цагт\'',
                    yesterday: '\'өчигдөр\' p \'цагт\'',
                    today: '\'өнөөдөр\' p \'цагт\'',
                    tomorrow: '\'маргааш\' p \'цагт\'',
                    nextWeek: '\'ирэх\' eeee \'гарагийн\' p \'цагт\'',
                    other: 'P'
                },
                Gf = {
                    code: 'mn',
                    formatDistance: function (e, t, n) {
                        var r;
                        if (n = n || {
                        }, r = 'string' == typeof Xf[e] ? Xf[e] : 1 === t ? Xf[e].one : Xf[e].other.replace('{{count}}', t), n.addSuffix) {
                            var a = r.split(' '),
                                i = a.pop();
                            switch (r = a.join(' '), i) {
                                case 'секунд':
                                    r += ' секундийн';
                                    break;
                                case 'минут':
                                    r += ' минутын';
                                    break;
                                case 'цаг':
                                    r += ' цагийн';
                                    break;
                                case 'өдөр':
                                    r += ' өдрийн';
                                    break;
                                case 'сар':
                                    r += ' сарын';
                                    break;
                                case 'жил':
                                    r += ' жилийн';
                                    break;
                                case 'хоног':
                                    r += ' хоногийн';
                                    break;
                                case 'гаран':
                                    r += ' гараны';
                                    break;
                                case 'хүрэхгүй':
                                    r += ' хүрэхгүй хугацааны';
                                    break;
                                default:
                                    r += i + '-н'
                            }
                            return n.comparison > 0 ? r + ' дараа' : r + ' өмнө'
                        }
                        return r
                    },
                    formatLong: Uf,
                    formatRelative: function (e, t, n, r) {
                        return qf[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'НТӨ',
                                    'НТ'
                                ],
                                abbreviated: [
                                    'НТӨ',
                                    'НТ'
                                ],
                                wide: [
                                    'нийтийн тооллын өмнөх',
                                    'нийтийн тооллын'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    'I',
                                    'II',
                                    'III',
                                    'IV'
                                ],
                                abbreviated: [
                                    'I улирал',
                                    'II улирал',
                                    'III улирал',
                                    'IV улирал'
                                ],
                                wide: [
                                    '1-р улирал',
                                    '2-р улирал',
                                    '3-р улирал',
                                    '4-р улирал'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'I',
                                    'II',
                                    'III',
                                    'IV',
                                    'V',
                                    'VI',
                                    'VII',
                                    'VIII',
                                    'IX',
                                    'X',
                                    'XI',
                                    'XII'
                                ],
                                abbreviated: [
                                    '1-р сар',
                                    '2-р сар',
                                    '3-р сар',
                                    '4-р сар',
                                    '5-р сар',
                                    '6-р сар',
                                    '7-р сар',
                                    '8-р сар',
                                    '9-р сар',
                                    '10-р сар',
                                    '11-р сар',
                                    '12-р сар'
                                ],
                                wide: [
                                    'Нэгдүгээр сар',
                                    'Хоёрдугаар сар',
                                    'Гуравдугаар сар',
                                    'Дөрөвдүгээр сар',
                                    'Тавдугаар сар',
                                    'Зургаадугаар сар',
                                    'Долоодугаар сар',
                                    'Наймдугаар сар',
                                    'Есдүгээр сар',
                                    'Аравдугаар сар',
                                    'Арваннэгдүгээр сар',
                                    'Арван хоёрдугаар сар'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'I',
                                    'II',
                                    'III',
                                    'IV',
                                    'V',
                                    'VI',
                                    'VII',
                                    'VIII',
                                    'IX',
                                    'X',
                                    'XI',
                                    'XII'
                                ],
                                abbreviated: [
                                    '1-р сар',
                                    '2-р сар',
                                    '3-р сар',
                                    '4-р сар',
                                    '5-р сар',
                                    '6-р сар',
                                    '7-р сар',
                                    '8-р сар',
                                    '9-р сар',
                                    '10-р сар',
                                    '11-р сар',
                                    '12-р сар'
                                ],
                                wide: [
                                    'нэгдүгээр сар',
                                    'хоёрдугаар сар',
                                    'гуравдугаар сар',
                                    'дөрөвдүгээр сар',
                                    'тавдугаар сар',
                                    'зургаадугаар сар',
                                    'долоодугаар сар',
                                    'наймдугаар сар',
                                    'есдүгээр сар',
                                    'аравдугаар сар',
                                    'арваннэгдүгээр сар',
                                    'арван хоёрдугаар сар'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Н',
                                    'Д',
                                    'М',
                                    'Л',
                                    'П',
                                    'Б',
                                    'Б'
                                ],
                                short: [
                                    'Ня',
                                    'Да',
                                    'Мя',
                                    'Лх',
                                    'Пү',
                                    'Ба',
                                    'Бя'
                                ],
                                abbreviated: [
                                    'Ням',
                                    'Дав',
                                    'Мяг',
                                    'Лха',
                                    'Пүр',
                                    'Баа',
                                    'Бям'
                                ],
                                wide: [
                                    'Ням',
                                    'Даваа',
                                    'Мягмар',
                                    'Лхагва',
                                    'Пүрэв',
                                    'Баасан',
                                    'Бямба'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'Н',
                                    'Д',
                                    'М',
                                    'Л',
                                    'П',
                                    'Б',
                                    'Б'
                                ],
                                short: [
                                    'Ня',
                                    'Да',
                                    'Мя',
                                    'Лх',
                                    'Пү',
                                    'Ба',
                                    'Бя'
                                ],
                                abbreviated: [
                                    'Ням',
                                    'Дав',
                                    'Мяг',
                                    'Лха',
                                    'Пүр',
                                    'Баа',
                                    'Бям'
                                ],
                                wide: [
                                    'ням',
                                    'даваа',
                                    'мягмар',
                                    'лхагва',
                                    'пүрэв',
                                    'баасан',
                                    'бямба'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ү.ө.',
                                    pm: 'ү.х.',
                                    midnight: 'шөнө дунд',
                                    noon: 'үд дунд',
                                    morning: 'өглөө',
                                    afternoon: 'өдөр',
                                    evening: 'орой',
                                    night: 'шөнө'
                                },
                                abbreviated: {
                                    am: 'ү.ө.',
                                    pm: 'ү.х.',
                                    midnight: 'шөнө дунд',
                                    noon: 'үд дунд',
                                    morning: 'өглөө',
                                    afternoon: 'өдөр',
                                    evening: 'орой',
                                    night: 'шөнө'
                                },
                                wide: {
                                    am: 'ү.ө.',
                                    pm: 'ү.х.',
                                    midnight: 'шөнө дунд',
                                    noon: 'үд дунд',
                                    morning: 'өглөө',
                                    afternoon: 'өдөр',
                                    evening: 'орой',
                                    night: 'шөнө'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /\d+/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(нтө|нт)/i,
                                abbreviated: /^(нтө|нт)/i,
                                wide: /^(нийтийн тооллын өмнө|нийтийн тооллын)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(нтө|нийтийн тооллын өмнө)/i,
                                    /^(нт|нийтийн тооллын)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^(iv|iii|ii|i)/i,
                                abbreviated: /^(iv|iii|ii|i) улирал/i,
                                wide: /^[1-4]-р улирал/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(i(\s|$)|1)/i,
                                    /^(ii(\s|$)|2)/i,
                                    /^(iii(\s|$)|3)/i,
                                    /^(iv(\s|$)|4)/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(xii|xi|x|ix|viii|vii|vi|v|iv|iii|ii|i)/i,
                                abbreviated: /^(1-р сар|2-р сар|3-р сар|4-р сар|5-р сар|6-р сар|7-р сар|8-р сар|9-р сар|10-р сар|11-р сар|12-р сар)/i,
                                wide: /^(нэгдүгээр сар|хоёрдугаар сар|гуравдугаар сар|дөрөвдүгээр сар|тавдугаар сар|зургаадугаар сар|долоодугаар сар|наймдугаар сар|есдүгээр сар|аравдугаар сар|арван нэгдүгээр сар|арван хоёрдугаар сар)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^i$/i,
                                    /^ii$/i,
                                    /^iii$/i,
                                    /^iv$/i,
                                    /^v$/i,
                                    /^vi$/i,
                                    /^vii$/i,
                                    /^viii$/i,
                                    /^ix$/i,
                                    /^x$/i,
                                    /^xi$/i,
                                    /^xii$/i
                                ],
                                any: [
                                    /^(1|нэгдүгээр)/i,
                                    /^(2|хоёрдугаар)/i,
                                    /^(3|гуравдугаар)/i,
                                    /^(4|дөрөвдүгээр)/i,
                                    /^(5|тавдугаар)/i,
                                    /^(6|зургаадугаар)/i,
                                    /^(7|долоодугаар)/i,
                                    /^(8|наймдугаар)/i,
                                    /^(9|есдүгээр)/i,
                                    /^(10|аравдугаар)/i,
                                    /^(11|арван нэгдүгээр)/i,
                                    /^(12|арван хоёрдугаар)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[ндмлпбб]/i,
                                short: /^(ня|да|мя|лх|пү|ба|бя)/i,
                                abbreviated: /^(ням|дав|мяг|лха|пүр|баа|бям)/i,
                                wide: /^(ням|даваа|мягмар|лхагва|пүрэв|баасан|бямба)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^н/i,
                                    /^д/i,
                                    /^м/i,
                                    /^л/i,
                                    /^п/i,
                                    /^б/i,
                                    /^б/i
                                ],
                                any: [
                                    /^ня/i,
                                    /^да/i,
                                    /^мя/i,
                                    /^лх/i,
                                    /^пү/i,
                                    /^ба/i,
                                    /^бя/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ү\.ө\.|ү\.х\.|шөнө дунд|үд дунд|өглөө|өдөр|орой|шөнө)/i,
                                any: /^(ү\.ө\.|ү\.х\.|шөнө дунд|үд дунд|өглөө|өдөр|орой|шөнө)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ү\.ө\./i,
                                    pm: /^ү\.х\./i,
                                    midnight: /^шөнө дунд/i,
                                    noon: /^үд дунд/i,
                                    morning: /өглөө/i,
                                    afternoon: /өдөр/i,
                                    evening: /орой/i,
                                    night: /шөнө/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                Vf = {
                    lessThanXSeconds: {
                        one: 'kurang dari 1 saat',
                        other: 'kurang dari {{count}} saat'
                    },
                    xSeconds: {
                        one: '1 saat',
                        other: '{{count}} saat'
                    },
                    halfAMinute: 'setengah minit',
                    lessThanXMinutes: {
                        one: 'kurang dari 1 minit',
                        other: 'kurang dari {{count}} minit'
                    },
                    xMinutes: {
                        one: '1 minit',
                        other: '{{count}} minit'
                    },
                    aboutXHours: {
                        one: 'sekitar 1 jam',
                        other: 'sekitar {{count}} jam'
                    },
                    xHours: {
                        one: '1 jam',
                        other: '{{count}} jam'
                    },
                    xDays: {
                        one: '1 hari',
                        other: '{{count}} hari'
                    },
                    aboutXWeeks: {
                        one: 'sekitar 1 minggu',
                        other: 'sekitar {{count}} minggu'
                    },
                    xWeeks: {
                        one: '1 minggu',
                        other: '{{count}} minggu'
                    },
                    aboutXMonths: {
                        one: 'sekitar 1 bulan',
                        other: 'sekitar {{count}} bulan'
                    },
                    xMonths: {
                        one: '1 bulan',
                        other: '{{count}} bulan'
                    },
                    aboutXYears: {
                        one: 'sekitar 1 tahun',
                        other: 'sekitar {{count}} tahun'
                    },
                    xYears: {
                        one: '1 tahun',
                        other: '{{count}} tahun'
                    },
                    overXYears: {
                        one: 'lebih dari 1 tahun',
                        other: 'lebih dari {{count}} tahun'
                    },
                    almostXYears: {
                        one: 'hampir 1 tahun',
                        other: 'hampir {{count}} tahun'
                    }
                },
                Yf = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM yyyy',
                            long: 'd MMMM yyyy',
                            medium: 'd MMM yyyy',
                            short: 'd/M/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH.mm.ss',
                            long: 'HH.mm.ss',
                            medium: 'HH.mm',
                            short: 'HH.mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'pukul\' {{time}}',
                            long: '{{date}} \'pukul\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Bf = {
                    lastWeek: 'eeee \'lepas pada jam\' p',
                    yesterday: '\'Semalam pada jam\' p',
                    today: '\'Hari ini pada jam\' p',
                    tomorrow: '\'Esok pada jam\' p',
                    nextWeek: 'eeee \'pada jam\' p',
                    other: 'P'
                },
                $f = {
                    code: 'ms',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Vf[e] ? Vf[e] : 1 === t ? Vf[e].one : Vf[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'dalam masa ' + r : r + ' yang lalu' : r
                    },
                    formatLong: Yf,
                    formatRelative: function (e, t, n, r) {
                        return Bf[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return 'ke-' + Number(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'SM',
                                    'M'
                                ],
                                abbreviated: [
                                    'SM',
                                    'M'
                                ],
                                wide: [
                                    'Sebelum Masihi',
                                    'Masihi'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'S1',
                                    'S2',
                                    'S3',
                                    'S4'
                                ],
                                wide: [
                                    'Suku pertama',
                                    'Suku kedua',
                                    'Suku ketiga',
                                    'Suku keempat'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'O',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'Jan',
                                    'Feb',
                                    'Mac',
                                    'Apr',
                                    'Mei',
                                    'Jun',
                                    'Jul',
                                    'Ogo',
                                    'Sep',
                                    'Okt',
                                    'Nov',
                                    'Dis'
                                ],
                                wide: [
                                    'Januari',
                                    'Februari',
                                    'Mac',
                                    'April',
                                    'Mei',
                                    'Jun',
                                    'Julai',
                                    'Ogos',
                                    'September',
                                    'Oktober',
                                    'November',
                                    'Disember'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'A',
                                    'I',
                                    'S',
                                    'R',
                                    'K',
                                    'J',
                                    'S'
                                ],
                                short: [
                                    'Ahd',
                                    'Isn',
                                    'Sel',
                                    'Rab',
                                    'Kha',
                                    'Jum',
                                    'Sab'
                                ],
                                abbreviated: [
                                    'Ahd',
                                    'Isn',
                                    'Sel',
                                    'Rab',
                                    'Kha',
                                    'Jum',
                                    'Sab'
                                ],
                                wide: [
                                    'Ahad',
                                    'Isnin',
                                    'Selasa',
                                    'Rabu',
                                    'Khamis',
                                    'Jumaat',
                                    'Sabtu'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'tgh malam',
                                    noon: 'tgh hari',
                                    morning: 'pagi',
                                    afternoon: 'tengah hari',
                                    evening: 'petang',
                                    night: 'malam'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'tengah hari',
                                    evening: 'petang',
                                    night: 'malam'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'tengah hari',
                                    evening: 'petang',
                                    night: 'malam'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'tengah hari',
                                    evening: 'petang',
                                    night: 'malam'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'tengah hari',
                                    evening: 'petang',
                                    night: 'malam'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'tengah malam',
                                    noon: 'tengah hari',
                                    morning: 'pagi',
                                    afternoon: 'tengah hari',
                                    evening: 'petang',
                                    night: 'malam'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^ke-(\d+)?/i,
                            parsePattern: /petama|\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(sm|m)/i,
                                abbreviated: /^(s\.?\s?m\.?|m\.?)/i,
                                wide: /^(sebelum masihi|masihi)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^s/i,
                                    /^(m)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^S[1234]/i,
                                wide: /Suku (pertama|kedua|ketiga|keempat)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /pertama|1/i,
                                    /kedua|2/i,
                                    /ketiga|3/i,
                                    /keempat|4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|feb|mac|apr|mei|jun|jul|ogo|sep|okt|nov|dis)/i,
                                wide: /^(januari|februari|mac|april|mei|jun|julai|ogos|september|oktober|november|disember)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^o/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^ma/i,
                                    /^ap/i,
                                    /^me/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^og/i,
                                    /^s/i,
                                    /^ok/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[aisrkj]/i,
                                short: /^(ahd|isn|sel|rab|kha|jum|sab)/i,
                                abbreviated: /^(ahd|isn|sel|rab|kha|jum|sab)/i,
                                wide: /^(ahad|isnin|selasa|rabu|khamis|jumaat|sabtu)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^a/i,
                                    /^i/i,
                                    /^s/i,
                                    /^r/i,
                                    /^k/i,
                                    /^j/i,
                                    /^s/i
                                ],
                                any: [
                                    /^a/i,
                                    /^i/i,
                                    /^se/i,
                                    /^r/i,
                                    /^k/i,
                                    /^j/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(am|pm|tengah malam|tengah hari|pagi|petang|malam)/i,
                                any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|pagi|petang|malam)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^pm/i,
                                    midnight: /^tengah m/i,
                                    noon: /^tengah h/i,
                                    morning: /pa/i,
                                    afternoon: /tengah h/i,
                                    evening: /pe/i,
                                    night: /m/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                Qf = {
                    lessThanXSeconds: {
                        one: 'inqas minn sekonda',
                        other: 'inqas minn {{count}} sekondi'
                    },
                    xSeconds: {
                        one: 'sekonda',
                        other: '{{count}} sekondi'
                    },
                    halfAMinute: 'nofs minuta',
                    lessThanXMinutes: {
                        one: 'inqas minn minuta',
                        other: 'inqas minn {{count}} minuti'
                    },
                    xMinutes: {
                        one: 'minuta',
                        other: '{{count}} minuti'
                    },
                    aboutXHours: {
                        one: 'madwar siegħa',
                        other: 'madwar {{count}} siegħat'
                    },
                    xHours: {
                        one: 'siegħa',
                        other: '{{count}} siegħat'
                    },
                    xDays: {
                        one: 'ġurnata',
                        other: '{{count}} ġranet'
                    },
                    aboutXWeeks: {
                        one: 'madwar ġimgħa',
                        other: 'madwar {{count}} ġimgħat'
                    },
                    xWeeks: {
                        one: 'ġimgħa',
                        other: '{{count}} ġimgħat'
                    },
                    aboutXMonths: {
                        one: 'madwar xahar',
                        other: 'madwar {{count}} xhur'
                    },
                    xMonths: {
                        one: 'xahar',
                        other: '{{count}} xhur'
                    },
                    aboutXYears: {
                        one: 'madwar sena',
                        two: 'madwar sentejn',
                        other: 'madwar {{count}} snin'
                    },
                    xYears: {
                        one: 'sena',
                        two: 'sentejn',
                        other: '{{count}} snin'
                    },
                    overXYears: {
                        one: 'aktar minn sena',
                        two: 'aktar minn sentejn',
                        other: 'aktar minn {{count}} snin'
                    },
                    almostXYears: {
                        one: 'kważi sena',
                        two: 'kważi sentejn',
                        other: 'kważi {{count}} snin'
                    }
                },
                Kf = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM yyyy',
                            long: 'd MMMM yyyy',
                            medium: 'd MMM yyyy',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Jf = {
                    lastWeek: 'eeee \'li għadda\' \'fil-\'p',
                    yesterday: '\'Il-bieraħ fil-\'p',
                    today: '\'Illum fil-\'p',
                    tomorrow: '\'Għada fil-\'p',
                    nextWeek: 'eeee \'fil-\'p',
                    other: 'P'
                },
                Zf = {
                    code: 'mt',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a = e.match(/years/i);
                        return r = 'string' == typeof Qf[e] ? Qf[e] : 1 === t ? Qf[e].one : 2 === t && a ? Qf[e].two : Qf[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'f\'' + r : r + ' ilu' : r
                    },
                    formatLong: Kf,
                    formatRelative: function (e, t, n, r) {
                        return Jf[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + 'º'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'Q',
                                    'W'
                                ],
                                abbreviated: [
                                    'QK',
                                    'WK'
                                ],
                                wide: [
                                    'qabel Kristu',
                                    'wara Kristu'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'K1',
                                    'K2',
                                    'K3',
                                    'K4'
                                ],
                                wide: [
                                    '1. kwart',
                                    '2. kwart',
                                    '3. kwart',
                                    '4. kwart'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'Ġ',
                                    'L',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'Jan',
                                    'Fra',
                                    'Mar',
                                    'Apr',
                                    'Mej',
                                    'Ġun',
                                    'Lul',
                                    'Aww',
                                    'Set',
                                    'Ott',
                                    'Nov',
                                    'Diċ'
                                ],
                                wide: [
                                    'Jannar',
                                    'Frar',
                                    'Marzu',
                                    'April',
                                    'Mejju',
                                    'Ġunju',
                                    'Lulju',
                                    'Awwissu',
                                    'Settembru',
                                    'Ottubru',
                                    'Novembru',
                                    'Diċembru'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Ħ',
                                    'T',
                                    'T',
                                    'E',
                                    'Ħ',
                                    'Ġ',
                                    'S'
                                ],
                                short: [
                                    'Ħa',
                                    'Tn',
                                    'Tl',
                                    'Er',
                                    'Ħa',
                                    'Ġi',
                                    'Si'
                                ],
                                abbreviated: [
                                    'Ħad',
                                    'Tne',
                                    'Tli',
                                    'Erb',
                                    'Ħam',
                                    'Ġim',
                                    'Sib'
                                ],
                                wide: [
                                    'Il-Ħadd',
                                    'It-Tnejn',
                                    'It-Tlieta',
                                    'L-Erbgħa',
                                    'Il-Ħamis',
                                    'Il-Ġimgħa',
                                    'Is-Sibt'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'nofsillejl',
                                    noon: 'nofsinhar',
                                    morning: 'għodwa',
                                    afternoon: 'wara nofsinhar',
                                    evening: 'filgħaxija',
                                    night: 'lejl'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'nofsillejl',
                                    noon: 'nofsinhar',
                                    morning: 'għodwa',
                                    afternoon: 'wara nofsinhar',
                                    evening: 'filgħaxija',
                                    night: 'lejl'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'nofsillejl',
                                    noon: 'nofsinhar',
                                    morning: 'għodwa',
                                    afternoon: 'wara nofsinhar',
                                    evening: 'filgħaxija',
                                    night: 'lejl'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'f\'nofsillejl',
                                    noon: 'f\'nofsinhar',
                                    morning: 'filgħodu',
                                    afternoon: 'wara nofsinhar',
                                    evening: 'filgħaxija',
                                    night: 'billejl'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'f\'nofsillejl',
                                    noon: 'f\'nofsinhar',
                                    morning: 'filgħodu',
                                    afternoon: 'wara nofsinhar',
                                    evening: 'filgħaxija',
                                    night: 'billejl'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'f\'nofsillejl',
                                    noon: 'f\'nofsinhar',
                                    morning: 'filgħodu',
                                    afternoon: 'wara nofsinhar',
                                    evening: 'filgħaxija',
                                    night: 'billejl'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(º)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(q|w)/i,
                                abbreviated: /^(q\.?\s?k\.?|b\.?\s?c\.?\s?e\.?|w\.?\s?k\.?)/i,
                                wide: /^(qabel kristu|before common era|wara kristu|common era)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(q|b)/i,
                                    /^(w|c)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^k[1234]/i,
                                wide: /^[1234](\.)? kwart/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmaglsond]/i,
                                abbreviated: /^(jan|fra|mar|apr|mej|ġun|lul|aww|set|ott|nov|diċ)/i,
                                wide: /^(jannar|frar|marzu|april|mejju|ġunju|lulju|awwissu|settembru|ottubru|novembru|diċembru)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^ġ/i,
                                    /^l/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^mej/i,
                                    /^ġ/i,
                                    /^l/i,
                                    /^aw/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[ħteġs]/i,
                                short: /^(ħa|tn|tl|er|ħa|ġi|si)/i,
                                abbreviated: /^(ħad|tne|tli|erb|ħam|ġim|sib)/i,
                                wide: /^(il-ħadd|it-tnejn|it-tlieta|l-erbgħa|il-ħamis|il-ġimgħa|is-sibt)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ħ/i,
                                    /^t/i,
                                    /^t/i,
                                    /^e/i,
                                    /^ħ/i,
                                    /^ġ/i,
                                    /^s/i
                                ],
                                any: [
                                    /^(il-)?ħad/i,
                                    /^(it-)?tn/i,
                                    /^(it-)?tl/i,
                                    /^(l-)?er/i,
                                    /^(il-)?ham/i,
                                    /^(il-)?ġi/i,
                                    /^(is-)?si/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i,
                                any: /^([ap]\.?\s?m\.?|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^f'nofsillejl/i,
                                    noon: /^f'nofsinhar/i,
                                    morning: /għodwa/i,
                                    afternoon: /wara(\s.*)nofsinhar/i,
                                    evening: /filgħaxija/i,
                                    night: /lejl/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                eh = {
                    lessThanXSeconds: {
                        singular: 'mindre enn ett sekund',
                        plural: 'mindre enn {{count}} sekunder'
                    },
                    xSeconds: {
                        singular: 'ett sekund',
                        plural: '{{count}} sekunder'
                    },
                    halfAMinute: 'et halvt minutt',
                    lessThanXMinutes: {
                        singular: 'mindre enn ett minutt',
                        plural: 'mindre enn {{count}} minutter'
                    },
                    xMinutes: {
                        singular: 'ett minutt',
                        plural: '{{count}} minutter'
                    },
                    aboutXHours: {
                        singular: 'omtrent en time',
                        plural: 'omtrent {{count}} timer'
                    },
                    xHours: {
                        singular: 'en time',
                        plural: '{{count}} timer'
                    },
                    xDays: {
                        singular: 'en dag',
                        plural: '{{count}} dager'
                    },
                    aboutXWeeks: {
                        singular: 'omtrent en uke',
                        plural: 'omtrent {{count}} uker'
                    },
                    xWeeks: {
                        singular: 'en uke',
                        plural: '{{count}} uker'
                    },
                    aboutXMonths: {
                        singular: 'omtrent en måned',
                        plural: 'omtrent {{count}} måneder'
                    },
                    xMonths: {
                        singular: 'en måned',
                        plural: '{{count}} måneder'
                    },
                    aboutXYears: {
                        singular: 'omtrent ett år',
                        plural: 'omtrent {{count}} år'
                    },
                    xYears: {
                        singular: 'ett år',
                        plural: '{{count}} år'
                    },
                    overXYears: {
                        singular: 'over ett år',
                        plural: 'over {{count}} år'
                    },
                    almostXYears: {
                        singular: 'nesten ett år',
                        plural: 'nesten {{count}} år'
                    }
                },
                th = {
                    date: at({
                        formats: {
                            full: 'EEEE d. MMMM y',
                            long: 'd. MMMM y',
                            medium: 'd. MMM y',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: '\'kl\'. HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'kl.\' {{time}}',
                            long: '{{date}} \'kl.\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                nh = {
                    lastWeek: '\'forrige\' eeee \'kl.\' p',
                    yesterday: '\'i går kl.\' p',
                    today: '\'i dag kl.\' p',
                    tomorrow: '\'i morgen kl.\' p',
                    nextWeek: 'EEEE \'kl.\' p',
                    other: 'P'
                },
                rh = {
                    code: 'nb',
                    formatDistance: function (e, t, n) {
                        n = n || {
                        };
                        var r,
                            a = eh[e];
                        return r = 'string' == typeof a ? a : 0 === t || t > 1 ? a.plural.replace('{{count}}', t) : a.singular,
                            n.addSuffix ? n.comparison > 0 ? 'om ' + r : r + ' siden' : r
                    },
                    formatLong: th,
                    formatRelative: function (e, t, n, r) {
                        return nh[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'f.Kr.',
                                    'e.Kr.'
                                ],
                                abbreviated: [
                                    'f.Kr.',
                                    'e.Kr.'
                                ],
                                wide: [
                                    'før Kristus',
                                    'etter Kristus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1. kvartal',
                                    '2. kvartal',
                                    '3. kvartal',
                                    '4. kvartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mars',
                                    'apr.',
                                    'mai',
                                    'juni',
                                    'juli',
                                    'aug.',
                                    'sep.',
                                    'okt.',
                                    'nov.',
                                    'des.'
                                ],
                                wide: [
                                    'januar',
                                    'februar',
                                    'mars',
                                    'april',
                                    'mai',
                                    'juni',
                                    'juli',
                                    'august',
                                    'september',
                                    'oktober',
                                    'november',
                                    'desember'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'M',
                                    'T',
                                    'O',
                                    'T',
                                    'F',
                                    'L'
                                ],
                                short: [
                                    'sø',
                                    'ma',
                                    'ti',
                                    'on',
                                    'to',
                                    'fr',
                                    'lø'
                                ],
                                abbreviated: [
                                    'søn',
                                    'man',
                                    'tir',
                                    'ons',
                                    'tor',
                                    'fre',
                                    'lør'
                                ],
                                wide: [
                                    'søndag',
                                    'mandag',
                                    'tirsdag',
                                    'onsdag',
                                    'torsdag',
                                    'fredag',
                                    'lørdag'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morg.',
                                    afternoon: 'på etterm.',
                                    evening: 'på kvelden',
                                    night: 'på natten'
                                },
                                abbreviated: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morg.',
                                    afternoon: 'på etterm.',
                                    evening: 'på kvelden',
                                    night: 'på natten'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morgenen',
                                    afternoon: 'på ettermiddagen',
                                    evening: 'på kvelden',
                                    night: 'på natten'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\.?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
                                abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
                                wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^f/i,
                                    /^e/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234](\.)? kvartal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i,
                                wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^mai/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^aug/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smtofl]/i,
                                short: /^(sø|ma|ti|on|to|fr|lø)/i,
                                abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i,
                                wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^s/i,
                                    /^m/i,
                                    /^ti/i,
                                    /^o/i,
                                    /^to/i,
                                    /^f/i,
                                    /^l/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i,
                                any: /^([ap]\.?\s?m\.?|midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a(\.?\s?m\.?)?$/i,
                                    pm: /^p(\.?\s?m\.?)?$/i,
                                    midnight: /^midn/i,
                                    noon: /^midd/i,
                                    morning: /morgen/i,
                                    afternoon: /ettermiddag/i,
                                    evening: /kveld/i,
                                    night: /natt/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                ah = {
                    lessThanXSeconds: {
                        one: 'minder dan een seconde',
                        other: 'minder dan {{count}} seconden'
                    },
                    xSeconds: {
                        one: '1 seconde',
                        other: '{{count}} seconden'
                    },
                    halfAMinute: 'een halve minuut',
                    lessThanXMinutes: {
                        one: 'minder dan een minuut',
                        other: 'minder dan {{count}} minuten'
                    },
                    xMinutes: {
                        one: 'een minuut',
                        other: '{{count}} minuten'
                    },
                    aboutXHours: {
                        one: 'ongeveer 1 uur',
                        other: 'ongeveer {{count}} uur'
                    },
                    xHours: {
                        one: '1 uur',
                        other: '{{count}} uur'
                    },
                    xDays: {
                        one: '1 dag',
                        other: '{{count}} dagen'
                    },
                    aboutXWeeks: {
                        one: 'ongeveer 1 week',
                        other: 'ongeveer {{count}} weken'
                    },
                    xWeeks: {
                        one: '1 week',
                        other: '{{count}} weken'
                    },
                    aboutXMonths: {
                        one: 'ongeveer 1 maand',
                        other: 'ongeveer {{count}} maanden'
                    },
                    xMonths: {
                        one: '1 maand',
                        other: '{{count}} maanden'
                    },
                    aboutXYears: {
                        one: 'ongeveer 1 jaar',
                        other: 'ongeveer {{count}} jaar'
                    },
                    xYears: {
                        one: '1 jaar',
                        other: '{{count}} jaar'
                    },
                    overXYears: {
                        one: 'meer dan 1 jaar',
                        other: 'meer dan {{count}} jaar'
                    },
                    almostXYears: {
                        one: 'bijna 1 jaar',
                        other: 'bijna {{count}} jaar'
                    }
                },
                ih = {
                    date: at({
                        formats: {
                            full: 'EEEE d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'dd-MM-y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'om\' {{time}}',
                            long: '{{date}} \'om\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                oh = {
                    lastWeek: '\'afgelopen\' eeee \'om\' p',
                    yesterday: '\'gisteren om\' p',
                    today: '\'vandaag om\' p',
                    tomorrow: '\'morgen om\' p',
                    nextWeek: 'eeee \'om\' p',
                    other: 'P'
                },
                sh = {
                    code: 'nl',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof ah[e] ? ah[e] : 1 === t ? ah[e].one : ah[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'over ' + r : r + ' geleden' : r
                    },
                    formatLong: ih,
                    formatRelative: function (e, t, n, r) {
                        return oh[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + 'e'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'v.C.',
                                    'n.C.'
                                ],
                                abbreviated: [
                                    'v.Chr.',
                                    'n.Chr.'
                                ],
                                wide: [
                                    'voor Christus',
                                    'na Christus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'K1',
                                    'K2',
                                    'K3',
                                    'K4'
                                ],
                                wide: [
                                    '1e kwartaal',
                                    '2e kwartaal',
                                    '3e kwartaal',
                                    '4e kwartaal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mrt.',
                                    'apr.',
                                    'mei',
                                    'jun.',
                                    'jul.',
                                    'aug.',
                                    'sep.',
                                    'okt.',
                                    'nov.',
                                    'dec.'
                                ],
                                wide: [
                                    'januari',
                                    'februari',
                                    'maart',
                                    'april',
                                    'mei',
                                    'juni',
                                    'juli',
                                    'augustus',
                                    'september',
                                    'oktober',
                                    'november',
                                    'december'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Z',
                                    'M',
                                    'D',
                                    'W',
                                    'D',
                                    'V',
                                    'Z'
                                ],
                                short: [
                                    'zo',
                                    'ma',
                                    'di',
                                    'wo',
                                    'do',
                                    'vr',
                                    'za'
                                ],
                                abbreviated: [
                                    'zon',
                                    'maa',
                                    'din',
                                    'woe',
                                    'don',
                                    'vri',
                                    'zat'
                                ],
                                wide: [
                                    'zondag',
                                    'maandag',
                                    'dinsdag',
                                    'woensdag',
                                    'donderdag',
                                    'vrijdag',
                                    'zaterdag'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'het middaguur',
                                    morning: '\'s ochtends',
                                    afternoon: '\'s middags',
                                    evening: '\'s avonds',
                                    night: '\'s nachts'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'het middaguur',
                                    morning: '\'s ochtends',
                                    afternoon: '\'s middags',
                                    evening: '\'s avonds',
                                    night: '\'s nachts'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'het middaguur',
                                    morning: '\'s ochtends',
                                    afternoon: '\'s middags',
                                    evening: '\'s avonds',
                                    night: '\'s nachts'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)e?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^([vn]\.? ?C\.?)/,
                                abbreviated: /^([vn]\. ?Chr\.?)/,
                                wide: /^((voor|na) Christus)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^v/,
                                    /^n/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^K[1234]/i,
                                wide: /^[1234]e kwartaal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
                                wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^jan/i,
                                    /^feb/i,
                                    /^m(r|a)/i,
                                    /^apr/i,
                                    /^mei/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^aug/i,
                                    /^sep/i,
                                    /^okt/i,
                                    /^nov/i,
                                    /^dec/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[zmdwv]/i,
                                short: /^(zo|ma|di|wo|do|vr|za)/i,
                                abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,
                                wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^z/i,
                                    /^m/i,
                                    /^d/i,
                                    /^w/i,
                                    /^d/i,
                                    /^v/i,
                                    /^z/i
                                ],
                                any: [
                                    /^zo/i,
                                    /^ma/i,
                                    /^di/i,
                                    /^wo/i,
                                    /^do/i,
                                    /^vr/i,
                                    /^za/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^am/i,
                                    pm: /^pm/i,
                                    midnight: /^middernacht/i,
                                    noon: /^het middaguur/i,
                                    morning: /ochtend/i,
                                    afternoon: /middag/i,
                                    evening: /avond/i,
                                    night: /nacht/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                uh = {
                    lessThanXSeconds: {
                        one: 'minder dan een seconde',
                        other: 'minder dan {{count}} seconden'
                    },
                    xSeconds: {
                        one: '1 seconde',
                        other: '{{count}} seconden'
                    },
                    halfAMinute: 'een halve minuut',
                    lessThanXMinutes: {
                        one: 'minder dan een minuut',
                        other: 'minder dan {{count}} minuten'
                    },
                    xMinutes: {
                        one: 'een minuut',
                        other: '{{count}} minuten'
                    },
                    aboutXHours: {
                        one: 'ongeveer 1 uur',
                        other: 'ongeveer {{count}} uur'
                    },
                    xHours: {
                        one: '1 uur',
                        other: '{{count}} uur'
                    },
                    xDays: {
                        one: '1 dag',
                        other: '{{count}} dagen'
                    },
                    aboutXWeeks: {
                        one: 'ongeveer 1 week',
                        other: 'ongeveer {{count}} weken'
                    },
                    xWeeks: {
                        one: '1 week',
                        other: '{{count}} weken'
                    },
                    aboutXMonths: {
                        one: 'ongeveer 1 maand',
                        other: 'ongeveer {{count}} maanden'
                    },
                    xMonths: {
                        one: '1 maand',
                        other: '{{count}} maanden'
                    },
                    aboutXYears: {
                        one: 'ongeveer 1 jaar',
                        other: 'ongeveer {{count}} jaar'
                    },
                    xYears: {
                        one: '1 jaar',
                        other: '{{count}} jaar'
                    },
                    overXYears: {
                        one: 'meer dan 1 jaar',
                        other: 'meer dan {{count}} jaar'
                    },
                    almostXYears: {
                        one: 'bijna 1 jaar',
                        other: 'bijna {{count}} jaar'
                    }
                },
                lh = {
                    date: at({
                        formats: {
                            full: 'EEEE d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'om\' {{time}}',
                            long: '{{date}} \'om\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                dh = {
                    lastWeek: '\'vorige\' eeee \'om\' p',
                    yesterday: '\'gisteren om\' p',
                    today: '\'vandaag om\' p',
                    tomorrow: '\'morgen om\' p',
                    nextWeek: 'eeee \'om\' p',
                    other: 'P'
                },
                ch = {
                    code: 'nl-BE',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof uh[e] ? uh[e] : 1 === t ? uh[e].one : uh[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'over ' + r : r + ' geleden' : r
                    },
                    formatLong: lh,
                    formatRelative: function (e, t, n, r) {
                        return dh[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + 'e'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'v.C.',
                                    'n.C.'
                                ],
                                abbreviated: [
                                    'v.Chr.',
                                    'n.Chr.'
                                ],
                                wide: [
                                    'voor Christus',
                                    'na Christus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'K1',
                                    'K2',
                                    'K3',
                                    'K4'
                                ],
                                wide: [
                                    '1e kwartaal',
                                    '2e kwartaal',
                                    '3e kwartaal',
                                    '4e kwartaal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mrt.',
                                    'apr.',
                                    'mei',
                                    'jun.',
                                    'jul.',
                                    'aug.',
                                    'sep.',
                                    'okt.',
                                    'nov.',
                                    'dec.'
                                ],
                                wide: [
                                    'januari',
                                    'februari',
                                    'maart',
                                    'april',
                                    'mei',
                                    'juni',
                                    'juli',
                                    'augustus',
                                    'september',
                                    'oktober',
                                    'november',
                                    'december'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Z',
                                    'M',
                                    'D',
                                    'W',
                                    'D',
                                    'V',
                                    'Z'
                                ],
                                short: [
                                    'zo',
                                    'ma',
                                    'di',
                                    'wo',
                                    'do',
                                    'vr',
                                    'za'
                                ],
                                abbreviated: [
                                    'zon',
                                    'maa',
                                    'din',
                                    'woe',
                                    'don',
                                    'vri',
                                    'zat'
                                ],
                                wide: [
                                    'zondag',
                                    'maandag',
                                    'dinsdag',
                                    'woensdag',
                                    'donderdag',
                                    'vrijdag',
                                    'zaterdag'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'het middag',
                                    morning: '\'s ochtends',
                                    afternoon: '\'s namiddags',
                                    evening: '\'s avonds',
                                    night: '\'s nachts'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'het middag',
                                    morning: '\'s ochtends',
                                    afternoon: '\'s namiddags',
                                    evening: '\'s avonds',
                                    night: '\'s nachts'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'middernacht',
                                    noon: 'het middag',
                                    morning: '\'s ochtends',
                                    afternoon: '\'s namiddags',
                                    evening: '\'s avonds',
                                    night: '\'s nachts'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)e?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^([vn]\.? ?C\.?)/,
                                abbreviated: /^([vn]\. ?Chr\.?)/,
                                wide: /^((voor|na) Christus)/
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^v/,
                                    /^n/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^K[1234]/i,
                                wide: /^[1234]e kwartaal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
                                wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^jan/i,
                                    /^feb/i,
                                    /^m(r|a)/i,
                                    /^apr/i,
                                    /^mei/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^aug/i,
                                    /^sep/i,
                                    /^okt/i,
                                    /^nov/i,
                                    /^dec/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[zmdwv]/i,
                                short: /^(zo|ma|di|wo|do|vr|za)/i,
                                abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,
                                wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^z/i,
                                    /^m/i,
                                    /^d/i,
                                    /^w/i,
                                    /^d/i,
                                    /^v/i,
                                    /^z/i
                                ],
                                any: [
                                    /^zo/i,
                                    /^ma/i,
                                    /^di/i,
                                    /^wo/i,
                                    /^do/i,
                                    /^vr/i,
                                    /^za/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^am/i,
                                    pm: /^pm/i,
                                    midnight: /^middernacht/i,
                                    noon: /^het middaguur/i,
                                    morning: /ochtend/i,
                                    afternoon: /middag/i,
                                    evening: /avond/i,
                                    night: /nacht/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                mh = {
                    lessThanXSeconds: {
                        singular: 'mindre enn eitt sekund',
                        plural: 'mindre enn {{count}} sekund'
                    },
                    xSeconds: {
                        singular: 'eitt sekund',
                        plural: '{{count}} sekund'
                    },
                    halfAMinute: 'eit halvt minutt',
                    lessThanXMinutes: {
                        singular: 'mindre enn eitt minutt',
                        plural: 'mindre enn {{count}} minutt'
                    },
                    xMinutes: {
                        singular: 'eitt minutt',
                        plural: '{{count}} minutt'
                    },
                    aboutXHours: {
                        singular: 'omtrent ein time',
                        plural: 'omtrent {{count}} timar'
                    },
                    xHours: {
                        singular: 'ein time',
                        plural: '{{count}} timar'
                    },
                    xDays: {
                        singular: 'ein dag',
                        plural: '{{count}} dagar'
                    },
                    aboutXWeeks: {
                        singular: 'omtrent ei veke',
                        plural: 'omtrent {{count}} veker'
                    },
                    xWeeks: {
                        singular: 'ei veke',
                        plural: '{{count}} veker'
                    },
                    aboutXMonths: {
                        singular: 'omtrent ein månad',
                        plural: 'omtrent {{count}} månader'
                    },
                    xMonths: {
                        singular: 'ein månad',
                        plural: '{{count}} månader'
                    },
                    aboutXYears: {
                        singular: 'omtrent eitt år',
                        plural: 'omtrent {{count}} år'
                    },
                    xYears: {
                        singular: 'eitt år',
                        plural: '{{count}} år'
                    },
                    overXYears: {
                        singular: 'over eitt år',
                        plural: 'over {{count}} år'
                    },
                    almostXYears: {
                        singular: 'nesten eitt år',
                        plural: 'nesten {{count}} år'
                    }
                },
                fh = [
                    'null',
                    'ein',
                    'to',
                    'tre',
                    'fire',
                    'fem',
                    'seks',
                    'sju',
                    'åtte',
                    'ni',
                    'ti',
                    'elleve',
                    'tolv'
                ],
                hh = {
                    date: at({
                        formats: {
                            full: 'EEEE d. MMMM y',
                            long: 'd. MMMM y',
                            medium: 'd. MMM y',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: '\'kl\'. HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'kl.\' {{time}}',
                            long: '{{date}} \'kl.\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                ph = {
                    lastWeek: '\'førre\' eeee \'kl.\' p',
                    yesterday: '\'i går kl.\' p',
                    today: '\'i dag kl.\' p',
                    tomorrow: '\'i morgon kl.\' p',
                    nextWeek: 'EEEE \'kl.\' p',
                    other: 'P'
                },
                gh = {
                    code: 'nn',
                    formatDistance: function (e, t, n) {
                        n = n || {
                            onlyNumeric: !1
                        };
                        var r,
                            a = mh[e];
                        return r = 'string' == typeof a ? a : 0 === t || t > 1 ? n.onlyNumeric ? a.plural.replace('{{count}}', t) : a.plural.replace('{{count}}', t < 13 ? fh[t] : t) : a.singular,
                            n.addSuffix ? n.comparison > 0 ? 'om ' + r : r + ' sidan' : r
                    },
                    formatLong: hh,
                    formatRelative: function (e, t, n, r) {
                        return ph[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'f.Kr.',
                                    'e.Kr.'
                                ],
                                abbreviated: [
                                    'f.Kr.',
                                    'e.Kr.'
                                ],
                                wide: [
                                    'før Kristus',
                                    'etter Kristus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1. kvartal',
                                    '2. kvartal',
                                    '3. kvartal',
                                    '4. kvartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mars',
                                    'apr.',
                                    'mai',
                                    'juni',
                                    'juli',
                                    'aug.',
                                    'sep.',
                                    'okt.',
                                    'nov.',
                                    'des.'
                                ],
                                wide: [
                                    'januar',
                                    'februar',
                                    'mars',
                                    'april',
                                    'mai',
                                    'juni',
                                    'juli',
                                    'august',
                                    'september',
                                    'oktober',
                                    'november',
                                    'desember'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'M',
                                    'T',
                                    'O',
                                    'T',
                                    'F',
                                    'L'
                                ],
                                short: [
                                    'su',
                                    'må',
                                    'ty',
                                    'on',
                                    'to',
                                    'fr',
                                    'lau'
                                ],
                                abbreviated: [
                                    'sun',
                                    'mån',
                                    'tys',
                                    'ons',
                                    'tor',
                                    'fre',
                                    'laur'
                                ],
                                wide: [
                                    'sundag',
                                    'måndag',
                                    'tysdag',
                                    'onsdag',
                                    'torsdag',
                                    'fredag',
                                    'laurdag'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morg.',
                                    afternoon: 'på etterm.',
                                    evening: 'på kvelden',
                                    night: 'på natta'
                                },
                                abbreviated: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morg.',
                                    afternoon: 'på etterm.',
                                    evening: 'på kvelden',
                                    night: 'på natta'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morgonen',
                                    afternoon: 'på ettermiddagen',
                                    evening: 'på kvelden',
                                    night: 'på natta'
                                }
                            },
                            defaultWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\.?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
                                abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
                                wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^f/i,
                                    /^e/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234](\.)? kvartal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i,
                                wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^mai/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^aug/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smtofl]/i,
                                short: /^(su|må|ty|on|to|fr|la)/i,
                                abbreviated: /^(sun|mån|tys|ons|tor|fre|laur)/i,
                                wide: /^(sundag|måndag|tysdag|onsdag|torsdag|fredag|laurdag)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^s/i,
                                    /^m/i,
                                    /^ty/i,
                                    /^o/i,
                                    /^to/i,
                                    /^f/i,
                                    /^l/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(midnatt|middag|(på) (morgonen|ettermiddagen|kvelden|natta)|[ap])/i,
                                any: /^([ap]\.?\s?m\.?|midnatt|middag|(på) (morgonen|ettermiddagen|kvelden|natta))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a(\.?\s?m\.?)?$/i,
                                    pm: /^p(\.?\s?m\.?)?$/i,
                                    midnight: /^midn/i,
                                    noon: /^midd/i,
                                    morning: /morgon/i,
                                    afternoon: /ettermiddag/i,
                                    evening: /kveld/i,
                                    night: /natt/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                };
            function vh(e, t, n) {
                n = n || 'regular';
                var r = function (e, t) {
                    if (1 === t) return e.one;
                    var n = t % 100;
                    if (n <= 20 && n > 10) return e.other;
                    var r = n % 10;
                    return r >= 2 && r <= 4 ? e.twoFour : e.other
                }(e, t);
                return (r[n] || r).replace('{{count}}', t)
            }
            var yh = {
                lessThanXSeconds: {
                    one: {
                        regular: 'mniej niż sekunda',
                        past: 'mniej niż sekundę',
                        future: 'mniej niż sekundę'
                    },
                    twoFour: 'mniej niż {{count}} sekundy',
                    other: 'mniej niż {{count}} sekund'
                },
                xSeconds: {
                    one: {
                        regular: 'sekunda',
                        past: 'sekundę',
                        future: 'sekundę'
                    },
                    twoFour: '{{count}} sekundy',
                    other: '{{count}} sekund'
                },
                halfAMinute: {
                    one: 'pół minuty',
                    twoFour: 'pół minuty',
                    other: 'pół minuty'
                },
                lessThanXMinutes: {
                    one: {
                        regular: 'mniej niż minuta',
                        past: 'mniej niż minutę',
                        future: 'mniej niż minutę'
                    },
                    twoFour: 'mniej niż {{count}} minuty',
                    other: 'mniej niż {{count}} minut'
                },
                xMinutes: {
                    one: {
                        regular: 'minuta',
                        past: 'minutę',
                        future: 'minutę'
                    },
                    twoFour: '{{count}} minuty',
                    other: '{{count}} minut'
                },
                aboutXHours: {
                    one: {
                        regular: 'około godziny',
                        past: 'około godziny',
                        future: 'około godzinę'
                    },
                    twoFour: 'około {{count}} godziny',
                    other: 'około {{count}} godzin'
                },
                xHours: {
                    one: {
                        regular: 'godzina',
                        past: 'godzinę',
                        future: 'godzinę'
                    },
                    twoFour: '{{count}} godziny',
                    other: '{{count}} godzin'
                },
                xDays: {
                    one: {
                        regular: 'dzień',
                        past: 'dzień',
                        future: '1 dzień'
                    },
                    twoFour: '{{count}} dni',
                    other: '{{count}} dni'
                },
                aboutXWeeks: {
                    one: 'około tygodnia',
                    twoFour: 'około {{count}} tygodni',
                    other: 'około {{count}} tygodni'
                },
                xWeeks: {
                    one: 'tydzień',
                    twoFour: '{{count}} tygodnie',
                    other: '{{count}} tygodni'
                },
                aboutXMonths: {
                    one: 'około miesiąc',
                    twoFour: 'około {{count}} miesiące',
                    other: 'około {{count}} miesięcy'
                },
                xMonths: {
                    one: 'miesiąc',
                    twoFour: '{{count}} miesiące',
                    other: '{{count}} miesięcy'
                },
                aboutXYears: {
                    one: 'około rok',
                    twoFour: 'około {{count}} lata',
                    other: 'około {{count}} lat'
                },
                xYears: {
                    one: 'rok',
                    twoFour: '{{count}} lata',
                    other: '{{count}} lat'
                },
                overXYears: {
                    one: 'ponad rok',
                    twoFour: 'ponad {{count}} lata',
                    other: 'ponad {{count}} lat'
                },
                almostXYears: {
                    one: 'prawie rok',
                    twoFour: 'prawie {{count}} lata',
                    other: 'prawie {{count}} lat'
                }
            },
                wh = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM y',
                            long: 'do MMMM y',
                            medium: 'do MMM y',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                bh = {
                    masculine: 'ostatni',
                    feminine: 'ostatnia'
                },
                kh = {
                    masculine: 'ten',
                    feminine: 'ta'
                },
                Mh = {
                    masculine: 'następny',
                    feminine: 'następna'
                },
                Eh = {
                    0: 'feminine',
                    1: 'masculine',
                    2: 'masculine',
                    3: 'feminine',
                    4: 'masculine',
                    5: 'masculine',
                    6: 'feminine'
                };
            function Ph(e, t, n, r) {
                var a = function (e, t, n, r) {
                    var a = t.getUTCDay(),
                        i = function (e, t, n, r) {
                            if (nl(t, n, r)) return kh;
                            if ('lastWeek' === e) return bh;
                            if ('nextWeek' === e) return Mh;
                            throw new Error('Cannot determine adjectives for token '.concat(e))
                        }(e, t, n, r);
                    return i[Eh[a]]
                }(e, t, n, r);
                return '\''.concat(a, '\' eeee \'o\' p')
            }
            var xh = {
                lastWeek: Ph,
                yesterday: '\'wczoraj o\' p',
                today: '\'dzisiaj o\' p',
                tomorrow: '\'jutro o\' p',
                nextWeek: Ph,
                other: 'P'
            },
                Sh = {
                    code: 'pl',
                    formatDistance: function (e, t, n) {
                        var r = yh[e];
                        return (n = n || {
                        }).addSuffix ? n.comparison > 0 ? 'za ' + vh(r, t, 'future') : vh(r, t, 'past') + ' temu' : vh(r, t)
                    },
                    formatLong: wh,
                    formatRelative: function (e, t, n, r) {
                        var a = xh[e];
                        return 'function' == typeof a ? a(e, t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e);
                            return String(t)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'p.n.e.',
                                    'n.e.'
                                ],
                                abbreviated: [
                                    'p.n.e.',
                                    'n.e.'
                                ],
                                wide: [
                                    'przed naszą erą',
                                    'naszej ery'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'I kw.',
                                    'II kw.',
                                    'III kw.',
                                    'IV kw.'
                                ],
                                wide: [
                                    'I kwartał',
                                    'II kwartał',
                                    'III kwartał',
                                    'IV kwartał'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'L',
                                    'M',
                                    'K',
                                    'M',
                                    'C',
                                    'L',
                                    'S',
                                    'W',
                                    'P',
                                    'L',
                                    'G'
                                ],
                                abbreviated: [
                                    'sty',
                                    'lut',
                                    'mar',
                                    'kwi',
                                    'maj',
                                    'cze',
                                    'lip',
                                    'sie',
                                    'wrz',
                                    'paź',
                                    'lis',
                                    'gru'
                                ],
                                wide: [
                                    'styczeń',
                                    'luty',
                                    'marzec',
                                    'kwiecień',
                                    'maj',
                                    'czerwiec',
                                    'lipiec',
                                    'sierpień',
                                    'wrzesień',
                                    'październik',
                                    'listopad',
                                    'grudzień'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    's',
                                    'l',
                                    'm',
                                    'k',
                                    'm',
                                    'c',
                                    'l',
                                    's',
                                    'w',
                                    'p',
                                    'l',
                                    'g'
                                ],
                                abbreviated: [
                                    'sty',
                                    'lut',
                                    'mar',
                                    'kwi',
                                    'maj',
                                    'cze',
                                    'lip',
                                    'sie',
                                    'wrz',
                                    'paź',
                                    'lis',
                                    'gru'
                                ],
                                wide: [
                                    'stycznia',
                                    'lutego',
                                    'marca',
                                    'kwietnia',
                                    'maja',
                                    'czerwca',
                                    'lipca',
                                    'sierpnia',
                                    'września',
                                    'października',
                                    'listopada',
                                    'grudnia'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'N',
                                    'P',
                                    'W',
                                    'Ś',
                                    'C',
                                    'P',
                                    'S'
                                ],
                                short: [
                                    'nie',
                                    'pon',
                                    'wto',
                                    'śro',
                                    'czw',
                                    'pią',
                                    'sob'
                                ],
                                abbreviated: [
                                    'niedz.',
                                    'pon.',
                                    'wt.',
                                    'śr.',
                                    'czw.',
                                    'pt.',
                                    'sob.'
                                ],
                                wide: [
                                    'niedziela',
                                    'poniedziałek',
                                    'wtorek',
                                    'środa',
                                    'czwartek',
                                    'piątek',
                                    'sobota'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'n',
                                    'p',
                                    'w',
                                    'ś',
                                    'c',
                                    'p',
                                    's'
                                ],
                                short: [
                                    'nie',
                                    'pon',
                                    'wto',
                                    'śro',
                                    'czw',
                                    'pią',
                                    'sob'
                                ],
                                abbreviated: [
                                    'niedz.',
                                    'pon.',
                                    'wt.',
                                    'śr.',
                                    'czw.',
                                    'pt.',
                                    'sob.'
                                ],
                                wide: [
                                    'niedziela',
                                    'poniedziałek',
                                    'wtorek',
                                    'środa',
                                    'czwartek',
                                    'piątek',
                                    'sobota'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'półn.',
                                    noon: 'poł',
                                    morning: 'rano',
                                    afternoon: 'popoł.',
                                    evening: 'wiecz.',
                                    night: 'noc'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'północ',
                                    noon: 'południe',
                                    morning: 'rano',
                                    afternoon: 'popołudnie',
                                    evening: 'wieczór',
                                    night: 'noc'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'północ',
                                    noon: 'południe',
                                    morning: 'rano',
                                    afternoon: 'popołudnie',
                                    evening: 'wieczór',
                                    night: 'noc'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'o półn.',
                                    noon: 'w poł.',
                                    morning: 'rano',
                                    afternoon: 'po poł.',
                                    evening: 'wiecz.',
                                    night: 'w nocy'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'o północy',
                                    noon: 'w południe',
                                    morning: 'rano',
                                    afternoon: 'po południu',
                                    evening: 'wieczorem',
                                    night: 'w nocy'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'o północy',
                                    noon: 'w południe',
                                    morning: 'rano',
                                    afternoon: 'po południu',
                                    evening: 'wieczorem',
                                    night: 'w nocy'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i,
                                abbreviated: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i,
                                wide: /^(przed\s*nasz(ą|a)\s*er(ą|a)|naszej\s*ery)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^p/i,
                                    /^n/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^(I|II|III|IV)\s*kw\.?/i,
                                wide: /^(I|II|III|IV)\s*kwarta(ł|l)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ],
                                any: [
                                    /^I kw/i,
                                    /^II kw/i,
                                    /^III kw/i,
                                    /^IV kw/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[slmkcwpg]/i,
                                abbreviated: /^(sty|lut|mar|kwi|maj|cze|lip|sie|wrz|pa(ź|z)|lis|gru)/i,
                                wide: /^(stycznia|stycze(ń|n)|lutego|luty|marca|marzec|kwietnia|kwiecie(ń|n)|maja|maj|czerwca|czerwiec|lipca|lipiec|sierpnia|sierpie(ń|n)|wrze(ś|s)nia|wrzesie(ń|n)|pa(ź|z)dziernika|pa(ź|z)dziernik|listopada|listopad|grudnia|grudzie(ń|n))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^l/i,
                                    /^m/i,
                                    /^k/i,
                                    /^m/i,
                                    /^c/i,
                                    /^l/i,
                                    /^s/i,
                                    /^w/i,
                                    /^p/i,
                                    /^l/i,
                                    /^g/i
                                ],
                                any: [
                                    /^st/i,
                                    /^lu/i,
                                    /^mar/i,
                                    /^k/i,
                                    /^maj/i,
                                    /^c/i,
                                    /^lip/i,
                                    /^si/i,
                                    /^w/i,
                                    /^p/i,
                                    /^lis/i,
                                    /^g/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[npwścs]/i,
                                short: /^(nie|pon|wto|(ś|s)ro|czw|pi(ą|a)|sob)/i,
                                abbreviated: /^(niedz|pon|wt|(ś|s)r|czw|pt|sob)\.?/i,
                                wide: /^(niedziela|poniedzia(ł|l)ek|wtorek|(ś|s)roda|czwartek|pi(ą|a)tek|sobota)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^n/i,
                                    /^p/i,
                                    /^w/i,
                                    /^ś/i,
                                    /^c/i,
                                    /^p/i,
                                    /^s/i
                                ],
                                abbreviated: [
                                    /^n/i,
                                    /^po/i,
                                    /^w/i,
                                    /^(ś|s)r/i,
                                    /^c/i,
                                    /^pt/i,
                                    /^so/i
                                ],
                                any: [
                                    /^n/i,
                                    /^po/i,
                                    /^w/i,
                                    /^(ś|s)r/i,
                                    /^c/i,
                                    /^pi/i,
                                    /^so/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(^a$|^p$|pó(ł|l)n\.?|o\s*pó(ł|l)n\.?|po(ł|l)\.?|w\s*po(ł|l)\.?|po\s*po(ł|l)\.?|rano|wiecz\.?|noc|w\s*nocy)/i,
                                any: /^(am|pm|pó(ł|l)noc|o\s*pó(ł|l)nocy|po(ł|l)udnie|w\s*po(ł|l)udnie|popo(ł|l)udnie|po\s*po(ł|l)udniu|rano|wieczór|wieczorem|noc|w\s*nocy)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                narrow: {
                                    am: /^a$/i,
                                    pm: /^p$/i,
                                    midnight: /pó(ł|l)n/i,
                                    noon: /po(ł|l)/i,
                                    morning: /rano/i,
                                    afternoon: /po\s*po(ł|l)/i,
                                    evening: /wiecz/i,
                                    night: /noc/i
                                },
                                any: {
                                    am: /^am/i,
                                    pm: /^pm/i,
                                    midnight: /pó(ł|l)n/i,
                                    noon: /po(ł|l)/i,
                                    morning: /rano/i,
                                    afternoon: /po\s*po(ł|l)/i,
                                    evening: /wiecz/i,
                                    night: /noc/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Th = Sh,
                Ch = {
                    lessThanXSeconds: {
                        one: 'menos de um segundo',
                        other: 'menos de {{count}} segundos'
                    },
                    xSeconds: {
                        one: '1 segundo',
                        other: '{{count}} segundos'
                    },
                    halfAMinute: 'meio minuto',
                    lessThanXMinutes: {
                        one: 'menos de um minuto',
                        other: 'menos de {{count}} minutos'
                    },
                    xMinutes: {
                        one: '1 minuto',
                        other: '{{count}} minutos'
                    },
                    aboutXHours: {
                        one: 'aproximadamente 1 hora',
                        other: 'aproximadamente {{count}} horas'
                    },
                    xHours: {
                        one: '1 hora',
                        other: '{{count}} horas'
                    },
                    xDays: {
                        one: '1 dia',
                        other: '{{count}} dias'
                    },
                    aboutXWeeks: {
                        one: 'aproximadamente 1 semana',
                        other: 'aproximadamente {{count}} semanas'
                    },
                    xWeeks: {
                        one: '1 semana',
                        other: '{{count}} semanas'
                    },
                    aboutXMonths: {
                        one: 'aproximadamente 1 mês',
                        other: 'aproximadamente {{count}} meses'
                    },
                    xMonths: {
                        one: '1 mês',
                        other: '{{count}} meses'
                    },
                    aboutXYears: {
                        one: 'aproximadamente 1 ano',
                        other: 'aproximadamente {{count}} anos'
                    },
                    xYears: {
                        one: '1 ano',
                        other: '{{count}} anos'
                    },
                    overXYears: {
                        one: 'mais de 1 ano',
                        other: 'mais de {{count}} anos'
                    },
                    almostXYears: {
                        one: 'quase 1 ano',
                        other: 'quase {{count}} anos'
                    }
                },
                Wh = {
                    date: at({
                        formats: {
                            full: 'EEEE, d \'de\' MMMM \'de\' y',
                            long: 'd \'de\' MMMM \'de\' y',
                            medium: 'd \'de\' MMM \'de\' y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'às\' {{time}}',
                            long: '{{date}} \'às\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                jh = {
                    lastWeek: '\'na última\' eeee \'às\' p',
                    yesterday: '\'ontem às\' p',
                    today: '\'hoje às\' p',
                    tomorrow: '\'amanhã às\' p',
                    nextWeek: 'eeee \'às\' p',
                    other: 'P'
                },
                Dh = {
                    code: 'pt',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Ch[e] ? Ch[e] : 1 === t ? Ch[e].one : Ch[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'daqui a ' + r : 'há ' + r : r
                    },
                    formatLong: Wh,
                    formatRelative: function (e, t, n, r) {
                        return jh[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e) + 'º'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'aC',
                                    'dC'
                                ],
                                abbreviated: [
                                    'a.C.',
                                    'd.C.'
                                ],
                                wide: [
                                    'antes de Cristo',
                                    'depois de Cristo'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'T1',
                                    'T2',
                                    'T3',
                                    'T4'
                                ],
                                wide: [
                                    '1º trimestre',
                                    '2º trimestre',
                                    '3º trimestre',
                                    '4º trimestre'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'j',
                                    'f',
                                    'm',
                                    'a',
                                    'm',
                                    'j',
                                    'j',
                                    'a',
                                    's',
                                    'o',
                                    'n',
                                    'd'
                                ],
                                abbreviated: [
                                    'jan',
                                    'fev',
                                    'mar',
                                    'abr',
                                    'mai',
                                    'jun',
                                    'jul',
                                    'ago',
                                    'set',
                                    'out',
                                    'nov',
                                    'dez'
                                ],
                                wide: [
                                    'janeiro',
                                    'fevereiro',
                                    'março',
                                    'abril',
                                    'maio',
                                    'junho',
                                    'julho',
                                    'agosto',
                                    'setembro',
                                    'outubro',
                                    'novembro',
                                    'dezembro'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'd',
                                    's',
                                    't',
                                    'q',
                                    'q',
                                    's',
                                    's'
                                ],
                                short: [
                                    'dom',
                                    'seg',
                                    'ter',
                                    'qua',
                                    'qui',
                                    'sex',
                                    'sáb'
                                ],
                                abbreviated: [
                                    'dom',
                                    'seg',
                                    'ter',
                                    'qua',
                                    'qui',
                                    'sex',
                                    'sáb'
                                ],
                                wide: [
                                    'domingo',
                                    'segunda-feira',
                                    'terça-feira',
                                    'quarta-feira',
                                    'quinta-feira',
                                    'sexta-feira',
                                    'sábado'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'manhã',
                                    afternoon: 'tarde',
                                    evening: 'noite',
                                    night: 'madrugada'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'manhã',
                                    afternoon: 'tarde',
                                    evening: 'noite',
                                    night: 'madrugada'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'manhã',
                                    afternoon: 'tarde',
                                    evening: 'noite',
                                    night: 'madrugada'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'da manhã',
                                    afternoon: 'da tarde',
                                    evening: 'da noite',
                                    night: 'da madrugada'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'da manhã',
                                    afternoon: 'da tarde',
                                    evening: 'da noite',
                                    night: 'da madrugada'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'da manhã',
                                    afternoon: 'da tarde',
                                    evening: 'da noite',
                                    night: 'da madrugada'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(º|ª)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ac|dc|a|d)/i,
                                abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
                                wide: /^(antes de cristo|antes da era comum|depois de cristo|era comum)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ac/i,
                                    /^dc/i
                                ],
                                wide: [
                                    /^(antes de cristo|antes da era comum)/i,
                                    /^(depois de cristo|era comum)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^T[1234]/i,
                                wide: /^[1234](º|ª)? trimestre/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,
                                wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ab/i,
                                    /^mai/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^ag/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[dstq]/i,
                                short: /^(dom|seg|ter|qua|qui|sex|s[áa]b)/i,
                                abbreviated: /^(dom|seg|ter|qua|qui|sex|s[áa]b)/i,
                                wide: /^(domingo|segunda-?\s?feira|terça-?\s?feira|quarta-?\s?feira|quinta-?\s?feira|sexta-?\s?feira|s[áa]bado)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^s/i,
                                    /^t/i,
                                    /^q/i,
                                    /^q/i,
                                    /^s/i,
                                    /^s/i
                                ],
                                any: [
                                    /^d/i,
                                    /^seg/i,
                                    /^t/i,
                                    /^qua/i,
                                    /^qui/i,
                                    /^sex/i,
                                    /^s[áa]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i,
                                any: /^([ap]\.?\s?m\.?|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^meia/i,
                                    noon: /^meio/i,
                                    morning: /manh[ãa]/i,
                                    afternoon: /tarde/i,
                                    evening: /noite/i,
                                    night: /madrugada/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Nh = {
                    lessThanXSeconds: {
                        one: 'menos de um segundo',
                        other: 'menos de {{count}} segundos'
                    },
                    xSeconds: {
                        one: '1 segundo',
                        other: '{{count}} segundos'
                    },
                    halfAMinute: 'meio minuto',
                    lessThanXMinutes: {
                        one: 'menos de um minuto',
                        other: 'menos de {{count}} minutos'
                    },
                    xMinutes: {
                        one: '1 minuto',
                        other: '{{count}} minutos'
                    },
                    aboutXHours: {
                        one: 'cerca de 1 hora',
                        other: 'cerca de {{count}} horas'
                    },
                    xHours: {
                        one: '1 hora',
                        other: '{{count}} horas'
                    },
                    xDays: {
                        one: '1 dia',
                        other: '{{count}} dias'
                    },
                    aboutXWeeks: {
                        one: 'cerca de 1 semana',
                        other: 'cerca de {{count}} semanas'
                    },
                    xWeeks: {
                        one: '1 semana',
                        other: '{{count}} semanas'
                    },
                    aboutXMonths: {
                        one: 'cerca de 1 mês',
                        other: 'cerca de {{count}} meses'
                    },
                    xMonths: {
                        one: '1 mês',
                        other: '{{count}} meses'
                    },
                    aboutXYears: {
                        one: 'cerca de 1 ano',
                        other: 'cerca de {{count}} anos'
                    },
                    xYears: {
                        one: '1 ano',
                        other: '{{count}} anos'
                    },
                    overXYears: {
                        one: 'mais de 1 ano',
                        other: 'mais de {{count}} anos'
                    },
                    almostXYears: {
                        one: 'quase 1 ano',
                        other: 'quase {{count}} anos'
                    }
                },
                Ih = {
                    date: at({
                        formats: {
                            full: 'EEEE, d \'de\' MMMM \'de\' y',
                            long: 'd \'de\' MMMM \'de\' y',
                            medium: 'd MMM y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'às\' {{time}}',
                            long: '{{date}} \'às\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                zh = {
                    lastWeek: function (e, t, n) {
                        var r = e.getUTCDay();
                        return '\'' + (0 === r || 6 === r ? 'último' : 'última') + '\' eeee \'às\' p'
                    },
                    yesterday: '\'ontem às\' p',
                    today: '\'hoje às\' p',
                    tomorrow: '\'amanhã às\' p',
                    nextWeek: 'eeee \'às\' p',
                    other: 'P'
                },
                Rh = {
                    code: 'pt-BR',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Nh[e] ? Nh[e] : 1 === t ? Nh[e].one : Nh[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'em ' + r : 'há ' + r : r
                    },
                    formatLong: Ih,
                    formatRelative: function (e, t, n, r) {
                        var a = zh[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e),
                                r = String((t || {
                                }).unit);
                            return 'week' === r || 'isoWeek' === r ? n + 'ª' : n + 'º'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'AC',
                                    'DC'
                                ],
                                abbreviated: [
                                    'AC',
                                    'DC'
                                ],
                                wide: [
                                    'antes de cristo',
                                    'depois de cristo'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'T1',
                                    'T2',
                                    'T3',
                                    'T4'
                                ],
                                wide: [
                                    '1º trimestre',
                                    '2º trimestre',
                                    '3º trimestre',
                                    '4º trimestre'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'j',
                                    'f',
                                    'm',
                                    'a',
                                    'm',
                                    'j',
                                    'j',
                                    'a',
                                    's',
                                    'o',
                                    'n',
                                    'd'
                                ],
                                abbreviated: [
                                    'jan',
                                    'fev',
                                    'mar',
                                    'abr',
                                    'mai',
                                    'jun',
                                    'jul',
                                    'ago',
                                    'set',
                                    'out',
                                    'nov',
                                    'dez'
                                ],
                                wide: [
                                    'janeiro',
                                    'fevereiro',
                                    'março',
                                    'abril',
                                    'maio',
                                    'junho',
                                    'julho',
                                    'agosto',
                                    'setembro',
                                    'outubro',
                                    'novembro',
                                    'dezembro'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'D',
                                    'S',
                                    'T',
                                    'Q',
                                    'Q',
                                    'S',
                                    'S'
                                ],
                                short: [
                                    'dom',
                                    'seg',
                                    'ter',
                                    'qua',
                                    'qui',
                                    'sex',
                                    'sab'
                                ],
                                abbreviated: [
                                    'domingo',
                                    'segunda',
                                    'terça',
                                    'quarta',
                                    'quinta',
                                    'sexta',
                                    'sábado'
                                ],
                                wide: [
                                    'domingo',
                                    'segunda-feira',
                                    'terça-feira',
                                    'quarta-feira',
                                    'quinta-feira',
                                    'sexta-feira',
                                    'sábado'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'mn',
                                    noon: 'md',
                                    morning: 'manhã',
                                    afternoon: 'tarde',
                                    evening: 'tarde',
                                    night: 'noite'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'manhã',
                                    afternoon: 'tarde',
                                    evening: 'tarde',
                                    night: 'noite'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'manhã',
                                    afternoon: 'tarde',
                                    evening: 'tarde',
                                    night: 'noite'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'mn',
                                    noon: 'md',
                                    morning: 'da manhã',
                                    afternoon: 'da tarde',
                                    evening: 'da tarde',
                                    night: 'da noite'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'da manhã',
                                    afternoon: 'da tarde',
                                    evening: 'da tarde',
                                    night: 'da noite'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'meia-noite',
                                    noon: 'meio-dia',
                                    morning: 'da manhã',
                                    afternoon: 'da tarde',
                                    evening: 'da tarde',
                                    night: 'da noite'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)[ºªo]?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ac|dc|a|d)/i,
                                abbreviated: /^(a\.?\s?c\.?|d\.?\s?c\.?)/i,
                                wide: /^(antes de cristo|depois de cristo)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ac/i,
                                    /^dc/i
                                ],
                                wide: [
                                    /^antes de cristo/i,
                                    /^depois de cristo/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^T[1234]/i,
                                wide: /^[1234](º)? trimestre/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmajsond]/i,
                                abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,
                                wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^fev/i,
                                    /^mar/i,
                                    /^abr/i,
                                    /^mai/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^ago/i,
                                    /^set/i,
                                    /^out/i,
                                    /^nov/i,
                                    /^dez/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(dom|[23456]ª?|s[aá]b)/i,
                                short: /^(dom|[23456]ª?|s[aá]b)/i,
                                abbreviated: /^(dom|seg|ter|qua|qui|sex|s[aá]b)/i,
                                wide: /^(domingo|(segunda|ter[cç]a|quarta|quinta|sexta)([- ]feira)?|s[aá]bado)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                short: [
                                    /^d/i,
                                    /^2/i,
                                    /^3/i,
                                    /^4/i,
                                    /^5/i,
                                    /^6/i,
                                    /^s[aá]/i
                                ],
                                narrow: [
                                    /^d/i,
                                    /^2/i,
                                    /^3/i,
                                    /^4/i,
                                    /^5/i,
                                    /^6/i,
                                    /^s[aá]/i
                                ],
                                any: [
                                    /^d/i,
                                    /^seg/i,
                                    /^t/i,
                                    /^qua/i,
                                    /^qui/i,
                                    /^sex/i,
                                    /^s[aá]b/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mn|md|(da) (manhã|tarde|noite))/i,
                                any: /^([ap]\.?\s?m\.?|meia[-\s]noite|meio[-\s]dia|(da) (manhã|tarde|noite))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mn|^meia[-\s]noite/i,
                                    noon: /^md|^meio[-\s]dia/i,
                                    morning: /manhã/i,
                                    afternoon: /tarde/i,
                                    evening: /tarde/i,
                                    night: /noite/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Ah = Rh,
                Oh = {
                    lessThanXSeconds: {
                        one: 'mai puțin de o secundă',
                        other: 'mai puțin de {{count}} secunde'
                    },
                    xSeconds: {
                        one: '1 secundă',
                        other: '{{count}} secunde'
                    },
                    halfAMinute: 'jumătate de minut',
                    lessThanXMinutes: {
                        one: 'mai puțin de un minut',
                        other: 'mai puțin de {{count}} minute'
                    },
                    xMinutes: {
                        one: '1 minut',
                        other: '{{count}} minute'
                    },
                    aboutXHours: {
                        one: 'circa 1 oră',
                        other: 'circa {{count}} ore'
                    },
                    xHours: {
                        one: '1 oră',
                        other: '{{count}} ore'
                    },
                    xDays: {
                        one: '1 zi',
                        other: '{{count}} zile'
                    },
                    aboutXWeeks: {
                        one: 'circa o săptămână',
                        other: 'circa {{count}} săptămâni'
                    },
                    xWeeks: {
                        one: '1 săptămână',
                        other: '{{count}} săptămâni'
                    },
                    aboutXMonths: {
                        one: 'circa 1 lună',
                        other: 'circa {{count}} luni'
                    },
                    xMonths: {
                        one: '1 lună',
                        other: '{{count}} luni'
                    },
                    aboutXYears: {
                        one: 'circa 1 an',
                        other: 'circa {{count}} ani'
                    },
                    xYears: {
                        one: '1 an',
                        other: '{{count}} ani'
                    },
                    overXYears: {
                        one: 'peste 1 an',
                        other: 'peste {{count}} ani'
                    },
                    almostXYears: {
                        one: 'aproape 1 an',
                        other: 'aproape {{count}} ani'
                    }
                },
                Hh = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM yyyy',
                            long: 'd MMMM yyyy',
                            medium: 'd MMM yyyy',
                            short: 'dd.MM.yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'la\' {{time}}',
                            long: '{{date}} \'la\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                _h = {
                    lastWeek: 'eeee \'trecută la\' p',
                    yesterday: '\'ieri la\' p',
                    today: '\'astăzi la\' p',
                    tomorrow: '\'mâine la\' p',
                    nextWeek: 'eeee \'viitoare la\' p',
                    other: 'P'
                },
                Lh = {
                    code: 'ro',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Oh[e] ? Oh[e] : 1 === t ? Oh[e].one : Oh[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'în ' + r : r + ' în urmă' : r
                    },
                    formatLong: Hh,
                    formatRelative: function (e, t, n, r) {
                        return _h[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e);
                            return String(t)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'Î',
                                    'D'
                                ],
                                abbreviated: [
                                    'Î.d.C.',
                                    'D.C.'
                                ],
                                wide: [
                                    'Înainte de Cristos',
                                    'După Cristos'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'T1',
                                    'T2',
                                    'T3',
                                    'T4'
                                ],
                                wide: [
                                    'primul trimestru',
                                    'al doilea trimestru',
                                    'al treilea trimestru',
                                    'al patrulea trimestru'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'I',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'I',
                                    'I',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'ian',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'mai',
                                    'iun',
                                    'iul',
                                    'aug',
                                    'sep',
                                    'oct',
                                    'noi',
                                    'dec'
                                ],
                                wide: [
                                    'ianuarie',
                                    'februarie',
                                    'martie',
                                    'aprilie',
                                    'mai',
                                    'iunie',
                                    'iulie',
                                    'august',
                                    'septembrie',
                                    'octombrie',
                                    'noiembrie',
                                    'decembrie'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'd',
                                    'l',
                                    'm',
                                    'm',
                                    'j',
                                    'v',
                                    's'
                                ],
                                short: [
                                    'du',
                                    'lu',
                                    'ma',
                                    'mi',
                                    'jo',
                                    'vi',
                                    'sâ'
                                ],
                                abbreviated: [
                                    'dum',
                                    'lun',
                                    'mar',
                                    'mie',
                                    'joi',
                                    'vin',
                                    'sâm'
                                ],
                                wide: [
                                    'duminică',
                                    'luni',
                                    'marți',
                                    'miercuri',
                                    'joi',
                                    'vineri',
                                    'sâmbătă'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'mn',
                                    noon: 'ami',
                                    morning: 'dim',
                                    afternoon: 'da',
                                    evening: 's',
                                    night: 'n'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'miezul nopții',
                                    noon: 'amiază',
                                    morning: 'dimineață',
                                    afternoon: 'după-amiază',
                                    evening: 'seară',
                                    night: 'noapte'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'miezul nopții',
                                    noon: 'amiază',
                                    morning: 'dimineață',
                                    afternoon: 'după-amiază',
                                    evening: 'seară',
                                    night: 'noapte'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'mn',
                                    noon: 'amiază',
                                    morning: 'dimineață',
                                    afternoon: 'după-amiază',
                                    evening: 'seară',
                                    night: 'noapte'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'miezul nopții',
                                    noon: 'amiază',
                                    morning: 'dimineață',
                                    afternoon: 'după-amiază',
                                    evening: 'seară',
                                    night: 'noapte'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'miezul nopții',
                                    noon: 'amiază',
                                    morning: 'dimineață',
                                    afternoon: 'după-amiază',
                                    evening: 'seară',
                                    night: 'noapte'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(Î|D)/i,
                                abbreviated: /^(Î\.?\s?d\.?\s?C\.?|Î\.?\s?e\.?\s?n\.?|D\.?\s?C\.?|e\.?\s?n\.?)/i,
                                wide: /^(Înainte de Cristos|Înaintea erei noastre|După Cristos|Era noastră)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^ÎC/i,
                                    /^DC/i
                                ],
                                wide: [
                                    /^(Înainte de Cristos|Înaintea erei noastre)/i,
                                    /^(După Cristos|Era noastră)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^T[1234]/i,
                                wide: /^trimestrul [1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[ifmaasond]/i,
                                abbreviated: /^(ian|feb|mar|apr|mai|iun|iul|aug|sep|oct|noi|dec)/i,
                                wide: /^(ianuarie|februarie|martie|aprilie|mai|iunie|iulie|august|septembrie|octombrie|noiembrie|decembrie)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^i/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^i/i,
                                    /^i/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ia/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^mai/i,
                                    /^iun/i,
                                    /^iul/i,
                                    /^au/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[dlmjvs]/i,
                                short: /^(d|l|ma|mi|j|v|s)/i,
                                abbreviated: /^(dum|lun|mar|mie|jo|vi|sâ)/i,
                                wide: /^(duminica|luni|marţi|miercuri|joi|vineri|sâmbătă)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^l/i,
                                    /^m/i,
                                    /^m/i,
                                    /^j/i,
                                    /^v/i,
                                    /^s/i
                                ],
                                any: [
                                    /^d/i,
                                    /^l/i,
                                    /^ma/i,
                                    /^mi/i,
                                    /^j/i,
                                    /^v/i,
                                    /^s/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|mn|a|(dimineaţa|după-amiaza|seara|noaptea))/i,
                                any: /^([ap]\.?\s?m\.?|miezul nopții|amiaza|(dimineaţa|după-amiaza|seara|noaptea))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^mn/i,
                                    noon: /amiaza/i,
                                    morning: /dimineaţa/i,
                                    afternoon: /după-amiaza/i,
                                    evening: /seara/i,
                                    night: /noaptea/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                };
            function Fh(e, t) {
                if (void 0 !== e.one && 1 === t) return e.one;
                var n = t % 10,
                    r = t % 100;
                return 1 === n && 11 !== r ? e.singularNominative.replace('{{count}}', t) : n >= 2 && n <= 4 && (r < 10 || r > 20) ? e.singularGenitive.replace('{{count}}', t) : e.pluralGenitive.replace('{{count}}', t)
            }
            function Xh(e) {
                return function (t, n) {
                    return n.addSuffix ? n.comparison > 0 ? e.future ? Fh(e.future, t) : 'через ' + Fh(e.regular, t) : e.past ? Fh(e.past, t) : Fh(e.regular, t) + ' назад' : Fh(e.regular, t)
                }
            }
            var Uh = {
                lessThanXSeconds: Xh({
                    regular: {
                        one: 'меньше секунды',
                        singularNominative: 'меньше {{count}} секунды',
                        singularGenitive: 'меньше {{count}} секунд',
                        pluralGenitive: 'меньше {{count}} секунд'
                    },
                    future: {
                        one: 'меньше, чем через секунду',
                        singularNominative: 'меньше, чем через {{count}} секунду',
                        singularGenitive: 'меньше, чем через {{count}} секунды',
                        pluralGenitive: 'меньше, чем через {{count}} секунд'
                    }
                }),
                xSeconds: Xh({
                    regular: {
                        singularNominative: '{{count}} секунда',
                        singularGenitive: '{{count}} секунды',
                        pluralGenitive: '{{count}} секунд'
                    },
                    past: {
                        singularNominative: '{{count}} секунду назад',
                        singularGenitive: '{{count}} секунды назад',
                        pluralGenitive: '{{count}} секунд назад'
                    },
                    future: {
                        singularNominative: 'через {{count}} секунду',
                        singularGenitive: 'через {{count}} секунды',
                        pluralGenitive: 'через {{count}} секунд'
                    }
                }),
                halfAMinute: function (e, t) {
                    return t.addSuffix ? t.comparison > 0 ? 'через полминуты' : 'полминуты назад' : 'полминуты'
                },
                lessThanXMinutes: Xh({
                    regular: {
                        one: 'меньше минуты',
                        singularNominative: 'меньше {{count}} минуты',
                        singularGenitive: 'меньше {{count}} минут',
                        pluralGenitive: 'меньше {{count}} минут'
                    },
                    future: {
                        one: 'меньше, чем через минуту',
                        singularNominative: 'меньше, чем через {{count}} минуту',
                        singularGenitive: 'меньше, чем через {{count}} минуты',
                        pluralGenitive: 'меньше, чем через {{count}} минут'
                    }
                }),
                xMinutes: Xh({
                    regular: {
                        singularNominative: '{{count}} минута',
                        singularGenitive: '{{count}} минуты',
                        pluralGenitive: '{{count}} минут'
                    },
                    past: {
                        singularNominative: '{{count}} минуту назад',
                        singularGenitive: '{{count}} минуты назад',
                        pluralGenitive: '{{count}} минут назад'
                    },
                    future: {
                        singularNominative: 'через {{count}} минуту',
                        singularGenitive: 'через {{count}} минуты',
                        pluralGenitive: 'через {{count}} минут'
                    }
                }),
                aboutXHours: Xh({
                    regular: {
                        singularNominative: 'около {{count}} часа',
                        singularGenitive: 'около {{count}} часов',
                        pluralGenitive: 'около {{count}} часов'
                    },
                    future: {
                        singularNominative: 'приблизительно через {{count}} час',
                        singularGenitive: 'приблизительно через {{count}} часа',
                        pluralGenitive: 'приблизительно через {{count}} часов'
                    }
                }),
                xHours: Xh({
                    regular: {
                        singularNominative: '{{count}} час',
                        singularGenitive: '{{count}} часа',
                        pluralGenitive: '{{count}} часов'
                    }
                }),
                xDays: Xh({
                    regular: {
                        singularNominative: '{{count}} день',
                        singularGenitive: '{{count}} дня',
                        pluralGenitive: '{{count}} дней'
                    }
                }),
                aboutXWeeks: Xh({
                    regular: {
                        singularNominative: 'около {{count}} недели',
                        singularGenitive: 'около {{count}} недель',
                        pluralGenitive: 'около {{count}} недель'
                    },
                    future: {
                        singularNominative: 'приблизительно через {{count}} неделю',
                        singularGenitive: 'приблизительно через {{count}} недели',
                        pluralGenitive: 'приблизительно через {{count}} недель'
                    }
                }),
                xWeeks: Xh({
                    regular: {
                        singularNominative: '{{count}} неделя',
                        singularGenitive: '{{count}} недели',
                        pluralGenitive: '{{count}} недель'
                    }
                }),
                aboutXMonths: Xh({
                    regular: {
                        singularNominative: 'около {{count}} месяца',
                        singularGenitive: 'около {{count}} месяцев',
                        pluralGenitive: 'около {{count}} месяцев'
                    },
                    future: {
                        singularNominative: 'приблизительно через {{count}} месяц',
                        singularGenitive: 'приблизительно через {{count}} месяца',
                        pluralGenitive: 'приблизительно через {{count}} месяцев'
                    }
                }),
                xMonths: Xh({
                    regular: {
                        singularNominative: '{{count}} месяц',
                        singularGenitive: '{{count}} месяца',
                        pluralGenitive: '{{count}} месяцев'
                    }
                }),
                aboutXYears: Xh({
                    regular: {
                        singularNominative: 'около {{count}} года',
                        singularGenitive: 'около {{count}} лет',
                        pluralGenitive: 'около {{count}} лет'
                    },
                    future: {
                        singularNominative: 'приблизительно через {{count}} год',
                        singularGenitive: 'приблизительно через {{count}} года',
                        pluralGenitive: 'приблизительно через {{count}} лет'
                    }
                }),
                xYears: Xh({
                    regular: {
                        singularNominative: '{{count}} год',
                        singularGenitive: '{{count}} года',
                        pluralGenitive: '{{count}} лет'
                    }
                }),
                overXYears: Xh({
                    regular: {
                        singularNominative: 'больше {{count}} года',
                        singularGenitive: 'больше {{count}} лет',
                        pluralGenitive: 'больше {{count}} лет'
                    },
                    future: {
                        singularNominative: 'больше, чем через {{count}} год',
                        singularGenitive: 'больше, чем через {{count}} года',
                        pluralGenitive: 'больше, чем через {{count}} лет'
                    }
                }),
                almostXYears: Xh({
                    regular: {
                        singularNominative: 'почти {{count}} год',
                        singularGenitive: 'почти {{count}} года',
                        pluralGenitive: 'почти {{count}} лет'
                    },
                    future: {
                        singularNominative: 'почти через {{count}} год',
                        singularGenitive: 'почти через {{count}} года',
                        pluralGenitive: 'почти через {{count}} лет'
                    }
                })
            },
                qh = {
                    date: at({
                        formats: {
                            full: 'EEEE, d MMMM y \'г.\'',
                            long: 'd MMMM y \'г.\'',
                            medium: 'd MMM y \'г.\'',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            any: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'any'
                    })
                },
                Gh = [
                    'воскресенье',
                    'понедельник',
                    'вторник',
                    'среду',
                    'четверг',
                    'пятницу',
                    'субботу'
                ];
            function Vh(e) {
                var t = Gh[e];
                return 2 === e ? '\'во ' + t + ' в\' p' : '\'в ' + t + ' в\' p'
            }
            var Yh = {
                lastWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? Vh(r) : function (e) {
                        var t = Gh[e];
                        switch (e) {
                            case 0:
                                return '\'в прошлое ' + t + ' в\' p';
                            case 1:
                            case 2:
                            case 4:
                                return '\'в прошлый ' + t + ' в\' p';
                            case 3:
                            case 5:
                            case 6:
                                return '\'в прошлую ' + t + ' в\' p'
                        }
                    }(r)
                },
                yesterday: '\'вчера в\' p',
                today: '\'сегодня в\' p',
                tomorrow: '\'завтра в\' p',
                nextWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? Vh(r) : function (e) {
                        var t = Gh[e];
                        switch (e) {
                            case 0:
                                return '\'в следующее ' + t + ' в\' p';
                            case 1:
                            case 2:
                            case 4:
                                return '\'в следующий ' + t + ' в\' p';
                            case 3:
                            case 5:
                            case 6:
                                return '\'в следующую ' + t + ' в\' p'
                        }
                    }(r)
                },
                other: 'P'
            },
                Bh = {
                    code: 'ru',
                    formatDistance: function (e, t, n) {
                        return n = n || {
                        },
                            Uh[e](t, n)
                    },
                    formatLong: qh,
                    formatRelative: function (e, t, n, r) {
                        var a = Yh[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = String((t || {
                            }).unit);
                            return e + ('date' === n ? '-е' : 'week' === n || 'minute' === n || 'second' === n ? '-я' : '-й')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'до н.э.',
                                    'н.э.'
                                ],
                                abbreviated: [
                                    'до н. э.',
                                    'н. э.'
                                ],
                                wide: [
                                    'до нашей эры',
                                    'нашей эры'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1-й кв.',
                                    '2-й кв.',
                                    '3-й кв.',
                                    '4-й кв.'
                                ],
                                wide: [
                                    '1-й квартал',
                                    '2-й квартал',
                                    '3-й квартал',
                                    '4-й квартал'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'Я',
                                    'Ф',
                                    'М',
                                    'А',
                                    'М',
                                    'И',
                                    'И',
                                    'А',
                                    'С',
                                    'О',
                                    'Н',
                                    'Д'
                                ],
                                abbreviated: [
                                    'янв.',
                                    'фев.',
                                    'март',
                                    'апр.',
                                    'май',
                                    'июнь',
                                    'июль',
                                    'авг.',
                                    'сент.',
                                    'окт.',
                                    'нояб.',
                                    'дек.'
                                ],
                                wide: [
                                    'январь',
                                    'февраль',
                                    'март',
                                    'апрель',
                                    'май',
                                    'июнь',
                                    'июль',
                                    'август',
                                    'сентябрь',
                                    'октябрь',
                                    'ноябрь',
                                    'декабрь'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'Я',
                                    'Ф',
                                    'М',
                                    'А',
                                    'М',
                                    'И',
                                    'И',
                                    'А',
                                    'С',
                                    'О',
                                    'Н',
                                    'Д'
                                ],
                                abbreviated: [
                                    'янв.',
                                    'фев.',
                                    'мар.',
                                    'апр.',
                                    'мая',
                                    'июн.',
                                    'июл.',
                                    'авг.',
                                    'сент.',
                                    'окт.',
                                    'нояб.',
                                    'дек.'
                                ],
                                wide: [
                                    'января',
                                    'февраля',
                                    'марта',
                                    'апреля',
                                    'мая',
                                    'июня',
                                    'июля',
                                    'августа',
                                    'сентября',
                                    'октября',
                                    'ноября',
                                    'декабря'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'В',
                                    'П',
                                    'В',
                                    'С',
                                    'Ч',
                                    'П',
                                    'С'
                                ],
                                short: [
                                    'вс',
                                    'пн',
                                    'вт',
                                    'ср',
                                    'чт',
                                    'пт',
                                    'сб'
                                ],
                                abbreviated: [
                                    'вск',
                                    'пнд',
                                    'втр',
                                    'срд',
                                    'чтв',
                                    'птн',
                                    'суб'
                                ],
                                wide: [
                                    'воскресенье',
                                    'понедельник',
                                    'вторник',
                                    'среда',
                                    'четверг',
                                    'пятница',
                                    'суббота'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'полн.',
                                    noon: 'полд.',
                                    morning: 'утро',
                                    afternoon: 'день',
                                    evening: 'веч.',
                                    night: 'ночь'
                                },
                                abbreviated: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'полн.',
                                    noon: 'полд.',
                                    morning: 'утро',
                                    afternoon: 'день',
                                    evening: 'веч.',
                                    night: 'ночь'
                                },
                                wide: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'полночь',
                                    noon: 'полдень',
                                    morning: 'утро',
                                    afternoon: 'день',
                                    evening: 'вечер',
                                    night: 'ночь'
                                }
                            },
                            defaultWidth: 'any',
                            formattingValues: {
                                narrow: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'полн.',
                                    noon: 'полд.',
                                    morning: 'утра',
                                    afternoon: 'дня',
                                    evening: 'веч.',
                                    night: 'ночи'
                                },
                                abbreviated: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'полн.',
                                    noon: 'полд.',
                                    morning: 'утра',
                                    afternoon: 'дня',
                                    evening: 'веч.',
                                    night: 'ночи'
                                },
                                wide: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'полночь',
                                    noon: 'полдень',
                                    morning: 'утра',
                                    afternoon: 'дня',
                                    evening: 'вечера',
                                    night: 'ночи'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^((до )?н\.?\s?э\.?)/i,
                                abbreviated: /^((до )?н\.?\s?э\.?)/i,
                                wide: /^(до нашей эры|нашей эры|наша эра)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^д/i,
                                    /^н/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234](-?[ыои]?й?)? кв.?/i,
                                wide: /^[1234](-?[ыои]?й?)? квартал/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[яфмаисонд]/i,
                                abbreviated: /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)\.?/i,
                                wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^я/i,
                                    /^ф/i,
                                    /^м/i,
                                    /^а/i,
                                    /^м/i,
                                    /^и/i,
                                    /^и/i,
                                    /^а/i,
                                    /^с/i,
                                    /^о/i,
                                    /^н/i,
                                    /^я/i
                                ],
                                any: [
                                    /^я/i,
                                    /^ф/i,
                                    /^мар/i,
                                    /^ап/i,
                                    /^ма[йя]/i,
                                    /^июн/i,
                                    /^июл/i,
                                    /^ав/i,
                                    /^с/i,
                                    /^о/i,
                                    /^н/i,
                                    /^д/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[впсч]/i,
                                short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\.?/i,
                                abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i,
                                wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^в/i,
                                    /^п/i,
                                    /^в/i,
                                    /^с/i,
                                    /^ч/i,
                                    /^п/i,
                                    /^с/i
                                ],
                                any: [
                                    /^в[ос]/i,
                                    /^п[он]/i,
                                    /^в/i,
                                    /^ср/i,
                                    /^ч/i,
                                    /^п[ят]/i,
                                    /^с[уб]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^([дп]п|полн\.?|полд\.?|утр[оа]|день|дня|веч\.?|ноч[ьи])/i,
                                abbreviated: /^([дп]п|полн\.?|полд\.?|утр[оа]|день|дня|веч\.?|ноч[ьи])/i,
                                wide: /^([дп]п|полночь|полдень|утр[оа]|день|дня|вечера?|ноч[ьи])/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: {
                                    am: /^дп/i,
                                    pm: /^пп/i,
                                    midnight: /^полн/i,
                                    noon: /^полд/i,
                                    morning: /^у/i,
                                    afternoon: /^д[ен]/i,
                                    evening: /^в/i,
                                    night: /^н/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                $h = Bh;
            function Qh(e, t, n) {
                var r = function (e, t) {
                    return 1 === t && e.one ? e.one : t >= 2 && t <= 4 && e.twoFour ? e.twoFour : e.other
                }(e, t);
                return r[n].replace('{{count}}', String(t))
            }
            function Kh(e) {
                var t = '';
                return 'almost' === e && (t = 'takmer'),
                    'about' === e && (t = 'približne'),
                    t.length > 0 ? t + ' ' : ''
            }
            function Jh(e) {
                var t = '';
                return 'lessThan' === e && (t = 'menej než'),
                    'over' === e && (t = 'viac než'),
                    t.length > 0 ? t + ' ' : ''
            }
            var Zh = {
                xSeconds: {
                    one: {
                        present: 'sekunda',
                        past: 'sekundou',
                        future: 'sekundu'
                    },
                    twoFour: {
                        present: '{{count}} sekundy',
                        past: '{{count}} sekundami',
                        future: '{{count}} sekundy'
                    },
                    other: {
                        present: '{{count}} sekúnd',
                        past: '{{count}} sekundami',
                        future: '{{count}} sekúnd'
                    }
                },
                halfAMinute: {
                    other: {
                        present: 'pol minúty',
                        past: 'pol minútou',
                        future: 'pol minúty'
                    }
                },
                xMinutes: {
                    one: {
                        present: 'minúta',
                        past: 'minútou',
                        future: 'minútu'
                    },
                    twoFour: {
                        present: '{{count}} minúty',
                        past: '{{count}} minútami',
                        future: '{{count}} minúty'
                    },
                    other: {
                        present: '{{count}} minút',
                        past: '{{count}} minútami',
                        future: '{{count}} minút'
                    }
                },
                xHours: {
                    one: {
                        present: 'hodina',
                        past: 'hodinou',
                        future: 'hodinu'
                    },
                    twoFour: {
                        present: '{{count}} hodiny',
                        past: '{{count}} hodinami',
                        future: '{{count}} hodiny'
                    },
                    other: {
                        present: '{{count}} hodín',
                        past: '{{count}} hodinami',
                        future: '{{count}} hodín'
                    }
                },
                xDays: {
                    one: {
                        present: 'deň',
                        past: 'dňom',
                        future: 'deň'
                    },
                    twoFour: {
                        present: '{{count}} dni',
                        past: '{{count}} dňami',
                        future: '{{count}} dni'
                    },
                    other: {
                        present: '{{count}} dní',
                        past: '{{count}} dňami',
                        future: '{{count}} dní'
                    }
                },
                xWeeks: {
                    one: {
                        present: 'týždeň',
                        past: 'týždňom',
                        future: 'týždeň'
                    },
                    twoFour: {
                        present: '{{count}} týždne',
                        past: '{{count}} týždňami',
                        future: '{{count}} týždne'
                    },
                    other: {
                        present: '{{count}} týždňov',
                        past: '{{count}} týždňami',
                        future: '{{count}} týždňov'
                    }
                },
                xMonths: {
                    one: {
                        present: 'mesiac',
                        past: 'mesiacom',
                        future: 'mesiac'
                    },
                    twoFour: {
                        present: '{{count}} mesiace',
                        past: '{{count}} mesiacmi',
                        future: '{{count}} mesiace'
                    },
                    other: {
                        present: '{{count}} mesiacov',
                        past: '{{count}} mesiacmi',
                        future: '{{count}} mesiacov'
                    }
                },
                xYears: {
                    one: {
                        present: 'rok',
                        past: 'rokom',
                        future: 'rok'
                    },
                    twoFour: {
                        present: '{{count}} roky',
                        past: '{{count}} rokmi',
                        future: '{{count}} roky'
                    },
                    other: {
                        present: '{{count}} rokov',
                        past: '{{count}} rokmi',
                        future: '{{count}} rokov'
                    }
                }
            },
                ep = {
                    date: at({
                        formats: {
                            full: 'EEEE d. MMMM y',
                            long: 'd. MMMM y',
                            medium: 'd. M. y',
                            short: 'd. M. y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}}, {{time}}',
                            long: '{{date}}, {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                tp = [
                    'nedeľu',
                    'pondelok',
                    'utorok',
                    'stredu',
                    'štvrtok',
                    'piatok',
                    'sobotu'
                ];
            function np(e) {
                return 4 === e ? '\'vo\' eeee \'o\' p' : '\'v ' + tp[e] + ' o\' p'
            }
            var rp = {
                lastWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? np(r) : function (e) {
                        var t = tp[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 6:
                                return '\'minulú ' + t + ' o\' p';
                            default:
                                return '\'minulý\' eeee \'o\' p'
                        }
                    }(r)
                },
                yesterday: '\'včera o\' p',
                today: '\'dnes o\' p',
                tomorrow: '\'zajtra o\' p',
                nextWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? np(r) : function (e) {
                        var t = tp[e];
                        switch (e) {
                            case 0:
                            case 4:
                            case 6:
                                return '\'budúcu ' + t + ' o\' p';
                            default:
                                return '\'budúci\' eeee \'o\' p'
                        }
                    }(r)
                },
                other: 'P'
            },
                ap = {
                    code: 'sk',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = function (e) {
                                return ['lessThan',
                                    'about',
                                    'over',
                                    'almost'].filter((function (t) {
                                        return !!e.match(new RegExp('^' + t))
                                    }))[0]
                            }(e) || '',
                            i = (r = e.substring(a.length)).charAt(0).toLowerCase() + r.slice(1),
                            o = Zh[i];
                        return null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? Kh(a) + 'o ' + Jh(a) + Qh(o, t, 'future') : Kh(a) + 'pred ' + Jh(a) + Qh(o, t, 'past') : Kh(a) + Jh(a) + Qh(o, t, 'present')
                    },
                    formatLong: ep,
                    formatRelative: function (e, t, n, r) {
                        var a = rp[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'pred Kr.',
                                    'po Kr.'
                                ],
                                abbreviated: [
                                    'pred Kr.',
                                    'po Kr.'
                                ],
                                wide: [
                                    'pred Kristom',
                                    'po Kristovi'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1. štvrťrok',
                                    '2. štvrťrok',
                                    '3. štvrťrok',
                                    '4. štvrťrok'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return e - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'j',
                                    'f',
                                    'm',
                                    'a',
                                    'm',
                                    'j',
                                    'j',
                                    'a',
                                    's',
                                    'o',
                                    'n',
                                    'd'
                                ],
                                abbreviated: [
                                    'jan',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'máj',
                                    'jún',
                                    'júl',
                                    'aug',
                                    'sep',
                                    'okt',
                                    'nov',
                                    'dec'
                                ],
                                wide: [
                                    'január',
                                    'február',
                                    'marec',
                                    'apríl',
                                    'máj',
                                    'jún',
                                    'júl',
                                    'august',
                                    'september',
                                    'október',
                                    'november',
                                    'december'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'j',
                                    'f',
                                    'm',
                                    'a',
                                    'm',
                                    'j',
                                    'j',
                                    'a',
                                    's',
                                    'o',
                                    'n',
                                    'd'
                                ],
                                abbreviated: [
                                    'jan',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'máj',
                                    'jún',
                                    'júl',
                                    'aug',
                                    'sep',
                                    'okt',
                                    'nov',
                                    'dec'
                                ],
                                wide: [
                                    'januára',
                                    'februára',
                                    'marca',
                                    'apríla',
                                    'mája',
                                    'júna',
                                    'júla',
                                    'augusta',
                                    'septembra',
                                    'októbra',
                                    'novembra',
                                    'decembra'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'n',
                                    'p',
                                    'u',
                                    's',
                                    'š',
                                    'p',
                                    's'
                                ],
                                short: [
                                    'ne',
                                    'po',
                                    'ut',
                                    'st',
                                    'št',
                                    'pi',
                                    'so'
                                ],
                                abbreviated: [
                                    'ne',
                                    'po',
                                    'ut',
                                    'st',
                                    'št',
                                    'pi',
                                    'so'
                                ],
                                wide: [
                                    'nedeľa',
                                    'pondelok',
                                    'utorok',
                                    'streda',
                                    'štvrtok',
                                    'piatok',
                                    'sobota'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'poln.',
                                    noon: 'pol.',
                                    morning: 'ráno',
                                    afternoon: 'pop.',
                                    evening: 'več.',
                                    night: 'noc'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'poln.',
                                    noon: 'pol.',
                                    morning: 'ráno',
                                    afternoon: 'popol.',
                                    evening: 'večer',
                                    night: 'noc'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'polnoc',
                                    noon: 'poludnie',
                                    morning: 'ráno',
                                    afternoon: 'popoludnie',
                                    evening: 'večer',
                                    night: 'noc'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'o poln.',
                                    noon: 'nap.',
                                    morning: 'ráno',
                                    afternoon: 'pop.',
                                    evening: 'več.',
                                    night: 'v n.'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'o poln.',
                                    noon: 'napol.',
                                    morning: 'ráno',
                                    afternoon: 'popol.',
                                    evening: 'večer',
                                    night: 'v noci'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'o polnoci',
                                    noon: 'napoludnie',
                                    morning: 'ráno',
                                    afternoon: 'popoludní',
                                    evening: 'večer',
                                    night: 'v noci'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\.?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
                                abbreviated: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
                                wide: /^(pred Kristom|pred na[šs][íi]m letopo[čc]tom|po Kristovi|n[áa][šs]ho letopo[čc]tu)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^pr/i,
                                    /^(po|n)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234]\. [šs]tvr[ťt]rok/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|feb|mar|apr|m[áa]j|j[úu]n|j[úu]l|aug|sep|okt|nov|dec)/i,
                                wide: /^(janu[áa]ra?|febru[áa]ra?|(marec|marca)|apr[íi]la?|m[áa]ja?|j[úu]na?|j[úu]la?|augusta?|(september|septembra)|(okt[óo]ber|okt[óo]bra)|(november|novembra)|(december|decembra))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^m[áa]j/i,
                                    /^j[úu]n/i,
                                    /^j[úu]l/i,
                                    /^au/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[npusšp]/i,
                                short: /^(ne|po|ut|st|št|pi|so)/i,
                                abbreviated: /^(ne|po|ut|st|št|pi|so)/i,
                                wide: /^(nede[ľl]a|pondelok|utorok|streda|[šs]tvrtok|piatok|sobota])/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^n/i,
                                    /^p/i,
                                    /^u/i,
                                    /^s/i,
                                    /^š/i,
                                    /^p/i,
                                    /^s/i
                                ],
                                any: [
                                    /^n/i,
                                    /^po/i,
                                    /^u/i,
                                    /^st/i,
                                    /^(št|stv)/i,
                                    /^pi/i,
                                    /^so/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(am|pm|(o )?poln\.?|(nap\.?|pol\.?)|r[áa]no|pop\.?|ve[čc]\.?|(v n\.?|noc))/i,
                                abbreviated: /^(am|pm|(o )?poln\.?|(napol\.?|pol\.?)|r[áa]no|pop\.?|ve[čc]er|(v )?noci?)/i,
                                any: /^(am|pm|(o )?polnoci?|(na)?poludnie|r[áa]no|popoludn(ie|í|i)|ve[čc]er|(v )?noci?)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^am/i,
                                    pm: /^pm/i,
                                    midnight: /poln/i,
                                    noon: /^(nap|(na)?pol(\.|u))/i,
                                    morning: /^r[áa]no/i,
                                    afternoon: /^pop/i,
                                    evening: /^ve[čc]/i,
                                    night: /^(noc|v n\.)/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                ip = {
                    lessThanXSeconds: {
                        one: 'manj kot {{count}} sekunda',
                        two: 'manj kot {{count}} sekundi',
                        few: 'manj kot {{count}} sekunde',
                        other: 'manj kot {{count}} sekund'
                    },
                    xSeconds: {
                        one: '{{count}} sekunda',
                        two: '{{count}} sekundi',
                        few: '{{count}} sekunde',
                        other: '{{count}} sekund'
                    },
                    halfAMinute: 'pol minute',
                    lessThanXMinutes: {
                        one: 'manj kot {{count}} minuta',
                        two: 'manj kot {{count}} minuti',
                        few: 'manj kot {{count}} minute',
                        other: 'manj kot {{count}} minut'
                    },
                    xMinutes: {
                        one: '{{count}} minuta',
                        two: '{{count}} minuti',
                        few: '{{count}} minute',
                        other: '{{count}} minut'
                    },
                    aboutXHours: {
                        one: 'približno {{count}} ura',
                        two: 'približno {{count}} uri',
                        few: 'približno {{count}} ure',
                        other: 'približno {{count}} ur'
                    },
                    xHours: {
                        one: '{{count}} ura',
                        two: '{{count}} uri',
                        few: '{{count}} ure',
                        other: '{{count}} ur'
                    },
                    xDays: {
                        one: '{{count}} dan',
                        two: '{{count}} dni',
                        few: '{{count}} dni',
                        other: '{{count}} dni'
                    },
                    aboutXWeeks: {
                        one: 'približno {{count}} teden',
                        two: 'približno {{count}} tedna',
                        few: 'približno {{count}} tedne',
                        other: 'približno {{count}} tednov'
                    },
                    xWeeks: {
                        one: '{{count}} teden',
                        two: '{{count}} tedna',
                        few: '{{count}} tedne',
                        other: '{{count}} tednov'
                    },
                    aboutXMonths: {
                        one: 'približno {{count}} mesec',
                        two: 'približno {{count}} meseca',
                        few: 'približno {{count}} mesece',
                        other: 'približno {{count}} mesecev'
                    },
                    xMonths: {
                        one: '{{count}} mesec',
                        two: '{{count}} meseca',
                        few: '{{count}} meseci',
                        other: '{{count}} mesecev'
                    },
                    aboutXYears: {
                        one: 'približno {{count}} leto',
                        two: 'približno {{count}} leti',
                        few: 'približno {{count}} leta',
                        other: 'približno {{count}} let'
                    },
                    xYears: {
                        one: '{{count}} leto',
                        two: '{{count}} leti',
                        few: '{{count}} leta',
                        other: '{{count}} let'
                    },
                    overXYears: {
                        one: 'več kot {{count}} leto',
                        two: 'več kot {{count}} leti',
                        few: 'več kot {{count}} leta',
                        other: 'več kot {{count}} let'
                    },
                    almostXYears: {
                        one: 'skoraj {{count}} leto',
                        two: 'skoraj {{count}} leti',
                        few: 'skoraj {{count}} leta',
                        other: 'skoraj {{count}} let'
                    }
                },
                op = {
                    lessThanXSeconds: {
                        one: 'manj kot {{count}} sekundo',
                        two: 'manj kot {{count}} sekundama',
                        few: 'manj kot {{count}} sekundami',
                        other: 'manj kot {{count}} sekundami'
                    },
                    xSeconds: {
                        one: '{{count}} sekundo',
                        two: '{{count}} sekundama',
                        few: '{{count}} sekundami',
                        other: '{{count}} sekundami'
                    },
                    halfAMinute: 'pol minute',
                    lessThanXMinutes: {
                        one: 'manj kot {{count}} minuto',
                        two: 'manj kot {{count}} minutama',
                        few: 'manj kot {{count}} minutami',
                        other: 'manj kot {{count}} minutami'
                    },
                    xMinutes: {
                        one: '{{count}} minuto',
                        two: '{{count}} minutama',
                        few: '{{count}} minutami',
                        other: '{{count}} minutami'
                    },
                    aboutXHours: {
                        one: 'približno {{count}} uro',
                        two: 'približno {{count}} urama',
                        few: 'približno {{count}} urami',
                        other: 'približno {{count}} urami'
                    },
                    xHours: {
                        one: '{{count}} uro',
                        two: '{{count}} urama',
                        few: '{{count}} urami',
                        other: '{{count}} urami'
                    },
                    xDays: {
                        one: '{{count}} dnem',
                        two: '{{count}} dnevoma',
                        few: '{{count}} dnevi',
                        other: '{{count}} dnevi'
                    },
                    aboutXMonths: {
                        one: 'približno {{count}} mesecem',
                        two: 'približno {{count}} mesecema',
                        few: 'približno {{count}} meseci',
                        other: 'približno {{count}} meseci'
                    },
                    xMonths: {
                        one: '{{count}} mesecem',
                        two: '{{count}} mesecema',
                        few: '{{count}} meseci',
                        other: '{{count}} meseci'
                    },
                    aboutXYears: {
                        one: 'približno {{count}} letom',
                        two: 'približno {{count}} letoma',
                        few: 'približno {{count}} leti',
                        other: 'približno {{count}} leti'
                    },
                    xYears: {
                        one: '{{count}} letom',
                        two: '{{count}} letoma',
                        few: '{{count}} leti',
                        other: '{{count}} leti'
                    },
                    overXYears: {
                        one: 'več kot {{count}} letom',
                        two: 'več kot {{count}} letoma',
                        few: 'več kot {{count}} leti',
                        other: 'več kot {{count}} leti'
                    },
                    almostXYears: {
                        one: 'skoraj {{count}} letom',
                        two: 'skoraj {{count}} letoma',
                        few: 'skoraj {{count}} leti',
                        other: 'skoraj {{count}} leti'
                    }
                },
                sp = {
                    lessThanXSeconds: {
                        one: 'manj kot {{count}} sekundo',
                        two: 'manj kot {{count}} sekundi',
                        few: 'manj kot {{count}} sekunde',
                        other: 'manj kot {{count}} sekund'
                    },
                    xSeconds: {
                        one: '{{count}} sekundo',
                        two: '{{count}} sekundi',
                        few: '{{count}} sekunde',
                        other: '{{count}} sekund'
                    },
                    halfAMinute: 'pol minute',
                    lessThanXMinutes: {
                        one: 'manj kot {{count}} minuto',
                        two: 'manj kot {{count}} minuti',
                        few: 'manj kot {{count}} minute',
                        other: 'manj kot {{count}} minut'
                    },
                    xMinutes: {
                        one: '{{count}} minuto',
                        two: '{{count}} minuti',
                        few: '{{count}} minute',
                        other: '{{count}} minut'
                    },
                    aboutXHours: {
                        one: 'približno {{count}} uro',
                        two: 'približno {{count}} uri',
                        few: 'približno {{count}} ure',
                        other: 'približno {{count}} ur'
                    },
                    xHours: {
                        one: '{{count}} uro',
                        two: '{{count}} uri',
                        few: '{{count}} ure',
                        other: '{{count}} ur'
                    },
                    xDays: {
                        one: '{{count}} dan',
                        two: '{{count}} dni',
                        few: '{{count}} dni',
                        other: '{{count}} dni'
                    },
                    aboutXMonths: {
                        one: 'približno {{count}} mesec',
                        two: 'približno {{count}} meseca',
                        few: 'približno {{count}} mesece',
                        other: 'približno {{count}} mesecev'
                    },
                    xMonths: {
                        one: '{{count}} mesec',
                        two: '{{count}} meseca',
                        few: '{{count}} mesece',
                        other: '{{count}} mesecev'
                    },
                    aboutXYears: {
                        one: 'približno {{count}} leto',
                        two: 'približno {{count}} leti',
                        few: 'približno {{count}} leta',
                        other: 'približno {{count}} let'
                    },
                    xYears: {
                        one: '{{count}} leto',
                        two: '{{count}} leti',
                        few: '{{count}} leta',
                        other: '{{count}} let'
                    },
                    overXYears: {
                        one: 'več kot {{count}} leto',
                        two: 'več kot {{count}} leti',
                        few: 'več kot {{count}} leta',
                        other: 'več kot {{count}} let'
                    },
                    almostXYears: {
                        one: 'skoraj {{count}} leto',
                        two: 'skoraj {{count}} leti',
                        few: 'skoraj {{count}} leta',
                        other: 'skoraj {{count}} let'
                    }
                },
                up = {
                    date: at({
                        formats: {
                            full: 'EEEE, dd. MMMM y',
                            long: 'dd. MMMM y',
                            medium: 'd. MMM y',
                            short: 'd. MM. yy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                lp = {
                    lastWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'prejšnjo nedeljo ob\' p';
                            case 3:
                                return '\'prejšnjo sredo ob\' p';
                            case 6:
                                return '\'prejšnjo soboto ob\' p';
                            default:
                                return '\'prejšnji\' EEEE \'ob\' p'
                        }
                    },
                    yesterday: '\'včeraj ob\' p',
                    today: '\'danes ob\' p',
                    tomorrow: '\'jutri ob\' p',
                    nextWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'naslednjo nedeljo ob\' p';
                            case 3:
                                return '\'naslednjo sredo ob\' p';
                            case 6:
                                return '\'naslednjo soboto ob\' p';
                            default:
                                return '\'naslednji\' EEEE \'ob\' p'
                        }
                    },
                    other: 'P'
                },
                dp = {
                    code: 'sl',
                    formatDistance: function (e, t, n) {
                        var r = ip,
                            a = '';
                        if ((n = n || {
                        }).addSuffix && (n.comparison > 0 ? (r = sp, a += 'čez ') : (r = op, a += 'pred ')), 'string' == typeof r[e]) a += r[e];
                        else {
                            var i = function (e) {
                                switch (e % 100) {
                                    case 1:
                                        return 'one';
                                    case 2:
                                        return 'two';
                                    case 3:
                                    case 4:
                                        return 'few';
                                    default:
                                        return 'other'
                                }
                            }(t);
                            a += r[e][i].replace('{{count}}', t)
                        }
                        return a
                    },
                    formatLong: up,
                    formatRelative: function (e, t, n, r) {
                        var a = lp[e];
                        return 'function' == typeof a ? a(t) : a
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e);
                            return String(t).concat('.')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'pr. n. št.',
                                    'po n. št.'
                                ],
                                abbreviated: [
                                    'pr. n. št.',
                                    'po n. št.'
                                ],
                                wide: [
                                    'pred našim štetjem',
                                    'po našem štetju'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1. čet.',
                                    '2. čet.',
                                    '3. čet.',
                                    '4. čet.'
                                ],
                                wide: [
                                    '1. četrtletje',
                                    '2. četrtletje',
                                    '3. četrtletje',
                                    '4. četrtletje'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'j',
                                    'f',
                                    'm',
                                    'a',
                                    'm',
                                    'j',
                                    'j',
                                    'a',
                                    's',
                                    'o',
                                    'n',
                                    'd'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mar.',
                                    'apr.',
                                    'maj',
                                    'jun.',
                                    'jul.',
                                    'avg.',
                                    'sep.',
                                    'okt.',
                                    'nov.',
                                    'dec.'
                                ],
                                wide: [
                                    'januar',
                                    'februar',
                                    'marec',
                                    'april',
                                    'maj',
                                    'junij',
                                    'julij',
                                    'avgust',
                                    'september',
                                    'oktober',
                                    'november',
                                    'december'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'n',
                                    'p',
                                    't',
                                    's',
                                    'č',
                                    'p',
                                    's'
                                ],
                                short: [
                                    'ned.',
                                    'pon.',
                                    'tor.',
                                    'sre.',
                                    'čet.',
                                    'pet.',
                                    'sob.'
                                ],
                                abbreviated: [
                                    'ned.',
                                    'pon.',
                                    'tor.',
                                    'sre.',
                                    'čet.',
                                    'pet.',
                                    'sob.'
                                ],
                                wide: [
                                    'nedelja',
                                    'ponedeljek',
                                    'torek',
                                    'sreda',
                                    'četrtek',
                                    'petek',
                                    'sobota'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'd',
                                    pm: 'p',
                                    midnight: '24.00',
                                    noon: '12.00',
                                    morning: 'j',
                                    afternoon: 'p',
                                    evening: 'v',
                                    night: 'n'
                                },
                                abbreviated: {
                                    am: 'dop.',
                                    pm: 'pop.',
                                    midnight: 'poln.',
                                    noon: 'pold.',
                                    morning: 'jut.',
                                    afternoon: 'pop.',
                                    evening: 'več.',
                                    night: 'noč'
                                },
                                wide: {
                                    am: 'dop.',
                                    pm: 'pop.',
                                    midnight: 'polnoč',
                                    noon: 'poldne',
                                    morning: 'jutro',
                                    afternoon: 'popoldne',
                                    evening: 'večer',
                                    night: 'noč'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'd',
                                    pm: 'p',
                                    midnight: '24.00',
                                    noon: '12.00',
                                    morning: 'zj',
                                    afternoon: 'p',
                                    evening: 'zv',
                                    night: 'po'
                                },
                                abbreviated: {
                                    am: 'dop.',
                                    pm: 'pop.',
                                    midnight: 'opoln.',
                                    noon: 'opold.',
                                    morning: 'zjut.',
                                    afternoon: 'pop.',
                                    evening: 'zveč.',
                                    night: 'ponoči'
                                },
                                wide: {
                                    am: 'dop.',
                                    pm: 'pop.',
                                    midnight: 'opolnoči',
                                    noon: 'opoldne',
                                    morning: 'zjutraj',
                                    afternoon: 'popoldan',
                                    evening: 'zvečer',
                                    night: 'ponoči'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\./i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                abbreviated: /^(pr\. n\. št\.|po n\. št\.)/i,
                                wide: /^(pred Kristusom|pred na[sš]im [sš]tetjem|po Kristusu|po na[sš]em [sš]tetju|na[sš]ega [sš]tetja)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^pr/i,
                                    /^(po|na[sš]em)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]\.\s?[čc]et\.?/i,
                                wide: /^[1234]\. [čc]etrtletje/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan\.|feb\.|mar\.|apr\.|maj|jun\.|jul\.|avg\.|sep\.|okt\.|nov\.|dec\.)/i,
                                wide: /^(januar|februar|marec|april|maj|junij|julij|avgust|september|oktober|november|december)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                abbreviated: [
                                    /^ja/i,
                                    /^fe/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^maj/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^av/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                wide: [
                                    /^ja/i,
                                    /^fe/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^maj/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^av/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'wide'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[nptsčc]/i,
                                short: /^(ned\.|pon\.|tor\.|sre\.|[cč]et\.|pet\.|sob\.)/i,
                                abbreviated: /^(ned\.|pon\.|tor\.|sre\.|[cč]et\.|pet\.|sob\.)/i,
                                wide: /^(nedelja|ponedeljek|torek|sreda|[cč]etrtek|petek|sobota)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^n/i,
                                    /^p/i,
                                    /^t/i,
                                    /^s/i,
                                    /^[cč]/i,
                                    /^p/i,
                                    /^s/i
                                ],
                                any: [
                                    /^n/i,
                                    /^po/i,
                                    /^t/i,
                                    /^sr/i,
                                    /^[cč]/i,
                                    /^pe/i,
                                    /^so/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(d|po?|z?v|n|z?j|24\.00|12\.00)/i,
                                any: /^(dop\.|pop\.|o?poln(\.|o[cč]i?)|o?pold(\.|ne)|z?ve[cč](\.|er)|(po)?no[cč]i?|popold(ne|an)|jut(\.|ro)|zjut(\.|raj))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                narrow: {
                                    am: /^d/i,
                                    pm: /^p/i,
                                    midnight: /^24/i,
                                    noon: /^12/i,
                                    morning: /^(z?j)/i,
                                    afternoon: /^p/i,
                                    evening: /^(z?v)/i,
                                    night: /^(n|po)/i
                                },
                                any: {
                                    am: /^dop\./i,
                                    pm: /^pop\./i,
                                    midnight: /^o?poln/i,
                                    noon: /^o?pold/i,
                                    morning: /j/i,
                                    afternoon: /^pop\./i,
                                    evening: /^z?ve/i,
                                    night: /(po)?no/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                cp = dp,
                mp = {
                    lessThanXSeconds: {
                        one: 'më pak se një sekondë',
                        other: 'më pak se {{count}} sekonda'
                    },
                    xSeconds: {
                        one: '1 sekondë',
                        other: '{{count}} sekonda'
                    },
                    halfAMinute: 'gjysëm minuti',
                    lessThanXMinutes: {
                        one: 'më pak se një minute',
                        other: 'më pak se {{count}} minuta'
                    },
                    xMinutes: {
                        one: '1 minutë',
                        other: '{{count}} minuta'
                    },
                    aboutXHours: {
                        one: 'rreth 1 orë',
                        other: 'rreth {{count}} orë'
                    },
                    xHours: {
                        one: '1 orë',
                        other: '{{count}} orë'
                    },
                    xDays: {
                        one: '1 ditë',
                        other: '{{count}} ditë'
                    },
                    aboutXWeeks: {
                        one: 'rreth 1 javë',
                        other: 'rreth {{count}} javë'
                    },
                    xWeeks: {
                        one: '1 javë',
                        other: '{{count}} javë'
                    },
                    aboutXMonths: {
                        one: 'rreth 1 muaj',
                        other: 'rreth {{count}} muaj'
                    },
                    xMonths: {
                        one: '1 muaj',
                        other: '{{count}} muaj'
                    },
                    aboutXYears: {
                        one: 'rreth 1 vit',
                        other: 'rreth {{count}} vite'
                    },
                    xYears: {
                        one: '1 vit',
                        other: '{{count}} vite'
                    },
                    overXYears: {
                        one: 'mbi 1 vit',
                        other: 'mbi {{count}} vite'
                    },
                    almostXYears: {
                        one: 'pothuajse 1 vit',
                        other: 'pothuajse {{count}} vite'
                    }
                },
                fp = {
                    date: at({
                        formats: {
                            full: 'EEEE, MMMM do, y',
                            long: 'MMMM do, y',
                            medium: 'MMM d, y',
                            short: 'MM/dd/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'në\' {{time}}',
                            long: '{{date}} \'në\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                hp = {
                    lastWeek: '\'të\' eeee \'e shkuar në\' p',
                    yesterday: '\'dje në\' p',
                    today: '\'sot në\' p',
                    tomorrow: '\'nesër në\' p',
                    nextWeek: 'eeee \'at\' p',
                    other: 'P'
                },
                pp = {
                    code: 'sq',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof mp[e] ? mp[e] : 1 === t ? mp[e].one : mp[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'në ' + r : r + ' më parë' : r
                    },
                    formatLong: fp,
                    formatRelative: function (e, t, n, r) {
                        return hp[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            return 'hour' === String((t || {
                            }).unit) ? n : 1 === n ? n + '-rë' : 4 === n ? n + 't' : n + '-të'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'P',
                                    'M'
                                ],
                                abbreviated: [
                                    'PK',
                                    'MK'
                                ],
                                wide: [
                                    'Para Krishtit',
                                    'Mbas Krishtit'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '4-mujori I',
                                    '4-mujori II',
                                    '4-mujori III',
                                    '4-mujori IV'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'S',
                                    'M',
                                    'P',
                                    'M',
                                    'Q',
                                    'K',
                                    'G',
                                    'S',
                                    'T',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'Jan',
                                    'Shk',
                                    'Mar',
                                    'Pri',
                                    'Maj',
                                    'Qer',
                                    'Kor',
                                    'Gus',
                                    'Sht',
                                    'Tet',
                                    'Nën',
                                    'Dhj'
                                ],
                                wide: [
                                    'Janar',
                                    'Shkurt',
                                    'Mars',
                                    'Prill',
                                    'Maj',
                                    'Qershor',
                                    'Korrik',
                                    'Gusht',
                                    'Shtator',
                                    'Tetor',
                                    'Nëntor',
                                    'Dhjetor'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'D',
                                    'H',
                                    'M',
                                    'M',
                                    'E',
                                    'P',
                                    'S'
                                ],
                                short: [
                                    'Di',
                                    'Hë',
                                    'Ma',
                                    'Më',
                                    'En',
                                    'Pr',
                                    'Sh'
                                ],
                                abbreviated: [
                                    'Die',
                                    'Hën',
                                    'Mar',
                                    'Mër',
                                    'Enj',
                                    'Pre',
                                    'Sht'
                                ],
                                wide: [
                                    'Dielë',
                                    'Hënë',
                                    'Martë',
                                    'Mërkurë',
                                    'Enjte',
                                    'Premte',
                                    'Shtunë'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'p',
                                    pm: 'm',
                                    midnight: 'm',
                                    noon: 'd',
                                    morning: 'mëngjes',
                                    afternoon: 'dite',
                                    evening: 'mbrëmje',
                                    night: 'natë'
                                },
                                abbreviated: {
                                    am: 'PD',
                                    pm: 'MD',
                                    midnight: 'mesnëtë',
                                    noon: 'drek',
                                    morning: 'mëngjes',
                                    afternoon: 'mbasdite',
                                    evening: 'mbrëmje',
                                    night: 'natë'
                                },
                                wide: {
                                    am: 'p.d.',
                                    pm: 'm.d.',
                                    midnight: 'mesnëtë',
                                    noon: 'drek',
                                    morning: 'mëngjes',
                                    afternoon: 'mbasdite',
                                    evening: 'mbrëmje',
                                    night: 'natë'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'p',
                                    pm: 'm',
                                    midnight: 'm',
                                    noon: 'd',
                                    morning: 'në mëngjes',
                                    afternoon: 'në mbasdite',
                                    evening: 'në mbrëmje',
                                    night: 'në mesnatë'
                                },
                                abbreviated: {
                                    am: 'PD',
                                    pm: 'MD',
                                    midnight: 'mesnatë',
                                    noon: 'drek',
                                    morning: 'në mëngjes',
                                    afternoon: 'në mbasdite',
                                    evening: 'në mbrëmje',
                                    night: 'në mesnatë'
                                },
                                wide: {
                                    am: 'p.d.',
                                    pm: 'm.d.',
                                    midnight: 'mesnatë',
                                    noon: 'drek',
                                    morning: 'në mëngjes',
                                    afternoon: 'në mbasdite',
                                    evening: 'në mbrëmje',
                                    night: 'në mesnatë'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-rë|-të|t|)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(p|m)/i,
                                abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                                wide: /^(para krishtit|mbas krishtit)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^b/i,
                                    /^(p|m)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234]-mujori (i{1,3}|iv)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jsmpqkftnd]/i,
                                abbreviated: /^(jan|shk|mar|pri|maj|qer|kor|gus|sht|tet|nën|dhj)/i,
                                wide: /^(janar|shkurt|mars|prill|maj|qershor|korrik|gusht|shtator|tetor|nëntor|dhjetor)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^s/i,
                                    /^m/i,
                                    /^p/i,
                                    /^m/i,
                                    /^q/i,
                                    /^k/i,
                                    /^g/i,
                                    /^s/i,
                                    /^t/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^shk/i,
                                    /^mar/i,
                                    /^pri/i,
                                    /^maj/i,
                                    /^qer/i,
                                    /^kor/i,
                                    /^gu/i,
                                    /^sht/i,
                                    /^tet/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[dhmeps]/i,
                                short: /^(di|hë|ma|më|en|pr|sh)/i,
                                abbreviated: /^(die|hën|mar|mër|enj|pre|sht)/i,
                                wide: /^(dielë|hënë|martë|mërkurë|enjte|premte|shtunë)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^d/i,
                                    /^h/i,
                                    /^m/i,
                                    /^m/i,
                                    /^e/i,
                                    /^p/i,
                                    /^s/i
                                ],
                                any: [
                                    /^d/i,
                                    /^h/i,
                                    /^ma/i,
                                    /^më/i,
                                    /^e/i,
                                    /^p/i,
                                    /^s/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(p|m|me|në (mëngjes|mbasdite|mbrëmje|mesnatë))/i,
                                any: /^([pm]\.?\s?d\.?|drek|në (mëngjes|mbasdite|mbrëmje|mesnatë))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^p/i,
                                    pm: /^m/i,
                                    midnight: /^me/i,
                                    noon: /^dr/i,
                                    morning: /mëngjes/i,
                                    afternoon: /mbasdite/i,
                                    evening: /mbrëmje/i,
                                    night: /natë/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                gp = {
                    lessThanXSeconds: {
                        one: {
                            standalone: 'мање од 1 секунде',
                            withPrepositionAgo: 'мање од 1 секунде',
                            withPrepositionIn: 'мање од 1 секунду'
                        },
                        dual: 'мање од {{count}} секунде',
                        other: 'мање од {{count}} секунди'
                    },
                    xSeconds: {
                        one: {
                            standalone: '1 секунда',
                            withPrepositionAgo: '1 секунде',
                            withPrepositionIn: '1 секунду'
                        },
                        dual: '{{count}} секунде',
                        other: '{{count}} секунди'
                    },
                    halfAMinute: 'пола минуте',
                    lessThanXMinutes: {
                        one: {
                            standalone: 'мање од 1 минуте',
                            withPrepositionAgo: 'мање од 1 минуте',
                            withPrepositionIn: 'мање од 1 минуту'
                        },
                        dual: 'мање од {{count}} минуте',
                        other: 'мање од {{count}} минута'
                    },
                    xMinutes: {
                        one: {
                            standalone: '1 минута',
                            withPrepositionAgo: '1 минуте',
                            withPrepositionIn: '1 минуту'
                        },
                        dual: '{{count}} минуте',
                        other: '{{count}} минута'
                    },
                    aboutXHours: {
                        one: {
                            standalone: 'око 1 сат',
                            withPrepositionAgo: 'око 1 сат',
                            withPrepositionIn: 'око 1 сат'
                        },
                        dual: 'око {{count}} сата',
                        other: 'око {{count}} сати'
                    },
                    xHours: {
                        one: {
                            standalone: '1 сат',
                            withPrepositionAgo: '1 сат',
                            withPrepositionIn: '1 сат'
                        },
                        dual: '{{count}} сата',
                        other: '{{count}} сати'
                    },
                    xDays: {
                        one: {
                            standalone: '1 дан',
                            withPrepositionAgo: '1 дан',
                            withPrepositionIn: '1 дан'
                        },
                        dual: '{{count}} дана',
                        other: '{{count}} дана'
                    },
                    aboutXWeeks: {
                        one: {
                            standalone: 'око 1 недељу',
                            withPrepositionAgo: 'око 1 недељу',
                            withPrepositionIn: 'око 1 недељу'
                        },
                        dual: 'око {{count}} недеље',
                        other: 'око {{count}} недеље'
                    },
                    xWeeks: {
                        one: {
                            standalone: '1 недељу',
                            withPrepositionAgo: '1 недељу',
                            withPrepositionIn: '1 недељу'
                        },
                        dual: '{{count}} недеље',
                        other: '{{count}} недеље'
                    },
                    aboutXMonths: {
                        one: {
                            standalone: 'око 1 месец',
                            withPrepositionAgo: 'око 1 месец',
                            withPrepositionIn: 'око 1 месец'
                        },
                        dual: 'око {{count}} месеца',
                        other: 'око {{count}} месеци'
                    },
                    xMonths: {
                        one: {
                            standalone: '1 месец',
                            withPrepositionAgo: '1 месец',
                            withPrepositionIn: '1 месец'
                        },
                        dual: '{{count}} месеца',
                        other: '{{count}} месеци'
                    },
                    aboutXYears: {
                        one: {
                            standalone: 'око 1 годину',
                            withPrepositionAgo: 'око 1 годину',
                            withPrepositionIn: 'око 1 годину'
                        },
                        dual: 'око {{count}} године',
                        other: 'око {{count}} година'
                    },
                    xYears: {
                        one: {
                            standalone: '1 година',
                            withPrepositionAgo: '1 године',
                            withPrepositionIn: '1 годину'
                        },
                        dual: '{{count}} године',
                        other: '{{count}} година'
                    },
                    overXYears: {
                        one: {
                            standalone: 'преко 1 годину',
                            withPrepositionAgo: 'преко 1 годину',
                            withPrepositionIn: 'преко 1 годину'
                        },
                        dual: 'преко {{count}} године',
                        other: 'преко {{count}} година'
                    },
                    almostXYears: {
                        one: {
                            standalone: 'готово 1 годину',
                            withPrepositionAgo: 'готово 1 годину',
                            withPrepositionIn: 'готово 1 годину'
                        },
                        dual: 'готово {{count}} године',
                        other: 'готово {{count}} година'
                    }
                },
                vp = {
                    date: at({
                        formats: {
                            full: 'EEEE, d. MMMM yyyy.',
                            long: 'd. MMMM yyyy.',
                            medium: 'd. MMM yy.',
                            short: 'dd. MM. yy.'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss (zzzz)',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'у\' {{time}}',
                            long: '{{date}} \'у\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                yp = {
                    lastWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'прошле недеље у\' p';
                            case 3:
                                return '\'прошле среде у\' p';
                            case 6:
                                return '\'прошле суботе у\' p';
                            default:
                                return '\'прошли\' EEEE \'у\' p'
                        }
                    },
                    yesterday: '\'јуче у\' p',
                    today: '\'данас у\' p',
                    tomorrow: '\'сутра у\' p',
                    nextWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'следеће недеље у\' p';
                            case 3:
                                return '\'следећу среду у\' p';
                            case 6:
                                return '\'следећу суботу у\' p';
                            default:
                                return '\'следећи\' EEEE \'у\' p'
                        }
                    },
                    other: 'P'
                },
                wp = {
                    code: 'sr',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof gp[e] ? gp[e] : 1 === t ? n.addSuffix ? n.comparison > 0 ? gp[e].one.withPrepositionIn : gp[e].one.withPrepositionAgo : gp[e].one.standalone : t % 10 > 1 && t % 10 < 5 && '1' !== String(t).substr(- 2, 1) ? gp[e].dual.replace('{{count}}', t) : gp[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'за ' + r : 'пре ' + r : r
                    },
                    formatLong: vp,
                    formatRelative: function (e, t, n, r) {
                        var a = yp[e];
                        return 'function' == typeof a ? a(t) : a
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e);
                            return String(t).concat('.')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'пр.н.е.',
                                    'АД'
                                ],
                                abbreviated: [
                                    'пр. Хр.',
                                    'по. Хр.'
                                ],
                                wide: [
                                    'Пре Христа',
                                    'После Христа'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.'
                                ],
                                abbreviated: [
                                    '1. кв.',
                                    '2. кв.',
                                    '3. кв.',
                                    '4. кв.'
                                ],
                                wide: [
                                    '1. квартал',
                                    '2. квартал',
                                    '3. квартал',
                                    '4. квартал'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.',
                                    '5.',
                                    '6.',
                                    '7.',
                                    '8.',
                                    '9.',
                                    '10.',
                                    '11.',
                                    '12.'
                                ],
                                abbreviated: [
                                    'јан',
                                    'феб',
                                    'мар',
                                    'апр',
                                    'мај',
                                    'јун',
                                    'јул',
                                    'авг',
                                    'сеп',
                                    'окт',
                                    'нов',
                                    'дец'
                                ],
                                wide: [
                                    'јануар',
                                    'фебруар',
                                    'март',
                                    'април',
                                    'мај',
                                    'јун',
                                    'јул',
                                    'август',
                                    'септембар',
                                    'октобар',
                                    'новембар',
                                    'децембар'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.',
                                    '5.',
                                    '6.',
                                    '7.',
                                    '8.',
                                    '9.',
                                    '10.',
                                    '11.',
                                    '12.'
                                ],
                                abbreviated: [
                                    'јан',
                                    'феб',
                                    'мар',
                                    'апр',
                                    'мај',
                                    'јун',
                                    'јул',
                                    'авг',
                                    'сеп',
                                    'окт',
                                    'нов',
                                    'дец'
                                ],
                                wide: [
                                    'јануар',
                                    'фебруар',
                                    'март',
                                    'април',
                                    'мај',
                                    'јун',
                                    'јул',
                                    'август',
                                    'септембар',
                                    'октобар',
                                    'новембар',
                                    'децембар'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Н',
                                    'П',
                                    'У',
                                    'С',
                                    'Ч',
                                    'П',
                                    'С'
                                ],
                                short: [
                                    'нед',
                                    'пон',
                                    'уто',
                                    'сре',
                                    'чет',
                                    'пет',
                                    'суб'
                                ],
                                abbreviated: [
                                    'нед',
                                    'пон',
                                    'уто',
                                    'сре',
                                    'чет',
                                    'пет',
                                    'суб'
                                ],
                                wide: [
                                    'недеља',
                                    'понедељак',
                                    'уторак',
                                    'среда',
                                    'четвртак',
                                    'петак',
                                    'субота'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'поноћ',
                                    noon: 'подне',
                                    morning: 'ујутру',
                                    afternoon: 'поподне',
                                    evening: 'увече',
                                    night: 'ноћу'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'поноћ',
                                    noon: 'подне',
                                    morning: 'ујутру',
                                    afternoon: 'поподне',
                                    evening: 'увече',
                                    night: 'ноћу'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'поноћ',
                                    noon: 'подне',
                                    morning: 'ујутру',
                                    afternoon: 'после подне',
                                    evening: 'увече',
                                    night: 'ноћу'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'АМ',
                                    pm: 'ПМ',
                                    midnight: 'поноћ',
                                    noon: 'подне',
                                    morning: 'ујутру',
                                    afternoon: 'поподне',
                                    evening: 'увече',
                                    night: 'ноћу'
                                },
                                abbreviated: {
                                    am: 'АМ',
                                    pm: 'ПМ',
                                    midnight: 'поноћ',
                                    noon: 'подне',
                                    morning: 'ујутру',
                                    afternoon: 'поподне',
                                    evening: 'увече',
                                    night: 'ноћу'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'поноћ',
                                    noon: 'подне',
                                    morning: 'ујутру',
                                    afternoon: 'после подне',
                                    evening: 'увече',
                                    night: 'ноћу'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\./i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(пр\.н\.е\.|АД)/i,
                                abbreviated: /^(пр\.\s?Хр\.|по\.\s?Хр\.)/i,
                                wide: /^(Пре Христа|пре нове ере|После Христа|нова ера)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^пр/i,
                                    /^(по|нова)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]\.\s?кв\.?/i,
                                wide: /^[1234]\. квартал/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(10|11|12|[123456789])\./i,
                                abbreviated: /^(јан|феб|мар|апр|мај|јун|јул|авг|сеп|окт|нов|дец)/i,
                                wide: /^((јануар|јануара)|(фебруар|фебруара)|(март|марта)|(април|априла)|(мја|маја)|(јун|јуна)|(јул|јула)|(август|августа)|(септембар|септембра)|(октобар|октобра)|(новембар|новембра)|(децембар|децембра))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /(10|11|12|[123456789])/i
                                ],
                                any: [
                                    /^ја/i,
                                    /^ф/i,
                                    /^мар/i,
                                    /^ап/i,
                                    /^мај/i,
                                    /^јун/i,
                                    /^јул/i,
                                    /^авг/i,
                                    /^с/i,
                                    /^о/i,
                                    /^н/i,
                                    /^д/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[пусчн]/i,
                                short: /^(нед|пон|уто|сре|чет|пет|суб)/i,
                                abbreviated: /^(нед|пон|уто|сре|чет|пет|суб)/i,
                                wide: /^(недеља|понедељак|уторак|среда|четвртак|петак|субота)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^п/i,
                                    /^у/i,
                                    /^с/i,
                                    /^ч/i,
                                    /^н/i
                                ],
                                any: [
                                    /^нед/i,
                                    /^пон/i,
                                    /^уто/i,
                                    /^сре/i,
                                    /^чет/i,
                                    /^пет/i,
                                    /^суб/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(ам|пм|поноћ|(по)?подне|увече|ноћу|после подне|ујутру)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^поно/i,
                                    noon: /^под/i,
                                    morning: /ујутру/i,
                                    afternoon: /(после\s|по)+подне/i,
                                    evening: /(увече)/i,
                                    night: /(ноћу)/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                bp = wp,
                kp = {
                    lessThanXSeconds: {
                        one: {
                            standalone: 'manje od 1 sekunde',
                            withPrepositionAgo: 'manje od 1 sekunde',
                            withPrepositionIn: 'manje od 1 sekundu'
                        },
                        dual: 'manje od {{count}} sekunde',
                        other: 'manje od {{count}} sekundi'
                    },
                    xSeconds: {
                        one: {
                            standalone: '1 sekunda',
                            withPrepositionAgo: '1 sekunde',
                            withPrepositionIn: '1 sekundu'
                        },
                        dual: '{{count}} sekunde',
                        other: '{{count}} sekundi'
                    },
                    halfAMinute: 'pola minute',
                    lessThanXMinutes: {
                        one: {
                            standalone: 'manje od 1 minute',
                            withPrepositionAgo: 'manje od 1 minute',
                            withPrepositionIn: 'manje od 1 minutu'
                        },
                        dual: 'manje od {{count}} minute',
                        other: 'manje od {{count}} minuta'
                    },
                    xMinutes: {
                        one: {
                            standalone: '1 minuta',
                            withPrepositionAgo: '1 minute',
                            withPrepositionIn: '1 minutu'
                        },
                        dual: '{{count}} minute',
                        other: '{{count}} minuta'
                    },
                    aboutXHours: {
                        one: {
                            standalone: 'oko 1 sat',
                            withPrepositionAgo: 'oko 1 sat',
                            withPrepositionIn: 'oko 1 sat'
                        },
                        dual: 'oko {{count}} sata',
                        other: 'oko {{count}} sati'
                    },
                    xHours: {
                        one: {
                            standalone: '1 sat',
                            withPrepositionAgo: '1 sat',
                            withPrepositionIn: '1 sat'
                        },
                        dual: '{{count}} sata',
                        other: '{{count}} sati'
                    },
                    xDays: {
                        one: {
                            standalone: '1 dan',
                            withPrepositionAgo: '1 dan',
                            withPrepositionIn: '1 dan'
                        },
                        dual: '{{count}} dana',
                        other: '{{count}} dana'
                    },
                    aboutXWeeks: {
                        one: {
                            standalone: 'oko 1 nedelju',
                            withPrepositionAgo: 'oko 1 nedelju',
                            withPrepositionIn: 'oko 1 nedelju'
                        },
                        dual: 'oko {{count}} nedelje',
                        other: 'oko {{count}} nedelje'
                    },
                    xWeeks: {
                        one: {
                            standalone: '1 nedelju',
                            withPrepositionAgo: '1 nedelju',
                            withPrepositionIn: '1 nedelju'
                        },
                        dual: '{{count}} nedelje',
                        other: '{{count}} nedelje'
                    },
                    aboutXMonths: {
                        one: {
                            standalone: 'oko 1 mesec',
                            withPrepositionAgo: 'oko 1 mesec',
                            withPrepositionIn: 'oko 1 mesec'
                        },
                        dual: 'oko {{count}} meseca',
                        other: 'oko {{count}} meseci'
                    },
                    xMonths: {
                        one: {
                            standalone: '1 mesec',
                            withPrepositionAgo: '1 mesec',
                            withPrepositionIn: '1 mesec'
                        },
                        dual: '{{count}} meseca',
                        other: '{{count}} meseci'
                    },
                    aboutXYears: {
                        one: {
                            standalone: 'oko 1 godinu',
                            withPrepositionAgo: 'oko 1 godinu',
                            withPrepositionIn: 'oko 1 godinu'
                        },
                        dual: 'oko {{count}} godine',
                        other: 'oko {{count}} godina'
                    },
                    xYears: {
                        one: {
                            standalone: '1 godina',
                            withPrepositionAgo: '1 godine',
                            withPrepositionIn: '1 godinu'
                        },
                        dual: '{{count}} godine',
                        other: '{{count}} godina'
                    },
                    overXYears: {
                        one: {
                            standalone: 'preko 1 godinu',
                            withPrepositionAgo: 'preko 1 godinu',
                            withPrepositionIn: 'preko 1 godinu'
                        },
                        dual: 'preko {{count}} godine',
                        other: 'preko {{count}} godina'
                    },
                    almostXYears: {
                        one: {
                            standalone: 'gotovo 1 godinu',
                            withPrepositionAgo: 'gotovo 1 godinu',
                            withPrepositionIn: 'gotovo 1 godinu'
                        },
                        dual: 'gotovo {{count}} godine',
                        other: 'gotovo {{count}} godina'
                    }
                },
                Mp = {
                    date: at({
                        formats: {
                            full: 'EEEE, d. MMMM yyyy.',
                            long: 'd. MMMM yyyy.',
                            medium: 'd. MMM yy.',
                            short: 'dd. MM. yy.'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss (zzzz)',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'u\' {{time}}',
                            long: '{{date}} \'u\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Ep = {
                    lastWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'prošle nedelje u\' p';
                            case 3:
                                return '\'prošle srede u\' p';
                            case 6:
                                return '\'prošle subote u\' p';
                            default:
                                return '\'prošli\' EEEE \'u\' p'
                        }
                    },
                    yesterday: '\'juče u\' p',
                    today: '\'danas u\' p',
                    tomorrow: '\'sutra u\' p',
                    nextWeek: function (e) {
                        switch (e.getUTCDay()) {
                            case 0:
                                return '\'sledeće nedelje u\' p';
                            case 3:
                                return '\'sledeću sredu u\' p';
                            case 6:
                                return '\'sledeću subotu u\' p';
                            default:
                                return '\'sledeći\' EEEE \'u\' p'
                        }
                    },
                    other: 'P'
                },
                Pp = {
                    code: 'sr-Latn',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof kp[e] ? kp[e] : 1 === t ? n.addSuffix ? n.comparison > 0 ? kp[e].one.withPrepositionIn : kp[e].one.withPrepositionAgo : kp[e].one.standalone : t % 10 > 1 && t % 10 < 5 && '1' !== String(t).substr(- 2, 1) ? kp[e].dual.replace('{{count}}', t) : kp[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'za ' + r : 'pre ' + r : r
                    },
                    formatLong: Mp,
                    formatRelative: function (e, t, n, r) {
                        var a = Ep[e];
                        return 'function' == typeof a ? a(t) : a
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e);
                            return String(t).concat('.')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'pr.n.e.',
                                    'AD'
                                ],
                                abbreviated: [
                                    'pr. Hr.',
                                    'po. Hr.'
                                ],
                                wide: [
                                    'Pre Hrista',
                                    'Posle Hrista'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.'
                                ],
                                abbreviated: [
                                    '1. kv.',
                                    '2. kv.',
                                    '3. kv.',
                                    '4. kv.'
                                ],
                                wide: [
                                    '1. kvartal',
                                    '2. kvartal',
                                    '3. kvartal',
                                    '4. kvartal'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.',
                                    '5.',
                                    '6.',
                                    '7.',
                                    '8.',
                                    '9.',
                                    '10.',
                                    '11.',
                                    '12.'
                                ],
                                abbreviated: [
                                    'jan',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'maj',
                                    'jun',
                                    'jul',
                                    'avg',
                                    'sep',
                                    'okt',
                                    'nov',
                                    'dec'
                                ],
                                wide: [
                                    'januar',
                                    'februar',
                                    'mart',
                                    'april',
                                    'maj',
                                    'jun',
                                    'jul',
                                    'avgust',
                                    'septembar',
                                    'oktobar',
                                    'novembar',
                                    'decembar'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    '1.',
                                    '2.',
                                    '3.',
                                    '4.',
                                    '5.',
                                    '6.',
                                    '7.',
                                    '8.',
                                    '9.',
                                    '10.',
                                    '11.',
                                    '12.'
                                ],
                                abbreviated: [
                                    'jan',
                                    'feb',
                                    'mar',
                                    'apr',
                                    'maj',
                                    'jun',
                                    'jul',
                                    'avg',
                                    'sep',
                                    'okt',
                                    'nov',
                                    'dec'
                                ],
                                wide: [
                                    'januar',
                                    'februar',
                                    'mart',
                                    'april',
                                    'maj',
                                    'jun',
                                    'jul',
                                    'avgust',
                                    'septembar',
                                    'oktobar',
                                    'novembar',
                                    'decembar'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'N',
                                    'P',
                                    'U',
                                    'S',
                                    'Č',
                                    'P',
                                    'S'
                                ],
                                short: [
                                    'ned',
                                    'pon',
                                    'uto',
                                    'sre',
                                    'čet',
                                    'pet',
                                    'sub'
                                ],
                                abbreviated: [
                                    'ned',
                                    'pon',
                                    'uto',
                                    'sre',
                                    'čet',
                                    'pet',
                                    'sub'
                                ],
                                wide: [
                                    'nedelja',
                                    'ponedeljak',
                                    'utorak',
                                    'sreda',
                                    'četvrtak',
                                    'petak',
                                    'subota'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'popodne',
                                    evening: 'uveče',
                                    night: 'noću'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'popodne',
                                    evening: 'uveče',
                                    night: 'noću'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'posle podne',
                                    evening: 'uveče',
                                    night: 'noću'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'popodne',
                                    evening: 'uveče',
                                    night: 'noću'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'popodne',
                                    evening: 'uveče',
                                    night: 'noću'
                                },
                                wide: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'ponoć',
                                    noon: 'podne',
                                    morning: 'ujutru',
                                    afternoon: 'posle podne',
                                    evening: 'uveče',
                                    night: 'noću'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)\./i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(pr\.n\.e\.|AD)/i,
                                abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i,
                                wide: /^(Pre Hrista|pre nove ere|Posle Hrista|nova era)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^pr/i,
                                    /^(po|nova)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]\.\s?kv\.?/i,
                                wide: /^[1234]\. kvartal/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(10|11|12|[123456789])\./i,
                                abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,
                                wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(jun|juna)|(jul|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /(10|11|12|[123456789])/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^maj/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^avg/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[npusčc]/i,
                                short: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,
                                abbreviated: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,
                                wide: /^(nedelja|ponedeljak|utorak|sreda|(četvrtak|cetvrtak)|petak|subota)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^s/i,
                                    /^m/i,
                                    /^t/i,
                                    /^w/i,
                                    /^t/i,
                                    /^f/i,
                                    /^s/i
                                ],
                                any: [
                                    /^su/i,
                                    /^m/i,
                                    /^tu/i,
                                    /^w/i,
                                    /^th/i,
                                    /^f/i,
                                    /^sa/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(am|pm|ponoc|ponoć|(po)?podne|uvece|uveče|noću|posle podne|ujutru)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^pono/i,
                                    noon: /^pod/i,
                                    morning: /jutro/i,
                                    afternoon: /(posle\s|po)+podne/i,
                                    evening: /(uvece|uveče)/i,
                                    night: /(nocu|noću)/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                xp = Pp,
                Sp = {
                    lessThanXSeconds: {
                        singular: 'mindre än en sekund',
                        plural: 'mindre än {{count}} sekunder'
                    },
                    xSeconds: {
                        singular: 'en sekund',
                        plural: '{{count}} sekunder'
                    },
                    halfAMinute: 'en halv minut',
                    lessThanXMinutes: {
                        singular: 'mindre än en minut',
                        plural: 'mindre än {{count}} minuter'
                    },
                    xMinutes: {
                        singular: 'en minut',
                        plural: '{{count}} minuter'
                    },
                    aboutXHours: {
                        singular: 'ungefär en timme',
                        plural: 'ungefär {{count}} timmar'
                    },
                    xHours: {
                        singular: 'en timme',
                        plural: '{{count}} timmar'
                    },
                    xDays: {
                        singular: 'en dag',
                        plural: '{{count}} dagar'
                    },
                    aboutXWeeks: {
                        singular: 'ungefär en vecka',
                        plural: 'ungefär {{count}} vecka'
                    },
                    xWeeks: {
                        singular: 'en vecka',
                        plural: '{{count}} vecka'
                    },
                    aboutXMonths: {
                        singular: 'ungefär en månad',
                        plural: 'ungefär {{count}} månader'
                    },
                    xMonths: {
                        singular: 'en månad',
                        plural: '{{count}} månader'
                    },
                    aboutXYears: {
                        singular: 'ungefär ett år',
                        plural: 'ungefär {{count}} år'
                    },
                    xYears: {
                        singular: 'ett år',
                        plural: '{{count}} år'
                    },
                    overXYears: {
                        singular: 'över ett år',
                        plural: 'över {{count}} år'
                    },
                    almostXYears: {
                        singular: 'nästan ett år',
                        plural: 'nästan {{count}} år'
                    }
                },
                Tp = [
                    'noll',
                    'en',
                    'två',
                    'tre',
                    'fyra',
                    'fem',
                    'sex',
                    'sju',
                    'åtta',
                    'nio',
                    'tio',
                    'elva',
                    'tolv'
                ],
                Cp = {
                    date: at({
                        formats: {
                            full: 'EEEE d MMMM y',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'y-MM-dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: '\'kl\'. HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'kl.\' {{time}}',
                            long: '{{date}} \'kl.\' {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Wp = {
                    lastWeek: '\'i\' EEEE\'s kl.\' p',
                    yesterday: '\'igår kl.\' p',
                    today: '\'idag kl.\' p',
                    tomorrow: '\'imorgon kl.\' p',
                    nextWeek: 'EEEE \'kl.\' p',
                    other: 'P'
                },
                jp = {
                    code: 'sv',
                    formatDistance: function (e, t, n) {
                        n = n || {
                            onlyNumeric: !1
                        };
                        var r,
                            a = Sp[e];
                        return r = 'string' == typeof a ? a : 0 === t || t > 1 ? n.onlyNumeric ? a.plural.replace('{{count}}', t) : a.plural.replace('{{count}}', t < 13 ? Tp[t] : t) : a.singular,
                            n.addSuffix ? n.comparison > 0 ? 'om ' + r : r + ' sedan' : r
                    },
                    formatLong: Cp,
                    formatRelative: function (e, t, n, r) {
                        return Wp[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            var t = Number(e),
                                n = t % 100;
                            if (n > 20 || n < 10) switch (n % 10) {
                                case 1:
                                case 2:
                                    return t + ':a'
                            }
                            return t + ':e'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'f.Kr.',
                                    'e.Kr.'
                                ],
                                abbreviated: [
                                    'f.Kr.',
                                    'e.Kr.'
                                ],
                                wide: [
                                    'före Kristus',
                                    'efter Kristus'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    '1:a kvartalet',
                                    '2:a kvartalet',
                                    '3:e kvartalet',
                                    '4:e kvartalet'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'J',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'J',
                                    'J',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'jan.',
                                    'feb.',
                                    'mars',
                                    'apr.',
                                    'maj',
                                    'juni',
                                    'juli',
                                    'aug.',
                                    'sep.',
                                    'okt.',
                                    'nov.',
                                    'dec.'
                                ],
                                wide: [
                                    'januari',
                                    'februari',
                                    'mars',
                                    'april',
                                    'maj',
                                    'juni',
                                    'juli',
                                    'augusti',
                                    'september',
                                    'oktober',
                                    'november',
                                    'december'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'S',
                                    'M',
                                    'T',
                                    'O',
                                    'T',
                                    'F',
                                    'L'
                                ],
                                short: [
                                    'sö',
                                    'må',
                                    'ti',
                                    'on',
                                    'to',
                                    'fr',
                                    'lö'
                                ],
                                abbreviated: [
                                    'sön',
                                    'mån',
                                    'tis',
                                    'ons',
                                    'tors',
                                    'fre',
                                    'lör'
                                ],
                                wide: [
                                    'söndag',
                                    'måndag',
                                    'tisdag',
                                    'onsdag',
                                    'torsdag',
                                    'fredag',
                                    'lördag'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'fm',
                                    pm: 'em',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'morg.',
                                    afternoon: 'efterm.',
                                    evening: 'kväll',
                                    night: 'natt'
                                },
                                abbreviated: {
                                    am: 'f.m.',
                                    pm: 'e.m.',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'morgon',
                                    afternoon: 'efterm.',
                                    evening: 'kväll',
                                    night: 'natt'
                                },
                                wide: {
                                    am: 'förmiddag',
                                    pm: 'eftermiddag',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'morgon',
                                    afternoon: 'eftermiddag',
                                    evening: 'kväll',
                                    night: 'natt'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'fm',
                                    pm: 'em',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morg.',
                                    afternoon: 'på efterm.',
                                    evening: 'på kvällen',
                                    night: 'på natten'
                                },
                                abbreviated: {
                                    am: 'fm',
                                    pm: 'em',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morg.',
                                    afternoon: 'på efterm.',
                                    evening: 'på kvällen',
                                    night: 'på natten'
                                },
                                wide: {
                                    am: 'fm',
                                    pm: 'em',
                                    midnight: 'midnatt',
                                    noon: 'middag',
                                    morning: 'på morgonen',
                                    afternoon: 'på eftermiddagen',
                                    evening: 'på kvällen',
                                    night: 'på natten'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(:a|:e)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i,
                                abbreviated: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i,
                                wide: /^(före Kristus|före vår tid|efter Kristus|vår tid)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^f/i,
                                    /^[ev]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234](:a|:e)? kvartalet/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[jfmasond]/i,
                                abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|aug|sep|okt|nov|dec)\.?/i,
                                wide: /^(januari|februari|mars|april|maj|juni|juli|augusti|september|oktober|november|december)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^j/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^j/i,
                                    /^j/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ja/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^maj/i,
                                    /^jun/i,
                                    /^jul/i,
                                    /^au/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[smtofl]/i,
                                short: /^(sö|må|ti|on|to|fr|lö)/i,
                                abbreviated: /^(sön|mån|tis|ons|tors|fre|lör)/i,
                                wide: /^(söndag|måndag|tisdag|onsdag|torsdag|fredag|lördag)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^s/i,
                                    /^m/i,
                                    /^ti/i,
                                    /^o/i,
                                    /^to/i,
                                    /^f/i,
                                    /^l/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^([fe]\.?\s?m\.?|midn(att)?|midd(ag)?|(på) (morgonen|eftermiddagen|kvällen|natten))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^f/i,
                                    pm: /^e/i,
                                    midnight: /^midn/i,
                                    noon: /^midd/i,
                                    morning: /morgon/i,
                                    afternoon: /eftermiddag/i,
                                    evening: /kväll/i,
                                    night: /natt/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Dp = {
                    lessThanXSeconds: {
                        one: {
                            default:
                                'ஒரு வினாடிக்கு குறைவாக',
                            in: 'ஒரு வினாடிக்குள்',
                            ago: 'ஒரு வினாடிக்கு முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} வினாடிகளுக்கு குறைவாக',
                            in: '{{count}} வினாடிகளுக்குள்',
                            ago: '{{count}} வினாடிகளுக்கு முன்பு'
                        }
                    },
                    xSeconds: {
                        one: {
                            default:
                                '1 வினாடி',
                            in: '1 வினாடியில்',
                            ago: '1 வினாடி முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} விநாடிகள்',
                            in: '{{count}} வினாடிகளில்',
                            ago: '{{count}} விநாடிகளுக்கு முன்பு'
                        }
                    },
                    halfAMinute: {
                        default:
                            'அரை நிமிடம்',
                        in: 'அரை நிமிடத்தில்',
                        ago: 'அரை நிமிடம் முன்பு'
                    },
                    lessThanXMinutes: {
                        one: {
                            default:
                                'ஒரு நிமிடத்திற்கும் குறைவாக',
                            in: 'ஒரு நிமிடத்திற்குள்',
                            ago: 'ஒரு நிமிடத்திற்கு முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} நிமிடங்களுக்கும் குறைவாக',
                            in: '{{count}} நிமிடங்களுக்குள்',
                            ago: '{{count}} நிமிடங்களுக்கு முன்பு'
                        }
                    },
                    xMinutes: {
                        one: {
                            default:
                                '1 நிமிடம்',
                            in: '1 நிமிடத்தில்',
                            ago: '1 நிமிடம் முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} நிமிடங்கள்',
                            in: '{{count}} நிமிடங்களில்',
                            ago: '{{count}} நிமிடங்களுக்கு முன்பு'
                        }
                    },
                    aboutXHours: {
                        one: {
                            default:
                                'சுமார் 1 மணி நேரம்',
                            in: 'சுமார் 1 மணி நேரத்தில்',
                            ago: 'சுமார் 1 மணி நேரத்திற்கு முன்பு'
                        },
                        other: {
                            default:
                                'சுமார் {{count}} மணி நேரம்',
                            in: 'சுமார் {{count}} மணி நேரத்திற்கு முன்பு',
                            ago: 'சுமார் {{count}} மணி நேரத்தில்'
                        }
                    },
                    xHours: {
                        one: {
                            default:
                                '1 மணி நேரம்',
                            in: '1 மணி நேரத்தில்',
                            ago: '1 மணி நேரத்திற்கு முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} மணி நேரம்',
                            in: '{{count}} மணி நேரத்தில்',
                            ago: '{{count}} மணி நேரத்திற்கு முன்பு'
                        }
                    },
                    xDays: {
                        one: {
                            default:
                                '1 நாள்',
                            in: '1 நாளில்',
                            ago: '1 நாள் முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} நாட்கள்',
                            in: '{{count}} நாட்களில்',
                            ago: '{{count}} நாட்களுக்கு முன்பு'
                        }
                    },
                    aboutXWeeks: {
                        one: {
                            default:
                                'சுமார் 1 வாரம்',
                            in: 'சுமார் 1 வாரத்தில்',
                            ago: 'சுமார் 1 வாரம் முன்பு'
                        },
                        other: {
                            default:
                                'சுமார் {{count}} வாரங்கள்',
                            in: 'சுமார் {{count}} வாரங்களில்',
                            ago: 'சுமார் {{count}} வாரங்களுக்கு முன்பு'
                        }
                    },
                    xWeeks: {
                        one: {
                            default:
                                '1 வாரம்',
                            in: '1 வாரத்தில்',
                            ago: '1 வாரம் முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} வாரங்கள்',
                            in: '{{count}} வாரங்களில்',
                            ago: '{{count}} வாரங்களுக்கு முன்பு'
                        }
                    },
                    aboutXMonths: {
                        one: {
                            default:
                                'சுமார் 1 மாதம்',
                            in: 'சுமார் 1 மாதத்தில்',
                            ago: 'சுமார் 1 மாதத்திற்கு முன்பு'
                        },
                        other: {
                            default:
                                'சுமார் {{count}} மாதங்கள்',
                            in: 'சுமார் {{count}} மாதங்களில்',
                            ago: 'சுமார் {{count}} மாதங்களுக்கு முன்பு'
                        }
                    },
                    xMonths: {
                        one: {
                            default:
                                '1 மாதம்',
                            in: '1 மாதத்தில்',
                            ago: '1 மாதம் முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} மாதங்கள்',
                            in: '{{count}} மாதங்களில்',
                            ago: '{{count}} மாதங்களுக்கு முன்பு'
                        }
                    },
                    aboutXYears: {
                        one: {
                            default:
                                'சுமார் 1 வருடம்',
                            in: 'சுமார் 1 ஆண்டில்',
                            ago: 'சுமார் 1 வருடம் முன்பு'
                        },
                        other: {
                            default:
                                'சுமார் {{count}} ஆண்டுகள்',
                            in: 'சுமார் {{count}} ஆண்டுகளில்',
                            ago: 'சுமார் {{count}} ஆண்டுகளுக்கு முன்பு'
                        }
                    },
                    xYears: {
                        one: {
                            default:
                                '1 வருடம்',
                            in: '1 ஆண்டில்',
                            ago: '1 வருடம் முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} ஆண்டுகள்',
                            in: '{{count}} ஆண்டுகளில்',
                            ago: '{{count}} ஆண்டுகளுக்கு முன்பு'
                        }
                    },
                    overXYears: {
                        one: {
                            default:
                                '1 வருடத்திற்கு மேல்',
                            in: '1 வருடத்திற்கும் மேலாக',
                            ago: '1 வருடம் முன்பு'
                        },
                        other: {
                            default:
                                '{{count}} ஆண்டுகளுக்கும் மேலாக',
                            in: '{{count}} ஆண்டுகளில்',
                            ago: '{{count}} ஆண்டுகளுக்கு முன்பு'
                        }
                    },
                    almostXYears: {
                        one: {
                            default:
                                'கிட்டத்தட்ட 1 வருடம்',
                            in: 'கிட்டத்தட்ட 1 ஆண்டில்',
                            ago: 'கிட்டத்தட்ட 1 வருடம் முன்பு'
                        },
                        other: {
                            default:
                                'கிட்டத்தட்ட {{count}} ஆண்டுகள்',
                            in: 'கிட்டத்தட்ட {{count}} ஆண்டுகளில்',
                            ago: 'கிட்டத்தட்ட {{count}} ஆண்டுகளுக்கு முன்பு'
                        }
                    }
                };
            function Np(e, t) {
                return t.addSuffix ? t.comparison > 0 ? e.in : e.ago : e.default
            }
            var Ip = {
                date: at({
                    formats: {
                        full: 'EEEE, d MMMM, y',
                        long: 'd MMMM, y',
                        medium: 'd MMM, y',
                        short: 'd/M/yy'
                    },
                    defaultWidth: 'full'
                }),
                time: at({
                    formats: {
                        full: 'a h:mm:ss zzzz',
                        long: 'a h:mm:ss z',
                        medium: 'a h:mm:ss',
                        short: 'a h:mm'
                    },
                    defaultWidth: 'full'
                }),
                dateTime: at({
                    formats: {
                        full: '{{date}} {{time}}',
                        long: '{{date}} {{time}}',
                        medium: '{{date}}, {{time}}',
                        short: '{{date}}, {{time}}'
                    },
                    defaultWidth: 'full'
                })
            },
                zp = {
                    lastWeek: '\'கடந்த\' eeee p \'மணிக்கு\'',
                    yesterday: '\'நேற்று \' p \'மணிக்கு\'',
                    today: '\'இன்று \' p \'மணிக்கு\'',
                    tomorrow: '\'நாளை \' p \'மணிக்கு\'',
                    nextWeek: 'eeee p \'மணிக்கு\'',
                    other: 'P'
                },
                Rp = {
                    code: 'ta',
                    formatDistance: function (e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                        };
                        return (Dp[e].default ? Np(Dp[e], n) : Np(1 === t ? Dp[e].one : Dp[e].other, n)).replace('{{count}}', t)
                    },
                    formatLong: Ip,
                    formatRelative: function (e, t, n, r) {
                        return zp[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'கி.மு.',
                                    'கி.பி.'
                                ],
                                abbreviated: [
                                    'கி.மு.',
                                    'கி.பி.'
                                ],
                                wide: [
                                    'கிறிஸ்துவுக்கு முன்',
                                    'அன்னோ டோமினி'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'காலா.1',
                                    'காலா.2',
                                    'காலா.3',
                                    'காலா.4'
                                ],
                                wide: [
                                    'ஒன்றாம் காலாண்டு',
                                    'இரண்டாம் காலாண்டு',
                                    'மூன்றாம் காலாண்டு',
                                    'நான்காம் காலாண்டு'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ஜ',
                                    'பி',
                                    'மா',
                                    'ஏ',
                                    'மே',
                                    'ஜூ',
                                    'ஜூ',
                                    'ஆ',
                                    'செ',
                                    'அ',
                                    'ந',
                                    'டி'
                                ],
                                abbreviated: [
                                    'ஜன.',
                                    'பிப்.',
                                    'மார்.',
                                    'ஏப்.',
                                    'மே',
                                    'ஜூன்',
                                    'ஜூலை',
                                    'ஆக.',
                                    'செப்.',
                                    'அக்.',
                                    'நவ.',
                                    'டிச.'
                                ],
                                wide: [
                                    'ஜனவரி',
                                    'பிப்ரவரி',
                                    'மார்ச்',
                                    'ஏப்ரல்',
                                    'மே',
                                    'ஜூன்',
                                    'ஜூலை',
                                    'ஆகஸ்ட்',
                                    'செப்டம்பர்',
                                    'அக்டோபர்',
                                    'நவம்பர்',
                                    'டிசம்பர்'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ஞா',
                                    'தி',
                                    'செ',
                                    'பு',
                                    'வி',
                                    'வெ',
                                    'ச'
                                ],
                                short: [
                                    'ஞா',
                                    'தி',
                                    'செ',
                                    'பு',
                                    'வி',
                                    'வெ',
                                    'ச'
                                ],
                                abbreviated: [
                                    'ஞாயி.',
                                    'திங்.',
                                    'செவ்.',
                                    'புத.',
                                    'வியா.',
                                    'வெள்.',
                                    'சனி'
                                ],
                                wide: [
                                    'ஞாயிறு',
                                    'திங்கள்',
                                    'செவ்வாய்',
                                    'புதன்',
                                    'வியாழன்',
                                    'வெள்ளி',
                                    'சனி'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'மு.ப',
                                    pm: 'பி.ப',
                                    midnight: 'நள்.',
                                    noon: 'நண்.',
                                    morning: 'கா.',
                                    afternoon: 'மதி.',
                                    evening: 'மா.',
                                    night: 'இர.'
                                },
                                abbreviated: {
                                    am: 'முற்பகல்',
                                    pm: 'பிற்பகல்',
                                    midnight: 'நள்ளிரவு',
                                    noon: 'நண்பகல்',
                                    morning: 'காலை',
                                    afternoon: 'மதியம்',
                                    evening: 'மாலை',
                                    night: 'இரவு'
                                },
                                wide: {
                                    am: 'முற்பகல்',
                                    pm: 'பிற்பகல்',
                                    midnight: 'நள்ளிரவு',
                                    noon: 'நண்பகல்',
                                    morning: 'காலை',
                                    afternoon: 'மதியம்',
                                    evening: 'மாலை',
                                    night: 'இரவு'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'மு.ப',
                                    pm: 'பி.ப',
                                    midnight: 'நள்.',
                                    noon: 'நண்.',
                                    morning: 'கா.',
                                    afternoon: 'மதி.',
                                    evening: 'மா.',
                                    night: 'இர.'
                                },
                                abbreviated: {
                                    am: 'முற்பகல்',
                                    pm: 'பிற்பகல்',
                                    midnight: 'நள்ளிரவு',
                                    noon: 'நண்பகல்',
                                    morning: 'காலை',
                                    afternoon: 'மதியம்',
                                    evening: 'மாலை',
                                    night: 'இரவு'
                                },
                                wide: {
                                    am: 'முற்பகல்',
                                    pm: 'பிற்பகல்',
                                    midnight: 'நள்ளிரவு',
                                    noon: 'நண்பகல்',
                                    morning: 'காலை',
                                    afternoon: 'மதியம்',
                                    evening: 'மாலை',
                                    night: 'இரவு'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(வது)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(கி.மு.|கி.பி.)/i,
                                abbreviated: /^(கி\.?\s?மு\.?|கி\.?\s?பி\.?)/,
                                wide: /^(கிறிஸ்துவுக்கு\sமுன்|அன்னோ\sடோமினி)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /கி\.?\s?மு\.?/,
                                    /கி\.?\s?பி\.?/
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^காலா.[1234]/i,
                                wide: /^(ஒன்றாம்|இரண்டாம்|மூன்றாம்|நான்காம்) காலாண்டு/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ],
                                any: [
                                    /(1|காலா.1|ஒன்றாம்)/i,
                                    /(2|காலா.2|இரண்டாம்)/i,
                                    /(3|காலா.3|மூன்றாம்)/i,
                                    /(4|காலா.4|நான்காம்)/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(ஜ|பி|மா|ஏ|மே|ஜூ|ஆ|செ|அ|ந|டி)$/i,
                                abbreviated: /^(ஜன.|பிப்.|மார்.|ஏப்.|மே|ஜூன்|ஜூலை|ஆக.|செப்.|அக்.|நவ.|டிச.)/i,
                                wide: /^(ஜனவரி|பிப்ரவரி|மார்ச்|ஏப்ரல்|மே|ஜூன்|ஜூலை|ஆகஸ்ட்|செப்டம்பர்|அக்டோபர்|நவம்பர்|டிசம்பர்)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ஜ$/i,
                                    /^பி/i,
                                    /^மா/i,
                                    /^ஏ/i,
                                    /^மே/i,
                                    /^ஜூ/i,
                                    /^ஜூ/i,
                                    /^ஆ/i,
                                    /^செ/i,
                                    /^அ/i,
                                    /^ந/i,
                                    /^டி/i
                                ],
                                any: [
                                    /^ஜன/i,
                                    /^பி/i,
                                    /^மா/i,
                                    /^ஏ/i,
                                    /^மே/i,
                                    /^ஜூன்/i,
                                    /^ஜூலை/i,
                                    /^ஆ/i,
                                    /^செ/i,
                                    /^அ/i,
                                    /^ந/i,
                                    /^டி/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(ஞா|தி|செ|பு|வி|வெ|ச)/i,
                                short: /^(ஞா|தி|செ|பு|வி|வெ|ச)/i,
                                abbreviated: /^(ஞாயி.|திங்.|செவ்.|புத.|வியா.|வெள்.|சனி)/i,
                                wide: /^(ஞாயிறு|திங்கள்|செவ்வாய்|புதன்|வியாழன்|வெள்ளி|சனி)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ஞா/i,
                                    /^தி/i,
                                    /^செ/i,
                                    /^பு/i,
                                    /^வி/i,
                                    /^வெ/i,
                                    /^ச/i
                                ],
                                any: [
                                    /^ஞா/i,
                                    /^தி/i,
                                    /^செ/i,
                                    /^பு/i,
                                    /^வி/i,
                                    /^வெ/i,
                                    /^ச/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(மு.ப|பி.ப|நள்|நண்|காலை|மதியம்|மாலை|இரவு)/i,
                                any: /^(மு.ப|பி.ப|முற்பகல்|பிற்பகல்|நள்ளிரவு|நண்பகல்|காலை|மதியம்|மாலை|இரவு)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^மு/i,
                                    pm: /^பி/i,
                                    midnight: /^நள்/i,
                                    noon: /^நண்/i,
                                    morning: /காலை/i,
                                    afternoon: /மதியம்/i,
                                    evening: /மாலை/i,
                                    night: /இரவு/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                Ap = Rp,
                Op = {
                    lessThanXSeconds: {
                        standalone: {
                            one: 'సెకను కన్నా తక్కువ',
                            other: '{{count}} సెకన్ల కన్నా తక్కువ'
                        },
                        withPreposition: {
                            one: 'సెకను',
                            other: '{{count}} సెకన్ల'
                        }
                    },
                    xSeconds: {
                        standalone: {
                            one: 'ఒక సెకను',
                            other: '{{count}} సెకన్ల'
                        },
                        withPreposition: {
                            one: 'ఒక సెకను',
                            other: '{{count}} సెకన్ల'
                        }
                    },
                    halfAMinute: {
                        standalone: 'అర నిమిషం',
                        withPreposition: 'అర నిమిషం'
                    },
                    lessThanXMinutes: {
                        standalone: {
                            one: 'ఒక నిమిషం కన్నా తక్కువ',
                            other: '{{count}} నిమిషాల కన్నా తక్కువ'
                        },
                        withPreposition: {
                            one: 'ఒక నిమిషం',
                            other: '{{count}} నిమిషాల'
                        }
                    },
                    xMinutes: {
                        standalone: {
                            one: 'ఒక నిమిషం',
                            other: '{{count}} నిమిషాలు'
                        },
                        withPreposition: {
                            one: 'ఒక నిమిషం',
                            other: '{{count}} నిమిషాల'
                        }
                    },
                    aboutXHours: {
                        standalone: {
                            one: 'సుమారు ఒక గంట',
                            other: 'సుమారు {{count}} గంటలు'
                        },
                        withPreposition: {
                            one: 'సుమారు ఒక గంట',
                            other: 'సుమారు {{count}} గంటల'
                        }
                    },
                    xHours: {
                        standalone: {
                            one: 'ఒక గంట',
                            other: '{{count}} గంటలు'
                        },
                        withPreposition: {
                            one: 'ఒక గంట',
                            other: '{{count}} గంటల'
                        }
                    },
                    xDays: {
                        standalone: {
                            one: 'ఒక రోజు',
                            other: '{{count}} రోజులు'
                        },
                        withPreposition: {
                            one: 'ఒక రోజు',
                            other: '{{count}} రోజుల'
                        }
                    },
                    aboutXWeeks: {
                        standalone: {
                            one: 'సుమారు ఒక వారం',
                            other: 'సుమారు {{count}} వారాలు'
                        },
                        withPreposition: {
                            one: 'సుమారు ఒక వారం',
                            other: 'సుమారు {{count}} వారాలల'
                        }
                    },
                    xWeeks: {
                        standalone: {
                            one: 'ఒక వారం',
                            other: '{{count}} వారాలు'
                        },
                        withPreposition: {
                            one: 'ఒక వారం',
                            other: '{{count}} వారాలల'
                        }
                    },
                    aboutXMonths: {
                        standalone: {
                            one: 'సుమారు ఒక నెల',
                            other: 'సుమారు {{count}} నెలలు'
                        },
                        withPreposition: {
                            one: 'సుమారు ఒక నెల',
                            other: 'సుమారు {{count}} నెలల'
                        }
                    },
                    xMonths: {
                        standalone: {
                            one: 'ఒక నెల',
                            other: '{{count}} నెలలు'
                        },
                        withPreposition: {
                            one: 'ఒక నెల',
                            other: '{{count}} నెలల'
                        }
                    },
                    aboutXYears: {
                        standalone: {
                            one: 'సుమారు ఒక సంవత్సరం',
                            other: 'సుమారు {{count}} సంవత్సరాలు'
                        },
                        withPreposition: {
                            one: 'సుమారు ఒక సంవత్సరం',
                            other: 'సుమారు {{count}} సంవత్సరాల'
                        }
                    },
                    xYears: {
                        standalone: {
                            one: 'ఒక సంవత్సరం',
                            other: '{{count}} సంవత్సరాలు'
                        },
                        withPreposition: {
                            one: 'ఒక సంవత్సరం',
                            other: '{{count}} సంవత్సరాల'
                        }
                    },
                    overXYears: {
                        standalone: {
                            one: 'ఒక సంవత్సరం పైగా',
                            other: '{{count}} సంవత్సరాలకు పైగా'
                        },
                        withPreposition: {
                            one: 'ఒక సంవత్సరం',
                            other: '{{count}} సంవత్సరాల'
                        }
                    },
                    almostXYears: {
                        standalone: {
                            one: 'దాదాపు ఒక సంవత్సరం',
                            other: 'దాదాపు {{count}} సంవత్సరాలు'
                        },
                        withPreposition: {
                            one: 'దాదాపు ఒక సంవత్సరం',
                            other: 'దాదాపు {{count}} సంవత్సరాల'
                        }
                    }
                },
                Hp = {
                    date: at({
                        formats: {
                            full: 'd, MMMM y, EEEE',
                            long: 'd MMMM, y',
                            medium: 'd MMM, y',
                            short: 'dd-MM-yy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}\'కి\'',
                            long: '{{date}} {{time}}\'కి\'',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                _p = {
                    lastWeek: '\'గత\' eeee p',
                    yesterday: '\'నిన్న\' p',
                    today: '\'ఈ రోజు\' p',
                    tomorrow: '\'రేపు\' p',
                    nextWeek: '\'తదుపరి\' eeee p',
                    other: 'P'
                },
                Lp = {
                    code: 'te',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = (n = n || {
                            }).addSuffix ? Op[e].withPreposition : Op[e].standalone;
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + 'లో' : r + ' క్రితం' : r
                    },
                    formatLong: Hp,
                    formatRelative: function (e, t, n, r) {
                        return _p[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + 'వ'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'క్రీ.పూ.',
                                    'క్రీ.శ.'
                                ],
                                abbreviated: [
                                    'క్రీ.పూ.',
                                    'క్రీ.శ.'
                                ],
                                wide: [
                                    'క్రీస్తు పూర్వం',
                                    'క్రీస్తుశకం'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'త్రై1',
                                    'త్రై2',
                                    'త్రై3',
                                    'త్రై4'
                                ],
                                wide: [
                                    '1వ త్రైమాసికం',
                                    '2వ త్రైమాసికం',
                                    '3వ త్రైమాసికం',
                                    '4వ త్రైమాసికం'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'జ',
                                    'ఫి',
                                    'మా',
                                    'ఏ',
                                    'మే',
                                    'జూ',
                                    'జు',
                                    'ఆ',
                                    'సె',
                                    'అ',
                                    'న',
                                    'డి'
                                ],
                                abbreviated: [
                                    'జన',
                                    'ఫిబ్ర',
                                    'మార్చి',
                                    'ఏప్రి',
                                    'మే',
                                    'జూన్',
                                    'జులై',
                                    'ఆగ',
                                    'సెప్టెం',
                                    'అక్టో',
                                    'నవం',
                                    'డిసెం'
                                ],
                                wide: [
                                    'జనవరి',
                                    'ఫిబ్రవరి',
                                    'మార్చి',
                                    'ఏప్రిల్',
                                    'మే',
                                    'జూన్',
                                    'జులై',
                                    'ఆగస్టు',
                                    'సెప్టెంబర్',
                                    'అక్టోబర్',
                                    'నవంబర్',
                                    'డిసెంబర్'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ఆ',
                                    'సో',
                                    'మ',
                                    'బు',
                                    'గు',
                                    'శు',
                                    'శ'
                                ],
                                short: [
                                    'ఆది',
                                    'సోమ',
                                    'మంగళ',
                                    'బుధ',
                                    'గురు',
                                    'శుక్ర',
                                    'శని'
                                ],
                                abbreviated: [
                                    'ఆది',
                                    'సోమ',
                                    'మంగళ',
                                    'బుధ',
                                    'గురు',
                                    'శుక్ర',
                                    'శని'
                                ],
                                wide: [
                                    'ఆదివారం',
                                    'సోమవారం',
                                    'మంగళవారం',
                                    'బుధవారం',
                                    'గురువారం',
                                    'శుక్రవారం',
                                    'శనివారం'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'పూర్వాహ్నం',
                                    pm: 'అపరాహ్నం',
                                    midnight: 'అర్ధరాత్రి',
                                    noon: 'మిట్టమధ్యాహ్నం',
                                    morning: 'ఉదయం',
                                    afternoon: 'మధ్యాహ్నం',
                                    evening: 'సాయంత్రం',
                                    night: 'రాత్రి'
                                },
                                abbreviated: {
                                    am: 'పూర్వాహ్నం',
                                    pm: 'అపరాహ్నం',
                                    midnight: 'అర్ధరాత్రి',
                                    noon: 'మిట్టమధ్యాహ్నం',
                                    morning: 'ఉదయం',
                                    afternoon: 'మధ్యాహ్నం',
                                    evening: 'సాయంత్రం',
                                    night: 'రాత్రి'
                                },
                                wide: {
                                    am: 'పూర్వాహ్నం',
                                    pm: 'అపరాహ్నం',
                                    midnight: 'అర్ధరాత్రి',
                                    noon: 'మిట్టమధ్యాహ్నం',
                                    morning: 'ఉదయం',
                                    afternoon: 'మధ్యాహ్నం',
                                    evening: 'సాయంత్రం',
                                    night: 'రాత్రి'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'పూర్వాహ్నం',
                                    pm: 'అపరాహ్నం',
                                    midnight: 'అర్ధరాత్రి',
                                    noon: 'మిట్టమధ్యాహ్నం',
                                    morning: 'ఉదయం',
                                    afternoon: 'మధ్యాహ్నం',
                                    evening: 'సాయంత్రం',
                                    night: 'రాత్రి'
                                },
                                abbreviated: {
                                    am: 'పూర్వాహ్నం',
                                    pm: 'అపరాహ్నం',
                                    midnight: 'అర్ధరాత్రి',
                                    noon: 'మిట్టమధ్యాహ్నం',
                                    morning: 'ఉదయం',
                                    afternoon: 'మధ్యాహ్నం',
                                    evening: 'సాయంత్రం',
                                    night: 'రాత్రి'
                                },
                                wide: {
                                    am: 'పూర్వాహ్నం',
                                    pm: 'అపరాహ్నం',
                                    midnight: 'అర్ధరాత్రి',
                                    noon: 'మిట్టమధ్యాహ్నం',
                                    morning: 'ఉదయం',
                                    afternoon: 'మధ్యాహ్నం',
                                    evening: 'సాయంత్రం',
                                    night: 'రాత్రి'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(వ)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(క్రీ\.పూ\.|క్రీ\.శ\.)/i,
                                abbreviated: /^(క్రీ\.?\s?పూ\.?|ప్ర\.?\s?శ\.?\s?పూ\.?|క్రీ\.?\s?శ\.?|సా\.?\s?శ\.?)/i,
                                wide: /^(క్రీస్తు పూర్వం|ప్రస్తుత శకానికి పూర్వం|క్రీస్తు శకం|ప్రస్తుత శకం)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(పూ|శ)/i,
                                    /^సా/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^త్రై[1234]/i,
                                wide: /^[1234](వ)? త్రైమాసికం/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(జూ|జు|జ|ఫి|మా|ఏ|మే|ఆ|సె|అ|న|డి)/i,
                                abbreviated: /^(జన|ఫిబ్ర|మార్చి|ఏప్రి|మే|జూన్|జులై|ఆగ|సెప్|అక్టో|నవ|డిసె)/i,
                                wide: /^(జనవరి|ఫిబ్రవరి|మార్చి|ఏప్రిల్|మే|జూన్|జులై|ఆగస్టు|సెప్టెంబర్|అక్టోబర్|నవంబర్|డిసెంబర్)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^జ/i,
                                    /^ఫి/i,
                                    /^మా/i,
                                    /^ఏ/i,
                                    /^మే/i,
                                    /^జూ/i,
                                    /^జు/i,
                                    /^ఆ/i,
                                    /^సె/i,
                                    /^అ/i,
                                    /^న/i,
                                    /^డి/i
                                ],
                                any: [
                                    /^జన/i,
                                    /^ఫి/i,
                                    /^మా/i,
                                    /^ఏ/i,
                                    /^మే/i,
                                    /^జూన్/i,
                                    /^జులై/i,
                                    /^ఆగ/i,
                                    /^సె/i,
                                    /^అ/i,
                                    /^న/i,
                                    /^డి/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(ఆ|సో|మ|బు|గు|శు|శ)/i,
                                short: /^(ఆది|సోమ|మం|బుధ|గురు|శుక్ర|శని)/i,
                                abbreviated: /^(ఆది|సోమ|మం|బుధ|గురు|శుక్ర|శని)/i,
                                wide: /^(ఆదివారం|సోమవారం|మంగళవారం|బుధవారం|గురువారం|శుక్రవారం|శనివారం)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ఆ/i,
                                    /^సో/i,
                                    /^మ/i,
                                    /^బు/i,
                                    /^గు/i,
                                    /^శు/i,
                                    /^శ/i
                                ],
                                any: [
                                    /^ఆది/i,
                                    /^సోమ/i,
                                    /^మం/i,
                                    /^బుధ/i,
                                    /^గురు/i,
                                    /^శుక్ర/i,
                                    /^శని/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(పూర్వాహ్నం|అపరాహ్నం|అర్ధరాత్రి|మిట్టమధ్యాహ్నం|ఉదయం|మధ్యాహ్నం|సాయంత్రం|రాత్రి)/i,
                                any: /^(పూర్వాహ్నం|అపరాహ్నం|అర్ధరాత్రి|మిట్టమధ్యాహ్నం|ఉదయం|మధ్యాహ్నం|సాయంత్రం|రాత్రి)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^పూర్వాహ్నం/i,
                                    pm: /^అపరాహ్నం/i,
                                    midnight: /^అర్ధ/i,
                                    noon: /^మిట్ట/i,
                                    morning: /ఉదయం/i,
                                    afternoon: /మధ్యాహ్నం/i,
                                    evening: /సాయంత్రం/i,
                                    night: /రాత్రి/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Fp = {
                    lessThanXSeconds: {
                        one: 'น้อยกว่า 1 วินาที',
                        other: 'น้อยกว่า {{count}} วินาที'
                    },
                    xSeconds: {
                        one: '1 วินาที',
                        other: '{{count}} วินาที'
                    },
                    halfAMinute: 'ครึ่งนาที',
                    lessThanXMinutes: {
                        one: 'น้อยกว่า 1 นาที',
                        other: 'น้อยกว่า {{count}} นาที'
                    },
                    xMinutes: {
                        one: '1 นาที',
                        other: '{{count}} นาที'
                    },
                    aboutXHours: {
                        one: 'ประมาณ 1 ชั่วโมง',
                        other: 'ประมาณ {{count}} ชั่วโมง'
                    },
                    xHours: {
                        one: '1 ชั่วโมง',
                        other: '{{count}} ชั่วโมง'
                    },
                    xDays: {
                        one: '1 วัน',
                        other: '{{count}} วัน'
                    },
                    aboutXWeeks: {
                        one: 'ประมาณ 1 สัปดาห์',
                        other: 'ประมาณ {{count}} สัปดาห์'
                    },
                    xWeeks: {
                        one: '1 สัปดาห์',
                        other: '{{count}} สัปดาห์'
                    },
                    aboutXMonths: {
                        one: 'ประมาณ 1 เดือน',
                        other: 'ประมาณ {{count}} เดือน'
                    },
                    xMonths: {
                        one: '1 เดือน',
                        other: '{{count}} เดือน'
                    },
                    aboutXYears: {
                        one: 'ประมาณ 1 ปี',
                        other: 'ประมาณ {{count}} ปี'
                    },
                    xYears: {
                        one: '1 ปี',
                        other: '{{count}} ปี'
                    },
                    overXYears: {
                        one: 'มากกว่า 1 ปี',
                        other: 'มากกว่า {{count}} ปี'
                    },
                    almostXYears: {
                        one: 'เกือบ 1 ปี',
                        other: 'เกือบ {{count}} ปี'
                    }
                },
                Xp = {
                    date: at({
                        formats: {
                            full: 'วันEEEEที่ do MMMM y',
                            long: 'do MMMM y',
                            medium: 'd MMM y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss น. zzzz',
                            long: 'H:mm:ss น. z',
                            medium: 'H:mm:ss น.',
                            short: 'H:mm น.'
                        },
                        defaultWidth: 'medium'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'เวลา\' {{time}}',
                            long: '{{date}} \'เวลา\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Up = {
                    lastWeek: 'eeee\'ที่แล้วเวลา\' p',
                    yesterday: '\'เมื่อวานนี้เวลา\' p',
                    today: '\'วันนี้เวลา\' p',
                    tomorrow: '\'พรุ่งนี้เวลา\' p',
                    nextWeek: 'eeee \'เวลา\' p',
                    other: 'P'
                },
                qp = {
                    code: 'th',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Fp[e] ? Fp[e] : 1 === t ? Fp[e].one : Fp[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? 'halfAMinute' === e ? 'ใน' + r : 'ใน ' + r : r + 'ที่ผ่านมา' : r
                    },
                    formatLong: Xp,
                    formatRelative: function (e, t, n, r) {
                        return Up[e]
                    },
                    localize: {
                        ordinalNumber: function (e) {
                            return Number(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'B',
                                    'คศ'
                                ],
                                abbreviated: [
                                    'BC',
                                    'ค.ศ.'
                                ],
                                wide: [
                                    'ปีก่อนคริสตกาล',
                                    'คริสต์ศักราช'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    'ไตรมาสแรก',
                                    'ไตรมาสที่สอง',
                                    'ไตรมาสที่สาม',
                                    'ไตรมาสที่สี่'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ม.ค.',
                                    'ก.พ.',
                                    'มี.ค.',
                                    'เม.ย.',
                                    'พ.ค.',
                                    'มิ.ย.',
                                    'ก.ค.',
                                    'ส.ค.',
                                    'ก.ย.',
                                    'ต.ค.',
                                    'พ.ย.',
                                    'ธ.ค.'
                                ],
                                abbreviated: [
                                    'ม.ค.',
                                    'ก.พ.',
                                    'มี.ค.',
                                    'เม.ย.',
                                    'พ.ค.',
                                    'มิ.ย.',
                                    'ก.ค.',
                                    'ส.ค.',
                                    'ก.ย.',
                                    'ต.ค.',
                                    'พ.ย.',
                                    'ธ.ค.'
                                ],
                                wide: [
                                    'มกราคม',
                                    'กุมภาพันธ์',
                                    'มีนาคม',
                                    'เมษายน',
                                    'พฤษภาคม',
                                    'มิถุนายน',
                                    'กรกฎาคม',
                                    'สิงหาคม',
                                    'กันยายน',
                                    'ตุลาคม',
                                    'พฤศจิกายน',
                                    'ธันวาคม'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'อา.',
                                    'จ.',
                                    'อ.',
                                    'พ.',
                                    'พฤ.',
                                    'ศ.',
                                    'ส.'
                                ],
                                short: [
                                    'อา.',
                                    'จ.',
                                    'อ.',
                                    'พ.',
                                    'พฤ.',
                                    'ศ.',
                                    'ส.'
                                ],
                                abbreviated: [
                                    'อา.',
                                    'จ.',
                                    'อ.',
                                    'พ.',
                                    'พฤ.',
                                    'ศ.',
                                    'ส.'
                                ],
                                wide: [
                                    'อาทิตย์',
                                    'จันทร์',
                                    'อังคาร',
                                    'พุธ',
                                    'พฤหัสบดี',
                                    'ศุกร์',
                                    'เสาร์'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ก่อนเที่ยง',
                                    pm: 'หลังเที่ยง',
                                    midnight: 'เที่ยงคืน',
                                    noon: 'เที่ยง',
                                    morning: 'เช้า',
                                    afternoon: 'บ่าย',
                                    evening: 'เย็น',
                                    night: 'กลางคืน'
                                },
                                abbreviated: {
                                    am: 'ก่อนเที่ยง',
                                    pm: 'หลังเที่ยง',
                                    midnight: 'เที่ยงคืน',
                                    noon: 'เที่ยง',
                                    morning: 'เช้า',
                                    afternoon: 'บ่าย',
                                    evening: 'เย็น',
                                    night: 'กลางคืน'
                                },
                                wide: {
                                    am: 'ก่อนเที่ยง',
                                    pm: 'หลังเที่ยง',
                                    midnight: 'เที่ยงคืน',
                                    noon: 'เที่ยง',
                                    morning: 'เช้า',
                                    afternoon: 'บ่าย',
                                    evening: 'เย็น',
                                    night: 'กลางคืน'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ก่อนเที่ยง',
                                    pm: 'หลังเที่ยง',
                                    midnight: 'เที่ยงคืน',
                                    noon: 'เที่ยง',
                                    morning: 'ตอนเช้า',
                                    afternoon: 'ตอนกลางวัน',
                                    evening: 'ตอนเย็น',
                                    night: 'ตอนกลางคืน'
                                },
                                abbreviated: {
                                    am: 'ก่อนเที่ยง',
                                    pm: 'หลังเที่ยง',
                                    midnight: 'เที่ยงคืน',
                                    noon: 'เที่ยง',
                                    morning: 'ตอนเช้า',
                                    afternoon: 'ตอนกลางวัน',
                                    evening: 'ตอนเย็น',
                                    night: 'ตอนกลางคืน'
                                },
                                wide: {
                                    am: 'ก่อนเที่ยง',
                                    pm: 'หลังเที่ยง',
                                    midnight: 'เที่ยงคืน',
                                    noon: 'เที่ยง',
                                    morning: 'ตอนเช้า',
                                    afternoon: 'ตอนกลางวัน',
                                    evening: 'ตอนเย็น',
                                    night: 'ตอนกลางคืน'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^\d+/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^([bB]|[aA]|คศ)/i,
                                abbreviated: /^([bB]\.?\s?[cC]\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?|ค\.?ศ\.?)/i,
                                wide: /^(ก่อนคริสตกาล|คริสต์ศักราช|คริสตกาล)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^[bB]/i,
                                    /^(^[aA]|ค\.?ศ\.?|คริสตกาล|คริสต์ศักราช|)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^ไตรมาส(ที่)? ?[1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /(1|แรก|หนึ่ง)/i,
                                    /(2|สอง)/i,
                                    /(3|สาม)/i,
                                    /(4|สี่)/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(ม\.?ค\.?|ก\.?พ\.?|มี\.?ค\.?|เม\.?ย\.?|พ\.?ค\.?|มิ\.?ย\.?|ก\.?ค\.?|ส\.?ค\.?|ก\.?ย\.?|ต\.?ค\.?|พ\.?ย\.?|ธ\.?ค\.?)/i,
                                abbreviated: /^(ม\.?ค\.?|ก\.?พ\.?|มี\.?ค\.?|เม\.?ย\.?|พ\.?ค\.?|มิ\.?ย\.?|ก\.?ค\.?|ส\.?ค\.?|ก\.?ย\.?|ต\.?ค\.?|พ\.?ย\.?|ธ\.?ค\.?')/i,
                                wide: /^(มกราคม|กุมภาพันธ์|มีนาคม|เมษายน|พฤษภาคม|มิถุนายน|กรกฎาคม|สิงหาคม|กันยายน|ตุลาคม|พฤศจิกายน|ธันวาคม)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                wide: [
                                    /^มก/i,
                                    /^กุม/i,
                                    /^มี/i,
                                    /^เม/i,
                                    /^พฤษ/i,
                                    /^มิ/i,
                                    /^กรก/i,
                                    /^ส/i,
                                    /^กัน/i,
                                    /^ต/i,
                                    /^พฤศ/i,
                                    /^ธ/i
                                ],
                                any: [
                                    /^ม\.?ค\.?/i,
                                    /^ก\.?พ\.?/i,
                                    /^มี\.?ค\.?/i,
                                    /^เม\.?ย\.?/i,
                                    /^พ\.?ค\.?/i,
                                    /^มิ\.?ย\.?/i,
                                    /^ก\.?ค\.?/i,
                                    /^ส\.?ค\.?/i,
                                    /^ก\.?ย\.?/i,
                                    /^ต\.?ค\.?/i,
                                    /^พ\.?ย\.?/i,
                                    /^ธ\.?ค\.?/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i,
                                short: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i,
                                abbreviated: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i,
                                wide: /^(อาทิตย์|จันทร์|อังคาร|พุธ|พฤหัสบดี|ศุกร์|เสาร์)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                wide: [
                                    /^อา/i,
                                    /^จั/i,
                                    /^อั/i,
                                    /^พุธ/i,
                                    /^พฤ/i,
                                    /^ศ/i,
                                    /^เส/i
                                ],
                                any: [
                                    /^อา/i,
                                    /^จ/i,
                                    /^อ/i,
                                    /^พ(?!ฤ)/i,
                                    /^พฤ/i,
                                    /^ศ/i,
                                    /^ส/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(ก่อนเที่ยง|หลังเที่ยง|เที่ยงคืน|เที่ยง|(ตอน.*?)?.*(เที่ยง|เช้า|บ่าย|เย็น|กลางคืน))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ก่อนเที่ยง/i,
                                    pm: /^หลังเที่ยง/i,
                                    midnight: /^เที่ยงคืน/i,
                                    noon: /^เที่ยง/i,
                                    morning: /เช้า/i,
                                    afternoon: /บ่าย/i,
                                    evening: /เย็น/i,
                                    night: /กลางคืน/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                Gp = {
                    lessThanXSeconds: {
                        one: 'bir saniyeden az',
                        other: '{{count}} saniyeden az'
                    },
                    xSeconds: {
                        one: '1 saniye',
                        other: '{{count}} saniye'
                    },
                    halfAMinute: 'yarım dakika',
                    lessThanXMinutes: {
                        one: 'bir dakikadan az',
                        other: '{{count}} dakikadan az'
                    },
                    xMinutes: {
                        one: '1 dakika',
                        other: '{{count}} dakika'
                    },
                    aboutXHours: {
                        one: 'yaklaşık 1 saat',
                        other: 'yaklaşık {{count}} saat'
                    },
                    xHours: {
                        one: '1 saat',
                        other: '{{count}} saat'
                    },
                    xDays: {
                        one: '1 gün',
                        other: '{{count}} gün'
                    },
                    aboutXWeeks: {
                        one: 'yaklaşık 1 hafta',
                        other: 'yaklaşık {{count}} hafta'
                    },
                    xWeeks: {
                        one: '1 hafta',
                        other: '{{count}} hafta'
                    },
                    aboutXMonths: {
                        one: 'yaklaşık 1 ay',
                        other: 'yaklaşık {{count}} ay'
                    },
                    xMonths: {
                        one: '1 ay',
                        other: '{{count}} ay'
                    },
                    aboutXYears: {
                        one: 'yaklaşık 1 yıl',
                        other: 'yaklaşık {{count}} yıl'
                    },
                    xYears: {
                        one: '1 yıl',
                        other: '{{count}} yıl'
                    },
                    overXYears: {
                        one: '1 yıldan fazla',
                        other: '{{count}} yıldan fazla'
                    },
                    almostXYears: {
                        one: 'neredeyse 1 yıl',
                        other: 'neredeyse {{count}} yıl'
                    }
                },
                Vp = {
                    date: at({
                        formats: {
                            full: 'd MMMM y EEEE',
                            long: 'd MMMM y',
                            medium: 'd MMM y',
                            short: 'dd.MM.yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'saat\' {{time}}',
                            long: '{{date}} \'saat\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Yp = {
                    lastWeek: '\'geçen hafta\' eeee \'saat\' p',
                    yesterday: '\'dün saat\' p',
                    today: '\'bugün saat\' p',
                    tomorrow: '\'yarın saat\' p',
                    nextWeek: 'eeee \'saat\' p',
                    other: 'P'
                },
                Bp = {
                    code: 'tr',
                    formatDistance: function (e, t, n) {
                        var r,
                            a = Gp[e];
                        return r = 'string' == typeof a ? a : 1 === t ? a.one : a.other.replace('{{count}}', t.toString()),
                            null != n && n.addSuffix ? n.comparison && n.comparison > 0 ? r + ' sonra' : r + ' önce' : r
                    },
                    formatLong: Vp,
                    formatRelative: function (e, t, n, r) {
                        return Yp[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e) + '.'
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'MÖ',
                                    'MS'
                                ],
                                abbreviated: [
                                    'MÖ',
                                    'MS'
                                ],
                                wide: [
                                    'Milattan Önce',
                                    'Milattan Sonra'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1Ç',
                                    '2Ç',
                                    '3Ç',
                                    '4Ç'
                                ],
                                wide: [
                                    'İlk çeyrek',
                                    'İkinci Çeyrek',
                                    'Üçüncü çeyrek',
                                    'Son çeyrek'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'O',
                                    'Ş',
                                    'M',
                                    'N',
                                    'M',
                                    'H',
                                    'T',
                                    'A',
                                    'E',
                                    'E',
                                    'K',
                                    'A'
                                ],
                                abbreviated: [
                                    'Oca',
                                    'Şub',
                                    'Mar',
                                    'Nis',
                                    'May',
                                    'Haz',
                                    'Tem',
                                    'Ağu',
                                    'Eyl',
                                    'Eki',
                                    'Kas',
                                    'Ara'
                                ],
                                wide: [
                                    'Ocak',
                                    'Şubat',
                                    'Mart',
                                    'Nisan',
                                    'Mayıs',
                                    'Haziran',
                                    'Temmuz',
                                    'Ağustos',
                                    'Eylül',
                                    'Ekim',
                                    'Kasım',
                                    'Aralık'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'P',
                                    'P',
                                    'S',
                                    'Ç',
                                    'P',
                                    'C',
                                    'C'
                                ],
                                short: [
                                    'Pz',
                                    'Pt',
                                    'Sa',
                                    'Ça',
                                    'Pe',
                                    'Cu',
                                    'Ct'
                                ],
                                abbreviated: [
                                    'Paz',
                                    'Pzt',
                                    'Sal',
                                    'Çar',
                                    'Per',
                                    'Cum',
                                    'Cts'
                                ],
                                wide: [
                                    'Pazar',
                                    'Pazartesi',
                                    'Salı',
                                    'Çarşamba',
                                    'Perşembe',
                                    'Cuma',
                                    'Cumartesi'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'öö',
                                    pm: 'ös',
                                    midnight: 'gy',
                                    noon: 'ö',
                                    morning: 'sa',
                                    afternoon: 'ös',
                                    evening: 'ak',
                                    night: 'ge'
                                },
                                abbreviated: {
                                    am: 'ÖÖ',
                                    pm: 'ÖS',
                                    midnight: 'gece yarısı',
                                    noon: 'öğle',
                                    morning: 'sabah',
                                    afternoon: 'öğleden sonra',
                                    evening: 'akşam',
                                    night: 'gece'
                                },
                                wide: {
                                    am: 'Ö.Ö.',
                                    pm: 'Ö.S.',
                                    midnight: 'gece yarısı',
                                    noon: 'öğle',
                                    morning: 'sabah',
                                    afternoon: 'öğleden sonra',
                                    evening: 'akşam',
                                    night: 'gece'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'öö',
                                    pm: 'ös',
                                    midnight: 'gy',
                                    noon: 'ö',
                                    morning: 'sa',
                                    afternoon: 'ös',
                                    evening: 'ak',
                                    night: 'ge'
                                },
                                abbreviated: {
                                    am: 'ÖÖ',
                                    pm: 'ÖS',
                                    midnight: 'gece yarısı',
                                    noon: 'öğlen',
                                    morning: 'sabahleyin',
                                    afternoon: 'öğleden sonra',
                                    evening: 'akşamleyin',
                                    night: 'geceleyin'
                                },
                                wide: {
                                    am: 'ö.ö.',
                                    pm: 'ö.s.',
                                    midnight: 'gece yarısı',
                                    noon: 'öğlen',
                                    morning: 'sabahleyin',
                                    afternoon: 'öğleden sonra',
                                    evening: 'akşamleyin',
                                    night: 'geceleyin'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(\.)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(mö|ms)/i,
                                abbreviated: /^(mö|ms)/i,
                                wide: /^(milattan önce|milattan sonra)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /(^mö|^milattan önce)/i,
                                    /(^ms|^milattan sonra)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]ç/i,
                                wide: /^((i|İ)lk|(i|İ)kinci|üçüncü|son) çeyrek/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ],
                                abbreviated: [
                                    /1ç/i,
                                    /2ç/i,
                                    /3ç/i,
                                    /4ç/i
                                ],
                                wide: [
                                    /^(i|İ)lk çeyrek/i,
                                    /(i|İ)kinci çeyrek/i,
                                    /üçüncü çeyrek/i,
                                    /son çeyrek/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[oşmnhtaek]/i,
                                abbreviated: /^(oca|şub|mar|nis|may|haz|tem|ağu|eyl|eki|kas|ara)/i,
                                wide: /^(ocak|şubat|mart|nisan|mayıs|haziran|temmuz|ağustos|eylül|ekim|kasım|aralık)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^o/i,
                                    /^ş/i,
                                    /^m/i,
                                    /^n/i,
                                    /^m/i,
                                    /^h/i,
                                    /^t/i,
                                    /^a/i,
                                    /^e/i,
                                    /^e/i,
                                    /^k/i,
                                    /^a/i
                                ],
                                any: [
                                    /^o/i,
                                    /^ş/i,
                                    /^mar/i,
                                    /^n/i,
                                    /^may/i,
                                    /^h/i,
                                    /^t/i,
                                    /^ağ/i,
                                    /^ey/i,
                                    /^ek/i,
                                    /^k/i,
                                    /^ar/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[psçc]/i,
                                short: /^(pz|pt|sa|ça|pe|cu|ct)/i,
                                abbreviated: /^(paz|pzt|sal|çar|per|cum|cts)/i,
                                wide: /^(pazar|pazartesi|salı|çarşamba|perşembe|cuma|cumartesi)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^p/i,
                                    /^p/i,
                                    /^s/i,
                                    /^ç/i,
                                    /^p/i,
                                    /^c/i,
                                    /^c/i
                                ],
                                any: [
                                    /^pz/i,
                                    /^pt/i,
                                    /^sa/i,
                                    /^ça/i,
                                    /^pe/i,
                                    /^cu/i,
                                    /^ct/i
                                ],
                                wide: [
                                    /^pazar/i,
                                    /^pazartesi/i,
                                    /^salı/i,
                                    /^çarşamba/i,
                                    /^perşembe/i,
                                    /^cuma/i,
                                    /cumartesi/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(öö|ös|gy|ö|sa|ös|ak|ge)/i,
                                any: /^(ö\.?\s?[ös]\.?|öğleden sonra|gece yarısı|öğle|(sabah|öğ|akşam|gece)(leyin))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ö\.?ö\.?/i,
                                    pm: /^ö\.?s\.?/i,
                                    midnight: /^(gy|gece yarısı)/i,
                                    noon: /^öğ/i,
                                    morning: /^sa/i,
                                    afternoon: /^öğleden sonra/i,
                                    evening: /^ak/i,
                                    night: /^ge/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                $p = {
                    lessThanXSeconds: {
                        one: 'بىر سىكۇنت ئىچىدە',
                        other: 'سىكۇنت ئىچىدە {{count}}'
                    },
                    xSeconds: {
                        one: 'بىر سىكۇنت',
                        other: 'سىكۇنت {{count}}'
                    },
                    halfAMinute: 'يىرىم مىنۇت',
                    lessThanXMinutes: {
                        one: 'بىر مىنۇت ئىچىدە',
                        other: 'مىنۇت ئىچىدە {{count}}'
                    },
                    xMinutes: {
                        one: 'بىر مىنۇت',
                        other: 'مىنۇت {{count}}'
                    },
                    aboutXHours: {
                        one: 'تەخمىنەن بىر سائەت',
                        other: 'سائەت {{count}} تەخمىنەن'
                    },
                    xHours: {
                        one: 'بىر سائەت',
                        other: 'سائەت {{count}}'
                    },
                    xDays: {
                        one: 'بىر كۈن',
                        other: 'كۈن {{count}}'
                    },
                    aboutXWeeks: {
                        one: 'تەخمىنەن بىرھەپتە',
                        other: 'ھەپتە {{count}} تەخمىنەن'
                    },
                    xWeeks: {
                        one: 'بىرھەپتە',
                        other: 'ھەپتە {{count}}'
                    },
                    aboutXMonths: {
                        one: 'تەخمىنەن بىر ئاي',
                        other: 'ئاي {{count}} تەخمىنەن'
                    },
                    xMonths: {
                        one: 'بىر ئاي',
                        other: 'ئاي {{count}}'
                    },
                    aboutXYears: {
                        one: 'تەخمىنەن بىر يىل',
                        other: 'يىل {{count}} تەخمىنەن'
                    },
                    xYears: {
                        one: 'بىر يىل',
                        other: 'يىل {{count}}'
                    },
                    overXYears: {
                        one: 'بىر يىلدىن ئارتۇق',
                        other: 'يىلدىن ئارتۇق {{count}}'
                    },
                    almostXYears: {
                        one: 'ئاساسەن بىر يىل',
                        other: 'يىل {{count}} ئاساسەن'
                    }
                },
                Qp = {
                    date: at({
                        formats: {
                            full: 'EEEE, MMMM do, y',
                            long: 'MMMM do, y',
                            medium: 'MMM d, y',
                            short: 'MM/dd/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss a zzzz',
                            long: 'h:mm:ss a z',
                            medium: 'h:mm:ss a',
                            short: 'h:mm a'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'دە\' {{time}}',
                            long: '{{date}} \'دە\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Kp = {
                    lastWeek: '\'ئ‍ۆتكەن\' eeee \'دە\' p',
                    yesterday: '\'تۈنۈگۈن دە\' p',
                    today: '\'بۈگۈن دە\' p',
                    tomorrow: '\'ئەتە دە\' p',
                    nextWeek: 'eeee \'دە\' p',
                    other: 'P'
                },
                Jp = {
                    code: 'ug',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof $p[e] ? $p[e] : 1 === t ? $p[e].one : $p[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r : r + ' بولدى' : r
                    },
                    formatLong: Qp,
                    formatRelative: function (e, t, n, r) {
                        return Kp[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return String(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'ب',
                                    'ك'
                                ],
                                abbreviated: [
                                    'ب',
                                    'ك'
                                ],
                                wide: [
                                    'مىيلادىدىن بۇرۇن',
                                    'مىيلادىدىن كىيىن'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                wide: [
                                    'بىرىنجى چارەك',
                                    'ئىككىنجى چارەك',
                                    'ئۈچىنجى چارەك',
                                    'تۆتىنجى چارەك'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'ي',
                                    'ف',
                                    'م',
                                    'ا',
                                    'م',
                                    'ى',
                                    'ى',
                                    'ا',
                                    'س',
                                    'ۆ',
                                    'ن',
                                    'د'
                                ],
                                abbreviated: [
                                    'يانۋار',
                                    'فېۋىرال',
                                    'مارت',
                                    'ئاپرىل',
                                    'ماي',
                                    'ئىيۇن',
                                    'ئىيول',
                                    'ئاۋغۇست',
                                    'سىنتەبىر',
                                    'ئۆكتەبىر',
                                    'نويابىر',
                                    'دىكابىر'
                                ],
                                wide: [
                                    'يانۋار',
                                    'فېۋىرال',
                                    'مارت',
                                    'ئاپرىل',
                                    'ماي',
                                    'ئىيۇن',
                                    'ئىيول',
                                    'ئاۋغۇست',
                                    'سىنتەبىر',
                                    'ئۆكتەبىر',
                                    'نويابىر',
                                    'دىكابىر'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'ي',
                                    'د',
                                    'س',
                                    'چ',
                                    'پ',
                                    'ج',
                                    'ش'
                                ],
                                short: [
                                    'ي',
                                    'د',
                                    'س',
                                    'چ',
                                    'پ',
                                    'ج',
                                    'ش'
                                ],
                                abbreviated: [
                                    'يەكشەنبە',
                                    'دۈشەنبە',
                                    'سەيشەنبە',
                                    'چارشەنبە',
                                    'پەيشەنبە',
                                    'جۈمە',
                                    'شەنبە'
                                ],
                                wide: [
                                    'يەكشەنبە',
                                    'دۈشەنبە',
                                    'سەيشەنبە',
                                    'چارشەنبە',
                                    'پەيشەنبە',
                                    'جۈمە',
                                    'شەنبە'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ئە',
                                    pm: 'چ',
                                    midnight: 'ك',
                                    noon: 'چ',
                                    morning: 'ئەتىگەن',
                                    afternoon: 'چۈشتىن كىيىن',
                                    evening: 'ئاخشىم',
                                    night: 'كىچە'
                                },
                                abbreviated: {
                                    am: 'ئە',
                                    pm: 'چ',
                                    midnight: 'ك',
                                    noon: 'چ',
                                    morning: 'ئەتىگەن',
                                    afternoon: 'چۈشتىن كىيىن',
                                    evening: 'ئاخشىم',
                                    night: 'كىچە'
                                },
                                wide: {
                                    am: 'ئە',
                                    pm: 'چ',
                                    midnight: 'ك',
                                    noon: 'چ',
                                    morning: 'ئەتىگەن',
                                    afternoon: 'چۈشتىن كىيىن',
                                    evening: 'ئاخشىم',
                                    night: 'كىچە'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'ئە',
                                    pm: 'چ',
                                    midnight: 'ك',
                                    noon: 'چ',
                                    morning: 'ئەتىگەندە',
                                    afternoon: 'چۈشتىن كىيىن',
                                    evening: 'ئاخشامدا',
                                    night: 'كىچىدە'
                                },
                                abbreviated: {
                                    am: 'ئە',
                                    pm: 'چ',
                                    midnight: 'ك',
                                    noon: 'چ',
                                    morning: 'ئەتىگەندە',
                                    afternoon: 'چۈشتىن كىيىن',
                                    evening: 'ئاخشامدا',
                                    night: 'كىچىدە'
                                },
                                wide: {
                                    am: 'ئە',
                                    pm: 'چ',
                                    midnight: 'ك',
                                    noon: 'چ',
                                    morning: 'ئەتىگەندە',
                                    afternoon: 'چۈشتىن كىيىن',
                                    evening: 'ئاخشامدا',
                                    night: 'كىچىدە'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(ب|ك)/i,
                                wide: /^(مىيلادىدىن بۇرۇن|مىيلادىدىن كىيىن)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^بۇرۇن/i,
                                    /^كىيىن/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^چ[1234]/i,
                                wide: /^چارەك [1234]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[يفمئامئ‍ئاسۆند]/i,
                                abbreviated: /^(يانۋار|فېۋىرال|مارت|ئاپرىل|ماي|ئىيۇن|ئىيول|ئاۋغۇست|سىنتەبىر|ئۆكتەبىر|نويابىر|دىكابىر)/i,
                                wide: /^(يانۋار|فېۋىرال|مارت|ئاپرىل|ماي|ئىيۇن|ئىيول|ئاۋغۇست|سىنتەبىر|ئۆكتەبىر|نويابىر|دىكابىر)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ي/i,
                                    /^ف/i,
                                    /^م/i,
                                    /^ا/i,
                                    /^م/i,
                                    /^ى‍/i,
                                    /^ى‍/i,
                                    /^ا‍/i,
                                    /^س/i,
                                    /^ۆ/i,
                                    /^ن/i,
                                    /^د/i
                                ],
                                any: [
                                    /^يان/i,
                                    /^فېۋ/i,
                                    /^مار/i,
                                    /^ئاپ/i,
                                    /^ماي/i,
                                    /^ئىيۇن/i,
                                    /^ئىيول/i,
                                    /^ئاۋ/i,
                                    /^سىن/i,
                                    /^ئۆك/i,
                                    /^نوي/i,
                                    /^دىك/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[دسچپجشي]/i,
                                short: /^(يە|دۈ|سە|چا|پە|جۈ|شە)/i,
                                abbreviated: /^(يە|دۈ|سە|چا|پە|جۈ|شە)/i,
                                wide: /^(يەكشەنبە|دۈشەنبە|سەيشەنبە|چارشەنبە|پەيشەنبە|جۈمە|شەنبە)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^ي/i,
                                    /^د/i,
                                    /^س/i,
                                    /^چ/i,
                                    /^پ/i,
                                    /^ج/i,
                                    /^ش/i
                                ],
                                any: [
                                    /^ي/i,
                                    /^د/i,
                                    /^س/i,
                                    /^چ/i,
                                    /^پ/i,
                                    /^ج/i,
                                    /^ش/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(ئە|چ|ك|چ|(دە|ئەتىگەن) ( ئە‍|چۈشتىن كىيىن|ئاخشىم|كىچە))/i,
                                any: /^(ئە|چ|ك|چ|(دە|ئەتىگەن) ( ئە‍|چۈشتىن كىيىن|ئاخشىم|كىچە))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^ئە/i,
                                    pm: /^چ/i,
                                    midnight: /^ك/i,
                                    noon: /^چ/i,
                                    morning: /ئەتىگەن/i,
                                    afternoon: /چۈشتىن كىيىن/i,
                                    evening: /ئاخشىم/i,
                                    night: /كىچە/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                };
            function Zp(e, t) {
                if (void 0 !== e.one && 1 === t) return e.one;
                var n = t % 10,
                    r = t % 100;
                return 1 === n && 11 !== r ? e.singularNominative.replace('{{count}}', t) : n >= 2 && n <= 4 && (r < 10 || r > 20) ? e.singularGenitive.replace('{{count}}', t) : e.pluralGenitive.replace('{{count}}', t)
            }
            function eg(e) {
                return function (t, n) {
                    return n.addSuffix ? n.comparison > 0 ? e.future ? Zp(e.future, t) : 'за ' + Zp(e.regular, t) : e.past ? Zp(e.past, t) : Zp(e.regular, t) + ' тому' : Zp(e.regular, t)
                }
            }
            var tg = {
                lessThanXSeconds: eg({
                    regular: {
                        one: 'менше секунди',
                        singularNominative: 'менше {{count}} секунди',
                        singularGenitive: 'менше {{count}} секунд',
                        pluralGenitive: 'менше {{count}} секунд'
                    },
                    future: {
                        one: 'менше, ніж за секунду',
                        singularNominative: 'менше, ніж за {{count}} секунду',
                        singularGenitive: 'менше, ніж за {{count}} секунди',
                        pluralGenitive: 'менше, ніж за {{count}} секунд'
                    }
                }),
                xSeconds: eg({
                    regular: {
                        singularNominative: '{{count}} секунда',
                        singularGenitive: '{{count}} секунди',
                        pluralGenitive: '{{count}} секунд'
                    },
                    past: {
                        singularNominative: '{{count}} секунду тому',
                        singularGenitive: '{{count}} секунди тому',
                        pluralGenitive: '{{count}} секунд тому'
                    },
                    future: {
                        singularNominative: 'за {{count}} секунду',
                        singularGenitive: 'за {{count}} секунди',
                        pluralGenitive: 'за {{count}} секунд'
                    }
                }),
                halfAMinute: function (e, t) {
                    return t.addSuffix ? t.comparison > 0 ? 'за півхвилини' : 'півхвилини тому' : 'півхвилини'
                },
                lessThanXMinutes: eg({
                    regular: {
                        one: 'менше хвилини',
                        singularNominative: 'менше {{count}} хвилини',
                        singularGenitive: 'менше {{count}} хвилин',
                        pluralGenitive: 'менше {{count}} хвилин'
                    },
                    future: {
                        one: 'менше, ніж за хвилину',
                        singularNominative: 'менше, ніж за {{count}} хвилину',
                        singularGenitive: 'менше, ніж за {{count}} хвилини',
                        pluralGenitive: 'менше, ніж за {{count}} хвилин'
                    }
                }),
                xMinutes: eg({
                    regular: {
                        singularNominative: '{{count}} хвилина',
                        singularGenitive: '{{count}} хвилини',
                        pluralGenitive: '{{count}} хвилин'
                    },
                    past: {
                        singularNominative: '{{count}} хвилину тому',
                        singularGenitive: '{{count}} хвилини тому',
                        pluralGenitive: '{{count}} хвилин тому'
                    },
                    future: {
                        singularNominative: 'за {{count}} хвилину',
                        singularGenitive: 'за {{count}} хвилини',
                        pluralGenitive: 'за {{count}} хвилин'
                    }
                }),
                aboutXHours: eg({
                    regular: {
                        singularNominative: 'близько {{count}} години',
                        singularGenitive: 'близько {{count}} годин',
                        pluralGenitive: 'близько {{count}} годин'
                    },
                    future: {
                        singularNominative: 'приблизно за {{count}} годину',
                        singularGenitive: 'приблизно за {{count}} години',
                        pluralGenitive: 'приблизно за {{count}} годин'
                    }
                }),
                xHours: eg({
                    regular: {
                        singularNominative: '{{count}} годину',
                        singularGenitive: '{{count}} години',
                        pluralGenitive: '{{count}} годин'
                    }
                }),
                xDays: eg({
                    regular: {
                        singularNominative: '{{count}} день',
                        singularGenitive: '{{count}} дня',
                        pluralGenitive: '{{count}} днів'
                    }
                }),
                aboutXWeeks: eg({
                    regular: {
                        singularNominative: 'близько {{count}} тижня',
                        singularGenitive: 'близько {{count}} тижнів',
                        pluralGenitive: 'близько {{count}} тижнів'
                    },
                    future: {
                        singularNominative: 'приблизно за {{count}} тиждень',
                        singularGenitive: 'приблизно за {{count}} тижні',
                        pluralGenitive: 'приблизно за {{count}} тижні'
                    }
                }),
                xWeeks: eg({
                    regular: {
                        singularNominative: '{{count}} тиждень',
                        singularGenitive: '{{count}} тижня',
                        pluralGenitive: '{{count}} тижні'
                    }
                }),
                aboutXMonths: eg({
                    regular: {
                        singularNominative: 'близько {{count}} місяця',
                        singularGenitive: 'близько {{count}} місяців',
                        pluralGenitive: 'близько {{count}} місяців'
                    },
                    future: {
                        singularNominative: 'приблизно за {{count}} місяць',
                        singularGenitive: 'приблизно за {{count}} місяця',
                        pluralGenitive: 'приблизно за {{count}} місяців'
                    }
                }),
                xMonths: eg({
                    regular: {
                        singularNominative: '{{count}} місяць',
                        singularGenitive: '{{count}} місяця',
                        pluralGenitive: '{{count}} місяців'
                    }
                }),
                aboutXYears: eg({
                    regular: {
                        singularNominative: 'близько {{count}} року',
                        singularGenitive: 'близько {{count}} років',
                        pluralGenitive: 'близько {{count}} років'
                    },
                    future: {
                        singularNominative: 'приблизно за {{count}} рік',
                        singularGenitive: 'приблизно за {{count}} роки',
                        pluralGenitive: 'приблизно за {{count}} років'
                    }
                }),
                xYears: eg({
                    regular: {
                        singularNominative: '{{count}} рік',
                        singularGenitive: '{{count}} роки',
                        pluralGenitive: '{{count}} років'
                    }
                }),
                overXYears: eg({
                    regular: {
                        singularNominative: 'більше {{count}} року',
                        singularGenitive: 'більше {{count}} років',
                        pluralGenitive: 'більше {{count}} років'
                    },
                    future: {
                        singularNominative: 'більше, ніж за {{count}} рік',
                        singularGenitive: 'більше, ніж за {{count}} роки',
                        pluralGenitive: 'більше, ніж за {{count}} років'
                    }
                }),
                almostXYears: eg({
                    regular: {
                        singularNominative: 'майже {{count}} рік',
                        singularGenitive: 'майже {{count}} роки',
                        pluralGenitive: 'майже {{count}} років'
                    },
                    future: {
                        singularNominative: 'майже за {{count}} рік',
                        singularGenitive: 'майже за {{count}} роки',
                        pluralGenitive: 'майже за {{count}} років'
                    }
                })
            },
                ng = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM y \'р.\'',
                            long: 'do MMMM y \'р.\'',
                            medium: 'd MMM y \'р.\'',
                            short: 'dd.MM.y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} \'о\' {{time}}',
                            long: '{{date}} \'о\' {{time}}',
                            medium: '{{date}}, {{time}}',
                            short: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                rg = [
                    'неділю',
                    'понеділок',
                    'вівторок',
                    'середу',
                    'четвер',
                    'п’ятницю',
                    'суботу'
                ];
            function ag(e) {
                return '\'у ' + rg[e] + ' о\' p'
            }
            var ig = {
                lastWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? ag(r) : function (e) {
                        var t = rg[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 5:
                            case 6:
                                return '\'у минулу ' + t + ' о\' p';
                            case 1:
                            case 2:
                            case 4:
                                return '\'у минулий ' + t + ' о\' p'
                        }
                    }(r)
                },
                yesterday: '\'вчора о\' p',
                today: '\'сьогодні о\' p',
                tomorrow: '\'завтра о\' p',
                nextWeek: function (e, t, n) {
                    var r = e.getUTCDay();
                    return nl(e, t, n) ? ag(r) : function (e) {
                        var t = rg[e];
                        switch (e) {
                            case 0:
                            case 3:
                            case 5:
                            case 6:
                                return '\'у наступну ' + t + ' о\' p';
                            case 1:
                            case 2:
                            case 4:
                                return '\'у наступний ' + t + ' о\' p'
                        }
                    }(r)
                },
                other: 'P'
            },
                og = {
                    code: 'uk',
                    formatDistance: function (e, t, n) {
                        return n = n || {
                        },
                            tg[e](t, n)
                    },
                    formatLong: ng,
                    formatRelative: function (e, t, n, r) {
                        var a = ig[e];
                        return 'function' == typeof a ? a(t, n, r) : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = String((t || {
                            }).unit);
                            return e + ('date' === n ? 3 === e || 23 === e ? '-є' : '-е' : 'minute' === n || 'second' === n || 'hour' === n ? '-а' : '-й')
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'до н.е.',
                                    'н.е.'
                                ],
                                abbreviated: [
                                    'до н. е.',
                                    'н. е.'
                                ],
                                wide: [
                                    'до нашої ери',
                                    'нашої ери'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1-й кв.',
                                    '2-й кв.',
                                    '3-й кв.',
                                    '4-й кв.'
                                ],
                                wide: [
                                    '1-й квартал',
                                    '2-й квартал',
                                    '3-й квартал',
                                    '4-й квартал'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'С',
                                    'Л',
                                    'Б',
                                    'К',
                                    'Т',
                                    'Ч',
                                    'Л',
                                    'С',
                                    'В',
                                    'Ж',
                                    'Л',
                                    'Г'
                                ],
                                abbreviated: [
                                    'січ.',
                                    'лют.',
                                    'берез.',
                                    'квіт.',
                                    'трав.',
                                    'черв.',
                                    'лип.',
                                    'серп.',
                                    'верес.',
                                    'жовт.',
                                    'листоп.',
                                    'груд.'
                                ],
                                wide: [
                                    'січень',
                                    'лютий',
                                    'березень',
                                    'квітень',
                                    'травень',
                                    'червень',
                                    'липень',
                                    'серпень',
                                    'вересень',
                                    'жовтень',
                                    'листопад',
                                    'грудень'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    'С',
                                    'Л',
                                    'Б',
                                    'К',
                                    'Т',
                                    'Ч',
                                    'Л',
                                    'С',
                                    'В',
                                    'Ж',
                                    'Л',
                                    'Г'
                                ],
                                abbreviated: [
                                    'січ.',
                                    'лют.',
                                    'берез.',
                                    'квіт.',
                                    'трав.',
                                    'черв.',
                                    'лип.',
                                    'серп.',
                                    'верес.',
                                    'жовт.',
                                    'листоп.',
                                    'груд.'
                                ],
                                wide: [
                                    'січня',
                                    'лютого',
                                    'березня',
                                    'квітня',
                                    'травня',
                                    'червня',
                                    'липня',
                                    'серпня',
                                    'вересня',
                                    'жовтня',
                                    'листопада',
                                    'грудня'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Н',
                                    'П',
                                    'В',
                                    'С',
                                    'Ч',
                                    'П',
                                    'С'
                                ],
                                short: [
                                    'нд',
                                    'пн',
                                    'вт',
                                    'ср',
                                    'чт',
                                    'пт',
                                    'сб'
                                ],
                                abbreviated: [
                                    'нед',
                                    'пон',
                                    'вів',
                                    'сер',
                                    'чтв',
                                    'птн',
                                    'суб'
                                ],
                                wide: [
                                    'неділя',
                                    'понеділок',
                                    'вівторок',
                                    'середа',
                                    'четвер',
                                    'п’ятниця',
                                    'субота'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'півн.',
                                    noon: 'пол.',
                                    morning: 'ранок',
                                    afternoon: 'день',
                                    evening: 'веч.',
                                    night: 'ніч'
                                },
                                abbreviated: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'півн.',
                                    noon: 'пол.',
                                    morning: 'ранок',
                                    afternoon: 'день',
                                    evening: 'веч.',
                                    night: 'ніч'
                                },
                                wide: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'північ',
                                    noon: 'полудень',
                                    morning: 'ранок',
                                    afternoon: 'день',
                                    evening: 'вечір',
                                    night: 'ніч'
                                }
                            },
                            defaultWidth: 'any',
                            formattingValues: {
                                narrow: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'півн.',
                                    noon: 'пол.',
                                    morning: 'ранку',
                                    afternoon: 'дня',
                                    evening: 'веч.',
                                    night: 'ночі'
                                },
                                abbreviated: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'півн.',
                                    noon: 'пол.',
                                    morning: 'ранку',
                                    afternoon: 'дня',
                                    evening: 'веч.',
                                    night: 'ночі'
                                },
                                wide: {
                                    am: 'ДП',
                                    pm: 'ПП',
                                    midnight: 'північ',
                                    noon: 'полудень',
                                    morning: 'ранку',
                                    afternoon: 'дня',
                                    evening: 'веч.',
                                    night: 'ночі'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(-?(е|й|є|а|я))?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^((до )?н\.?\s?е\.?)/i,
                                abbreviated: /^((до )?н\.?\s?е\.?)/i,
                                wide: /^(до нашої ери|нашої ери|наша ера)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^д/i,
                                    /^н/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234](-?[иі]?й?)? кв.?/i,
                                wide: /^[1234](-?[иі]?й?)? квартал/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[слбктчвжг]/i,
                                abbreviated: /^(січ|лют|бер|берез|кві|трав?|чер|лип|сер|вер|жов|лис(топ)?|груд)\.?/i,
                                wide: /^(січень|січня|лютий|лютого|березень|березня|квітень|квітня|травень|травня|липень|липня|серпень|серпня|вересень|вересня|жовтень|жовтня|листопада?|грудень|грудня)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^с/i,
                                    /^л/i,
                                    /^б/i,
                                    /^к/i,
                                    /^т/i,
                                    /^ч/i,
                                    /^л/i,
                                    /^с/i,
                                    /^в/i,
                                    /^ж/i,
                                    /^л/i,
                                    /^г/i
                                ],
                                any: [
                                    /^сі/i,
                                    /^лю/i,
                                    /^б/i,
                                    /^к/i,
                                    /^т/i,
                                    /^ч/i,
                                    /^лип/i,
                                    /^се/i,
                                    /^в/i,
                                    /^ж/i,
                                    /^лис/i,
                                    /^г/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[нпвсч]/i,
                                short: /^(нд|пн|вт|ср|чт|пт|сб)\.?/i,
                                abbreviated: /^(нед|пон|вів|сер|че?тв|птн?|суб)\.?/i,
                                wide: /^(неділ[яі]|понеділ[ок][ка]|вівтор[ок][ка]|серед[аи]|четвер(га)?|п\W*?ятниц[яі]|субот[аи])/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^н/i,
                                    /^п/i,
                                    /^в/i,
                                    /^с/i,
                                    /^ч/i,
                                    /^п/i,
                                    /^с/i
                                ],
                                any: [
                                    /^н/i,
                                    /^п[он]/i,
                                    /^в/i,
                                    /^с[ер]/i,
                                    /^ч/i,
                                    /^п\W*?[ят]/i,
                                    /^с[уб]/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^([дп]п|півн\.?|пол\.?|ранок|ранку|день|дня|веч\.?|ніч|ночі)/i,
                                abbreviated: /^([дп]п|півн\.?|пол\.?|ранок|ранку|день|дня|веч\.?|ніч|ночі)/i,
                                wide: /^([дп]п|північ|полудень|ранок|ранку|день|дня|вечір|вечора|ніч|ночі)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: {
                                    am: /^дп/i,
                                    pm: /^пп/i,
                                    midnight: /^півн/i,
                                    noon: /^пол/i,
                                    morning: /^р/i,
                                    afternoon: /^д[ен]/i,
                                    evening: /^в/i,
                                    night: /^н/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                sg = og,
                ug = {
                    lessThanXSeconds: {
                        one: 'sekunddan kam',
                        other: '{{count}} sekunddan kam'
                    },
                    xSeconds: {
                        one: '1 sekund',
                        other: '{{count}} sekund'
                    },
                    halfAMinute: 'yarim minut',
                    lessThanXMinutes: {
                        one: 'bir minutdan kam',
                        other: '{{count}} minutdan kam'
                    },
                    xMinutes: {
                        one: '1 minut',
                        other: '{{count}} minut'
                    },
                    aboutXHours: {
                        one: 'tahminan 1 soat',
                        other: 'tahminan {{count}} soat'
                    },
                    xHours: {
                        one: '1 soat',
                        other: '{{count}} soat'
                    },
                    xDays: {
                        one: '1 kun',
                        other: '{{count}} kun'
                    },
                    aboutXWeeks: {
                        one: 'tahminan 1 hafta',
                        other: 'tahminan {{count}} hafta'
                    },
                    xWeeks: {
                        one: '1 hafta',
                        other: '{{count}} hafta'
                    },
                    aboutXMonths: {
                        one: 'tahminan 1 oy',
                        other: 'tahminan {{count}} oy'
                    },
                    xMonths: {
                        one: '1 oy',
                        other: '{{count}} oy'
                    },
                    aboutXYears: {
                        one: 'tahminan 1 yil',
                        other: 'tahminan {{count}} yil'
                    },
                    xYears: {
                        one: '1 yil',
                        other: '{{count}} yil'
                    },
                    overXYears: {
                        one: '1 yildan ko\'p',
                        other: '{{count}} yildan ko\'p'
                    },
                    almostXYears: {
                        one: 'deyarli 1 yil',
                        other: 'deyarli {{count}} yil'
                    }
                },
                lg = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM, y',
                            long: 'do MMMM, y',
                            medium: 'd MMM, y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'h:mm:ss zzzz',
                            long: 'h:mm:ss z',
                            medium: 'h:mm:ss',
                            short: 'h:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            any: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'any'
                    })
                },
                dg = {
                    lastWeek: '\'oldingi\' eeee p \'da\'',
                    yesterday: '\'kecha\' p \'da\'',
                    today: '\'bugun\' p \'da\'',
                    tomorrow: '\'ertaga\' p \'da\'',
                    nextWeek: 'eeee p \'da\'',
                    other: 'P'
                },
                cg = {
                    code: 'uz',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof ug[e] ? ug[e] : 1 === t ? ug[e].one : ug[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + ' dan keyin' : r + ' oldin' : r
                    },
                    formatLong: lg,
                    formatRelative: function (e, t, n, r) {
                        return dg[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'M.A',
                                    'M.'
                                ],
                                abbreviated: [
                                    'M.A',
                                    'M.'
                                ],
                                wide: [
                                    'Miloddan Avvalgi',
                                    'Milodiy'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'CH.1',
                                    'CH.2',
                                    'CH.3',
                                    'CH.4'
                                ],
                                wide: [
                                    '1-chi chorak',
                                    '2-chi chorak',
                                    '3-chi chorak',
                                    '4-chi chorak'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'Y',
                                    'F',
                                    'M',
                                    'A',
                                    'M',
                                    'I',
                                    'I',
                                    'A',
                                    'S',
                                    'O',
                                    'N',
                                    'D'
                                ],
                                abbreviated: [
                                    'Yan',
                                    'Fev',
                                    'Mar',
                                    'Apr',
                                    'May',
                                    'Iyun',
                                    'Iyul',
                                    'Avg',
                                    'Sen',
                                    'Okt',
                                    'Noy',
                                    'Dek'
                                ],
                                wide: [
                                    'Yanvar',
                                    'Fevral',
                                    'Mart',
                                    'Aprel',
                                    'May',
                                    'Iyun',
                                    'Iyul',
                                    'Avgust',
                                    'Sentabr',
                                    'Oktabr',
                                    'Noyabr',
                                    'Dekabr'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Y',
                                    'D',
                                    'S',
                                    'CH',
                                    'P',
                                    'J',
                                    'SH'
                                ],
                                short: [
                                    'Ya',
                                    'Du',
                                    'Se',
                                    'Cho',
                                    'Pa',
                                    'Ju',
                                    'Sha'
                                ],
                                abbreviated: [
                                    'Yak',
                                    'Dush',
                                    'Sesh',
                                    'Chor',
                                    'Pay',
                                    'Jum',
                                    'Shan'
                                ],
                                wide: [
                                    'Yakshanba',
                                    'Dushanba',
                                    'Seshanba',
                                    'Chorshanba',
                                    'Payshanba',
                                    'Juma',
                                    'Shanba'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'y.t',
                                    noon: 'p.',
                                    morning: 'ertalab',
                                    afternoon: 'tushdan keyin',
                                    evening: 'kechqurun',
                                    night: 'tun'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'yarim tun',
                                    noon: 'peshin',
                                    morning: 'ertalab',
                                    afternoon: 'tushdan keyin',
                                    evening: 'kechqurun',
                                    night: 'tun'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'yarim tun',
                                    noon: 'peshin',
                                    morning: 'ertalab',
                                    afternoon: 'tushdan keyin',
                                    evening: 'kechqurun',
                                    night: 'tun'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'a',
                                    pm: 'p',
                                    midnight: 'y.t',
                                    noon: 'p.',
                                    morning: 'ertalab',
                                    afternoon: 'tushdan keyin',
                                    evening: 'kechqurun',
                                    night: 'tun'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'yarim tun',
                                    noon: 'peshin',
                                    morning: 'ertalab',
                                    afternoon: 'tushdan keyin',
                                    evening: 'kechqurun',
                                    night: 'tun'
                                },
                                wide: {
                                    am: 'a.m.',
                                    pm: 'p.m.',
                                    midnight: 'yarim tun',
                                    noon: 'peshin',
                                    morning: 'ertalab',
                                    afternoon: 'tushdan keyin',
                                    evening: 'kechqurun',
                                    night: 'tun'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(chi)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(m\.a|m\.)/i,
                                abbreviated: /^(m\.a\.?\s?m\.?)/i,
                                wide: /^(miloddan avval|miloddan keyin)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^b/i,
                                    /^(a|c)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^q[1234]/i,
                                wide: /^[1234](chi)? chorak/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[yfmasond]/i,
                                abbreviated: /^(yan|fev|mar|apr|may|iyun|iyul|avg|sen|okt|noy|dek)/i,
                                wide: /^(yanvar|fevral|mart|aprel|may|iyun|iyul|avgust|sentabr|oktabr|noyabr|dekabr)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^y/i,
                                    /^f/i,
                                    /^m/i,
                                    /^a/i,
                                    /^m/i,
                                    /^i/i,
                                    /^i/i,
                                    /^a/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ],
                                any: [
                                    /^ya/i,
                                    /^f/i,
                                    /^mar/i,
                                    /^ap/i,
                                    /^may/i,
                                    /^iyun/i,
                                    /^iyul/i,
                                    /^av/i,
                                    /^s/i,
                                    /^o/i,
                                    /^n/i,
                                    /^d/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[ydschj]/i,
                                short: /^(ya|du|se|cho|pa|ju|sha)/i,
                                abbreviated: /^(yak|dush|sesh|chor|pay|jum|shan)/i,
                                wide: /^(yakshanba|dushanba|seshanba|chorshanba|payshanba|juma|shanba)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^y/i,
                                    /^d/i,
                                    /^s/i,
                                    /^ch/i,
                                    /^p/i,
                                    /^j/i,
                                    /^sh/i
                                ],
                                any: [
                                    /^ya/i,
                                    /^d/i,
                                    /^se/i,
                                    /^ch/i,
                                    /^p/i,
                                    /^j/i,
                                    /^sh/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|y\.t|p| (ertalab|tushdan keyin|kechqurun|tun))/i,
                                any: /^([ap]\.?\s?m\.?|yarim tun|peshin| (ertalab|tushdan keyin|kechqurun|tun))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^a/i,
                                    pm: /^p/i,
                                    midnight: /^y\.t/i,
                                    noon: /^pe/i,
                                    morning: /ertalab/i,
                                    afternoon: /tushdan keyin/i,
                                    evening: /kechqurun/i,
                                    night: /tun/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                mg = {
                    lessThanXSeconds: {
                        one: '1 сониядан кам',
                        other: '{{count}} сониядан кам'
                    },
                    xSeconds: {
                        one: '1 сония',
                        other: '{{count}} сония'
                    },
                    halfAMinute: 'ярим дақиқа',
                    lessThanXMinutes: {
                        one: '1 дақиқадан кам',
                        other: '{{count}} дақиқадан кам'
                    },
                    xMinutes: {
                        one: '1 дақиқа',
                        other: '{{count}} дақиқа'
                    },
                    aboutXHours: {
                        one: 'тахминан 1 соат',
                        other: 'тахминан {{count}} соат'
                    },
                    xHours: {
                        one: '1 соат',
                        other: '{{count}} соат'
                    },
                    xDays: {
                        one: '1 кун',
                        other: '{{count}} кун'
                    },
                    aboutXWeeks: {
                        one: 'тахминан 1 хафта',
                        other: 'тахминан {{count}} хафта'
                    },
                    xWeeks: {
                        one: '1 хафта',
                        other: '{{count}} хафта'
                    },
                    aboutXMonths: {
                        one: 'тахминан 1 ой',
                        other: 'тахминан {{count}} ой'
                    },
                    xMonths: {
                        one: '1 ой',
                        other: '{{count}} ой'
                    },
                    aboutXYears: {
                        one: 'тахминан 1 йил',
                        other: 'тахминан {{count}} йил'
                    },
                    xYears: {
                        one: '1 йил',
                        other: '{{count}} йил'
                    },
                    overXYears: {
                        one: '1 йилдан кўп',
                        other: '{{count}} йилдан кўп'
                    },
                    almostXYears: {
                        one: 'деярли 1 йил',
                        other: 'деярли {{count}} йил'
                    }
                },
                fg = {
                    date: at({
                        formats: {
                            full: 'EEEE, do MMMM, y',
                            long: 'do MMMM, y',
                            medium: 'd MMM, y',
                            short: 'dd/MM/yyyy'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'H:mm:ss zzzz',
                            long: 'H:mm:ss z',
                            medium: 'H:mm:ss',
                            short: 'H:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            any: '{{date}}, {{time}}'
                        },
                        defaultWidth: 'any'
                    })
                },
                hg = {
                    lastWeek: '\'ўтган\' eeee p \'да\'',
                    yesterday: '\'кеча\' p \'да\'',
                    today: '\'бугун\' p \'да\'',
                    tomorrow: '\'эртага\' p \'да\'',
                    nextWeek: 'eeee p \'да\'',
                    other: 'P'
                },
                pg = {
                    code: 'uz-Cyrl',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof mg[e] ? mg[e] : 1 === t ? mg[e].one : mg[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + 'дан кейин' : r + ' олдин' : r
                    },
                    formatLong: fg,
                    formatRelative: function (e, t, n, r) {
                        return hg[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            return Number(e)
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'М.А',
                                    'М'
                                ],
                                abbreviated: [
                                    'М.А',
                                    'М'
                                ],
                                wide: [
                                    'Милоддан Аввалги',
                                    'Милодий'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '1-чор.',
                                    '2-чор.',
                                    '3-чор.',
                                    '4-чор.'
                                ],
                                wide: [
                                    '1-чорак',
                                    '2-чорак',
                                    '3-чорак',
                                    '4-чорак'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    'Я',
                                    'Ф',
                                    'М',
                                    'А',
                                    'М',
                                    'И',
                                    'И',
                                    'А',
                                    'С',
                                    'О',
                                    'Н',
                                    'Д'
                                ],
                                abbreviated: [
                                    'янв',
                                    'фев',
                                    'мар',
                                    'апр',
                                    'май',
                                    'июн',
                                    'июл',
                                    'авг',
                                    'сен',
                                    'окт',
                                    'ноя',
                                    'дек'
                                ],
                                wide: [
                                    'январ',
                                    'феврал',
                                    'март',
                                    'апрел',
                                    'май',
                                    'июн',
                                    'июл',
                                    'август',
                                    'сентабр',
                                    'октабр',
                                    'ноябр',
                                    'декабр'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'Я',
                                    'Д',
                                    'С',
                                    'Ч',
                                    'П',
                                    'Ж',
                                    'Ш'
                                ],
                                short: [
                                    'як',
                                    'ду',
                                    'се',
                                    'чо',
                                    'па',
                                    'жу',
                                    'ша'
                                ],
                                abbreviated: [
                                    'якш',
                                    'душ',
                                    'сеш',
                                    'чор',
                                    'пай',
                                    'жум',
                                    'шан'
                                ],
                                wide: [
                                    'якшанба',
                                    'душанба',
                                    'сешанба',
                                    'чоршанба',
                                    'пайшанба',
                                    'жума',
                                    'шанба'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                any: {
                                    am: 'П.О.',
                                    pm: 'П.К.',
                                    midnight: 'ярим тун',
                                    noon: 'пешин',
                                    morning: 'эрталаб',
                                    afternoon: 'пешиндан кейин',
                                    evening: 'кечаси',
                                    night: 'тун'
                                }
                            },
                            defaultWidth: 'any',
                            formattingValues: {
                                any: {
                                    am: 'П.О.',
                                    pm: 'П.К.',
                                    midnight: 'ярим тун',
                                    noon: 'пешин',
                                    morning: 'эрталаб',
                                    afternoon: 'пешиндан кейин',
                                    evening: 'кечаси',
                                    night: 'тун'
                                }
                            },
                            defaultFormattingWidth: 'any'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)(чи)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(м\.а|м\.)/i,
                                abbreviated: /^(м\.а|м\.)/i,
                                wide: /^(милоддан аввал|милоддан кейин)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^м/i,
                                    /^а/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^[1234]-чор./i,
                                wide: /^[1234]-чорак/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /1/i,
                                    /2/i,
                                    /3/i,
                                    /4/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^[яфмамииасонд]/i,
                                abbreviated: /^(янв|фев|мар|апр|май|июн|июл|авг|сен|окт|ноя|дек)/i,
                                wide: /^(январ|феврал|март|апрел|май|июн|июл|август|сентабр|октабр|ноябр|декабр)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^я/i,
                                    /^ф/i,
                                    /^м/i,
                                    /^а/i,
                                    /^м/i,
                                    /^и/i,
                                    /^и/i,
                                    /^а/i,
                                    /^с/i,
                                    /^о/i,
                                    /^н/i,
                                    /^д/i
                                ],
                                any: [
                                    /^я/i,
                                    /^ф/i,
                                    /^мар/i,
                                    /^ап/i,
                                    /^май/i,
                                    /^июн/i,
                                    /^июл/i,
                                    /^ав/i,
                                    /^с/i,
                                    /^о/i,
                                    /^н/i,
                                    /^д/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[ядсчпжш]/i,
                                short: /^(як|ду|се|чо|па|жу|ша)/i,
                                abbreviated: /^(якш|душ|сеш|чор|пай|жум|шан)/i,
                                wide: /^(якшанба|душанба|сешанба|чоршанба|пайшанба|жума|шанба)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^я/i,
                                    /^д/i,
                                    /^с/i,
                                    /^ч/i,
                                    /^п/i,
                                    /^ж/i,
                                    /^ш/i
                                ],
                                any: [
                                    /^як/i,
                                    /^ду/i,
                                    /^се/i,
                                    /^чор/i,
                                    /^пай/i,
                                    /^жу/i,
                                    /^шан/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(п\.о\.|п\.к\.|ярим тун|пешиндан кейин|(эрталаб|пешиндан кейин|кечаси|тун))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^п\.о\./i,
                                    pm: /^п\.к\./i,
                                    midnight: /^ярим тун/i,
                                    noon: /^пешиндан кейин/i,
                                    morning: /эрталаб/i,
                                    afternoon: /пешиндан кейин/i,
                                    evening: /кечаси/i,
                                    night: /тун/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                gg = {
                    lessThanXSeconds: {
                        one: 'dưới 1 giây',
                        other: 'dưới {{count}} giây'
                    },
                    xSeconds: {
                        one: '1 giây',
                        other: '{{count}} giây'
                    },
                    halfAMinute: 'nửa phút',
                    lessThanXMinutes: {
                        one: 'dưới 1 phút',
                        other: 'dưới {{count}} phút'
                    },
                    xMinutes: {
                        one: '1 phút',
                        other: '{{count}} phút'
                    },
                    aboutXHours: {
                        one: 'khoảng 1 giờ',
                        other: 'khoảng {{count}} giờ'
                    },
                    xHours: {
                        one: '1 giờ',
                        other: '{{count}} giờ'
                    },
                    xDays: {
                        one: '1 ngày',
                        other: '{{count}} ngày'
                    },
                    aboutXWeeks: {
                        one: 'khoảng 1 tuần',
                        other: 'khoảng {{count}} tuần'
                    },
                    xWeeks: {
                        one: '1 tuần',
                        other: '{{count}} tuần'
                    },
                    aboutXMonths: {
                        one: 'khoảng 1 tháng',
                        other: 'khoảng {{count}} tháng'
                    },
                    xMonths: {
                        one: '1 tháng',
                        other: '{{count}} tháng'
                    },
                    aboutXYears: {
                        one: 'khoảng 1 năm',
                        other: 'khoảng {{count}} năm'
                    },
                    xYears: {
                        one: '1 năm',
                        other: '{{count}} năm'
                    },
                    overXYears: {
                        one: 'hơn 1 năm',
                        other: 'hơn {{count}} năm'
                    },
                    almostXYears: {
                        one: 'gần 1 năm',
                        other: 'gần {{count}} năm'
                    }
                },
                vg = {
                    date: at({
                        formats: {
                            full: 'EEEE, \'ngày\' d MMMM \'năm\' y',
                            long: '\'ngày\' d MMMM \'năm\' y',
                            medium: 'd MMM \'năm\' y',
                            short: 'dd/MM/y'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'HH:mm:ss zzzz',
                            long: 'HH:mm:ss z',
                            medium: 'HH:mm:ss',
                            short: 'HH:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                yg = {
                    lastWeek: 'eeee \'tuần trước vào lúc\' p',
                    yesterday: '\'hôm qua vào lúc\' p',
                    today: '\'hôm nay vào lúc\' p',
                    tomorrow: '\'ngày mai vào lúc\' p',
                    nextWeek: 'eeee \'tới vào lúc\' p',
                    other: 'P'
                },
                wg = {
                    code: 'vi',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof gg[e] ? gg[e] : 1 === t ? gg[e].one : gg[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + ' nữa' : r + ' trước' : r
                    },
                    formatLong: vg,
                    formatRelative: function (e, t, n, r) {
                        return yg[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = String((t || {
                            }).unit),
                                r = parseInt(e, 10);
                            if ('quarter' === n) switch (r) {
                                case 1:
                                    return 'I';
                                case 2:
                                    return 'II';
                                case 3:
                                    return 'III';
                                case 4:
                                    return 'IV'
                            } else if ('day' === n) switch (r) {
                                case 1:
                                    return 'thứ 2';
                                case 2:
                                    return 'thứ 3';
                                case 3:
                                    return 'thứ 4';
                                case 4:
                                    return 'thứ 5';
                                case 5:
                                    return 'thứ 6';
                                case 6:
                                    return 'thứ 7';
                                case 7:
                                    return 'chủ nhật'
                            } else {
                                if ('week' === n) return 1 === r ? 'thứ nhất' : 'thứ ' + r;
                                if ('dayOfYear' === n) return 1 === r ? 'đầu tiên' : 'thứ ' + r
                            }
                            return r
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    'TCN',
                                    'SCN'
                                ],
                                abbreviated: [
                                    'trước CN',
                                    'sau CN'
                                ],
                                wide: [
                                    'trước Công Nguyên',
                                    'sau Công Nguyên'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    'Quý 1',
                                    'Quý 2',
                                    'Quý 3',
                                    'Quý 4'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    'Q1',
                                    'Q2',
                                    'Q3',
                                    'Q4'
                                ],
                                wide: [
                                    'quý I',
                                    'quý II',
                                    'quý III',
                                    'quý IV'
                                ]
                            },
                            defaultFormattingWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4',
                                    '5',
                                    '6',
                                    '7',
                                    '8',
                                    '9',
                                    '10',
                                    '11',
                                    '12'
                                ],
                                abbreviated: [
                                    'Thg 1',
                                    'Thg 2',
                                    'Thg 3',
                                    'Thg 4',
                                    'Thg 5',
                                    'Thg 6',
                                    'Thg 7',
                                    'Thg 8',
                                    'Thg 9',
                                    'Thg 10',
                                    'Thg 11',
                                    'Thg 12'
                                ],
                                wide: [
                                    'Tháng Một',
                                    'Tháng Hai',
                                    'Tháng Ba',
                                    'Tháng Tư',
                                    'Tháng Năm',
                                    'Tháng Sáu',
                                    'Tháng Bảy',
                                    'Tháng Tám',
                                    'Tháng Chín',
                                    'Tháng Mười',
                                    'Tháng Mười Một',
                                    'Tháng Mười Hai'
                                ]
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: [
                                    '01',
                                    '02',
                                    '03',
                                    '04',
                                    '05',
                                    '06',
                                    '07',
                                    '08',
                                    '09',
                                    '10',
                                    '11',
                                    '12'
                                ],
                                abbreviated: [
                                    'thg 1',
                                    'thg 2',
                                    'thg 3',
                                    'thg 4',
                                    'thg 5',
                                    'thg 6',
                                    'thg 7',
                                    'thg 8',
                                    'thg 9',
                                    'thg 10',
                                    'thg 11',
                                    'thg 12'
                                ],
                                wide: [
                                    'tháng 01',
                                    'tháng 02',
                                    'tháng 03',
                                    'tháng 04',
                                    'tháng 05',
                                    'tháng 06',
                                    'tháng 07',
                                    'tháng 08',
                                    'tháng 09',
                                    'tháng 10',
                                    'tháng 11',
                                    'tháng 12'
                                ]
                            },
                            defaultFormattingWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    'CN',
                                    'T2',
                                    'T3',
                                    'T4',
                                    'T5',
                                    'T6',
                                    'T7'
                                ],
                                short: [
                                    'CN',
                                    'Th 2',
                                    'Th 3',
                                    'Th 4',
                                    'Th 5',
                                    'Th 6',
                                    'Th 7'
                                ],
                                abbreviated: [
                                    'CN',
                                    'Thứ 2',
                                    'Thứ 3',
                                    'Thứ 4',
                                    'Thứ 5',
                                    'Thứ 6',
                                    'Thứ 7'
                                ],
                                wide: [
                                    'Chủ Nhật',
                                    'Thứ Hai',
                                    'Thứ Ba',
                                    'Thứ Tư',
                                    'Thứ Năm',
                                    'Thứ Sáu',
                                    'Thứ Bảy'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'nửa đêm',
                                    noon: 'tr',
                                    morning: 'sg',
                                    afternoon: 'ch',
                                    evening: 'tối',
                                    night: 'đêm'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'nửa đêm',
                                    noon: 'trưa',
                                    morning: 'sáng',
                                    afternoon: 'chiều',
                                    evening: 'tối',
                                    night: 'đêm'
                                },
                                wide: {
                                    am: 'SA',
                                    pm: 'CH',
                                    midnight: 'nửa đêm',
                                    noon: 'trưa',
                                    morning: 'sáng',
                                    afternoon: 'chiều',
                                    evening: 'tối',
                                    night: 'đêm'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: 'am',
                                    pm: 'pm',
                                    midnight: 'nửa đêm',
                                    noon: 'tr',
                                    morning: 'sg',
                                    afternoon: 'ch',
                                    evening: 'tối',
                                    night: 'đêm'
                                },
                                abbreviated: {
                                    am: 'AM',
                                    pm: 'PM',
                                    midnight: 'nửa đêm',
                                    noon: 'trưa',
                                    morning: 'sáng',
                                    afternoon: 'chiều',
                                    evening: 'tối',
                                    night: 'đêm'
                                },
                                wide: {
                                    am: 'SA',
                                    pm: 'CH',
                                    midnight: 'nửa đêm',
                                    noon: 'giữa trưa',
                                    morning: 'vào buổi sáng',
                                    afternoon: 'vào buổi chiều',
                                    evening: 'vào buổi tối',
                                    night: 'vào ban đêm'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(\d+)/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(tcn|scn)/i,
                                abbreviated: /^(trước CN|sau CN)/i,
                                wide: /^(trước Công Nguyên|sau Công Nguyên)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^t/i,
                                    /^s/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^([1234]|i{1,3}v?)/i,
                                abbreviated: /^q([1234]|i{1,3}v?)/i,
                                wide: /^quý ([1234]|i{1,3}v?)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /(1|i)$/i,
                                    /(2|ii)$/i,
                                    /(3|iii)$/i,
                                    /(4|iv)$/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(0?[2-9]|10|11|12|0?1)/i,
                                abbreviated: /^thg[ _]?(0?[1-9](?!\d)|10|11|12)/i,
                                wide: /^tháng ?(Một|Hai|Ba|Tư|Năm|Sáu|Bảy|Tám|Chín|Mười|Mười ?Một|Mười ?Hai|0?[1-9](?!\d)|10|11|12)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /0?1$/i,
                                    /0?2/i,
                                    /3/,
                                    /4/,
                                    /5/,
                                    /6/,
                                    /7/,
                                    /8/,
                                    /9/,
                                    /10/,
                                    /11/,
                                    /12/
                                ],
                                abbreviated: [
                                    /^thg[ _]?0?1(?!\d)/i,
                                    /^thg[ _]?0?2/i,
                                    /^thg[ _]?0?3/i,
                                    /^thg[ _]?0?4/i,
                                    /^thg[ _]?0?5/i,
                                    /^thg[ _]?0?6/i,
                                    /^thg[ _]?0?7/i,
                                    /^thg[ _]?0?8/i,
                                    /^thg[ _]?0?9/i,
                                    /^thg[ _]?10/i,
                                    /^thg[ _]?11/i,
                                    /^thg[ _]?12/i
                                ],
                                wide: [
                                    /^tháng ?(Một|0?1(?!\d))/i,
                                    /^tháng ?(Hai|0?2)/i,
                                    /^tháng ?(Ba|0?3)/i,
                                    /^tháng ?(Tư|0?4)/i,
                                    /^tháng ?(Năm|0?5)/i,
                                    /^tháng ?(Sáu|0?6)/i,
                                    /^tháng ?(Bảy|0?7)/i,
                                    /^tháng ?(Tám|0?8)/i,
                                    /^tháng ?(Chín|0?9)/i,
                                    /^tháng ?(Mười|10)/i,
                                    /^tháng ?(Mười ?Một|11)/i,
                                    /^tháng ?(Mười ?Hai|12)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i,
                                short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
                                abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
                                wide: /^(Chủ ?Nhật|Chúa ?Nhật|thứ ?Hai|thứ ?Ba|thứ ?Tư|thứ ?Năm|thứ ?Sáu|thứ ?Bảy)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /CN/i,
                                    /2/i,
                                    /3/i,
                                    /4/i,
                                    /5/i,
                                    /6/i,
                                    /7/i
                                ],
                                short: [
                                    /CN/i,
                                    /2/i,
                                    /3/i,
                                    /4/i,
                                    /5/i,
                                    /6/i,
                                    /7/i
                                ],
                                abbreviated: [
                                    /CN/i,
                                    /2/i,
                                    /3/i,
                                    /4/i,
                                    /5/i,
                                    /6/i,
                                    /7/i
                                ],
                                wide: [
                                    /(Chủ|Chúa) ?Nhật/i,
                                    /Hai/i,
                                    /Ba/i,
                                    /Tư/i,
                                    /Năm/i,
                                    /Sáu/i,
                                    /Bảy/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                narrow: /^(a|p|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,
                                abbreviated: /^(am|pm|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,
                                wide: /^(ch[^i]*|sa|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^(a|sa)/i,
                                    pm: /^(p|ch[^i]*)/i,
                                    midnight: /nửa đêm/i,
                                    noon: /trưa/i,
                                    morning: /sáng/i,
                                    afternoon: /chiều/i,
                                    evening: /tối/i,
                                    night: /^đêm/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 1
                    }
                },
                bg = {
                    lessThanXSeconds: {
                        one: '不到 1 秒',
                        other: '不到 {{count}} 秒'
                    },
                    xSeconds: {
                        one: '1 秒',
                        other: '{{count}} 秒'
                    },
                    halfAMinute: '半分钟',
                    lessThanXMinutes: {
                        one: '不到 1 分钟',
                        other: '不到 {{count}} 分钟'
                    },
                    xMinutes: {
                        one: '1 分钟',
                        other: '{{count}} 分钟'
                    },
                    xHours: {
                        one: '1 小时',
                        other: '{{count}} 小时'
                    },
                    aboutXHours: {
                        one: '大约 1 小时',
                        other: '大约 {{count}} 小时'
                    },
                    xDays: {
                        one: '1 天',
                        other: '{{count}} 天'
                    },
                    aboutXWeeks: {
                        one: '大约 1 个星期',
                        other: '大约 {{count}} 个星期'
                    },
                    xWeeks: {
                        one: '1 个星期',
                        other: '{{count}} 个星期'
                    },
                    aboutXMonths: {
                        one: '大约 1 个月',
                        other: '大约 {{count}} 个月'
                    },
                    xMonths: {
                        one: '1 个月',
                        other: '{{count}} 个月'
                    },
                    aboutXYears: {
                        one: '大约 1 年',
                        other: '大约 {{count}} 年'
                    },
                    xYears: {
                        one: '1 年',
                        other: '{{count}} 年'
                    },
                    overXYears: {
                        one: '超过 1 年',
                        other: '超过 {{count}} 年'
                    },
                    almostXYears: {
                        one: '将近 1 年',
                        other: '将近 {{count}} 年'
                    }
                },
                kg = {
                    date: at({
                        formats: {
                            full: 'y\'年\'M\'月\'d\'日\' EEEE',
                            long: 'y\'年\'M\'月\'d\'日\'',
                            medium: 'yyyy-MM-dd',
                            short: 'yy-MM-dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'zzzz a h:mm:ss',
                            long: 'z a h:mm:ss',
                            medium: 'a h:mm:ss',
                            short: 'a h:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                };
            function Mg(e, t, n, r) {
                return nl(e, t, n) ? r : e.getTime() > t.getTime() ? '\'下个\'' + r : '\'上个\'' + r
            }
            var Eg = {
                lastWeek: Mg,
                yesterday: '\'昨天\' p',
                today: '\'今天\' p',
                tomorrow: '\'明天\' p',
                nextWeek: Mg,
                other: 'PP p'
            },
                Pg = {
                    code: 'zh-CN',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof bg[e] ? bg[e] : 1 === t ? bg[e].one : bg[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + '内' : r + '前' : r
                    },
                    formatLong: kg,
                    formatRelative: function (e, t, n, r) {
                        var a = Eg[e];
                        return 'function' == typeof a ? a(t, n, r, 'eeee p') : a
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            switch (String((t || {
                            }).unit)) {
                                case 'date':
                                    return n.toString() + '日';
                                case 'hour':
                                    return n.toString() + '时';
                                case 'minute':
                                    return n.toString() + '分';
                                case 'second':
                                    return n.toString() + '秒';
                                default:
                                    return '第 ' + n.toString()
                            }
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    '前',
                                    '公元'
                                ],
                                abbreviated: [
                                    '前',
                                    '公元'
                                ],
                                wide: [
                                    '公元前',
                                    '公元'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '第一季',
                                    '第二季',
                                    '第三季',
                                    '第四季'
                                ],
                                wide: [
                                    '第一季度',
                                    '第二季度',
                                    '第三季度',
                                    '第四季度'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六',
                                    '七',
                                    '八',
                                    '九',
                                    '十',
                                    '十一',
                                    '十二'
                                ],
                                abbreviated: [
                                    '1月',
                                    '2月',
                                    '3月',
                                    '4月',
                                    '5月',
                                    '6月',
                                    '7月',
                                    '8月',
                                    '9月',
                                    '10月',
                                    '11月',
                                    '12月'
                                ],
                                wide: [
                                    '一月',
                                    '二月',
                                    '三月',
                                    '四月',
                                    '五月',
                                    '六月',
                                    '七月',
                                    '八月',
                                    '九月',
                                    '十月',
                                    '十一月',
                                    '十二月'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    '日',
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六'
                                ],
                                short: [
                                    '日',
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六'
                                ],
                                abbreviated: [
                                    '周日',
                                    '周一',
                                    '周二',
                                    '周三',
                                    '周四',
                                    '周五',
                                    '周六'
                                ],
                                wide: [
                                    '星期日',
                                    '星期一',
                                    '星期二',
                                    '星期三',
                                    '星期四',
                                    '星期五',
                                    '星期六'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: '上',
                                    pm: '下',
                                    midnight: '凌晨',
                                    noon: '午',
                                    morning: '早',
                                    afternoon: '下午',
                                    evening: '晚',
                                    night: '夜'
                                },
                                abbreviated: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '凌晨',
                                    noon: '中午',
                                    morning: '早晨',
                                    afternoon: '中午',
                                    evening: '晚上',
                                    night: '夜间'
                                },
                                wide: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '凌晨',
                                    noon: '中午',
                                    morning: '早晨',
                                    afternoon: '中午',
                                    evening: '晚上',
                                    night: '夜间'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: '上',
                                    pm: '下',
                                    midnight: '凌晨',
                                    noon: '午',
                                    morning: '早',
                                    afternoon: '下午',
                                    evening: '晚',
                                    night: '夜'
                                },
                                abbreviated: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '凌晨',
                                    noon: '中午',
                                    morning: '早晨',
                                    afternoon: '中午',
                                    evening: '晚上',
                                    night: '夜间'
                                },
                                wide: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '凌晨',
                                    noon: '中午',
                                    morning: '早晨',
                                    afternoon: '中午',
                                    evening: '晚上',
                                    night: '夜间'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(第\s*)?\d+(日|时|分|秒)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(前)/i,
                                abbreviated: /^(前)/i,
                                wide: /^(公元前|公元)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(前)/i,
                                    /^(公元)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^第[一二三四]刻/i,
                                wide: /^第[一二三四]刻钟/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /(1|一)/i,
                                    /(2|二)/i,
                                    /(3|三)/i,
                                    /(4|四)/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,
                                abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i,
                                wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^一/i,
                                    /^二/i,
                                    /^三/i,
                                    /^四/i,
                                    /^五/i,
                                    /^六/i,
                                    /^七/i,
                                    /^八/i,
                                    /^九/i,
                                    /^十(?!(一|二))/i,
                                    /^十一/i,
                                    /^十二/i
                                ],
                                any: [
                                    /^一|1/i,
                                    /^二|2/i,
                                    /^三|3/i,
                                    /^四|4/i,
                                    /^五|5/i,
                                    /^六|6/i,
                                    /^七|7/i,
                                    /^八|8/i,
                                    /^九|9/i,
                                    /^十(?!(一|二))|10/i,
                                    /^十一|11/i,
                                    /^十二|12/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[一二三四五六日]/i,
                                short: /^[一二三四五六日]/i,
                                abbreviated: /^周[一二三四五六日]/i,
                                wide: /^星期[一二三四五六日]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /日/i,
                                    /一/i,
                                    /二/i,
                                    /三/i,
                                    /四/i,
                                    /五/i,
                                    /六/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨|)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^上午?/i,
                                    pm: /^下午?/i,
                                    midnight: /^午夜/i,
                                    noon: /^[中正]午/i,
                                    morning: /^早上/i,
                                    afternoon: /^下午/i,
                                    evening: /^晚上?/i,
                                    night: /^凌晨/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                xg = Pg,
                Sg = {
                    lessThanXSeconds: {
                        one: '少於 1 秒',
                        other: '少於 {{count}} 秒'
                    },
                    xSeconds: {
                        one: '1 秒',
                        other: '{{count}} 秒'
                    },
                    halfAMinute: '半分鐘',
                    lessThanXMinutes: {
                        one: '少於 1 分鐘',
                        other: '少於 {{count}} 分鐘'
                    },
                    xMinutes: {
                        one: '1 分鐘',
                        other: '{{count}} 分鐘'
                    },
                    xHours: {
                        one: '1 小時',
                        other: '{{count}} 小時'
                    },
                    aboutXHours: {
                        one: '大約 1 小時',
                        other: '大約 {{count}} 小時'
                    },
                    xDays: {
                        one: '1 天',
                        other: '{{count}} 天'
                    },
                    aboutXWeeks: {
                        one: '大約 1 個星期',
                        other: '大約 {{count}} 個星期'
                    },
                    xWeeks: {
                        one: '1 個星期',
                        other: '{{count}} 個星期'
                    },
                    aboutXMonths: {
                        one: '大約 1 個月',
                        other: '大約 {{count}} 個月'
                    },
                    xMonths: {
                        one: '1 個月',
                        other: '{{count}} 個月'
                    },
                    aboutXYears: {
                        one: '大約 1 年',
                        other: '大約 {{count}} 年'
                    },
                    xYears: {
                        one: '1 年',
                        other: '{{count}} 年'
                    },
                    overXYears: {
                        one: '超過 1 年',
                        other: '超過 {{count}} 年'
                    },
                    almostXYears: {
                        one: '將近 1 年',
                        other: '將近 {{count}} 年'
                    }
                },
                Tg = {
                    date: at({
                        formats: {
                            full: 'y\'年\'M\'月\'d\'日\' EEEE',
                            long: 'y\'年\'M\'月\'d\'日\'',
                            medium: 'yyyy-MM-dd',
                            short: 'yy-MM-dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'zzzz a h:mm:ss',
                            long: 'z a h:mm:ss',
                            medium: 'a h:mm:ss',
                            short: 'a h:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Cg = {
                    lastWeek: '\'上個\'eeee p',
                    yesterday: '\'昨天\' p',
                    today: '\'今天\' p',
                    tomorrow: '\'明天\' p',
                    nextWeek: '\'下個\'eeee p',
                    other: 'P'
                },
                Wg = {
                    code: 'zh-HK',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof Sg[e] ? Sg[e] : 1 === t ? Sg[e].one : Sg[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + '內' : r + '前' : r
                    },
                    formatLong: Tg,
                    formatRelative: function (e, t, n, r) {
                        return Cg[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            switch (String((t || {
                            }).unit)) {
                                case 'date':
                                    return n.toString() + '日';
                                case 'hour':
                                    return n.toString() + '時';
                                case 'minute':
                                    return n.toString() + '分';
                                case 'second':
                                    return n.toString() + '秒';
                                default:
                                    return '第 ' + n.toString()
                            }
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    '前',
                                    '公元'
                                ],
                                abbreviated: [
                                    '前',
                                    '公元'
                                ],
                                wide: [
                                    '公元前',
                                    '公元'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '第一季',
                                    '第二季',
                                    '第三季',
                                    '第四季'
                                ],
                                wide: [
                                    '第一季度',
                                    '第二季度',
                                    '第三季度',
                                    '第四季度'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六',
                                    '七',
                                    '八',
                                    '九',
                                    '十',
                                    '十一',
                                    '十二'
                                ],
                                abbreviated: [
                                    '1月',
                                    '2月',
                                    '3月',
                                    '4月',
                                    '5月',
                                    '6月',
                                    '7月',
                                    '8月',
                                    '9月',
                                    '10月',
                                    '11月',
                                    '12月'
                                ],
                                wide: [
                                    '一月',
                                    '二月',
                                    '三月',
                                    '四月',
                                    '五月',
                                    '六月',
                                    '七月',
                                    '八月',
                                    '九月',
                                    '十月',
                                    '十一月',
                                    '十二月'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    '日',
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六'
                                ],
                                short: [
                                    '日',
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六'
                                ],
                                abbreviated: [
                                    '週日',
                                    '週一',
                                    '週二',
                                    '週三',
                                    '週四',
                                    '週五',
                                    '週六'
                                ],
                                wide: [
                                    '星期日',
                                    '星期一',
                                    '星期二',
                                    '星期三',
                                    '星期四',
                                    '星期五',
                                    '星期六'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: '上',
                                    pm: '下',
                                    midnight: '午夜',
                                    noon: '晌',
                                    morning: '早',
                                    afternoon: '午',
                                    evening: '晚',
                                    night: '夜'
                                },
                                abbreviated: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '午夜',
                                    noon: '中午',
                                    morning: '上午',
                                    afternoon: '下午',
                                    evening: '晚上',
                                    night: '夜晚'
                                },
                                wide: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '午夜',
                                    noon: '中午',
                                    morning: '上午',
                                    afternoon: '下午',
                                    evening: '晚上',
                                    night: '夜晚'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: '上',
                                    pm: '下',
                                    midnight: '午夜',
                                    noon: '晌',
                                    morning: '早',
                                    afternoon: '午',
                                    evening: '晚',
                                    night: '夜'
                                },
                                abbreviated: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '午夜',
                                    noon: '中午',
                                    morning: '上午',
                                    afternoon: '下午',
                                    evening: '晚上',
                                    night: '夜晚'
                                },
                                wide: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '午夜',
                                    noon: '中午',
                                    morning: '上午',
                                    afternoon: '下午',
                                    evening: '晚上',
                                    night: '夜晚'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(第\s*)?\d+(日|時|分|秒)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(前)/i,
                                abbreviated: /^(前)/i,
                                wide: /^(公元前|公元)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(前)/i,
                                    /^(公元)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^第[一二三四]季/i,
                                wide: /^第[一二三四]季度/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /(1|一)/i,
                                    /(2|二)/i,
                                    /(3|三)/i,
                                    /(4|四)/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,
                                abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i,
                                wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^一/i,
                                    /^二/i,
                                    /^三/i,
                                    /^四/i,
                                    /^五/i,
                                    /^六/i,
                                    /^七/i,
                                    /^八/i,
                                    /^九/i,
                                    /^十(?!(一|二))/i,
                                    /^十一/i,
                                    /^十二/i
                                ],
                                any: [
                                    /^一|1/i,
                                    /^二|2/i,
                                    /^三|3/i,
                                    /^四|4/i,
                                    /^五|5/i,
                                    /^六|6/i,
                                    /^七|7/i,
                                    /^八|8/i,
                                    /^九|9/i,
                                    /^十(?!(一|二))|10/i,
                                    /^十一|11/i,
                                    /^十二|12/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[一二三四五六日]/i,
                                short: /^[一二三四五六日]/i,
                                abbreviated: /^週[一二三四五六日]/i,
                                wide: /^星期[一二三四五六日]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /日/i,
                                    /一/i,
                                    /二/i,
                                    /三/i,
                                    /四/i,
                                    /五/i,
                                    /六/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^上午?/i,
                                    pm: /^下午?/i,
                                    midnight: /^午夜/i,
                                    noon: /^[中正]午/i,
                                    morning: /^早上/i,
                                    afternoon: /^下午/i,
                                    evening: /^晚上?/i,
                                    night: /^凌晨/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 0,
                        firstWeekContainsDate: 1
                    }
                },
                jg = {
                    lessThanXSeconds: {
                        one: '少於 1 秒',
                        other: '少於 {{count}} 秒'
                    },
                    xSeconds: {
                        one: '1 秒',
                        other: '{{count}} 秒'
                    },
                    halfAMinute: '半分鐘',
                    lessThanXMinutes: {
                        one: '少於 1 分鐘',
                        other: '少於 {{count}} 分鐘'
                    },
                    xMinutes: {
                        one: '1 分鐘',
                        other: '{{count}} 分鐘'
                    },
                    xHours: {
                        one: '1 小時',
                        other: '{{count}} 小時'
                    },
                    aboutXHours: {
                        one: '大約 1 小時',
                        other: '大約 {{count}} 小時'
                    },
                    xDays: {
                        one: '1 天',
                        other: '{{count}} 天'
                    },
                    aboutXWeeks: {
                        one: '大約 1 個星期',
                        other: '大約 {{count}} 個星期'
                    },
                    xWeeks: {
                        one: '1 個星期',
                        other: '{{count}} 個星期'
                    },
                    aboutXMonths: {
                        one: '大約 1 個月',
                        other: '大約 {{count}} 個月'
                    },
                    xMonths: {
                        one: '1 個月',
                        other: '{{count}} 個月'
                    },
                    aboutXYears: {
                        one: '大約 1 年',
                        other: '大約 {{count}} 年'
                    },
                    xYears: {
                        one: '1 年',
                        other: '{{count}} 年'
                    },
                    overXYears: {
                        one: '超過 1 年',
                        other: '超過 {{count}} 年'
                    },
                    almostXYears: {
                        one: '將近 1 年',
                        other: '將近 {{count}} 年'
                    }
                },
                Dg = {
                    date: at({
                        formats: {
                            full: 'y\'年\'M\'月\'d\'日\' EEEE',
                            long: 'y\'年\'M\'月\'d\'日\'',
                            medium: 'yyyy-MM-dd',
                            short: 'yy-MM-dd'
                        },
                        defaultWidth: 'full'
                    }),
                    time: at({
                        formats: {
                            full: 'zzzz a h:mm:ss',
                            long: 'z a h:mm:ss',
                            medium: 'a h:mm:ss',
                            short: 'a h:mm'
                        },
                        defaultWidth: 'full'
                    }),
                    dateTime: at({
                        formats: {
                            full: '{{date}} {{time}}',
                            long: '{{date}} {{time}}',
                            medium: '{{date}} {{time}}',
                            short: '{{date}} {{time}}'
                        },
                        defaultWidth: 'full'
                    })
                },
                Ng = {
                    lastWeek: '\'上個\'eeee p',
                    yesterday: '\'昨天\' p',
                    today: '\'今天\' p',
                    tomorrow: '\'明天\' p',
                    nextWeek: '\'下個\'eeee p',
                    other: 'P'
                },
                Ig = {
                    code: 'zh-TW',
                    formatDistance: function (e, t, n) {
                        var r;
                        return n = n || {
                        },
                            r = 'string' == typeof jg[e] ? jg[e] : 1 === t ? jg[e].one : jg[e].other.replace('{{count}}', t),
                            n.addSuffix ? n.comparison > 0 ? r + '內' : r + '前' : r
                    },
                    formatLong: Dg,
                    formatRelative: function (e, t, n, r) {
                        return Ng[e]
                    },
                    localize: {
                        ordinalNumber: function (e, t) {
                            var n = Number(e);
                            switch (String((t || {
                            }).unit)) {
                                case 'date':
                                    return n.toString() + '日';
                                case 'hour':
                                    return n.toString() + '時';
                                case 'minute':
                                    return n.toString() + '分';
                                case 'second':
                                    return n.toString() + '秒';
                                default:
                                    return '第 ' + n.toString()
                            }
                        },
                        era: ut({
                            values: {
                                narrow: [
                                    '前',
                                    '公元'
                                ],
                                abbreviated: [
                                    '前',
                                    '公元'
                                ],
                                wide: [
                                    '公元前',
                                    '公元'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        quarter: ut({
                            values: {
                                narrow: [
                                    '1',
                                    '2',
                                    '3',
                                    '4'
                                ],
                                abbreviated: [
                                    '第一刻',
                                    '第二刻',
                                    '第三刻',
                                    '第四刻'
                                ],
                                wide: [
                                    '第一刻鐘',
                                    '第二刻鐘',
                                    '第三刻鐘',
                                    '第四刻鐘'
                                ]
                            },
                            defaultWidth: 'wide',
                            argumentCallback: function (e) {
                                return Number(e) - 1
                            }
                        }),
                        month: ut({
                            values: {
                                narrow: [
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六',
                                    '七',
                                    '八',
                                    '九',
                                    '十',
                                    '十一',
                                    '十二'
                                ],
                                abbreviated: [
                                    '1月',
                                    '2月',
                                    '3月',
                                    '4月',
                                    '5月',
                                    '6月',
                                    '7月',
                                    '8月',
                                    '9月',
                                    '10月',
                                    '11月',
                                    '12月'
                                ],
                                wide: [
                                    '一月',
                                    '二月',
                                    '三月',
                                    '四月',
                                    '五月',
                                    '六月',
                                    '七月',
                                    '八月',
                                    '九月',
                                    '十月',
                                    '十一月',
                                    '十二月'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        day: ut({
                            values: {
                                narrow: [
                                    '日',
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六'
                                ],
                                short: [
                                    '日',
                                    '一',
                                    '二',
                                    '三',
                                    '四',
                                    '五',
                                    '六'
                                ],
                                abbreviated: [
                                    '週日',
                                    '週一',
                                    '週二',
                                    '週三',
                                    '週四',
                                    '週五',
                                    '週六'
                                ],
                                wide: [
                                    '星期日',
                                    '星期一',
                                    '星期二',
                                    '星期三',
                                    '星期四',
                                    '星期五',
                                    '星期六'
                                ]
                            },
                            defaultWidth: 'wide'
                        }),
                        dayPeriod: ut({
                            values: {
                                narrow: {
                                    am: '上',
                                    pm: '下',
                                    midnight: '凌晨',
                                    noon: '午',
                                    morning: '早',
                                    afternoon: '下午',
                                    evening: '晚',
                                    night: '夜'
                                },
                                abbreviated: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '凌晨',
                                    noon: '中午',
                                    morning: '早晨',
                                    afternoon: '中午',
                                    evening: '晚上',
                                    night: '夜間'
                                },
                                wide: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '凌晨',
                                    noon: '中午',
                                    morning: '早晨',
                                    afternoon: '中午',
                                    evening: '晚上',
                                    night: '夜間'
                                }
                            },
                            defaultWidth: 'wide',
                            formattingValues: {
                                narrow: {
                                    am: '上',
                                    pm: '下',
                                    midnight: '凌晨',
                                    noon: '午',
                                    morning: '早',
                                    afternoon: '下午',
                                    evening: '晚',
                                    night: '夜'
                                },
                                abbreviated: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '凌晨',
                                    noon: '中午',
                                    morning: '早晨',
                                    afternoon: '中午',
                                    evening: '晚上',
                                    night: '夜間'
                                },
                                wide: {
                                    am: '上午',
                                    pm: '下午',
                                    midnight: '凌晨',
                                    noon: '中午',
                                    morning: '早晨',
                                    afternoon: '中午',
                                    evening: '晚上',
                                    night: '夜間'
                                }
                            },
                            defaultFormattingWidth: 'wide'
                        })
                    },
                    match: {
                        ordinalNumber: ft({
                            matchPattern: /^(第\s*)?\d+(日|時|分|秒)?/i,
                            parsePattern: /\d+/i,
                            valueCallback: function (e) {
                                return parseInt(e, 10)
                            }
                        }),
                        era: dt({
                            matchPatterns: {
                                narrow: /^(前)/i,
                                abbreviated: /^(前)/i,
                                wide: /^(公元前|公元)/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /^(前)/i,
                                    /^(公元)/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        quarter: dt({
                            matchPatterns: {
                                narrow: /^[1234]/i,
                                abbreviated: /^第[一二三四]刻/i,
                                wide: /^第[一二三四]刻鐘/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /(1|一)/i,
                                    /(2|二)/i,
                                    /(3|三)/i,
                                    /(4|四)/i
                                ]
                            },
                            defaultParseWidth: 'any',
                            valueCallback: function (e) {
                                return e + 1
                            }
                        }),
                        month: dt({
                            matchPatterns: {
                                narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,
                                abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i,
                                wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                narrow: [
                                    /^一/i,
                                    /^二/i,
                                    /^三/i,
                                    /^四/i,
                                    /^五/i,
                                    /^六/i,
                                    /^七/i,
                                    /^八/i,
                                    /^九/i,
                                    /^十(?!(一|二))/i,
                                    /^十一/i,
                                    /^十二/i
                                ],
                                any: [
                                    /^一|1/i,
                                    /^二|2/i,
                                    /^三|3/i,
                                    /^四|4/i,
                                    /^五|5/i,
                                    /^六|6/i,
                                    /^七|7/i,
                                    /^八|8/i,
                                    /^九|9/i,
                                    /^十(?!(一|二))|10/i,
                                    /^十一|11/i,
                                    /^十二|12/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        day: dt({
                            matchPatterns: {
                                narrow: /^[一二三四五六日]/i,
                                short: /^[一二三四五六日]/i,
                                abbreviated: /^週[一二三四五六日]/i,
                                wide: /^星期[一二三四五六日]/i
                            },
                            defaultMatchWidth: 'wide',
                            parsePatterns: {
                                any: [
                                    /日/i,
                                    /一/i,
                                    /二/i,
                                    /三/i,
                                    /四/i,
                                    /五/i,
                                    /六/i
                                ]
                            },
                            defaultParseWidth: 'any'
                        }),
                        dayPeriod: dt({
                            matchPatterns: {
                                any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨)/i
                            },
                            defaultMatchWidth: 'any',
                            parsePatterns: {
                                any: {
                                    am: /^上午?/i,
                                    pm: /^下午?/i,
                                    midnight: /^午夜/i,
                                    noon: /^[中正]午/i,
                                    morning: /^早上/i,
                                    afternoon: /^下午/i,
                                    evening: /^晚上?/i,
                                    night: /^凌晨/i
                                }
                            },
                            defaultParseWidth: 'any'
                        })
                    },
                    options: {
                        weekStartsOn: 1,
                        firstWeekContainsDate: 4
                    }
                },
                zg = function (t) {
                    var n = t.to,
                        a = He();
                    return r.createElement(r.Fragment, null, function (e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                        };
                        yt(2, arguments);
                        var r = n.locale || pt;
                        if (!r.formatDistance) throw new RangeError('locale must contain formatDistance property');
                        var a = bt(e, t);
                        if (isNaN(a)) throw new RangeError('Invalid time value');
                        var i,
                            o,
                            s = hu(n);
                        s.addSuffix = Boolean(n.addSuffix),
                            s.comparison = a,
                            a > 0 ? (i = wt(t), o = wt(e)) : (i = wt(e), o = wt(t));
                        var u,
                            l = Lt(o, i),
                            d = (Ct(o) - Ct(i)) / 1000,
                            c = Math.round((l - d) / 60);
                        if (c < 2) return n.includeSeconds ? l < 5 ? r.formatDistance('lessThanXSeconds', 5, s) : l < 10 ? r.formatDistance('lessThanXSeconds', 10, s) : l < 20 ? r.formatDistance('lessThanXSeconds', 20, s) : l < 40 ? r.formatDistance('halfAMinute', null, s) : l < 60 ? r.formatDistance('lessThanXMinutes', 1, s) : r.formatDistance('xMinutes', 1, s) : 0 === c ? r.formatDistance('lessThanXMinutes', 1, s) : r.formatDistance('xMinutes', c, s);
                        if (c < 45) return r.formatDistance('xMinutes', c, s);
                        if (c < 90) return r.formatDistance('aboutXHours', 1, s);
                        if (c < pu) {
                            var m = Math.round(c / 60);
                            return r.formatDistance('aboutXHours', m, s)
                        }
                        if (c < 2520) return r.formatDistance('xDays', 1, s);
                        if (c < gu) {
                            var f = Math.round(c / pu);
                            return r.formatDistance('xDays', f, s)
                        }
                        if (c < 86400) return u = Math.round(c / gu),
                            r.formatDistance('aboutXMonths', u, s);
                        if ((u = Tt(o, i)) < 12) {
                            var h = Math.round(c / gu);
                            return r.formatDistance('xMonths', h, s)
                        }
                        var p = u % 12,
                            g = Math.floor(u / 12);
                        return p < 3 ? r.formatDistance('aboutXYears', g, s) : p < 9 ? r.formatDistance('overXYears', g, s) : r.formatDistance('almostXYears', g + 1, s)
                    }(n, new Date, {
                        locale: e[a.i18n.locale],
                        addSuffix: !0
                    }))
                },
                Rg = function (t) {
                    var n = t.milliseconds,
                        a = He();
                    return r.createElement(r.Fragment, null, vt($t({
                        start: 0,
                        end: n
                    }), {
                        delimiter: ', ',
                        locale: e[a.i18n.locale]
                    }))
                };
            function Ag(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            var Og,
                Hg = function (e) {
                    var t = e.src,
                        n = e.href,
                        a = e.mediaType,
                        i = e.itemMediaType,
                        o = e.children,
                        u = s((0, r.useState)(!1), 2),
                        l = u[0],
                        d = u[1],
                        c = (0, r.useRef)(),
                        m = fs({
                            from: {
                                opacity: 0,
                                filter: 'blur(40px)'
                            },
                            to: {
                                opacity: 1,
                                filter: 'blur(0px)'
                            },
                            pause: !l
                        }),
                        f = fs(function (e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {
                                };
                                t % 2 ? Ag(Object(n), !0).forEach((function (t) {
                                    Ee(e, t, n[t])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ag(Object(n)).forEach((function (t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                }))
                            }
                            return e
                        }({
                        }, t ? {
                            from: {
                                opacity: 1,
                                fontSize: '128px',
                                filter: 'blur(0px)'
                            },
                            to: {
                                opacity: 0,
                                fontSize: '10px',
                                filter: 'blur(40px)'
                            },
                            pause: !l
                        }
                            : {
                                from: {
                                    opacity: 0,
                                    fontSize: '10px',
                                    filter: 'blur(40px)'
                                },
                                to: {
                                    opacity: 1,
                                    fontSize: '128px',
                                    filter: 'blur(0px)'
                                }
                            }));
                    (0, r.useLayoutEffect)((function () {
                        return function () {
                            c.current && (c.current.src = '')
                        }
                    }), [
                    ]);
                    var h = r.createElement(r.Fragment, null, t && r.createElement(Xs.div, {
                        style: m,
                        className: 'w-full h-full'
                    }, r.createElement('img', {
                        ref: c,
                        src: t,
                        draggable: 'false',
                        onLoad: function () {
                            return d(!0)
                        },
                        onError: function () {
                            return d(!1)
                        },
                        className: 'w-full h-full rounded'
                    })), r.createElement(Xs.div, {
                        style: f,
                        className: 'absolute top-0 left-0 flex items-center w-full h-full text-gray-900 rounded overflow-clip text-9xl bg-amber-800'
                    }, r.createElement('div', {
                        className: 'w-full text-center select-none'
                    }, '?')));
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: tt('flex items-end w-full', _g(a))
                    }, r.createElement('div', {
                        className: tt('relative w-full transition-shadow duration-100 rounded shadow-md overflow-clip shadow-black', n && 'hover:shadow-black hover:shadow-lg', _g(i))
                    }, n ? r.createElement(r.Fragment, null, r.createElement('a', {
                        href: n,
                        className: 'block w-full h-full hover:no-underline'
                    }, h)) : r.createElement(r.Fragment, null, h), r.createElement('div', {
                        className: 'absolute top-0 left-0 w-full h-full pointer-events-none'
                    }, o))))
                },
                _g = function (e) {
                    return 'audiobook' === e ? 'aspect-[1/1]' : 'video_game' === e ? 'aspect-[3/4]' : 'aspect-[2/3]'
                },
                Lg = function () {
                    var e = (0, d.useQuery)('user', ve.user.get),
                        t = e.isLoading,
                        n = e.error,
                        r = e.data,
                        a = (0, d.useMutation)((function () {
                            return ve.user.logout()
                        }), {
                            onSuccess: function () {
                                cj.setQueryData('user', null),
                                    cj.removeQueries()
                            }
                        }),
                        i = (0, d.useMutation)(ve.user.login, {
                            onSuccess: function () {
                                cj.invalidateQueries('user'),
                                    cj.removeQueries('metadataProviderCredentials'),
                                    cj.removeQueries('notificationPlatformsCredentials'),
                                    cj.removeQueries('tokens'),
                                    cj.removeQueries(['calendar']),
                                    cj.removeQueries(['calendar']),
                                    cj.removeQueries(['details']),
                                    cj.removeQueries(['import']),
                                    cj.removeQueries(['items']),
                                    cj.removeQueries(['search'])
                            }
                        }),
                        o = (0, d.useMutation)(ve.user.update, {
                            onSuccess: function () {
                                cj.invalidateQueries('user')
                            }
                        }),
                        s = (0, d.useMutation)(ve.user.updatePassword, {
                            onSuccess: function () {
                                cj.invalidateQueries('user')
                            }
                        });
                    return {
                        isLoading: t,
                        error: n,
                        user: r,
                        updateUser: o.mutateAsync,
                        updatePassword: s.mutateAsync,
                        loginIsError: i.isError,
                        loginIsLoading: i.isLoading,
                        login: i.mutate,
                        loginError: i.error,
                        logout: a.mutate
                    }
                },
                Fg = function (e) {
                    var t = e.max,
                        n = e.setProgress,
                        a = e.progress,
                        i = e.mediaType,
                        o = s((0, r.useState)(0), 2),
                        u = o[0],
                        l = o[1];
                    return (0, r.useEffect)((function () {
                        var e = Math.round(t * a / 100);
                        Math.abs(a - e) > 0.001 && l(e)
                    }), [
                        t,
                        a
                    ]),
                        r.createElement('div', null, r.createElement('label', null, r.createElement('input', {
                            type: 'number',
                            min: 0,
                            max: t,
                            value: u,
                            onChange: function (e) {
                                var r = Math.min(Number(e.currentTarget.value), t);
                                '' === e.currentTarget.value ? l('') : l(r),
                                    n(Number(r / t * 100))
                            }
                        }), ' ', eu(i) && r.createElement(Oe, {
                            id: '{value, plural, one {page} other {pages}}',
                            values: {
                                value: u
                            }
                        }), (Zs(i) || tu(i)) && r.createElement(Oe, {
                            id: '{value, plural, one {minute} other {minutes}}',
                            values: {
                                value: u
                            }
                        })))
                },
                Xg = function (e) {
                    var t = e.mediaItem,
                        n = e.closeModal,
                        a = s((0, r.useState)(100 * t.progress || 0), 2),
                        i = a[0],
                        o = a[1],
                        u = s((0, r.useState)(0), 2),
                        l = u[0],
                        d = u[1];
                    return r.createElement('div', {
                        className: 'p-3'
                    }, r.createElement('div', {
                        className: 'my-1 text-3xl font-bold text-center'
                    }, r.createElement(Oe, {
                        id: 'Set progress'
                    })), r.createElement('form', {
                        className: 'flex flex-col mt-4',
                        onSubmit: function (e) {
                            e.preventDefault(),
                                Lr({
                                    mediaItemId: t.id,
                                    progress: i / 100,
                                    duration: l
                                }),
                                n()
                        }
                    }, eu(t) && t.numberOfPages && r.createElement(Fg, {
                        max: t.numberOfPages,
                        progress: i,
                        setProgress: o,
                        mediaType: t.mediaType
                    }), (Zs(t) || tu(t)) && t.runtime && r.createElement(Fg, {
                        max: t.runtime,
                        progress: i,
                        setProgress: o,
                        mediaType: t.mediaType
                    }), r.createElement('div', {
                        className: 'flex items-center'
                    }, r.createElement('input', {
                        className: 'w-64 my-2',
                        type: 'range',
                        value: i,
                        min: 0,
                        max: 100,
                        onChange: function (e) {
                            o(Number(e.currentTarget.value))
                        }
                    }), r.createElement('span', {
                        className: 'w-10 text-right'
                    }, Math.round(i), '%')), (ru(t) || eu(t)) && r.createElement('div', {
                        className: 'mb-4'
                    }, r.createElement('div', {
                        className: 'text-lg'
                    }, r.createElement(Oe, {
                        id: 'Duration'
                    }), ':'), r.createElement('label', null, r.createElement('input', {
                        type: 'number',
                        min: 0,
                        value: l,
                        onChange: function (e) {
                            return d(Number(e.currentTarget.value))
                        }
                    }), ' ', r.createElement(Oe, {
                        id: '{duration, plural, one {minute} other {minutes}}',
                        values: {
                            duration: l
                        }
                    }))), r.createElement('button', {
                        className: 'w-full btn'
                    }, r.createElement(Oe, {
                        id: 'Set'
                    }))), r.createElement('div', {
                        className: 'w-full mt-3 btn-red',
                        onClick: function () {
                            return n()
                        }
                    }, r.createElement(Oe, {
                        id: 'Cancel'
                    })))
                },
                Ug = function () {
                    var e = (0, d.useQuery)('configuration', (function () {
                        return ve.configuration.get()
                    }));
                    return {
                        isLoading: e.isLoading,
                        error: e.error,
                        configuration: e.data,
                        update: (0, d.useMutation)(ve.configuration.update, {
                            onSuccess: function () {
                                cj.invalidateQueries('configuration')
                            }
                        }).mutate
                    }
                },
                qg = function (e) {
                    var t,
                        n,
                        a = e.userRating,
                        i = (t = a.userId, {
                            isLoading: (n = (0, d.useQuery)(['user',
                                t], (function () {
                                    return ve.user.getById(t)
                                }))).isLoading,
                            error: n.error,
                            user: n.data
                        }),
                        o = i.user;
                    if (i.isLoading) return r.createElement(r.Fragment, null);
                    var s = new Date(a.date).toLocaleString(),
                        u = o.name;
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: ''
                    }, r.createElement(Oe, {
                        id: 'Review by <0><1>{author}</1></0> at {date}',
                        values: {
                            author: u,
                            date: s
                        },
                        components: {
                            0: r.createElement('i', null),
                            1: r.createElement('strong', null)
                        }
                    })), r.createElement('div', {
                        className: ''
                    }, a.review))
                },
                Gg = function (e) {
                    var t = e.userRating,
                        n = e.mediaItem,
                        a = e.season,
                        i = e.episode;
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'mt-3'
                    }, r.createElement(fu, {
                        mediaItem: n,
                        season: a,
                        episode: i
                    })), (null == t ? void 0 : t.review) && r.createElement(qg, {
                        userRating: t
                    }))
                },
                Vg = function (e) {
                    var t = e.mediaItem,
                        n = t.seenHistory.length;
                    return r.createElement('div', {
                        className: 'text-sm btn-red',
                        onClick: function () {
                            return confirm(Ze._('{count, plural, one {Do you want to remove # seen history entry?} other {Do you want to remove all # seen history entries?}}', {
                                count: n
                            })) && qr(t)
                        }
                    }, Zs(t) && r.createElement(Oe, {
                        id: 'Remove from listened history'
                    }), eu(t) && r.createElement(Oe, {
                        id: 'Remove from read history'
                    }), (tu(t) || nu(t)) && r.createElement(Oe, {
                        id: 'Remove from seen history'
                    }), ru(t) && r.createElement(Oe, {
                        id: 'Remove from played history'
                    }))
                },
                Yg = function (e) {
                    var t = e.mediaItem;
                    return r.createElement(r.Fragment, null, r.createElement(Ys, {
                        openModal: function (e) {
                            return r.createElement('div', {
                                className: 'text-sm btn-blue',
                                onClick: e
                            }, Zs(t) && r.createElement(Oe, {
                                id: 'Add to listened history'
                            }), eu(t) && r.createElement(Oe, {
                                id: 'Add to read history'
                            }), (tu(t) || nu(t)) && r.createElement(Oe, {
                                id: 'Add to seen history'
                            }), ru(t) && r.createElement(Oe, {
                                id: 'Add to played history'
                            }))
                        }
                    }, (function (e) {
                        return r.createElement(uu, {
                            mediaItem: t,
                            closeModal: e
                        })
                    })))
                },
                Bg = function (e) {
                    return r.createElement('a', {
                        href: e.href,
                        className: 'flex mr-2'
                    }, r.createElement('img', {
                        src: e.src,
                        className: tt(e.whiteLogo && 'invert dark:invert-0')
                    }))
                },
                $g = {
                    au: 'au',
                    ca: 'ca',
                    de: 'de',
                    fr: 'fr',
                    in: 'in',
                    it: 'it',
                    es: 'es',
                    jp: 'co.jp',
                    uk: 'co.uk',
                    us: 'com'
                },
                Qg = function (e) {
                    var t,
                        n = e.mediaItem,
                        a = Ug().configuration,
                        i = $g[n.audibleCountryCode || (null === (t = a.audibleLang) || void 0 === t ? void 0 : t.toLowerCase())] || 'com';
                    return r.createElement('div', {
                        className: 'flex h-5'
                    }, n.imdbId && r.createElement(Bg, {
                        href: 'https://www.imdb.com/title/'.concat(n.imdbId),
                        src: 'logo/imdb.png'
                    }), n.tmdbId && r.createElement(Bg, {
                        href: 'https://www.themoviedb.org/'.concat(n.mediaType, '/').concat(n.tmdbId),
                        src: 'logo/tmdb.svg'
                    }), n.igdbId && r.createElement(Bg, {
                        href: 'https://www.igdb.com/games/'.concat(n.title.toLowerCase().replaceAll(' ', '-')),
                        src: 'logo/igdb.png',
                        whiteLogo: !0
                    }), n.openlibraryId && r.createElement(Bg, {
                        href: 'https://openlibrary.org'.concat(n.openlibraryId),
                        src: 'logo/openlibrary.svg'
                    }), n.audibleId && r.createElement(Bg, {
                        href: 'https://audible.'.concat(i, '/pd/').concat(n.audibleId, '?overrideBaseCountry=true&ipRedirectOverride=true'),
                        src: 'logo/audible.png'
                    }))
                },
                Kg = function () {
                    var e,
                        t = j().mediaItemId,
                        n = Rr(Number(t)),
                        a = n.mediaItem,
                        i = n.isLoading,
                        o = n.error;
                    return i ? r.createElement(r.Fragment, null, r.createElement(Oe, {
                        id: 'Loading'
                    })) : o ? r.createElement(r.Fragment, null, o) : r.createElement('div', null, r.createElement('div', {
                        className: 'flex flex-col mt-2 mb-4 md:flex-row'
                    }, r.createElement('div', {
                        className: 'self-center w-64 shrink-0 md:self-start'
                    }, r.createElement(Hg, {
                        src: a.poster,
                        mediaType: a.mediaType,
                        itemMediaType: a.mediaType
                    })), r.createElement('div', {
                        className: 'md:ml-4'
                    }, r.createElement('div', {
                        className: 'mt-2 text-4xl font-bold md:mt-0'
                    }, a.title), a.releaseDate && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Release date'
                    }), ':', ' '), r.createElement('span', null, new Date(a.releaseDate).toLocaleDateString())), a.runtime > 0 && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Runtime'
                    }), ':', ' '), r.createElement('span', null, vt($t({
                        start: 0,
                        end: 60 * a.runtime * 1000
                    })))), a.platform && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: '{0, plural, one {Platform} other {platforms}}',
                        values: {
                            0: a.platform.length
                        }
                    }), ':', ' '), r.createElement('span', null, a.platform.sort().join(', '))), a.network && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Network'
                    }), ':', ' '), r.createElement('span', null, a.network)), a.status && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Status'
                    }), ':', ' '), r.createElement('span', null, a.status)), a.genres && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: '{0, plural, one {Genre} other {Genres}}',
                        values: {
                            0: a.genres.length
                        }
                    }), ':', ' '), a.genres.sort().map((function (e, t) {
                        return r.createElement('span', {
                            key: e
                        }, r.createElement('span', {
                            className: 'italic'
                        }, e), t < a.genres.length - 1 && r.createElement('span', {
                            className: 'mx-1 text-gray-600'
                        }, '|'))
                    }))), a.overview && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Overview'
                    }), ':', ' '), r.createElement('span', {
                        className: 'whitespace-pre-wrap'
                    }, a.overview)), a.language && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Language'
                    }), ':', ' '), r.createElement('span', null, a.language)), a.authors && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: '{0, plural, one {Author} other {Authors}}',
                        values: {
                            0: a.authors.length
                        }
                    }), ':', ' '), a.authors.sort().join(', ')), a.narrators && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: '{0, plural, one {Narrator} other {Narrators}}',
                        values: {
                            0: a.narrators.length
                        }
                    }), ':', ' '), a.narrators.sort().join(',')), a.numberOfPages && r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Number of pages'
                    }), ':', ' '), a.numberOfPages), nu(a) && r.createElement(r.Fragment, null, r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Seasons'
                    }), ':', ' '), a.numberOfSeasons), r.createElement('a', {
                        className: 'underline',
                        href: '#/episodes/'.concat(a.id)
                    }, r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Episodes'
                    }), ':', ' '), a.numberOfEpisodes, a.unseenEpisodesCount > 0 && r.createElement(r.Fragment, null, ' ', r.createElement(Oe, {
                        id: '{0, plural, other {unseen}}',
                        values: {
                            0: a.unseenEpisodesCount
                        }
                    }))))), r.createElement('div', null, r.createElement('span', {
                        className: 'font-bold'
                    }, r.createElement(Oe, {
                        id: 'Source'
                    }), ':', ' '), r.createElement('span', null, a.source)), r.createElement('div', {
                        className: 'pt-3'
                    }, r.createElement(Qg, {
                        mediaItem: a
                    })))), function (e) {
                        var t;
                        return ['igdb',
                            'tmdb',
                            'openlibrary',
                            'audible'].includes(null === (t = e.source) || void 0 === t ? void 0 : t.toLowerCase())
                    }(a) && r.createElement('div', {
                        className: 'pt-3'
                    }, r.createElement(Jg, {
                        mediaItem: a
                    })), Ks(a) && r.createElement('div', {
                        className: 'mt-3'
                    }, a.onWatchlist ? r.createElement('div', {
                        className: 'text-sm btn-red',
                        onClick: function () {
                            return Hr(a)
                        }
                    }, r.createElement(Oe, {
                        id: 'Remove from watchlist'
                    })) : r.createElement('div', {
                        className: 'text-sm btn-blue',
                        onClick: function () {
                            return _r(a)
                        }
                    }, r.createElement(Oe, {
                        id: 'Add to watchlist'
                    }))), r.createElement('div', null, $s(a) && r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'mt-3'
                    }, r.createElement(Yg, {
                        mediaItem: a
                    })), function (e) {
                        var t;
                        return (null === (t = e.seenHistory) || void 0 === t ? void 0 : t.length) > 0
                    }(a) && r.createElement('div', {
                        className: 'mt-3'
                    }, r.createElement(Vg, {
                        mediaItem: a
                    })))), 'tv' === a.mediaType && r.createElement(Q, {
                        to: '/episodes/'.concat(a.id),
                        className: 'mt-3 text-green-600 dark:text-green-400 btn'
                    }, r.createElement(Oe, {
                        id: 'Episodes page'
                    })), $s(a) && !nu(a) && r.createElement(r.Fragment, null, !ou(a) && r.createElement('div', {
                        className: 'mt-3 text-sm btn',
                        onClick: te(fe().mark((function e() {
                            return fe().wrap((function (e) {
                                for (; ;) switch (e.prev = e.next) {
                                    case 0:
                                        Lr({
                                            mediaItemId: a.id,
                                            progress: 0
                                        });
                                    case 1:
                                    case 'end':
                                        return e.stop()
                                }
                            }), e)
                        })))
                    }, tu(a) && r.createElement(Oe, {
                        id: 'I am watching it'
                    }), eu(a) && r.createElement(Oe, {
                        id: 'I am reading it'
                    }), Zs(a) && r.createElement(Oe, {
                        id: 'I am listening it'
                    }), ru(a) && r.createElement(Oe, {
                        id: 'I am playing it'
                    })), ou(a) && r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'mt-3 text-sm btn',
                        onClick: te(fe().mark((function e() {
                            return fe().wrap((function (e) {
                                for (; ;) switch (e.prev = e.next) {
                                    case 0:
                                        Lr({
                                            mediaItemId: a.id,
                                            progress: 1
                                        });
                                    case 1:
                                    case 'end':
                                        return e.stop()
                                }
                            }), e)
                        })))
                    }, tu(a) && r.createElement(Oe, {
                        id: 'I finished watching it'
                    }), eu(a) && r.createElement(Oe, {
                        id: 'I finished reading it'
                    }), Zs(a) && r.createElement(Oe, {
                        id: 'I finished listening it'
                    }), ru(a) && r.createElement(Oe, {
                        id: 'I finished playing it'
                    })), r.createElement('div', {
                        className: 'mt-3'
                    }, r.createElement(Oe, {
                        id: 'Progress'
                    }), ': ', Math.round(100 * a.progress), '%')), r.createElement('div', {
                        className: 'mt-3'
                    }, r.createElement(Zg, {
                        mediaItem: a
                    }))), a.upcomingEpisode && r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'mt-3 font-bold'
                    }, r.createElement(Oe, {
                        id: 'Next episode'
                    }), a.upcomingEpisode.releaseDate && r.createElement(zg, {
                        to: new Date(a.upcomingEpisode.releaseDate)
                    }), ': ', Qs(a.upcomingEpisode), ' ', a.upcomingEpisode.title)), a.firstUnwatchedEpisode && r.createElement('div', {
                        className: 'flex mt-3 font-bold'
                    }, r.createElement(Oe, {
                        id: 'First unwatched episode'
                    }), ':', ' ', Qs(a.firstUnwatchedEpisode), ' ', a.firstUnwatchedEpisode.title, r.createElement(ev, {
                        mediaItem: a
                    })), a.lastSeenAt > 0 && r.createElement('div', {
                        className: 'mt-3'
                    }, Zs(a) && r.createElement(Oe, {
                        id: 'Last listened at {0}',
                        values: {
                            0: new Date(a.lastSeenAt).toLocaleString()
                        }
                    }), eu(a) && r.createElement(Oe, {
                        id: 'Last read at {0}',
                        values: {
                            0: new Date(a.lastSeenAt).toLocaleString()
                        }
                    }), (tu(a) || nu(a)) && r.createElement(Oe, {
                        id: 'Last seen at {0}',
                        values: {
                            0: new Date(a.lastSeenAt).toLocaleString()
                        }
                    }), ru(a) && r.createElement(Oe, {
                        id: 'Last played at {0}',
                        values: {
                            0: new Date(a.lastSeenAt).toLocaleString()
                        }
                    })), (null === (e = a.seenHistory) || void 0 === e ? void 0 : e.length) > 0 && r.createElement('div', {
                        className: 'mt-3'
                    }, r.createElement('div', null, Zs(a) && r.createElement(Oe, {
                        id: '{0, plural, one {Listened 1 time} other {Listened # times}}',
                        values: {
                            0: a.seenHistory.length
                        }
                    }), eu(a) && r.createElement(Oe, {
                        id: '{0, plural, one {Read 1 time} other {Read # times}}',
                        values: {
                            0: a.seenHistory.length
                        }
                    }), (tu(a) || nu(a)) && r.createElement(Oe, {
                        id: '{0, plural, one {Seen 1 time} other {Seen # times}}',
                        values: {
                            0: a.seenHistory.length
                        }
                    }), ru(a) && r.createElement(Oe, {
                        id: '{0, plural, one {Played 1 time} other {Played # times}}',
                        values: {
                            0: a.seenHistory.length
                        }
                    })), r.createElement(Q, {
                        to: '/seen-history/'.concat(a.id),
                        className: 'underline'
                    }, Zs(a) && r.createElement(Oe, {
                        id: 'Listened history'
                    }), eu(a) && r.createElement(Oe, {
                        id: 'Read history'
                    }), (tu(a) || nu(a)) && r.createElement(Oe, {
                        id: 'Seen history'
                    }), ru(a) && r.createElement(Oe, {
                        id: 'Played history'
                    }))), Js(a) && r.createElement(Gg, {
                        userRating: a.userRating,
                        mediaItem: a
                    }))
                },
                Jg = function (e) {
                    var t,
                        n,
                        a = e.mediaItem,
                        i = (t = a.id, {
                            updateMetadata: (n = (0, d.useMutation)((function () {
                                return ve.details.updateMetadata(t)
                            }), {
                                onSuccess: function () {
                                    return cj.invalidateQueries(Ir(t))
                                }
                            })).mutate,
                            isLoading: n.isLoading,
                            isError: n.isError
                        }),
                        o = i.updateMetadata,
                        s = i.isLoading;
                    return r.createElement('button', {
                        className: 'text-sm btn',
                        onClick: function () {
                            return o()
                        },
                        disabled: s
                    }, r.createElement(Oe, {
                        id: 'Update metadata'
                    }))
                },
                Zg = function (e) {
                    var t = e.mediaItem;
                    return r.createElement(Ys, {
                        openModal: function (e) {
                            return r.createElement('div', {
                                className: 'text-sm text-green-500 btn',
                                onClick: function () {
                                    return e()
                                }
                            }, r.createElement(Oe, {
                                id: 'Set progress'
                            }))
                        }
                    }, (function (e) {
                        return r.createElement(Xg, {
                            mediaItem: t,
                            closeModal: e
                        })
                    }))
                },
                ev = function (e) {
                    var t = e.mediaItem;
                    return r.createElement(Ys, {
                        openModal: function (e) {
                            return r.createElement('span', {
                                className: 'ml-1 font-bold cursor-pointer select-none material-icons text-emerald-800',
                                onClick: function () {
                                    return e()
                                }
                            }, 'check')
                        }
                    }, (function (e) {
                        return r.createElement(uu, {
                            mediaItem: t,
                            episode: t.firstUnwatchedEpisode,
                            closeModal: e
                        })
                    }))
                },
                tv = (n(4765), function (e) {
                    var t = (0, d.useQuery)(['items',
                        e], te(fe().mark((function t() {
                            return fe().wrap((function (t) {
                                for (; ;) switch (t.prev = t.next) {
                                    case 0:
                                        return t.abrupt('return', ve.items.paginated(e));
                                    case 1:
                                    case 'end':
                                        return t.stop()
                                }
                            }), t)
                        }))), {
                        keepPreviousData: !0
                    }),
                        n = t.error,
                        r = t.data,
                        a = t.isFetched,
                        i = (0, d.useMutation)((function (t) {
                            return ve.search.search({
                                mediaType: e.mediaType,
                                q: t
                            })
                        }));
                    return {
                        items: i.data ? i.data : null == r ? void 0 : r.data,
                        error: n,
                        isLoading: !a || i.isLoading,
                        numberOfPages: r ? r.totalPages : void 0,
                        numberOfItemsTotal: r ? r.total : void 0,
                        search: i.mutate
                    }
                }),
                nv = n(9864),
                rv = n(6774),
                av = n.n(rv),
                iv = function (e) {
                    function t(e, r, u, l, m) {
                        for (var f, h, p, g, b, M = 0, E = 0, P = 0, x = 0, S = 0, N = 0, z = p = f = 0, A = 0, O = 0, H = 0, _ = 0, L = u.length, F = L - 1, X = '', U = '', q = '', G = ''; A < L;) {
                            if (h = u.charCodeAt(A), A === F && 0 !== E + x + P + M && (0 !== E && (h = 47 === E ? 10 : 47), x = P = M = 0, L++, F++), 0 === E + x + P + M) {
                                if (A === F && (0 < O && (X = X.replace(c, '')), 0 < X.trim().length)) {
                                    switch (h) {
                                        case 32:
                                        case 9:
                                        case 59:
                                        case 13:
                                        case 10:
                                            break;
                                        default:
                                            X += u.charAt(A)
                                    }
                                    h = 59
                                }
                                switch (h) {
                                    case 123:
                                        for (f = (X = X.trim()).charCodeAt(0), p = 1, _ = ++A; A < L;) {
                                            switch (h = u.charCodeAt(A)) {
                                                case 123:
                                                    p++;
                                                    break;
                                                case 125:
                                                    p--;
                                                    break;
                                                case 47:
                                                    switch (h = u.charCodeAt(A + 1)) {
                                                        case 42:
                                                        case 47:
                                                            e: {
                                                                for (z = A + 1; z < F; ++z) switch (u.charCodeAt(z)) {
                                                                    case 47:
                                                                        if (42 === h && 42 === u.charCodeAt(z - 1) && A + 2 !== z) {
                                                                            A = z + 1;
                                                                            break e
                                                                        }
                                                                        break;
                                                                    case 10:
                                                                        if (47 === h) {
                                                                            A = z + 1;
                                                                            break e
                                                                        }
                                                                }
                                                                A = z
                                                            }
                                                    }
                                                    break;
                                                case 91:
                                                    h++;
                                                case 40:
                                                    h++;
                                                case 34:
                                                case 39:
                                                    for (; A++ < F && u.charCodeAt(A) !== h;);
                                            }
                                            if (0 === p) break;
                                            A++
                                        }
                                        if (p = u.substring(_, A), 0 === f && (f = (X = X.replace(d, '').trim()).charCodeAt(0)), 64 === f) {
                                            switch (0 < O && (X = X.replace(c, '')), h = X.charCodeAt(1)) {
                                                case 100:
                                                case 109:
                                                case 115:
                                                case 45:
                                                    O = r;
                                                    break;
                                                default:
                                                    O = D
                                            }
                                            if (_ = (p = t(r, O, p, h, m + 1)).length, 0 < I && (b = s(3, p, O = n(D, X, H), r, C, T, _, h, m, l), X = O.join(''), void 0 !== b && 0 === (_ = (p = b.trim()).length) && (h = 0, p = '')), 0 < _) switch (h) {
                                                case 115:
                                                    X = X.replace(k, o);
                                                case 100:
                                                case 109:
                                                case 45:
                                                    p = X + '{' + p + '}';
                                                    break;
                                                case 107:
                                                    p = (X = X.replace(v, '$1 $2')) + '{' + p + '}',
                                                        p = 1 === j || 2 === j && i('@' + p, 3) ? '@-webkit-' + p + '@' + p : '@' + p;
                                                    break;
                                                default:
                                                    p = X + p,
                                                        112 === l && (U += p, p = '')
                                            } else p = ''
                                        } else p = t(r, n(r, X, H), p, l, m + 1);
                                        q += p,
                                            p = H = O = z = f = 0,
                                            X = '',
                                            h = u.charCodeAt(++A);
                                        break;
                                    case 125:
                                    case 59:
                                        if (1 < (_ = (X = (0 < O ? X.replace(c, '') : X).trim()).length)) switch (0 === z && (f = X.charCodeAt(0), 45 === f || 96 < f && 123 > f) && (_ = (X = X.replace(' ', ':')).length), 0 < I && void 0 !== (b = s(1, X, r, e, C, T, U.length, l, m, l)) && 0 === (_ = (X = b.trim()).length) && (X = '\x00\x00'), f = X.charCodeAt(0), h = X.charCodeAt(1), f) {
                                            case 0:
                                                break;
                                            case 64:
                                                if (105 === h || 99 === h) {
                                                    G += X + u.charAt(A);
                                                    break
                                                }
                                            default:
                                                58 !== X.charCodeAt(_ - 1) && (U += a(X, f, h, X.charCodeAt(2)))
                                        }
                                        H = O = z = f = 0,
                                            X = '',
                                            h = u.charCodeAt(++A)
                                }
                            }
                            switch (h) {
                                case 13:
                                case 10:
                                    47 === E ? E = 0 : 0 === 1 + f && 107 !== l && 0 < X.length && (O = 1, X += '\x00'),
                                        0 < I * R && s(0, X, r, e, C, T, U.length, l, m, l),
                                        T = 1,
                                        C++;
                                    break;
                                case 59:
                                case 125:
                                    if (0 === E + x + P + M) {
                                        T++;
                                        break
                                    }
                                default:
                                    switch (T++, g = u.charAt(A), h) {
                                        case 9:
                                        case 32:
                                            if (0 === x + M + E) switch (S) {
                                                case 44:
                                                case 58:
                                                case 9:
                                                case 32:
                                                    g = '';
                                                    break;
                                                default:
                                                    32 !== h && (g = ' ')
                                            }
                                            break;
                                        case 0:
                                            g = '\\0';
                                            break;
                                        case 12:
                                            g = '\\f';
                                            break;
                                        case 11:
                                            g = '\\v';
                                            break;
                                        case 38:
                                            0 === x + E + M && (O = H = 1, g = '\f' + g);
                                            break;
                                        case 108:
                                            if (0 === x + E + M + W && 0 < z) switch (A - z) {
                                                case 2:
                                                    112 === S && 58 === u.charCodeAt(A - 3) && (W = S);
                                                case 8:
                                                    111 === N && (W = N)
                                            }
                                            break;
                                        case 58:
                                            0 === x + E + M && (z = A);
                                            break;
                                        case 44:
                                            0 === E + P + x + M && (O = 1, g += '\r');
                                            break;
                                        case 34:
                                        case 39:
                                            0 === E && (x = x === h ? 0 : 0 === x ? h : x);
                                            break;
                                        case 91:
                                            0 === x + E + P && M++;
                                            break;
                                        case 93:
                                            0 === x + E + P && M--;
                                            break;
                                        case 41:
                                            0 === x + E + M && P--;
                                            break;
                                        case 40:
                                            0 === x + E + M && (0 === f && (2 * S + 3 * N == 533 || (f = 1)), P++);
                                            break;
                                        case 64:
                                            0 === E + P + x + M + z + p && (p = 1);
                                            break;
                                        case 42:
                                        case 47:
                                            if (!(0 < x + M + P)) switch (E) {
                                                case 0:
                                                    switch (2 * h + 3 * u.charCodeAt(A + 1)) {
                                                        case 235:
                                                            E = 47;
                                                            break;
                                                        case 220:
                                                            _ = A,
                                                                E = 42
                                                    }
                                                    break;
                                                case 42:
                                                    47 === h && 42 === S && _ + 2 !== A && (33 === u.charCodeAt(_ + 2) && (U += u.substring(_, A + 1)), g = '', E = 0)
                                            }
                                    }
                                    0 === E && (X += g)
                            }
                            N = S,
                                S = h,
                                A++
                        }
                        if (0 < (_ = U.length)) {
                            if (O = r, 0 < I && void 0 !== (b = s(2, U, O, e, C, T, _, l, m, l)) && 0 === (U = b).length) return G + U + q;
                            if (U = O.join(',') + '{' + U + '}', 0 != j * W) {
                                switch (2 !== j || i(U, 2) || (W = 0), W) {
                                    case 111:
                                        U = U.replace(w, ':-moz-$1') + U;
                                        break;
                                    case 112:
                                        U = U.replace(y, '::-webkit-input-$1') + U.replace(y, '::-moz-$1') + U.replace(y, ':-ms-input-$1') + U
                                }
                                W = 0
                            }
                        }
                        return G + U + q
                    }
                    function n(e, t, n) {
                        var a = t.trim().split(p);
                        t = a;
                        var i = a.length,
                            o = e.length;
                        switch (o) {
                            case 0:
                            case 1:
                                var s = 0;
                                for (e = 0 === o ? '' : e[0] + ' '; s < i; ++s) t[s] = r(e, t[s], n).trim();
                                break;
                            default:
                                var u = s = 0;
                                for (t = [
                                ]; s < i; ++s) for (var l = 0; l < o; ++l) t[u++] = r(e[l] + ' ', a[s], n).trim()
                        }
                        return t
                    }
                    function r(e, t, n) {
                        var r = t.charCodeAt(0);
                        switch (33 > r && (r = (t = t.trim()).charCodeAt(0)), r) {
                            case 38:
                                return t.replace(g, '$1' + e.trim());
                            case 58:
                                return e.trim() + t.replace(g, '$1' + e.trim());
                            default:
                                if (0 < 1 * n && 0 < t.indexOf('\f')) return t.replace(g, (58 === e.charCodeAt(0) ? '' : '$1') + e.trim())
                        }
                        return e + t
                    }
                    function a(e, t, n, r) {
                        var o = e + ';',
                            s = 2 * t + 3 * n + 4 * r;
                        if (944 === s) {
                            e = o.indexOf(':', 9) + 1;
                            var u = o.substring(e, o.length - 1).trim();
                            return u = o.substring(0, e).trim() + u + ';',
                                1 === j || 2 === j && i(u, 1) ? '-webkit-' + u + u : u
                        }
                        if (0 === j || 2 === j && !i(o, 1)) return o;
                        switch (s) {
                            case 1015:
                                return 97 === o.charCodeAt(10) ? '-webkit-' + o + o : o;
                            case 951:
                                return 116 === o.charCodeAt(3) ? '-webkit-' + o + o : o;
                            case 963:
                                return 110 === o.charCodeAt(5) ? '-webkit-' + o + o : o;
                            case 1009:
                                if (100 !== o.charCodeAt(4)) break;
                            case 969:
                            case 942:
                                return '-webkit-' + o + o;
                            case 978:
                                return '-webkit-' + o + '-moz-' + o + o;
                            case 1019:
                            case 983:
                                return '-webkit-' + o + '-moz-' + o + '-ms-' + o + o;
                            case 883:
                                if (45 === o.charCodeAt(8)) return '-webkit-' + o + o;
                                if (0 < o.indexOf('image-set(', 11)) return o.replace(S, '$1-webkit-$2') + o;
                                break;
                            case 932:
                                if (45 === o.charCodeAt(4)) switch (o.charCodeAt(5)) {
                                    case 103:
                                        return '-webkit-box-' + o.replace('-grow', '') + '-webkit-' + o + '-ms-' + o.replace('grow', 'positive') + o;
                                    case 115:
                                        return '-webkit-' + o + '-ms-' + o.replace('shrink', 'negative') + o;
                                    case 98:
                                        return '-webkit-' + o + '-ms-' + o.replace('basis', 'preferred-size') + o
                                }
                                return '-webkit-' + o + '-ms-' + o + o;
                            case 964:
                                return '-webkit-' + o + '-ms-flex-' + o + o;
                            case 1023:
                                if (99 !== o.charCodeAt(8)) break;
                                return '-webkit-box-pack' + (u = o.substring(o.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')) + '-webkit-' + o + '-ms-flex-pack' + u + o;
                            case 1005:
                                return f.test(o) ? o.replace(m, ':-webkit-') + o.replace(m, ':-moz-') + o : o;
                            case 1000:
                                switch (t = (u = o.substring(13).trim()).indexOf('-') + 1, u.charCodeAt(0) + u.charCodeAt(t)) {
                                    case 226:
                                        u = o.replace(b, 'tb');
                                        break;
                                    case 232:
                                        u = o.replace(b, 'tb-rl');
                                        break;
                                    case 220:
                                        u = o.replace(b, 'lr');
                                        break;
                                    default:
                                        return o
                                }
                                return '-webkit-' + o + '-ms-' + u + o;
                            case 1017:
                                if (- 1 === o.indexOf('sticky', 9)) break;
                            case 975:
                                switch (t = (o = e).length - 10, s = (u = (33 === o.charCodeAt(t) ? o.substring(0, t) : o).substring(e.indexOf(':', 7) + 1).trim()).charCodeAt(0) + (0 | u.charCodeAt(7))) {
                                    case 203:
                                        if (111 > u.charCodeAt(8)) break;
                                    case 115:
                                        o = o.replace(u, '-webkit-' + u) + ';' + o;
                                        break;
                                    case 207:
                                    case 102:
                                        o = o.replace(u, '-webkit-' + (102 < s ? 'inline-' : '') + 'box') + ';' + o.replace(u, '-webkit-' + u) + ';' + o.replace(u, '-ms-' + u + 'box') + ';' + o
                                }
                                return o + ';';
                            case 938:
                                if (45 === o.charCodeAt(5)) switch (o.charCodeAt(6)) {
                                    case 105:
                                        return u = o.replace('-items', ''),
                                            '-webkit-' + o + '-webkit-box-' + u + '-ms-flex-' + u + o;
                                    case 115:
                                        return '-webkit-' + o + '-ms-flex-item-' + o.replace(E, '') + o;
                                    default:
                                        return '-webkit-' + o + '-ms-flex-line-pack' + o.replace('align-content', '').replace(E, '') + o
                                }
                                break;
                            case 973:
                            case 989:
                                if (45 !== o.charCodeAt(3) || 122 === o.charCodeAt(4)) break;
                            case 931:
                            case 953:
                                if (!0 === x.test(e)) return 115 === (u = e.substring(e.indexOf(':') + 1)).charCodeAt(0) ? a(e.replace('stretch', 'fill-available'), t, n, r).replace(':fill-available', ':stretch') : o.replace(u, '-webkit-' + u) + o.replace(u, '-moz-' + u.replace('fill-', '')) + o;
                                break;
                            case 962:
                                if (o = '-webkit-' + o + (102 === o.charCodeAt(5) ? '-ms-' + o : '') + o, 211 === n + r && 105 === o.charCodeAt(13) && 0 < o.indexOf('transform', 10)) return o.substring(0, o.indexOf(';', 27) + 1).replace(h, '$1-webkit-$2') + o
                        }
                        return o
                    }
                    function i(e, t) {
                        var n = e.indexOf(1 === t ? ':' : '{'),
                            r = e.substring(0, 3 !== t ? n : 10);
                        return n = e.substring(n + 1, e.length - 1),
                            z(2 !== t ? r : r.replace(P, '$1'), n, t)
                    }
                    function o(e, t) {
                        var n = a(t, t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2));
                        return n !== t + ';' ? n.replace(M, ' or ($1)').substring(4) : '(' + t + ')'
                    }
                    function s(e, t, n, r, a, i, o, s, u, d) {
                        for (var c, m = 0, f = t; m < I; ++m) switch (c = N[m].call(l, e, f, n, r, a, i, o, s, u, d)) {
                            case void 0:
                            case !1:
                            case !0:
                            case null:
                                break;
                            default:
                                f = c
                        }
                        if (f !== t) return f
                    }
                    function u(e) {
                        return void 0 !== (e = e.prefix) && (z = null, e ? 'function' != typeof e ? j = 1 : (j = 2, z = e) : j = 0),
                            u
                    }
                    function l(e, n) {
                        var r = e;
                        if (33 > r.charCodeAt(0) && (r = r.trim()), r = [
                            r
                        ], 0 < I) {
                            var a = s(- 1, n, r, r, C, T, 0, 0, 0, 0);
                            void 0 !== a && 'string' == typeof a && (n = a)
                        }
                        var i = t(D, r, n, 0, 0);
                        return 0 < I && void 0 !== (a = s(- 2, i, r, r, C, T, i.length, 0, 0, 0)) && (i = a),
                            W = 0,
                            T = C = 1,
                            i
                    }
                    var d = /^\0+/g,
                        c = /[\0\r\f]/g,
                        m = /: */g,
                        f = /zoo|gra/,
                        h = /([,: ])(transform)/g,
                        p = /,\r+?/g,
                        g = /([\t\r\n ])*\f?&/g,
                        v = /@(k\w+)\s*(\S*)\s*/,
                        y = /::(place)/g,
                        w = /:(read-only)/g,
                        b = /[svh]\w+-[tblr]{2}/,
                        k = /\(\s*(.*)\s*\)/g,
                        M = /([\s\S]*?);/g,
                        E = /-self|flex-/g,
                        P = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
                        x = /stretch|:\s*\w+\-(?:conte|avail)/,
                        S = /([^-])(image-set\()/,
                        T = 1,
                        C = 1,
                        W = 0,
                        j = 1,
                        D = [
                        ],
                        N = [
                        ],
                        I = 0,
                        z = null,
                        R = 0;
                    return l.use = function e(t) {
                        switch (t) {
                            case void 0:
                            case null:
                                I = N.length = 0;
                                break;
                            default:
                                if ('function' == typeof t) N[I++] = t;
                                else if ('object' == typeof t) for (var n = 0, r = t.length; n < r; ++n) e(t[n]);
                                else R = 0 | !!t
                        }
                        return e
                    },
                        l.set = u,
                        void 0 !== e && u(e),
                        l
                },
                ov = {
                    animationIterationCount: 1,
                    borderImageOutset: 1,
                    borderImageSlice: 1,
                    borderImageWidth: 1,
                    boxFlex: 1,
                    boxFlexGroup: 1,
                    boxOrdinalGroup: 1,
                    columnCount: 1,
                    columns: 1,
                    flex: 1,
                    flexGrow: 1,
                    flexPositive: 1,
                    flexShrink: 1,
                    flexNegative: 1,
                    flexOrder: 1,
                    gridRow: 1,
                    gridRowEnd: 1,
                    gridRowSpan: 1,
                    gridRowStart: 1,
                    gridColumn: 1,
                    gridColumnEnd: 1,
                    gridColumnSpan: 1,
                    gridColumnStart: 1,
                    msGridRow: 1,
                    msGridRowSpan: 1,
                    msGridColumn: 1,
                    msGridColumnSpan: 1,
                    fontWeight: 1,
                    lineHeight: 1,
                    opacity: 1,
                    order: 1,
                    orphans: 1,
                    tabSize: 1,
                    widows: 1,
                    zIndex: 1,
                    zoom: 1,
                    WebkitLineClamp: 1,
                    fillOpacity: 1,
                    floodOpacity: 1,
                    stopOpacity: 1,
                    strokeDasharray: 1,
                    strokeDashoffset: 1,
                    strokeMiterlimit: 1,
                    strokeOpacity: 1,
                    strokeWidth: 1
                },
                sv = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
                uv = (Og = {
                }, function (e) {
                    return void 0 === Og[e] && (Og[e] = (t = e, sv.test(t) || 111 === t.charCodeAt(0) && 110 === t.charCodeAt(1) && t.charCodeAt(2) < 91)),
                        Og[e];
                    var t
                }),
                lv = n(8679),
                dv = n.n(lv);
            function cv() {
                return (cv = Object.assign || function (e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                }).apply(this, arguments)
            }
            var mv = function (e, t) {
                for (var n = [
                    e[0]
                ], r = 0, a = t.length; r < a; r += 1) n.push(t[r], e[r + 1]);
                return n
            },
                fv = function (e) {
                    return null !== e && 'object' == typeof e && '[object Object]' === (e.toString ? e.toString() : Object.prototype.toString.call(e)) && !(0, nv.typeOf)(e)
                },
                hv = Object.freeze([]),
                pv = Object.freeze({
                });
            function gv(e) {
                return 'function' == typeof e
            }
            function vv(e) {
                return e.displayName || e.name || 'Component'
            }
            function yv(e) {
                return e && 'string' == typeof e.styledComponentId
            }
            var wv = 'undefined' != typeof process && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || 'data-styled',
                bv = 'undefined' != typeof window && 'HTMLElement' in window,
                kv = Boolean('boolean' == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : 'undefined' != typeof process && void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && '' !== process.env.REACT_APP_SC_DISABLE_SPEEDY ? 'false' !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY : 'undefined' != typeof process && void 0 !== process.env.SC_DISABLE_SPEEDY && '' !== process.env.SC_DISABLE_SPEEDY && 'false' !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY);
            function Mv(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                throw new Error('An error occurred. See https://git.io/JUIaE#' + e + ' for more information.' + (n.length > 0 ? ' Args: ' + n.join(', ') : ''))
            }
            var Ev = function () {
                function e(e) {
                    this.groupSizes = new Uint32Array(512),
                        this.length = 512,
                        this.tag = e
                }
                var t = e.prototype;
                return t.indexOfGroup = function (e) {
                    for (var t = 0, n = 0; n < e; n++) t += this.groupSizes[n];
                    return t
                },
                    t.insertRules = function (e, t) {
                        if (e >= this.groupSizes.length) {
                            for (var n = this.groupSizes, r = n.length, a = r; e >= a;) (a <<= 1) < 0 && Mv(16, '' + e);
                            this.groupSizes = new Uint32Array(a),
                                this.groupSizes.set(n),
                                this.length = a;
                            for (var i = r; i < a; i++) this.groupSizes[i] = 0
                        }
                        for (var o = this.indexOfGroup(e + 1), s = 0, u = t.length; s < u; s++) this.tag.insertRule(o, t[s]) && (this.groupSizes[e]++, o++)
                    },
                    t.clearGroup = function (e) {
                        if (e < this.length) {
                            var t = this.groupSizes[e],
                                n = this.indexOfGroup(e),
                                r = n + t;
                            this.groupSizes[e] = 0;
                            for (var a = n; a < r; a++) this.tag.deleteRule(n)
                        }
                    },
                    t.getGroup = function (e) {
                        var t = '';
                        if (e >= this.length || 0 === this.groupSizes[e]) return t;
                        for (var n = this.groupSizes[e], r = this.indexOfGroup(e), a = r + n, i = r; i < a; i++) t += this.tag.getRule(i) + '/*!sc*/\n';
                        return t
                    },
                    e
            }(),
                Pv = new Map,
                xv = new Map,
                Sv = 1,
                Tv = function (e) {
                    if (Pv.has(e)) return Pv.get(e);
                    for (; xv.has(Sv);) Sv++;
                    var t = Sv++;
                    return Pv.set(e, t),
                        xv.set(t, e),
                        t
                },
                Cv = function (e) {
                    return xv.get(e)
                },
                Wv = function (e, t) {
                    t >= Sv && (Sv = t + 1),
                        Pv.set(e, t),
                        xv.set(t, e)
                },
                jv = 'style[' + wv + '][data-styled-version="5.3.3"]',
                Dv = new RegExp('^' + wv + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),
                Nv = function (e, t, n) {
                    for (var r, a = n.split(','), i = 0, o = a.length; i < o; i++) (r = a[i]) && e.registerName(t, r)
                },
                Iv = function (e, t) {
                    for (var n = (t.textContent || '').split('/*!sc*/\n'), r = [
                    ], a = 0, i = n.length; a < i; a++) {
                        var o = n[a].trim();
                        if (o) {
                            var s = o.match(Dv);
                            if (s) {
                                var u = 0 | parseInt(s[1], 10),
                                    l = s[2];
                                0 !== u && (Wv(l, u), Nv(e, l, s[3]), e.getTag().insertRules(u, r)),
                                    r.length = 0
                            } else r.push(o)
                        }
                    }
                },
                zv = function () {
                    return 'undefined' != typeof window && void 0 !== window.__webpack_nonce__ ? window.__webpack_nonce__ : null
                },
                Rv = function (e) {
                    var t = document.head,
                        n = e || t,
                        r = document.createElement('style'),
                        a = function (e) {
                            for (var t = e.childNodes, n = t.length; n >= 0; n--) {
                                var r = t[n];
                                if (r && 1 === r.nodeType && r.hasAttribute(wv)) return r
                            }
                        }(n),
                        i = void 0 !== a ? a.nextSibling : null;
                    r.setAttribute(wv, 'active'),
                        r.setAttribute('data-styled-version', '5.3.3');
                    var o = zv();
                    return o && r.setAttribute('nonce', o),
                        n.insertBefore(r, i),
                        r
                },
                Av = function () {
                    function e(e) {
                        var t = this.element = Rv(e);
                        t.appendChild(document.createTextNode('')),
                            this.sheet = function (e) {
                                if (e.sheet) return e.sheet;
                                for (var t = document.styleSheets, n = 0, r = t.length; n < r; n++) {
                                    var a = t[n];
                                    if (a.ownerNode === e) return a
                                }
                                Mv(17)
                            }(t),
                            this.length = 0
                    }
                    var t = e.prototype;
                    return t.insertRule = function (e, t) {
                        try {
                            return this.sheet.insertRule(t, e),
                                this.length++,
                                !0
                        } catch (e) {
                            return !1
                        }
                    },
                        t.deleteRule = function (e) {
                            this.sheet.deleteRule(e),
                                this.length--
                        },
                        t.getRule = function (e) {
                            var t = this.sheet.cssRules[e];
                            return void 0 !== t && 'string' == typeof t.cssText ? t.cssText : ''
                        },
                        e
                }(),
                Ov = function () {
                    function e(e) {
                        var t = this.element = Rv(e);
                        this.nodes = t.childNodes,
                            this.length = 0
                    }
                    var t = e.prototype;
                    return t.insertRule = function (e, t) {
                        if (e <= this.length && e >= 0) {
                            var n = document.createTextNode(t),
                                r = this.nodes[e];
                            return this.element.insertBefore(n, r || null),
                                this.length++,
                                !0
                        }
                        return !1
                    },
                        t.deleteRule = function (e) {
                            this.element.removeChild(this.nodes[e]),
                                this.length--
                        },
                        t.getRule = function (e) {
                            return e < this.length ? this.nodes[e].textContent : ''
                        },
                        e
                }(),
                Hv = function () {
                    function e(e) {
                        this.rules = [
                        ],
                            this.length = 0
                    }
                    var t = e.prototype;
                    return t.insertRule = function (e, t) {
                        return e <= this.length && (this.rules.splice(e, 0, t), this.length++, !0)
                    },
                        t.deleteRule = function (e) {
                            this.rules.splice(e, 1),
                                this.length--
                        },
                        t.getRule = function (e) {
                            return e < this.length ? this.rules[e] : ''
                        },
                        e
                }(),
                _v = bv,
                Lv = {
                    isServer: !bv,
                    useCSSOMInjection: !kv
                },
                Fv = function () {
                    function e(e, t, n) {
                        void 0 === e && (e = pv),
                            void 0 === t && (t = {
                            }),
                            this.options = cv({
                            }, Lv, {
                            }, e),
                            this.gs = t,
                            this.names = new Map(n),
                            this.server = !!e.isServer,
                            !this.server && bv && _v && (_v = !1, function (e) {
                                for (var t = document.querySelectorAll(jv), n = 0, r = t.length; n < r; n++) {
                                    var a = t[n];
                                    a && 'active' !== a.getAttribute(wv) && (Iv(e, a), a.parentNode && a.parentNode.removeChild(a))
                                }
                            }(this))
                    }
                    e.registerId = function (e) {
                        return Tv(e)
                    };
                    var t = e.prototype;
                    return t.reconstructWithOptions = function (t, n) {
                        return void 0 === n && (n = !0),
                            new e(cv({
                            }, this.options, {
                            }, t), this.gs, n && this.names || void 0)
                    },
                        t.allocateGSInstance = function (e) {
                            return this.gs[e] = (this.gs[e] || 0) + 1
                        },
                        t.getTag = function () {
                            return this.tag || (this.tag = (n = (t = this.options).isServer, r = t.useCSSOMInjection, a = t.target, e = n ? new Hv(a) : r ? new Av(a) : new Ov(a), new Ev(e)));
                            var e,
                                t,
                                n,
                                r,
                                a
                        },
                        t.hasNameForId = function (e, t) {
                            return this.names.has(e) && this.names.get(e).has(t)
                        },
                        t.registerName = function (e, t) {
                            if (Tv(e), this.names.has(e)) this.names.get(e).add(t);
                            else {
                                var n = new Set;
                                n.add(t),
                                    this.names.set(e, n)
                            }
                        },
                        t.insertRules = function (e, t, n) {
                            this.registerName(e, t),
                                this.getTag().insertRules(Tv(e), n)
                        },
                        t.clearNames = function (e) {
                            this.names.has(e) && this.names.get(e).clear()
                        },
                        t.clearRules = function (e) {
                            this.getTag().clearGroup(Tv(e)),
                                this.clearNames(e)
                        },
                        t.clearTag = function () {
                            this.tag = void 0
                        },
                        t.toString = function () {
                            return function (e) {
                                for (var t = e.getTag(), n = t.length, r = '', a = 0; a < n; a++) {
                                    var i = Cv(a);
                                    if (void 0 !== i) {
                                        var o = e.names.get(i),
                                            s = t.getGroup(a);
                                        if (o && s && o.size) {
                                            var u = wv + '.g' + a + '[id="' + i + '"]',
                                                l = '';
                                            void 0 !== o && o.forEach((function (e) {
                                                e.length > 0 && (l += e + ',')
                                            })),
                                                r += '' + s + u + '{content:"' + l + '"}/*!sc*/\n'
                                        }
                                    }
                                }
                                return r
                            }(this)
                        },
                        e
                }(),
                Xv = /(a)(d)/gi,
                Uv = function (e) {
                    return String.fromCharCode(e + (e > 25 ? 39 : 97))
                };
            function qv(e) {
                var t,
                    n = '';
                for (t = Math.abs(e); t > 52; t = t / 52 | 0) n = Uv(t % 52) + n;
                return (Uv(t % 52) + n).replace(Xv, '$1-$2')
            }
            var Gv = function (e, t) {
                for (var n = t.length; n;) e = 33 * e ^ t.charCodeAt(--n);
                return e
            },
                Vv = function (e) {
                    return Gv(5381, e)
                };
            function Yv(e) {
                for (var t = 0; t < e.length; t += 1) {
                    var n = e[t];
                    if (gv(n) && !yv(n)) return !1
                }
                return !0
            }
            var Bv = Vv('5.3.3'),
                $v = function () {
                    function e(e, t, n) {
                        this.rules = e,
                            this.staticRulesId = '',
                            this.isStatic = (void 0 === n || n.isStatic) && Yv(e),
                            this.componentId = t,
                            this.baseHash = Gv(Bv, t),
                            this.baseStyle = n,
                            Fv.registerId(t)
                    }
                    return e.prototype.generateAndInjectStyles = function (e, t, n) {
                        var r = this.componentId,
                            a = [
                            ];
                        if (this.baseStyle && a.push(this.baseStyle.generateAndInjectStyles(e, t, n)), this.isStatic && !n.hash) if (this.staticRulesId && t.hasNameForId(r, this.staticRulesId)) a.push(this.staticRulesId);
                        else {
                            var i = my(this.rules, e, t, n).join(''),
                                o = qv(Gv(this.baseHash, i) >>> 0);
                            if (!t.hasNameForId(r, o)) {
                                var s = n(i, '.' + o, void 0, r);
                                t.insertRules(r, o, s)
                            }
                            a.push(o),
                                this.staticRulesId = o
                        } else {
                            for (var u = this.rules.length, l = Gv(this.baseHash, n.hash), d = '', c = 0; c < u; c++) {
                                var m = this.rules[c];
                                if ('string' == typeof m) d += m;
                                else if (m) {
                                    var f = my(m, e, t, n),
                                        h = Array.isArray(f) ? f.join('') : f;
                                    l = Gv(l, h + c),
                                        d += h
                                }
                            }
                            if (d) {
                                var p = qv(l >>> 0);
                                if (!t.hasNameForId(r, p)) {
                                    var g = n(d, '.' + p, void 0, r);
                                    t.insertRules(r, p, g)
                                }
                                a.push(p)
                            }
                        }
                        return a.join(' ')
                    },
                        e
                }(),
                Qv = /^\s*\/\/.*$/gm,
                Kv = [
                    ':',
                    '[',
                    '.',
                    '#'
                ];
            function Jv(e) {
                var t,
                    n,
                    r,
                    a,
                    i = void 0 === e ? pv : e,
                    o = i.options,
                    s = void 0 === o ? pv : o,
                    u = i.plugins,
                    l = void 0 === u ? hv : u,
                    d = new iv(s),
                    c = [
                    ],
                    m = function (e) {
                        function t(t) {
                            if (t) try {
                                e(t + '}')
                            } catch (e) {
                            }
                        }
                        return function (n, r, a, i, o, s, u, l, d, c) {
                            switch (n) {
                                case 1:
                                    if (0 === d && 64 === r.charCodeAt(0)) return e(r + ';'),
                                        '';
                                    break;
                                case 2:
                                    if (0 === l) return r + '/*|*/';
                                    break;
                                case 3:
                                    switch (l) {
                                        case 102:
                                        case 112:
                                            return e(a[0] + r),
                                                '';
                                        default:
                                            return r + (0 === c ? '/*|*/' : '')
                                    }
                                case - 2:
                                    r.split('/*|*/}').forEach(t)
                            }
                        }
                    }((function (e) {
                        c.push(e)
                    })),
                    f = function (e, r, i) {
                        return 0 === r && - 1 !== Kv.indexOf(i[n.length]) || i.match(a) ? e : '.' + t
                    };
                function h(e, i, o, s) {
                    void 0 === s && (s = '&');
                    var u = e.replace(Qv, ''),
                        l = i && o ? o + ' ' + i + ' { ' + u + ' }' : u;
                    return t = s,
                        n = i,
                        r = new RegExp('\\' + n + '\\b', 'g'),
                        a = new RegExp('(\\' + n + '\\b){2,}'),
                        d(o || !i ? '' : i, l)
                }
                return d.use([].concat(l, [
                    function (e, t, a) {
                        2 === e && a.length && a[0].lastIndexOf(n) > 0 && (a[0] = a[0].replace(r, f))
                    },
                    m,
                    function (e) {
                        if (- 2 === e) {
                            var t = c;
                            return c = [
                            ],
                                t
                        }
                    }
                ])),
                    h.hash = l.length ? l.reduce((function (e, t) {
                        return t.name || Mv(15),
                            Gv(e, t.name)
                    }), 5381).toString() : '',
                    h
            }
            var Zv = r.createContext(),
                ey = (Zv.Consumer, r.createContext()),
                ty = (ey.Consumer, new Fv),
                ny = Jv();
            function ry() {
                return (0, r.useContext)(Zv) || ty
            }
            function ay(e) {
                var t = (0, r.useState)(e.stylisPlugins),
                    n = t[0],
                    a = t[1],
                    i = ry(),
                    o = (0, r.useMemo)((function () {
                        var t = i;
                        return e.sheet ? t = e.sheet : e.target && (t = t.reconstructWithOptions({
                            target: e.target
                        }, !1)),
                            e.disableCSSOMInjection && (t = t.reconstructWithOptions({
                                useCSSOMInjection: !1
                            })),
                            t
                    }), [
                        e.disableCSSOMInjection,
                        e.sheet,
                        e.target
                    ]),
                    s = (0, r.useMemo)((function () {
                        return Jv({
                            options: {
                                prefix: !e.disableVendorPrefixes
                            },
                            plugins: n
                        })
                    }), [
                        e.disableVendorPrefixes,
                        n
                    ]);
                return (0, r.useEffect)((function () {
                    av()(n, e.stylisPlugins) || a(e.stylisPlugins)
                }), [
                    e.stylisPlugins
                ]),
                    r.createElement(Zv.Provider, {
                        value: o
                    }, r.createElement(ey.Provider, {
                        value: s
                    }, e.children))
            }
            var iy = function () {
                function e(e, t) {
                    var n = this;
                    this.inject = function (e, t) {
                        void 0 === t && (t = ny);
                        var r = n.name + t.hash;
                        e.hasNameForId(n.id, r) || e.insertRules(n.id, r, t(n.rules, r, '@keyframes'))
                    },
                        this.toString = function () {
                            return Mv(12, String(n.name))
                        },
                        this.name = e,
                        this.id = 'sc-keyframes-' + e,
                        this.rules = t
                }
                return e.prototype.getName = function (e) {
                    return void 0 === e && (e = ny),
                        this.name + e.hash
                },
                    e
            }(),
                oy = /([A-Z])/,
                sy = /([A-Z])/g,
                uy = /^ms-/,
                ly = function (e) {
                    return '-' + e.toLowerCase()
                };
            function dy(e) {
                return oy.test(e) ? e.replace(sy, ly).replace(uy, '-ms-') : e
            }
            var cy = function (e) {
                return null == e || !1 === e || '' === e
            };
            function my(e, t, n, r) {
                if (Array.isArray(e)) {
                    for (var a, i = [
                    ], o = 0, s = e.length; o < s; o += 1) '' !== (a = my(e[o], t, n, r)) && (Array.isArray(a) ? i.push.apply(i, a) : i.push(a));
                    return i
                }
                return cy(e) ? '' : yv(e) ? '.' + e.styledComponentId : gv(e) ? 'function' != typeof (u = e) || u.prototype && u.prototype.isReactComponent || !t ? e : my(e(t), t, n, r) : e instanceof iy ? n ? (e.inject(n, r), e.getName(r)) : e : fv(e) ? function e(t, n) {
                    var r,
                        a,
                        i = [
                        ];
                    for (var o in t) t.hasOwnProperty(o) && !cy(t[o]) && (Array.isArray(t[o]) && t[o].isCss || gv(t[o]) ? i.push(dy(o) + ':', t[o], ';') : fv(t[o]) ? i.push.apply(i, e(t[o], o)) : i.push(dy(o) + ': ' + (r = o, (null == (a = t[o]) || 'boolean' == typeof a || '' === a ? '' : 'number' != typeof a || 0 === a || r in ov ? String(a).trim() : a + 'px') + ';')));
                    return n ? [
                        n + ' {'
                    ].concat(i, [
                        '}'
                    ]) : i
                }(e) : e.toString();
                var u
            }
            var fy = function (e) {
                return Array.isArray(e) && (e.isCss = !0),
                    e
            };
            function hy(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                return gv(e) || fv(e) ? fy(my(mv(hv, [
                    e
                ].concat(n)))) : 0 === n.length && 1 === e.length && 'string' == typeof e[0] ? e : fy(my(mv(e, n)))
            }
            new Set;
            var py = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
                gy = /(^-|-$)/g;
            function vy(e) {
                return e.replace(py, '-').replace(gy, '')
            }
            function yy(e) {
                return 'string' == typeof e && !0
            }
            var wy = function (e) {
                return 'function' == typeof e || 'object' == typeof e && null !== e && !Array.isArray(e)
            },
                by = function (e) {
                    return '__proto__' !== e && 'constructor' !== e && 'prototype' !== e
                };
            function ky(e, t, n) {
                var r = e[n];
                wy(t) && wy(r) ? My(r, t) : e[n] = t
            }
            function My(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                for (var a = 0, i = n; a < i.length; a++) {
                    var o = i[a];
                    if (wy(o)) for (var s in o) by(s) && ky(e, o[s], s)
                }
                return e
            }
            var Ey = r.createContext();
            Ey.Consumer;
            var Py = {
            };
            function xy(e, t, n) {
                var a = yv(e),
                    i = !yy(e),
                    o = t.attrs,
                    s = void 0 === o ? hv : o,
                    u = t.componentId,
                    l = void 0 === u ? function (e, t) {
                        var n = 'string' != typeof e ? 'sc' : vy(e);
                        Py[n] = (Py[n] || 0) + 1;
                        var r = n + '-' + function (e) {
                            return qv(Vv(e) >>> 0)
                        }('5.3.3' + n + Py[n]);
                        return t ? t + '-' + r : r
                    }(t.displayName, t.parentComponentId) : u,
                    d = t.displayName,
                    c = void 0 === d ? function (e) {
                        return yy(e) ? 'styled.' + e : 'Styled(' + vv(e) + ')'
                    }(e) : d,
                    m = t.displayName && t.componentId ? vy(t.displayName) + '-' + t.componentId : t.componentId || l,
                    f = a && e.attrs ? Array.prototype.concat(e.attrs, s).filter(Boolean) : s,
                    h = t.shouldForwardProp;
                a && e.shouldForwardProp && (h = t.shouldForwardProp ? function (n, r, a) {
                    return e.shouldForwardProp(n, r, a) && t.shouldForwardProp(n, r, a)
                }
                    : e.shouldForwardProp);
                var p,
                    g = new $v(n, m, a ? e.componentStyle : void 0),
                    v = g.isStatic && 0 === s.length,
                    y = function (e, t) {
                        return function (e, t, n, a) {
                            var i = e.attrs,
                                o = e.componentStyle,
                                s = e.defaultProps,
                                u = e.foldedComponentIds,
                                l = e.shouldForwardProp,
                                d = e.styledComponentId,
                                c = e.target,
                                m = function (e, t, n) {
                                    void 0 === e && (e = pv);
                                    var r = cv({
                                    }, t, {
                                        theme: e
                                    }),
                                        a = {
                                        };
                                    return n.forEach((function (e) {
                                        var t,
                                            n,
                                            i,
                                            o = e;
                                        for (t in gv(o) && (o = o(r)), o) r[t] = a[t] = 'className' === t ? (n = a[t], i = o[t], n && i ? n + ' ' + i : n || i) : o[t]
                                    })),
                                        [
                                            r,
                                            a
                                        ]
                                }(function (e, t, n) {
                                    return void 0 === n && (n = pv),
                                        e.theme !== n.theme && e.theme || t || n.theme
                                }(t, (0, r.useContext)(Ey), s) || pv, t, i),
                                f = m[0],
                                h = m[1],
                                p = function (e, t, n, a) {
                                    var i = ry(),
                                        o = (0, r.useContext)(ey) || ny;
                                    return t ? e.generateAndInjectStyles(pv, i, o) : e.generateAndInjectStyles(n, i, o)
                                }(o, a, f),
                                g = n,
                                v = h.$as || t.$as || h.as || t.as || c,
                                y = yy(v),
                                w = h !== t ? cv({
                                }, t, {
                                }, h) : t,
                                b = {
                                };
                            for (var k in w) '$' !== k[0] && 'as' !== k && ('forwardedAs' === k ? b.as = w[k] : (l ? l(k, uv, v) : !y || uv(k)) && (b[k] = w[k]));
                            return t.style && h.style !== t.style && (b.style = cv({
                            }, t.style, {
                            }, h.style)),
                                b.className = Array.prototype.concat(u, d, p !== d ? p : null, t.className, h.className).filter(Boolean).join(' '),
                                b.ref = g,
                                (0, r.createElement)(v, b)
                        }(p, e, t, v)
                    };
                return y.displayName = c,
                    (p = r.forwardRef(y)).attrs = f,
                    p.componentStyle = g,
                    p.displayName = c,
                    p.shouldForwardProp = h,
                    p.foldedComponentIds = a ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : hv,
                    p.styledComponentId = m,
                    p.target = a ? e.target : e,
                    p.withComponent = function (e) {
                        var r = t.componentId,
                            a = function (e, t) {
                                if (null == e) return {
                                };
                                var n,
                                    r,
                                    a = {
                                    },
                                    i = Object.keys(e);
                                for (r = 0; r < i.length; r++) n = i[r],
                                    t.indexOf(n) >= 0 || (a[n] = e[n]);
                                return a
                            }(t, [
                                'componentId'
                            ]),
                            i = r && r + '-' + (yy(e) ? e : vy(vv(e)));
                        return xy(e, cv({
                        }, a, {
                            attrs: f,
                            componentId: i
                        }), n)
                    },
                    Object.defineProperty(p, 'defaultProps', {
                        get: function () {
                            return this._foldedDefaultProps
                        },
                        set: function (t) {
                            this._foldedDefaultProps = a ? My({
                            }, e.defaultProps, t) : t
                        }
                    }),
                    p.toString = function () {
                        return '.' + p.styledComponentId
                    },
                    i && dv()(p, e, {
                        attrs: !0,
                        componentStyle: !0,
                        displayName: !0,
                        foldedComponentIds: !0,
                        shouldForwardProp: !0,
                        styledComponentId: !0,
                        target: !0,
                        withComponent: !0
                    }),
                    p
            }
            var Sy,
                Ty = function (e) {
                    return function e(t, n, r) {
                        if (void 0 === r && (r = pv), !(0, nv.isValidElementType)(n)) return Mv(1, String(n));
                        var a = function () {
                            return t(n, r, hy.apply(void 0, arguments))
                        };
                        return a.withConfig = function (a) {
                            return e(t, n, cv({
                            }, r, {
                            }, a))
                        },
                            a.attrs = function (a) {
                                return e(t, n, cv({
                                }, r, {
                                    attrs: Array.prototype.concat(r.attrs, a).filter(Boolean)
                                }))
                            },
                            a
                    }(xy, e)
                };
            [
                'a',
                'abbr',
                'address',
                'area',
                'article',
                'aside',
                'audio',
                'b',
                'base',
                'bdi',
                'bdo',
                'big',
                'blockquote',
                'body',
                'br',
                'button',
                'canvas',
                'caption',
                'cite',
                'code',
                'col',
                'colgroup',
                'data',
                'datalist',
                'dd',
                'del',
                'details',
                'dfn',
                'dialog',
                'div',
                'dl',
                'dt',
                'em',
                'embed',
                'fieldset',
                'figcaption',
                'figure',
                'footer',
                'form',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'head',
                'header',
                'hgroup',
                'hr',
                'html',
                'i',
                'iframe',
                'img',
                'input',
                'ins',
                'kbd',
                'keygen',
                'label',
                'legend',
                'li',
                'link',
                'main',
                'map',
                'mark',
                'marquee',
                'menu',
                'menuitem',
                'meta',
                'meter',
                'nav',
                'noscript',
                'object',
                'ol',
                'optgroup',
                'option',
                'output',
                'p',
                'param',
                'picture',
                'pre',
                'progress',
                'q',
                'rp',
                'rt',
                'ruby',
                's',
                'samp',
                'script',
                'section',
                'select',
                'small',
                'source',
                'span',
                'strong',
                'style',
                'sub',
                'summary',
                'sup',
                'table',
                'tbody',
                'td',
                'textarea',
                'tfoot',
                'th',
                'thead',
                'time',
                'title',
                'tr',
                'track',
                'u',
                'ul',
                'var',
                'video',
                'wbr',
                'circle',
                'clipPath',
                'defs',
                'ellipse',
                'foreignObject',
                'g',
                'image',
                'line',
                'linearGradient',
                'marker',
                'mask',
                'path',
                'pattern',
                'polygon',
                'polyline',
                'radialGradient',
                'rect',
                'stop',
                'svg',
                'text',
                'textPath',
                'tspan'
            ].forEach((function (e) {
                Ty[e] = Ty(e)
            })),
                Sy = function (e, t) {
                    this.rules = e,
                        this.componentId = t,
                        this.isStatic = Yv(e),
                        Fv.registerId(this.componentId + 1)
                }.prototype,
                Sy.createStyles = function (e, t, n, r) {
                    var a = r(my(this.rules, t, n, r).join(''), ''),
                        i = this.componentId + e;
                    n.insertRules(i, i, a)
                },
                Sy.removeStyles = function (e, t) {
                    t.clearRules(this.componentId + e)
                },
                Sy.renderStyles = function (e, t, n, r) {
                    e > 2 && Fv.registerId(this.componentId + e),
                        this.removeStyles(e, n),
                        this.createStyles(e, t, n, r)
                },
                function () {
                    var e = function () {
                        var e = this;
                        this._emitSheetCSS = function () {
                            var t = e.instance.toString();
                            if (!t) return '';
                            var n = zv();
                            return '<style ' + [n && 'nonce="' + n + '"',
                            wv + '="true"',
                                'data-styled-version="5.3.3"'].filter(Boolean).join(' ') + '>' + t + '</style>'
                        },
                            this.getStyleTags = function () {
                                return e.sealed ? Mv(2) : e._emitSheetCSS()
                            },
                            this.getStyleElement = function () {
                                var t;
                                if (e.sealed) return Mv(2);
                                var n = ((t = {
                                })[wv] = '', t['data-styled-version'] = '5.3.3', t.dangerouslySetInnerHTML = {
                                    __html: e.instance.toString()
                                }, t),
                                    a = zv();
                                return a && (n.nonce = a),
                                    [
                                        r.createElement('style', cv({
                                        }, n, {
                                            key: 'sc-0-0'
                                        }))
                                    ]
                            },
                            this.seal = function () {
                                e.sealed = !0
                            },
                            this.instance = new Fv({
                                isServer: !0
                            }),
                            this.sealed = !1
                    }.prototype;
                    e.collectStyles = function (e) {
                        return this.sealed ? Mv(2) : r.createElement(ay, {
                            sheet: this.instance
                        }, e)
                    },
                        e.interleaveWithNodeStream = function (e) {
                            return Mv(3)
                        }
                }();
            var Cy,
                Wy,
                jy,
                Dy = function (e) {
                    var t = e.mediaItem,
                        n = e.mediaType,
                        a = e.appearance || {
                        },
                        i = a.topBar,
                        o = a.showNextAiring,
                        s = a.showLastAiring,
                        u = a.showMarksAsSeenFirstUnwatchedEpisode,
                        l = a.showMarksAsSeenLastAiredEpisode,
                        d = a.showRating,
                        c = a.showAddToWatchlistAndMarkAsSeenButtons,
                        m = {
                            audiobook: Ze._('Audiobook'),
                            book: Ze._('Book'),
                            movie: Ze._('Movie'),
                            tv: Ze._('Tv'),
                            video_game: Ze._('Video game')
                        };
                    return r.createElement('div', {
                        key: t.id,
                        className: 'item'
                    }, r.createElement('div', {
                        className: 'pb-4'
                    }, r.createElement(Hg, {
                        src: t.posterSmall,
                        mediaType: n,
                        itemMediaType: t.mediaType,
                        href: '#/details/'.concat(t.id)
                    }, i && r.createElement(r.Fragment, null, i.showOnWatchlistIcon && r.createElement('div', {
                        className: 'absolute top-0 left-0 inline-flex mt-1 pointer-events-auto hover:cursor-pointer'
                    }, t.onWatchlist && r.createElement(Ny, {
                        onClick: function (e) {
                            e.preventDefault(),
                                confirm(Ze._('Remove "{0}" from watchlist?', {
                                    0: t.title
                                })) && Hr(t)
                        }
                    }, r.createElement('span', {
                        className: 'flex material-icons'
                    }, 'bookmark'))), nu(t) ? r.createElement('a', {
                        className: 'absolute inline-flex pointer-events-auto foo right-1 top-1 hover:no-underline',
                        href: '#/episodes/'.concat(t.id)
                    }, i.showFirstUnwatchedEpisodeBadge && t.firstUnwatchedEpisode && r.createElement(Ny, null, Qs(t.firstUnwatchedEpisode)), i.showUnwatchedEpisodesCount && t.unseenEpisodesCount > 0 && r.createElement(Ny, null, t.unseenEpisodesCount), i.showUnwatchedEpisodesCount && 1 == t.seen && r.createElement(Ny, null, r.createElement('i', {
                        className: 'flex text-white material-icons hover:text-yellow-600'
                    }, 'check_circle_outline'))) : r.createElement(r.Fragment, null, i.showUnwatchedEpisodesCount && 1 == t.seen && r.createElement('div', {
                        className: 'absolute inline-flex pointer-events-auto foo right-1 top-1'
                    }, r.createElement(Ny, null, r.createElement('i', {
                        className: 'flex text-white select-none material-icons'
                    }, 'check_circle_outline'))))), d && Js(t) && r.createElement('div', {
                        className: 'absolute pointer-events-auto bottom-1 left-1'
                    }, r.createElement(fu, {
                        mediaItem: t
                    }))), r.createElement('div', {
                        className: 'mt-1 overflow-hidden whitespace-nowrap text-ellipsis'
                    }, r.createElement('div', {
                        className: 'flex justify-between text-gray-500 dark:text-gray-400'
                    }, r.createElement('span', null, t.releaseDate && new Date(t.releaseDate).getFullYear()), r.createElement('span', null, m[t.mediaType])), r.createElement('div', {
                        className: 'overflow-hidden text-lg overflow-ellipsis whitespace-nowrap'
                    }, t.title), ou(t) && r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'w-full h-2 mt-1 rounded bg-slate-300'
                    }, r.createElement('div', {
                        className: 'h-full rounded bg-slate-900',
                        style: {
                            width: ''.concat(100 * t.progress, '%')
                        }
                    }))), o && r.createElement('div', {
                        className: 'overflow-hidden overflow-ellipsis whitespace-nowrap"'
                    }, 'tv' === t.mediaType && t.upcomingEpisode && r.createElement(r.Fragment, null, Qs(t.upcomingEpisode), ' ', r.createElement(zg, {
                        to: new Date(t.upcomingEpisode.releaseDate)
                    })), 'tv' !== t.mediaType && t.releaseDate && r.createElement(Oe, {
                        id: 'Release <0/>',
                        components: {
                            0: r.createElement(zg, {
                                to: new Date(t.releaseDate)
                            })
                        }
                    })), s && r.createElement('div', {
                        className: 'overflow-hidden overflow-ellipsis whitespace-nowrap'
                    }, 'tv' === t.mediaType && t.lastAiredEpisode && r.createElement(r.Fragment, null, Qs(t.lastAiredEpisode), ' ', r.createElement(zg, {
                        to: new Date(t.lastAiredEpisode.releaseDate)
                    })), 'tv' !== t.mediaType && t.releaseDate && r.createElement(Oe, {
                        id: 'Released <0/>',
                        components: {
                            0: r.createElement(zg, {
                                to: new Date(t.releaseDate)
                            })
                        }
                    }))), u && (!nu(t) || nu(t) && t.firstUnwatchedEpisode) && r.createElement('div', {
                        className: 'flex flex-col'
                    }, r.createElement(Iy, {
                        mediaItem: t,
                        episode: t.firstUnwatchedEpisode
                    })), l && (!nu(t) || nu(t) && t.lastAiredEpisode) && r.createElement('div', {
                        className: 'flex flex-col'
                    }, r.createElement(Iy, {
                        mediaItem: t,
                        episode: t.lastAiredEpisode
                    })), c && r.createElement(r.Fragment, null, !t.onWatchlist && r.createElement('div', {
                        className: 'flex flex-col'
                    }, Ks(t) && r.createElement('div', {
                        className: 'my-1 text-sm text-center pointer-events-auto btn dark:bg-gray-900 bg-zinc-100',
                        onClick: function (e) {
                            e.preventDefault(),
                                _r(t)
                        }
                    }, r.createElement(Oe, {
                        id: 'Add to watchlist'
                    })), function (e) {
                        return $s(e) && 'number' != typeof e.lastSeenAt
                    }(t) && r.createElement(Iy, {
                        mediaItem: t
                    })))))
                },
                Ny = Ty.div.attrs({
                    className: 'rounded bg-red-900 px-1 text-lg ml-1 text-white hover:text-yellow-600 shadow-sm shadow-black'
                })(Cy || (Wy = [
                    ''
                ], jy || (jy = Wy.slice(0)), Cy = Object.freeze(Object.defineProperties(Wy, {
                    raw: {
                        value: Object.freeze(jy)
                    }
                })))),
                Iy = function (e) {
                    var t = e.mediaItem,
                        n = e.episode;
                    return r.createElement(Ys, {
                        openModal: function (e) {
                            return r.createElement(r.Fragment, null, r.createElement('div', {
                                className: 'my-1 text-sm dark:bg-gray-900 bg-zinc-100 btn',
                                onClick: function () {
                                    return e()
                                }
                            }, Zs(t) && r.createElement(Oe, {
                                id: 'Mark as listened'
                            }), eu(t) && r.createElement(Oe, {
                                id: 'Mark as read'
                            }), tu(t) && r.createElement(Oe, {
                                id: 'Mark as seen'
                            }), nu(t) && (n ? r.createElement(Oe, {
                                id: 'Mark {0} as seen',
                                values: {
                                    0: Qs(n)
                                }
                            }) : r.createElement(Oe, {
                                id: 'Mark as seen'
                            })), ru(t) && r.createElement(Oe, {
                                id: 'Mark as played'
                            })))
                        }
                    }, (function (e) {
                        return r.createElement(uu, {
                            mediaItem: t,
                            episode: n,
                            closeModal: e
                        })
                    }))
                },
                zy = function () {
                    var e,
                        t,
                        n,
                        a,
                        i,
                        o = (0, d.useQuery)(['statistics',
                            'summary'], ve.statistics.summary).data;
                    return r.createElement(r.Fragment, null, o && r.createElement('div', {
                        className: 'flex flex-wrap'
                    }, (null === (e = o.tv) || void 0 === e ? void 0 : e.plays) > 0 && r.createElement('div', {
                        className: 'mb-6 mr-6'
                    }, r.createElement('div', {
                        className: 'text-lg font-bold'
                    }, r.createElement(Oe, {
                        id: 'Tv'
                    })), o.tv.duration > 0 && r.createElement('div', {
                        className: 'whitespace-nowrap'
                    }, r.createElement(Oe, {
                        id: '<0><1/> </0>watching',
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement(Rg, {
                                milliseconds: 60 * o.tv.duration * 1000
                            })
                        }
                    })), r.createElement('div', {
                        className: 'whitespace-nowrap'
                    }, r.createElement(Oe, {
                        id: '<0>{0}</0> episodes (<1>{1}</1> plays of <2>{2}</2> shows)',
                        values: {
                            0: o.tv.episodes,
                            1: o.tv.plays,
                            2: o.tv.items
                        },
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement('b', null),
                            2: r.createElement('b', null)
                        }
                    }))), (null === (t = o.movie) || void 0 === t ? void 0 : t.plays) > 0 && r.createElement('div', {
                        className: 'mb-6 mr-6'
                    }, r.createElement('div', {
                        className: 'text-lg font-bold'
                    }, r.createElement(Oe, {
                        id: 'Movies'
                    }), ' '), o.movie.duration > 0 && r.createElement('div', {
                        className: 'whitespace-nowrap'
                    }, r.createElement(Oe, {
                        id: '<0><1/> </0>watching',
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement(Rg, {
                                milliseconds: 60 * o.movie.duration * 1000
                            })
                        }
                    })), r.createElement('div', {
                        className: 'whitespace-nowrap'
                    }, r.createElement(Oe, {
                        id: '<0>{0}</0> movies (<1>{1}</1> plays)',
                        values: {
                            0: o.movie.items,
                            1: o.movie.plays
                        },
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement('b', null)
                        }
                    }))), (null === (n = o.video_game) || void 0 === n ? void 0 : n.plays) > 0 && r.createElement('div', {
                        className: 'mb-6 mr-6'
                    }, r.createElement('div', {
                        className: 'text-lg font-bold'
                    }, r.createElement(Oe, {
                        id: 'Games'
                    })), o.video_game.duration > 0 && r.createElement('div', {
                        className: 'whitespace-nowrap'
                    }, r.createElement(Oe, {
                        id: '<0><1/> </0>playing',
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement(Rg, {
                                milliseconds: 60 * o.video_game.duration * 1000
                            })
                        }
                    })), r.createElement('div', null, r.createElement(Oe, {
                        id: '<0>{0}</0> video games (<1>{1}</1> plays)',
                        values: {
                            0: o.video_game.items,
                            1: o.video_game.plays
                        },
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement('b', null)
                        }
                    }))), (null === (a = o.book) || void 0 === a ? void 0 : a.plays) > 0 && r.createElement('div', {
                        className: 'mb-6 mr-6'
                    }, r.createElement('div', {
                        className: 'text-lg font-bold'
                    }, r.createElement(Oe, {
                        id: 'Books'
                    })), o.book.duration > 0 && r.createElement('div', {
                        className: 'whitespace-nowrap'
                    }, r.createElement(Oe, {
                        id: '<0><1/> </0>reading',
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement(Rg, {
                                milliseconds: 60 * o.book.duration * 1000
                            })
                        }
                    })), r.createElement('div', null, r.createElement(Oe, {
                        id: '<0>{0}</0> books (<1>{1}</1> reads)',
                        values: {
                            0: o.book.items,
                            1: o.book.plays
                        },
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement('b', null)
                        }
                    }))), (null === (i = o.audiobook) || void 0 === i ? void 0 : i.plays) > 0 && r.createElement('div', {
                        className: 'mb-6 mr-6'
                    }, r.createElement('div', {
                        className: 'text-lg font-bold'
                    }, r.createElement(Oe, {
                        id: 'Audiobooks'
                    })), o.audiobook.duration > 0 && r.createElement('div', {
                        className: 'whitespace-nowrap'
                    }, r.createElement(Oe, {
                        id: '<0><1/> </0>listening',
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement(Rg, {
                                milliseconds: 60 * o.audiobook.duration * 1000
                            })
                        }
                    })), r.createElement('div', null, r.createElement(Oe, {
                        id: '<0>{0}</0> audiobooks (<1>{1}</1> plays)',
                        values: {
                            0: o.audiobook.items,
                            1: o.audiobook.plays
                        },
                        components: {
                            0: r.createElement('b', null),
                            1: r.createElement('b', null)
                        }
                    })))))
                },
                Ry = function (e) {
                    var t = e.title,
                        n = e.items,
                        a = e.gridItemArgs;
                    return r.createElement(r.Fragment, null, (null == n ? void 0 : n.length) > 0 && r.createElement('div', {
                        className: 'mb-10'
                    }, r.createElement('div', {
                        className: 'text-2xl font-bold'
                    }, t), r.createElement('div', {
                        className: 'flex flex-row flex-wrap mt-4'
                    }, null == n ? void 0 : n.slice(0, 5).map((function (e) {
                        return r.createElement('div', {
                            key: e.id,
                            className: 'w-40 mr-5'
                        }, r.createElement(Dy, {
                            mediaItem: e,
                            appearance: a
                        }))
                    })))))
                },
                Ay = function () {
                    var e = tv({
                        orderBy: 'nextAiring',
                        sortOrder: 'asc',
                        page: 1,
                        onlyOnWatchlist: !0,
                        onlyWithNextAiring: !0
                    }).items,
                        t = tv({
                            mediaType: 'tv',
                            orderBy: 'lastSeen',
                            sortOrder: 'desc',
                            page: 1,
                            onlyWithNextEpisodesToWatch: !0,
                            onlyOnWatchlist: !0
                        }).items,
                        n = tv({
                            orderBy: 'lastAiring',
                            sortOrder: 'desc',
                            page: 1,
                            onlyOnWatchlist: !0,
                            onlySeenItems: !1
                        }).items,
                        a = tv({
                            orderBy: 'lastSeen',
                            sortOrder: 'desc',
                            page: 1,
                            onlySeenItems: !0,
                            onlyWithoutUserRating: !0
                        }).items;
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'px-2'
                    }, r.createElement(zy, null), r.createElement(Ry, {
                        title: Ze._('Upcoming'),
                        items: e,
                        gridItemArgs: {
                            showRating: !0,
                            showNextAiring: !0,
                            topBar: {
                                showFirstUnwatchedEpisodeBadge: !0,
                                showOnWatchlistIcon: !0,
                                showUnwatchedEpisodesCount: !0
                            }
                        }
                    }), r.createElement(Ry, {
                        title: Ze._('Next episode to watch'),
                        items: t,
                        gridItemArgs: {
                            showRating: !0,
                            showFirstUnwatchedEpisode: !0,
                            showMarksAsSeenFirstUnwatchedEpisode: !0,
                            topBar: {
                                showFirstUnwatchedEpisodeBadge: !0,
                                showOnWatchlistIcon: !0,
                                showUnwatchedEpisodesCount: !0
                            }
                        }
                    }), r.createElement(Ry, {
                        title: Ze._('Recently released'),
                        items: null == n ? void 0 : n.filter((function (e) {
                            return new Date(e.lastAiring) > Gt(new Date, 30)
                        })),
                        gridItemArgs: {
                            showRating: !0,
                            showLastAiring: !0,
                            showMarksAsSeenLastAiredEpisode: !0,
                            topBar: {
                                showFirstUnwatchedEpisodeBadge: !0,
                                showOnWatchlistIcon: !0,
                                showUnwatchedEpisodesCount: !0
                            }
                        }
                    }), r.createElement(Ry, {
                        title: Ze._('Unrated'),
                        items: a,
                        gridItemArgs: {
                            showRating: !0,
                            topBar: {
                                showFirstUnwatchedEpisodeBadge: !0,
                                showOnWatchlistIcon: !0,
                                showUnwatchedEpisodesCount: !0
                            }
                        }
                    })))
                },
                Oy = function () {
                    var e = s(r.useState(''), 2),
                        t = e[0],
                        n = e[1],
                        a = s(r.useState(''), 2),
                        i = a[0],
                        o = a[1],
                        u = Lg(),
                        l = u.login,
                        d = u.loginIsError,
                        c = (u.loginError, Ug()),
                        m = c.configuration;
                    if (c.isLoading) return r.createElement(Oe, {
                        id: 'Loading'
                    });
                    var f = function () {
                        var e = te(fe().mark((function e(n) {
                            return fe().wrap((function (e) {
                                for (; ;) switch (e.prev = e.next) {
                                    case 0:
                                        n.preventDefault(),
                                            l({
                                                username: t,
                                                password: i
                                            });
                                    case 2:
                                    case 'end':
                                        return e.stop()
                                }
                            }), e)
                        })));
                        return function (t) {
                            return e.apply(this, arguments)
                        }
                    }();
                    return r.createElement('div', {
                        className: 'flex items-center'
                    }, r.createElement('div', {
                        className: 'mx-auto mt-20'
                    }, r.createElement('div', {
                        className: 'mb-10 text-5xl'
                    }, r.createElement(Oe, {
                        id: 'Login'
                    })), r.createElement('form', {
                        onSubmit: f
                    }, r.createElement('div', {
                        className: 'pb-5'
                    }, r.createElement('label', {
                        htmlFor: 'username',
                        className: 'block text-lg'
                    }, r.createElement(Oe, {
                        id: 'Username'
                    }), ':'), r.createElement('input', {
                        id: 'username',
                        type: 'text',
                        name: 'username',
                        required: !0,
                        autoFocus: !0,
                        className: 'w-72',
                        onChange: function (e) {
                            return n(e.target.value)
                        }
                    })), r.createElement('div', {
                        className: 'pb-2'
                    }, r.createElement('label', {
                        htmlFor: 'password',
                        className: 'block text-lg'
                    }, r.createElement(Oe, {
                        id: 'Password'
                    }), ':'), r.createElement('input', {
                        id: 'password',
                        type: 'password',
                        name: 'password',
                        className: 'w-72',
                        required: !0,
                        onChange: function (e) {
                            return o(e.target.value)
                        }
                    })), r.createElement('div', null, r.createElement('button', {
                        className: 'w-full mt-2'
                    }, r.createElement(Oe, {
                        id: 'Login'
                    })))), Boolean(null == m ? void 0 : m.enableRegistration) && r.createElement(Q, {
                        to: '/register'
                    }, r.createElement('button', {
                        className: 'w-full mt-4'
                    }, r.createElement(Oe, {
                        id: 'Register'
                    }))), d && r.createElement('div', {
                        className: 'pt-2 font-bold text-red-700 dark:text-red-600'
                    }, r.createElement(Oe, {
                        id: 'Incorrect password or username'
                    }))))
                },
                Hy = (n(8862), n(3210), function (e) {
                    var t = e.values,
                        n = e.initialSelection,
                        a = s((0, r.useState)(n), 2),
                        i = a[0],
                        o = a[1];
                    return {
                        Menu: function (e) {
                            var n = e.children,
                                a = s((0, r.useState)(!1), 2),
                                u = a[0],
                                l = a[1],
                                d = (0, r.useRef)(null);
                            return (0, r.useEffect)((function () {
                                var e = function (e) {
                                    d && d.current && d.current !== e.target && !d.current.contains(e.target) && l(!1)
                                };
                                return document.addEventListener('mousedown', e),
                                    function () {
                                        return document.removeEventListener('mousedown', e)
                                    }
                            }), [
                            ]),
                                r.createElement('div', {
                                    className: 'flex select-none'
                                }, r.createElement('div', {
                                    className: 'relative ml-2 cursor-pointer select-none',
                                    ref: d,
                                    onClick: function () {
                                        return l(!u)
                                    }
                                }, n, u && r.createElement('ul', {
                                    className: 'absolute right-0 z-10 transition-all rounded shadow-lg shadow-black bg-zinc-100 dark:bg-gray-900'
                                }, t.map((function (e) {
                                    return r.createElement('li', {
                                        key: e,
                                        className: tt('px-2 py-1 rounded hover:bg-red-700 whitespace-nowrap', i === e && 'dark:bg-slate-700 bg-zinc-300'),
                                        onClick: function () {
                                            o(e)
                                        }
                                    }, e)
                                })))))
                        },
                        selectedValue: i
                    }
                });
            function _y(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            function Ly(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {
                    };
                    t % 2 ? _y(Object(n), !0).forEach((function (t) {
                        Ee(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : _y(Object(n)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            var Fy = (n(2479), function (e) {
                var t = function (e) {
                    return {
                        all: Ze._('All'),
                        onlyWithUserRating: Ze._('Rated'),
                        onlyWithoutUserRating: Ze._('Unrated'),
                        onlyOnWatchlist: Ze._('On watchlist'),
                        onlySeenItems: Zs(e) ? Ze._('Listened') : eu(e) ? Ze._('Read') : ru(e) ? Ze._('Played') : Ze._('Watched')
                    }
                }(e),
                    n = su(t),
                    a = Hy({
                        values: Object.values(t),
                        initialSelection: t.all
                    }),
                    i = a.selectedValue,
                    o = a.Menu;
                return {
                    filter: Ee({
                    }, n[i], !0),
                    FilterByComponent: function () {
                        return r.createElement(o, null, r.createElement('div', {
                            className: 'flex ml-2 cursor-pointer select-none'
                        }, r.createElement('span', {
                            className: 'material-icons'
                        }, 'filter_alt'), ' ', i))
                    }
                }
            });
            function Xy(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            function Uy(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {
                    };
                    t % 2 ? Xy(Object(n), !0).forEach((function (t) {
                        Ee(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Xy(Object(n)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            var qy = function (e) {
                var t = s(J(), 1)[0],
                    n = e.onSearch,
                    a = s((0, r.useState)(''), 2),
                    i = a[0],
                    o = a[1];
                return (0, r.useEffect)((function () {
                    return n(t.get('search') || '')
                }), [
                    t,
                    n
                ]),
                    r.createElement('form', {
                        onSubmit: function (e) {
                            e.preventDefault(),
                                n(i)
                        },
                        className: 'flex justify-center w-full mb-6'
                    }, r.createElement('input', {
                        type: 'text',
                        value: i,
                        onChange: function (e) {
                            return o(e.target.value)
                        },
                        className: 'w-full'
                    }), r.createElement('button', {
                        className: 'px-4 ml-2 transition-shadow duration-100 hover:shadow hover:shadow-indigo-500/50'
                    }, r.createElement(Oe, {
                        id: 'Search'
                    })))
            },
                Gy = function (e) {
                    var t = e.numberOfPages,
                        n = e.page,
                        a = e.setPage;
                    return r.createElement('div', {
                        className: 'flex justify-center w-full my-3'
                    }, Array.from(new Array(t).keys()).map((function (e) {
                        return e + 1
                    })).map((function (e) {
                        return r.createElement('div', {
                            key: e,
                            className: tt('m-2 px-2 py-1 bg-red-500 rounded cursor-pointer select-none ', {
                                'bg-blue-500': e === n
                            }),
                            onClick: function () {
                                return a(e)
                            }
                        }, e)
                    })))
                },
                Vy = function (e) {
                    var t,
                        n = e.args,
                        a = e.showSortOrderControls,
                        i = e.showSearch,
                        o = e.gridItemAppearance,
                        u = s(J(), 2),
                        l = u[0],
                        c = u[1],
                        m = s((0, r.useState)(), 2),
                        f = m[0],
                        h = m[1],
                        p = s((0, r.useState)(Number(null == l ? void 0 : l.get('page')) || 1), 2),
                        g = p[0],
                        v = p[1],
                        y = function (e) {
                            var t = e.mediaType,
                                n = s((0, r.useState)(e.sortOrder), 2),
                                a = n[0],
                                i = n[1],
                                o = Ly(Ly(Ly({
                                }, {
                                    lastSeen: Ze._('Last seen'),
                                    releaseDate: Ze._('Release date'),
                                    status: Ze._('Status'),
                                    title: Ze._('Title'),
                                    nextAiring: Ze._('Next airing'),
                                    lastAiring: Ze._('Last airing'),
                                    unseenEpisodes: Ze._('Unseen episodes count'),
                                    mediaType: Ze._('Media type'),
                                    progress: Ze._('Progress')
                                }), nu(t) ? {
                                }
                                    : {
                                        nextAiring: void 0,
                                        lastAiring: void 0,
                                        unseenEpisodes: void 0
                                    }), void 0 !== t ? {
                                        mediaType: void 0
                                    }
                                    : {
                                    }),
                                u = su(o),
                                l = Object.entries(o).filter((function (e) {
                                    var t = s(e, 2),
                                        n = (t[0], t[1]);
                                    return Boolean(n)
                                })).map((function (e) {
                                    var t = s(e, 2);
                                    return t[0],
                                        t[1]
                                })),
                                d = Hy({
                                    values: l,
                                    initialSelection: o[e.orderBy]
                                }),
                                c = d.selectedValue,
                                m = d.Menu;
                            return {
                                orderBy: c ? u[c] : e.orderBy,
                                sortOrder: a,
                                OrderByComponent: function () {
                                    return r.createElement(m, null, r.createElement('div', {
                                        className: 'flex select-none'
                                    }, r.createElement('div', {
                                        className: 'flex cursor-pointer select-none'
                                    }, r.createElement('span', {
                                        className: 'material-icons'
                                    }, 'sort_by_alpha'), ' ', c), r.createElement('div', {
                                        className: 'ml-2 cursor-pointer',
                                        onClick: function () {
                                            return i('asc' === a ? 'desc' : 'asc')
                                        }
                                    }, 'asc' === a ? '↑' : '↓')))
                                }
                            }
                        }({
                            sortOrder: n.sortOrder,
                            orderBy: n.orderBy,
                            mediaType: n.mediaType
                        }),
                        w = y.orderBy,
                        b = y.sortOrder,
                        k = y.OrderByComponent,
                        M = Fy(n.mediaType),
                        E = M.filter,
                        P = M.FilterByComponent;
                    (0, r.useEffect)((function () {
                        1 !== g && S(1)
                    }), [
                        w,
                        b,
                        JSON.stringify(E)
                    ]);
                    var x = (0, r.useRef)(),
                        S = (0, r.useCallback)((function (e) {
                            v(e),
                                window.document.body.scrollIntoView({
                                    behavior: 'auto'
                                }),
                                c(1 === e ? Object.fromEntries(Array.from(l.entries()).filter((function (e) {
                                    return 'page' !== s(e, 1)[0]
                                }))) : Uy(Uy({
                                }, Object.fromEntries(l.entries())), {
                                }, {
                                    page: e.toString()
                                }))
                        }), [
                            l,
                            c
                        ]),
                        T = tv(Uy(Uy(Uy({
                        }, n), E), {
                        }, {
                            page: g,
                            orderBy: w,
                            sortOrder: b
                        })),
                        C = T.isLoading,
                        W = T.items,
                        j = T.numberOfPages,
                        D = T.numberOfItemsTotal,
                        N = function () {
                            var e = s((0, r.useState)(null), 2),
                                t = e[0],
                                n = e[1],
                                a = (0, d.useQuery)(['search',
                                    t], (function () {
                                        return ve.search.search({
                                            mediaType: t.mediaType,
                                            q: t.query
                                        })
                                    }), {
                                    enabled: null !== t
                                }),
                                i = a.isLoading,
                                o = a.error;
                            return {
                                items: a.data,
                                error: o,
                                isLoading: i,
                                search: function (e) {
                                    n(e)
                                }
                            }
                        }(),
                        I = N.items,
                        z = N.isLoading,
                        R = N.search;
                    (0, r.useEffect)((function () {
                        0 === (null == f ? void 0 : f.trim().length) ? (h(void 0), c(Object.fromEntries(Array.from(l.entries()).filter((function (e) {
                            return 'search' !== s(e, 1)[0]
                        }))))) : f && (c({
                            search: f
                        }), R({
                            mediaType: n.mediaType,
                            query: f
                        }), v(1))
                    }), [
                        n.mediaType,
                        f
                    ]);
                    var A = z || C,
                        O = !A && !f && 0 === W.length && E === {
                        };
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'flex justify-center w-full',
                        ref: x
                    }, r.createElement('div', {
                        className: 'flex flex-row flex-wrap items-grid'
                    }, r.createElement('div', {
                        className: 'mb-1 header'
                    }, i && n.mediaType && r.createElement(qy, {
                        onSearch: h
                    }), i && O ? r.createElement('div', {
                        className: 'flex ali'
                    }, r.createElement(Oe, {
                        id: 'Search for items or <0>import</0>',
                        components: {
                            0: r.createElement(Q, {
                                to: '/import',
                                className: 'link'
                            })
                        }
                    })) : r.createElement(r.Fragment, null, !A && r.createElement('div', {
                        className: 'flex'
                    }, r.createElement('div', null, f ? r.createElement(Oe, {
                        id: '{0, plural, one { Found # item for query "<0>{searchQuery}</0>"} other { Found # items for query "<1>{searchQuery}</1>"}}',
                        values: {
                            0: null == I ? void 0 : I.length,
                            searchQuery: f
                        },
                        components: {
                            0: r.createElement('strong', null),
                            1: r.createElement('strong', null)
                        }
                    }) : r.createElement(Oe, {
                        id: '{numberOfItemsTotal, plural, one {1 item} other {# items}}',
                        values: {
                            numberOfItemsTotal: D
                        }
                    })), a && !f && r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'flex ml-auto'
                    }, r.createElement(P, null)), ' ', r.createElement('div', {
                        className: ''
                    }, r.createElement(k, null)))))), A ? r.createElement('div', {
                        className: 'flex flex-col items-center w-full'
                    }, r.createElement('div', {
                        className: ''
                    }, r.createElement(Oe, {
                        id: 'Loading'
                    }))) : r.createElement(r.Fragment, null, null === (t = f ? I : W) || void 0 === t ? void 0 : t.map((function (e) {
                        return r.createElement(Dy, {
                            key: e.id,
                            mediaType: n.mediaType,
                            mediaItem: e,
                            appearance: Uy(Uy({
                            }, o), {
                            }, {
                                showAddToWatchlistAndMarkAsSeenButtons: Boolean(f)
                            })
                        })
                    })), r.createElement('div', {
                        className: 'footer'
                    }, !f && W && !C && j > 1 && r.createElement(Gy, {
                        numberOfPages: j,
                        page: g,
                        setPage: S
                    }))))))
                },
                Yy = function (e) {
                    var t = e.mediaType;
                    return r.createElement(Vy, {
                        args: {
                            mediaType: t,
                            orderBy: 'lastSeen',
                            sortOrder: 'desc'
                        },
                        showSortOrderControls: !0,
                        showSearch: !0,
                        gridItemAppearance: {
                            showRating: !0,
                            showAddToWatchlistAndMarkAsSeenButtons: !0,
                            topBar: {
                                showFirstUnwatchedEpisodeBadge: !0,
                                showOnWatchlistIcon: !0,
                                showUnwatchedEpisodesCount: !0
                            }
                        }
                    })
                },
                By = function () {
                    return [{
                        path: '/',
                        name: Ze._('Home')
                    },
                    {
                        path: '/tv',
                        name: Ze._('Tv')
                    },
                    {
                        path: '/movies',
                        name: Ze._('Movies')
                    },
                    {
                        path: '/games',
                        name: Ze._('Games')
                    },
                    {
                        path: '/books',
                        name: Ze._('Books')
                    },
                    {
                        path: '/audiobooks',
                        name: Ze._('Audiobooks')
                    },
                    {
                        path: '/upcoming',
                        name: Ze._('Upcoming')
                    },
                    {
                        path: '/in-progress',
                        name: Ze._('In progress')
                    },
                    {
                        path: '/watchlist',
                        name: Ze._('Watchlist')
                    },
                    {
                        path: '/calendar',
                        name: Ze._('Calendar')
                    },
                    {
                        path: '/import',
                        name: Ze._('Import')
                    }
                    ]
                },
                $y = function () {
                    var e = Lg(),
                        t = e.user,
                        n = e.logout,
                        a = Me(),
                        i = a.darkMode,
                        o = a.setDarkMode,
                        u = s((0, r.useState)(!1), 2),
                        l = u[0],
                        d = u[1],
                        c = T(),
                        m = By();
                    return r.createElement(r.Fragment, null, t ? r.createElement(r.Fragment, null, r.createElement('nav', {
                        className: 'flex items-center'
                    }, r.createElement('div', {
                        className: 'hidden md:block'
                    }, r.createElement('div', {
                        className: 'flex flex-col md:flex-row'
                    }, m.map((function (e) {
                        return r.createElement('span', {
                            key: e.path,
                            className: 'm-1 mr-2 text-xl whitespace-nowrap'
                        }, r.createElement(K, {
                            to: e.path,
                            className: function (e) {
                                return tt(e.isActive && 'underline')
                            }
                        }, e.name))
                    })))), r.createElement('div', {
                        className: 'md:hidden'
                    }, r.createElement('div', {
                        className: 'flex flex-col md:flex-row'
                    }, m.filter((function (e) {
                        return e.path === c.pathname
                    })).map((function (e) {
                        return r.createElement('span', {
                            key: e.path,
                            className: 'm-1 mr-2 text-xl whitespace-nowrap'
                        }, e.name)
                    })))), r.createElement('div', {
                        className: 'inline-flex ml-auto mr-2 whitespace-nowrap'
                    }, r.createElement('span', {
                        onClick: function () {
                            return o(!i)
                        },
                        className: 'pr-2 cursor-pointer select-none material-icons'
                    }, i ? r.createElement(r.Fragment, null, 'light_mode') : r.createElement(r.Fragment, null, 'mode_night')), r.createElement('a', {
                        href: '#/settings'
                    }, t.name), r.createElement('span', {
                        className: 'px-1'
                    }, '|'), r.createElement('a', {
                        href: '/logout',
                        onClick: function (e) {
                            e.preventDefault(),
                                n()
                        }
                    }, r.createElement(Oe, {
                        id: 'Logout'
                    }))), r.createElement('span', {
                        className: 'flex px-2 cursor-pointer md:hidden material-icons',
                        onClick: function () {
                            return d(!l)
                        }
                    }, l ? 'menu_open' : 'menu')), r.createElement(Qy, {
                        showSidebar: l,
                        hideSidebar: function () {
                            return d(!1)
                        }
                    })) : r.createElement('div', {
                        className: 'flex items-center'
                    }, r.createElement('div', {
                        className: 'inline-flex ml-auto whitespace-nowrap'
                    }, r.createElement('span', {
                        onClick: function () {
                            return o(!i)
                        },
                        className: 'pt-2 pr-2 cursor-pointer select-none material-icons'
                    }, i ? r.createElement(r.Fragment, null, 'light_mode') : r.createElement(r.Fragment, null, 'mode_night')))))
                },
                Qy = function (e) {
                    var t = e.showSidebar,
                        n = e.hideSidebar,
                        a = By();
                    return r.createElement(bs, {
                        items: t,
                        from: {
                            marginRight: '-100%'
                        },
                        enter: {
                            marginRight: '0%'
                        },
                        leave: {
                            marginRight: '-100%'
                        }
                    }, (function (e, i) {
                        return r.createElement(r.Fragment, null, i && r.createElement(r.Fragment, null, r.createElement(ys, {
                            from: {
                                opacity: 0
                            },
                            to: {
                                opacity: 0.3
                            },
                            reverse: !t
                        }, (function (e) {
                            return r.createElement(Xs.div, {
                                style: e,
                                className: tt('fixed top-0 bottom-0 left-0 right-0 z-10 w-full h-full bg-gray-500', !t && 'pointer-events-none'),
                                onClick: function () {
                                    return n()
                                }
                            })
                        })), r.createElement(Xs.div, {
                            style: e,
                            className: 'fixed top-0 right-0 z-50 p-4 pr-10 overflow-hidden bg-red-100 dark:bg-gray-700 -bottom-full'
                        }, r.createElement('div', {
                            className: 'flex flex-col md:flex-row'
                        }, a.map((function (e) {
                            return r.createElement('span', {
                                key: e.path,
                                className: 'my-2 ml-1 mr-3 text-xl'
                            }, r.createElement(K, {
                                onClick: function () {
                                    return n()
                                },
                                to: e.path,
                                className: function (e) {
                                    return tt(e.isActive && 'selected')
                                }
                            }, e.name))
                        }))))))
                    }))
                },
                Ky = function () {
                    return r.createElement(Vy, {
                        args: {
                            orderBy: 'nextAiring',
                            sortOrder: 'asc',
                            onlyOnWatchlist: !0,
                            onlyWithNextAiring: !0
                        },
                        showSortOrderControls: !1,
                        showSearch: !1,
                        gridItemAppearance: {
                            showNextAiring: !0,
                            showRating: !0,
                            topBar: {
                                showFirstUnwatchedEpisodeBadge: !0,
                                showOnWatchlistIcon: !0,
                                showUnwatchedEpisodesCount: !0
                            }
                        }
                    })
                },
                Jy = function () {
                    return r.createElement(Vy, {
                        args: {
                            orderBy: 'lastSeen',
                            sortOrder: 'desc',
                            onlyWithProgress: !0,
                            onlyOnWatchlist: !0
                        },
                        showSortOrderControls: !1,
                        showSearch: !1,
                        gridItemAppearance: {
                            showRating: !0,
                            topBar: {
                                showFirstUnwatchedEpisodeBadge: !0,
                                showOnWatchlistIcon: !0,
                                showUnwatchedEpisodesCount: !0
                            }
                        }
                    })
                };
            function Zy(e) {
                return function (e) {
                    if (Array.isArray(e)) return i(e)
                }(e) || function (e) {
                    if ('undefined' != typeof Symbol && null != e[Symbol.iterator] || null != e['@@iterator']) return Array.from(e)
                }(e) || o(e) || function () {
                    throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.')
                }()
            }
            n(3123);
            var ew = function () {
                var e = Lg().updatePassword,
                    t = s((0, r.useState)(''), 2),
                    n = t[0],
                    a = t[1],
                    i = s((0, r.useState)(''), 2),
                    o = i[0],
                    u = i[1],
                    l = s((0, r.useState)(''), 2),
                    d = l[0],
                    c = l[1],
                    m = s((0, r.useState)(), 2),
                    f = m[0],
                    h = m[1],
                    p = s((0, r.useState)(), 2),
                    g = p[0],
                    v = p[1];
                return r.createElement(r.Fragment, null, r.createElement('form', {
                    onSubmit: function (e) {
                        return e.preventDefault()
                    }
                }, r.createElement('div', null, r.createElement(Oe, {
                    id: 'Current password'
                })), r.createElement('input', {
                    type: 'password',
                    value: n,
                    onChange: function (e) {
                        return a(e.currentTarget.value)
                    },
                    required: !0
                }), r.createElement('div', null, r.createElement(Oe, {
                    id: 'New password'
                })), r.createElement('input', {
                    type: 'password',
                    value: o,
                    required: !0,
                    onChange: function (e) {
                        return u(e.currentTarget.value)
                    }
                }), r.createElement('div', null, r.createElement(Oe, {
                    id: 'Confirm new password'
                })), r.createElement('input', {
                    type: 'password',
                    value: d,
                    required: !0,
                    onChange: function (e) {
                        return c(e.currentTarget.value)
                    }
                }), r.createElement('br', null), r.createElement('button', {
                    className: 'mt-2 btn',
                    onClick: te(fe().mark((function t() {
                        return fe().wrap((function (t) {
                            for (; ;) switch (t.prev = t.next) {
                                case 0:
                                    if (o === d) {
                                        t.next = 4;
                                        break
                                    }
                                    return h(!1),
                                        v(Ze._('Passwords do not match')),
                                        t.abrupt('return');
                                case 4:
                                    return t.prev = 4,
                                        t.next = 7,
                                        e({
                                            currentPassword: n,
                                            newPassword: o
                                        });
                                case 7:
                                    h(!0),
                                        v(Ze._('Password has been changed')),
                                        t.next = 14;
                                    break;
                                case 11:
                                    t.prev = 11,
                                        t.t0 = t.catch(4),
                                        t.t0 instanceof ge && 401 === t.t0.status && (h(!1), v(Ze._('Current password is incorrect')));
                                case 14:
                                case 'end':
                                    return t.stop()
                            }
                        }), t, null, [
                            [4,
                                11]
                        ])
                    })))
                }, r.createElement(Oe, {
                    id: 'Change password'
                }))), void 0 !== f && r.createElement('div', {
                    className: tt('mt-2', f ? 'text-green-500' : 'text-red-500')
                }, g))
            };
            function tw(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            function nw(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {
                    };
                    t % 2 ? tw(Object(n), !0).forEach((function (t) {
                        Ee(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : tw(Object(n)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            var rw = function () {
                var e,
                    t,
                    n,
                    a,
                    i,
                    o,
                    u = (t = (e = (0, d.useQuery)('tokens', (function () {
                        return ve.tokens.get()
                    }))).isLoading, n = e.error, a = e.data, i = (0, d.useMutation)(ve.tokens.add, {
                        onSuccess: function () {
                            cj.invalidateQueries('tokens')
                        }
                    }), o = (0, d.useMutation)(ve.tokens.delete, {
                        onSuccess: function () {
                            cj.invalidateQueries('tokens')
                        }
                    }), {
                        isLoading: t,
                        error: n,
                        tokens: a,
                        addToken: i.mutateAsync,
                        removeToken: o.mutateAsync
                    }),
                    l = u.tokens,
                    c = u.addToken,
                    m = u.removeToken,
                    f = s((0, r.useState)(''), 2),
                    h = f[0],
                    p = f[1],
                    g = s((0, r.useState)({
                    }), 2),
                    v = g[0],
                    y = g[1],
                    w = function () {
                        var e = te(fe().mark((function e(t) {
                            var n;
                            return fe().wrap((function (e) {
                                for (; ;) switch (e.prev = e.next) {
                                    case 0:
                                        return t.preventDefault(),
                                            e.next = 3,
                                            c({
                                                description: h
                                            });
                                    case 3:
                                        n = e.sent,
                                            y(nw(nw({
                                            }, v), {
                                            }, Ee({
                                            }, h, n.token))),
                                            p('');
                                    case 6:
                                    case 'end':
                                        return e.stop()
                                }
                            }), e)
                        })));
                        return function (t) {
                            return e.apply(this, arguments)
                        }
                    }();
                return r.createElement(r.Fragment, null, r.createElement('form', {
                    onSubmit: w
                }, r.createElement('input', {
                    value: h,
                    onChange: function (e) {
                        return p(e.currentTarget.value)
                    },
                    className: 'block',
                    required: !0
                }), r.createElement('button', {
                    className: 'mt-2 btn'
                }, r.createElement(Oe, {
                    id: 'Add token'
                }))), r.createElement('div', {
                    className: 'my-4 border-t'
                }), l && l.map((function (e) {
                    return r.createElement('div', {
                        key: e,
                        className: 'my-2'
                    }, r.createElement('div', {
                        className: 'inline-block mr-2'
                    }, e), e in v && r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'inline-block mr-2'
                    }, v[e])), r.createElement('button', {
                        className: 'mt-2 btn',
                        onClick: function () {
                            return m({
                                description: e
                            })
                        }
                    }, r.createElement(Oe, {
                        id: 'Remove token'
                    })))
                })))
            },
                aw = function (e) {
                    var t = e.title,
                        n = e.description,
                        a = e.checked,
                        i = e.onChange;
                    return r.createElement('div', null, n && r.createElement('div', {
                        className: 'font-light text-gray-600 dark:text-slate-200'
                    }, n), r.createElement('div', {
                        className: 'inline-block pb-2'
                    }, r.createElement('input', {
                        className: 'mr-1',
                        type: 'checkbox',
                        checked: a,
                        onChange: function (e) {
                            return i(e.target.checked)
                        }
                    }), r.createElement('span', null, t)))
                },
                iw = function (e) {
                    var t = e.title,
                        n = e.href,
                        a = e.children;
                    return r.createElement('div', {
                        className: 'p-3 border rounded-sm'
                    }, n ? r.createElement('a', {
                        className: 'mb-2 text-2xl font-bold underline',
                        href: n
                    }, t) : r.createElement('div', {
                        className: 'mb-2 text-2xl font-bold'
                    }, t), r.createElement('div', {
                        className: ''
                    }, a))
                },
                ow = function () {
                    var e = Lg(),
                        t = e.user,
                        n = e.updateUser;
                    return r.createElement(r.Fragment, null, r.createElement(aw, {
                        title: Ze._('Send notification for releases'),
                        description: Ze._('Receive notification for all media items on your watchlist, when they are released, including new seasons for tv shows'),
                        checked: t.sendNotificationForReleases,
                        onChange: function (e) {
                            return n({
                                sendNotificationForReleases: e
                            })
                        }
                    }), r.createElement(aw, {
                        title: Ze._('Send notification for episodes releases'),
                        description: Ze._('Receive notification for every episode for all tv shows on your watchlist, when it\'s released'),
                        checked: t.sendNotificationForEpisodesReleases,
                        onChange: function (e) {
                            return n({
                                sendNotificationForEpisodesReleases: e
                            })
                        }
                    }), r.createElement(aw, {
                        title: Ze._('Send notification when status changes'),
                        description: Ze._('Receive notification for all media items on your watchlist, when its status changes'),
                        checked: t.sendNotificationWhenStatusChanges,
                        onChange: function (e) {
                            return n({
                                sendNotificationWhenStatusChanges: e
                            })
                        }
                    }), r.createElement(aw, {
                        title: Ze._('Send notification when release date changes'),
                        description: Ze._('Receive notification for all media items on your watchlist, when its release date changes'),
                        checked: t.sendNotificationWhenReleaseDateChanges,
                        onChange: function (e) {
                            return n({
                                sendNotificationWhenReleaseDateChanges: e
                            })
                        }
                    }), r.createElement(aw, {
                        title: Ze._('Send notification when number of seasons changes'),
                        description: Ze._('Receive notification for all tv shows on your watchlist, when its number of seasons changes'),
                        checked: t.sendNotificationWhenNumberOfSeasonsChanges,
                        onChange: function (e) {
                            return n({
                                sendNotificationWhenNumberOfSeasonsChanges: e
                            })
                        }
                    }), r.createElement(uw, null), r.createElement(lw, {
                        platformName: 'Pushbullet',
                        href: 'https://www.pushbullet.com'
                    }, r.createElement('label', null, r.createElement(Oe, {
                        id: 'App token'
                    }), r.createElement('input', {
                        name: 'token',
                        required: !0,
                        className: 'block'
                    }))), r.createElement(lw, {
                        platformName: 'Pushover',
                        href: 'https://pushover.net'
                    }, r.createElement('label', null, r.createElement(Oe, {
                        id: 'User key'
                    }), r.createElement('input', {
                        name: 'key',
                        required: !0,
                        className: 'block'
                    }))), r.createElement(lw, {
                        platformName: 'Pushsafer',
                        href: 'https://www.pushsafer.com'
                    }, r.createElement('label', null, r.createElement(Oe, {
                        id: 'Key'
                    }), r.createElement('input', {
                        name: 'key',
                        required: !0,
                        className: 'block'
                    }))), r.createElement(lw, {
                        platformName: 'gotify',
                        href: 'https://gotify.net'
                    }, r.createElement('label', null, r.createElement(Oe, {
                        id: 'Gotify server url'
                    }), r.createElement('input', {
                        name: 'url',
                        type: 'url',
                        required: !0,
                        className: 'block'
                    })), r.createElement('label', null, r.createElement(Oe, {
                        id: 'Access Token'
                    }), r.createElement('input', {
                        name: 'token',
                        required: !0,
                        className: 'block'
                    })), r.createElement('label', null, r.createElement(Oe, {
                        id: 'Priority'
                    }), r.createElement('select', {
                        name: 'priority',
                        className: 'block'
                    }, r.createElement('option', null), new Array(10).fill(null).map((function (e, t) {
                        return r.createElement('option', {
                            key: t
                        }, t + 1)
                    }))))), r.createElement(lw, {
                        platformName: 'ntfy',
                        href: 'https://ntfy.sh'
                    }, r.createElement('label', null, r.createElement(Oe, {
                        id: 'Topic'
                    }), r.createElement('input', {
                        name: 'topic',
                        required: !0,
                        className: 'block'
                    })), r.createElement('label', null, r.createElement(Oe, {
                        id: 'Priority'
                    }), r.createElement('select', {
                        name: 'priority',
                        className: 'block'
                    }, r.createElement('option', null), new Array(5).fill(null).map((function (e, t) {
                        return r.createElement('option', {
                            key: t
                        }, t + 1)
                    })))), r.createElement('label', null, r.createElement(Oe, {
                        id: 'Server url (only for self hosting)'
                    }), r.createElement('input', {
                        name: 'url',
                        type: 'url',
                        className: 'block'
                    }))))
                },
                sw = [
                    'gotify',
                    'Pushbullet',
                    'Pushover',
                    'Pushsafer'
                ],
                uw = function () {
                    var e = Lg(),
                        t = e.user,
                        n = e.updateUser;
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'flex mb-2'
                    }, r.createElement('select', {
                        className: 'mr-1',
                        value: t.notificationPlatform || '',
                        onChange: function (e) {
                            n({
                                notificationPlatform: e.target.value
                            })
                        }
                    }, sw.map((function (e) {
                        return r.createElement('option', {
                            key: e
                        }, e)
                    }))), r.createElement('div', null, r.createElement(Oe, {
                        id: 'Platform'
                    }))))
                },
                lw = function (e) {
                    var t,
                        n = e.platformName,
                        a = e.href,
                        i = (0, r.useRef)(),
                        o = {
                            isLoading: (t = (0, d.useQuery)('notificationPlatformsCredentials', (function () {
                                return ve.user.getNotificationCredentials()
                            }))).isLoading,
                            error: t.error,
                            notificationPlatformsCredentials: t.data,
                            setNotificationPlatformsCredentials: (0, d.useMutation)(ve.user.updateNotificationCredentials, {
                                onSuccess: function () {
                                    cj.invalidateQueries('notificationPlatformsCredentials')
                                }
                            }).mutate
                        },
                        s = o.notificationPlatformsCredentials,
                        u = o.setNotificationPlatformsCredentials;
                    return (0, r.useEffect)((function () {
                        if (s && n in s) {
                            var e = s[n];
                            i.current.querySelectorAll('input,select').forEach((function (t) {
                                t.name in e && !t.value && (t.value = e[t.name])
                            }))
                        }
                    }), [
                        n,
                        s
                    ]),
                        r.createElement('div', {
                            className: 'mb-2'
                        }, r.createElement(iw, {
                            title: n,
                            href: a
                        }, r.createElement('form', {
                            ref: i,
                            onSubmit: function (e) {
                                e.preventDefault();
                                var t = Object.fromEntries(new FormData(e.currentTarget).entries());
                                u({
                                    platformName: n,
                                    credentials: t
                                })
                            }
                        }, e.children, r.createElement('button', {
                            className: 'mt-2 btn'
                        }, r.createElement(Oe, {
                            id: 'Save'
                        })))))
                },
                dw = function () {
                    var e = Lg(),
                        t = e.user,
                        n = e.updateUser;
                    return r.createElement(r.Fragment, null, r.createElement(aw, {
                        title: Ze._('Public reviews'),
                        description: Ze._('Show your reviews to other users'),
                        checked: t.publicReviews,
                        onChange: function (e) {
                            return n({
                                publicReviews: e
                            })
                        }
                    }), r.createElement(aw, {
                        title: Ze._('Avoid episode spoilers'),
                        description: Ze._('Hide title of unseen episodes'),
                        checked: t.hideEpisodeTitleForUnseenEpisodes,
                        onChange: function (e) {
                            return n({
                                hideEpisodeTitleForUnseenEpisodes: e
                            })
                        }
                    }), r.createElement(aw, {
                        title: Ze._('Avoid season spoilers'),
                        description: Ze._('Hide overview of unseen seasons'),
                        checked: t.hideOverviewForUnseenSeasons,
                        onChange: function (e) {
                            return n({
                                hideOverviewForUnseenSeasons: e
                            })
                        }
                    }))
                },
                cw = function () {
                    var e,
                        t = Ug(),
                        n = t.configuration,
                        a = t.update,
                        i = t.isLoading;
                    return r.createElement(r.Fragment, null, i ? r.createElement(r.Fragment, null) : r.createElement(r.Fragment, null, r.createElement(iw, {
                        title: Ze._('General')
                    }, r.createElement(aw, {
                        title: Ze._('Enable registration'),
                        checked: n.enableRegistration,
                        onChange: function (e) {
                            return a({
                                enableRegistration: e
                            })
                        }
                    })), r.createElement('div', {
                        className: 'mt-3'
                    }), r.createElement(iw, {
                        title: Ze._('Server language')
                    }, r.createElement('select', {
                        value: n.serverLang || 'en',
                        onChange: function (e) {
                            return a({
                                serverLang: e.currentTarget.value
                            })
                        }
                    }, r.createElement('option', {
                        value: 'da'
                    }, 'Danish'), r.createElement('option', {
                        value: 'de'
                    }, 'German'), r.createElement('option', {
                        value: 'en'
                    }, 'English'), r.createElement('option', {
                        value: 'es'
                    }, 'Spanish'))), r.createElement('div', {
                        className: 'mt-3'
                    }), r.createElement(iw, {
                        title: Ze._('Audible language')
                    }, r.createElement('select', {
                        value: (null === (e = n.audibleLang) || void 0 === e ? void 0 : e.toLowerCase()) || 'us',
                        onChange: function (e) {
                            return a({
                                audibleLang: e.currentTarget.value
                            })
                        }
                    }, r.createElement('option', {
                        value: 'au'
                    }, 'Australia (English)'), r.createElement('option', {
                        value: 'ca'
                    }, 'Canada (English)'), r.createElement('option', {
                        value: 'de'
                    }, 'Deutschland (Deutsch)'), r.createElement('option', {
                        value: 'es'
                    }, 'España (Castellano)'), r.createElement('option', {
                        value: 'fr'
                    }, 'France (Français)'), r.createElement('option', {
                        value: 'in'
                    }, 'India (English)'), r.createElement('option', {
                        value: 'it'
                    }, 'Italia (Italiano)'), r.createElement('option', {
                        value: 'uk'
                    }, 'UK (English)'), r.createElement('option', {
                        value: 'us'
                    }, 'United States (English)'), r.createElement('option', {
                        value: 'jp'
                    }, '日本 (日本語)'))), r.createElement('div', {
                        className: 'mt-3'
                    }), r.createElement(iw, {
                        title: Ze._('TMDB language')
                    }, r.createElement('select', {
                        value: n.tmdbLang || 'en',
                        onChange: function (e) {
                            return a({
                                tmdbLang: e.currentTarget.value
                            })
                        }
                    }, Object.entries(fw).map((function (e) {
                        var t = s(e, 2),
                            n = t[0],
                            a = t[1];
                        return r.createElement('option', {
                            key: n,
                            value: n
                        }, a)
                    })))), r.createElement('div', {
                        className: 'mt-3'
                    }), r.createElement(mw, null)))
                },
                mw = function () {
                    var e = Ug(),
                        t = e.configuration,
                        n = e.update,
                        a = s((0, r.useState)(''), 2),
                        i = a[0],
                        o = a[1],
                        u = s((0, r.useState)(''), 2),
                        l = u[0],
                        d = u[1];
                    return (0, r.useEffect)((function () {
                        o(t.igdbClientId),
                            d(t.igdbClientSecret)
                    }), [
                        t.igdbClientId,
                        t.igdbClientSecret
                    ]),
                        r.createElement(iw, {
                            title: Ze._('IGDB credentials')
                        }, r.createElement('form', {
                            className: 'pb-2',
                            onSubmit: function (e) {
                                e.preventDefault(),
                                    n({
                                        igdbClientId: i,
                                        igdbClientSecret: l
                                    })
                            }
                        }, r.createElement('a', {
                            href: 'https://api-docs.igdb.com/#account-creation',
                            className: 'block mb-2 underline'
                        }, r.createElement(Oe, {
                            id: 'API keys can be acquired here'
                        })), r.createElement('label', null, r.createElement(Oe, {
                            id: 'Client ID'
                        }), r.createElement('input', {
                            className: 'block mb-2 w-60',
                            value: i,
                            onChange: function (e) {
                                return o(e.currentTarget.value)
                            }
                        })), r.createElement('label', null, r.createElement(Oe, {
                            id: 'Client Secret'
                        }), r.createElement('input', {
                            className: 'block w-60',
                            value: l,
                            onChange: function (e) {
                                return d(e.currentTarget.value)
                            }
                        })), r.createElement('button', {
                            className: 'block mt-2 btn'
                        }, r.createElement(Oe, {
                            id: 'Save'
                        }))))
                },
                fw = {
                    om: '(Afan) Oromo',
                    ab: 'Abkhazian',
                    aa: 'Afar',
                    af: 'Afrikaans',
                    sq: 'Albanian',
                    am: 'Amharic',
                    ar: 'Arabic',
                    hy: 'Armenian',
                    as: 'Assamese',
                    ay: 'Aymara',
                    az: 'Azerbaijani',
                    ba: 'Bashkir',
                    eu: 'Basque',
                    bn: 'Bengali',
                    dz: 'Bhutani',
                    bh: 'Bihari',
                    bi: 'Bislama',
                    br: 'Breton',
                    bg: 'Bulgarian',
                    my: 'Burmese',
                    be: 'Byelorussian',
                    km: 'Cambodian',
                    ca: 'Catalan',
                    zh: 'Chinese',
                    co: 'Corsican',
                    hr: 'Croatian',
                    cs: 'Czech',
                    da: 'Danish',
                    nl: 'Dutch',
                    en: 'English',
                    eo: 'Esperanto',
                    et: 'Estonian',
                    fo: 'Faeroese',
                    fj: 'Fiji',
                    fi: 'Finnish',
                    fr: 'French',
                    fy: 'Frisian',
                    gl: 'Galician',
                    ka: 'Georgian',
                    de: 'German',
                    el: 'Greek',
                    kl: 'Greenlandic',
                    gn: 'Guarani',
                    gu: 'Gujarati',
                    ha: 'Hausa',
                    he: 'Hebrew (former iw)',
                    hi: 'Hindi',
                    hu: 'Hungarian',
                    is: 'Icelandic',
                    id: 'Indonesian (former in)',
                    ia: 'Interlingua',
                    ie: 'Interlingue',
                    ik: 'Inupiak',
                    iu: 'Inuktitut (Eskimo)',
                    ga: 'Irish',
                    it: 'Italian',
                    ja: 'Japanese',
                    jw: 'Javanese',
                    kn: 'Kannada',
                    ks: 'Kashmiri',
                    kk: 'Kazakh',
                    rw: 'Kinyarwanda',
                    ky: 'Kirghiz',
                    rn: 'Kirundi',
                    ko: 'Korean',
                    ku: 'Kurdish',
                    lo: 'Laothian',
                    la: 'Latin',
                    lv: 'Latvian, Lettish',
                    ln: 'Lingala',
                    lt: 'Lithuanian',
                    mk: 'Macedonian',
                    mg: 'Malagasy',
                    ms: 'Malay',
                    ml: 'Malayalam',
                    mt: 'Maltese',
                    mi: 'Maori',
                    mr: 'Marathi',
                    mo: 'Moldavian',
                    mn: 'Mongolian',
                    na: 'Nauru',
                    ne: 'Nepali',
                    no: 'Norwegian',
                    oc: 'Occitan',
                    or: 'Oriya',
                    ps: 'Pashto, Pushto',
                    fa: 'Persian',
                    pl: 'Polish',
                    pt: 'Portuguese',
                    pa: 'Punjabi',
                    qu: 'Quechua',
                    rm: 'Rhaeto-Romance',
                    ro: 'Romanian',
                    ru: 'Russian',
                    sm: 'Samoan',
                    sg: 'Sangro',
                    sa: 'Sanskrit',
                    gd: 'Scots Gaelic',
                    sr: 'Serbian',
                    sh: 'Serbo-Croatian',
                    st: 'Sesotho',
                    tn: 'Setswana',
                    sn: 'Shona',
                    sd: 'Sindhi',
                    si: 'Singhalese',
                    ss: 'Siswati',
                    sk: 'Slovak',
                    sl: 'Slovenian',
                    so: 'Somali',
                    es: 'Spanish',
                    su: 'Sudanese',
                    sw: 'Swahili',
                    sv: 'Swedish',
                    tl: 'Tagalog',
                    tg: 'Tajik',
                    ta: 'Tamil',
                    tt: 'Tatar',
                    te: 'Tegulu',
                    th: 'Thai',
                    bo: 'Tibetan',
                    ti: 'Tigrinya',
                    to: 'Tonga',
                    ts: 'Tsonga',
                    tr: 'Turkish',
                    tk: 'Turkmen',
                    tw: 'Twi',
                    ug: 'Uigur',
                    uk: 'Ukrainian',
                    ur: 'Urdu',
                    uz: 'Uzbek',
                    vi: 'Vietnamese',
                    vo: 'Volapuk',
                    cy: 'Welch',
                    wo: 'Wolof',
                    xh: 'Xhosa',
                    yi: 'Yiddish (former ji)',
                    yo: 'Yoruba',
                    za: 'Zhuang',
                    zu: 'Zulu'
                };
            function hw(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            function pw(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {
                    };
                    t % 2 ? hw(Object(n), !0).forEach((function (t) {
                        Ee(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : hw(Object(n)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            n(6535),
                n(9244);
            var gw = function () {
                var e,
                    t,
                    n = vw(),
                    a = n.levels,
                    i = n.SelectLogLevelsComponent,
                    o = (0, d.useInfiniteQuery)(['logs',
                        a], (function (e) {
                            var t = e.pageParam;
                            return ve.logs.get(pw(pw({
                            }, a), {
                            }, {
                                from: t,
                                count: 100
                            }))
                        }), {
                        getNextPageParam: function (e) {
                            var t;
                            return null === (t = e.at(- 1)) || void 0 === t ? void 0 : t.id
                        }
                    }),
                    s = o.data,
                    u = o.fetchNextPage,
                    l = o.isFetchingNextPage;
                return o.isLoading ? r.createElement(Oe, {
                    id: 'Loading'
                }) : r.createElement(r.Fragment, null, r.createElement(i, null), null == s || null === (e = s.pages) || void 0 === e || null === (t = e.flatMap((function (e) {
                    return e
                }))) || void 0 === t ? void 0 : t.map((function (e) {
                    return r.createElement('div', {
                        key: e.id,
                        className: 'text-md'
                    }, r.createElement('span', {
                        className: 'text-sm text-slate-400 dark:text-slate-500'
                    }, new Date(e.timestamp).toLocaleString(), ' '), r.createElement('span', {
                        style: {
                            color: kw[e.level]
                        },
                        className: 'text-md'
                    }, e.level), ':', ' ', r.createElement('span', {
                        className: 'whitespace-pre-wrap '
                    }, e.stack ? r.createElement(yw, {
                        log: e
                    }) : 'type' in e && 'http' === e.type ? r.createElement(ww, {
                        log: e
                    }) : 'type' in e && 'validationError' === e.type ? r.createElement(bw, {
                        log: e
                    }) : e.message))
                })), r.createElement('div', {
                    className: 'flex justify-center mt-2'
                }, r.createElement('button', {
                    className: 'btn',
                    onClick: function () {
                        return u().then((function (e) {
                            var t,
                                n,
                                r,
                                a,
                                i;
                            return void 0 !== (null == e || null === (t = e.data) || void 0 === t || null === (n = t.pageParams) || void 0 === n ? void 0 : n.at(- 1)) && 0 === (null == e || null === (r = e.data) || void 0 === r || null === (a = r.pages) || void 0 === a || null === (i = a.at(- 1)) || void 0 === i ? void 0 : i.length) && alert(Ze._('No more logs'))
                        }))
                    },
                    disabled: l
                }, 'Load more')))
            },
                vw = function () {
                    var e = s((0, r.useState)(!0), 2),
                        t = e[0],
                        n = e[1],
                        a = s((0, r.useState)(!0), 2),
                        i = a[0],
                        o = a[1],
                        u = s((0, r.useState)(!0), 2),
                        l = u[0],
                        d = u[1],
                        c = s((0, r.useState)(!1), 2),
                        m = c[0],
                        f = c[1],
                        h = s((0, r.useState)(!0), 2),
                        p = h[0],
                        g = h[1];
                    return {
                        levels: {
                            error: t,
                            warn: i,
                            info: l,
                            http: m,
                            debug: p
                        },
                        SelectLogLevelsComponent: (0, r.useCallback)((function () {
                            return r.createElement(r.Fragment, null, r.createElement('div', {
                                className: 'my-4'
                            }, r.createElement(aw, {
                                checked: t,
                                onChange: n,
                                title: Ze._('Error')
                            }), r.createElement(aw, {
                                checked: i,
                                onChange: o,
                                title: Ze._('Warning')
                            }), r.createElement(aw, {
                                checked: l,
                                onChange: d,
                                title: Ze._('Info')
                            }), r.createElement(aw, {
                                checked: m,
                                onChange: f,
                                title: Ze._('Http')
                            }), r.createElement(aw, {
                                checked: p,
                                onChange: g,
                                title: Ze._('Debug')
                            })))
                        }), [
                            p,
                            t,
                            m,
                            l,
                            i
                        ])
                    }
                },
                yw = function (e) {
                    var t = e.log;
                    return r.createElement(r.Fragment, null, t.stack)
                },
                ww = function (e) {
                    var t = e.log;
                    return r.createElement(r.Fragment, null, t.ip, ' "', r.createElement('span', {
                        className: 'text-purple-500'
                    }, t.method, ' ', t.url, ' HTTP/', t.httpVersion), '" ', t.statusCode, ' ', t.responseSize, ' ', r.createElement('span', {
                        className: 'text-blue-500'
                    }, t.duration, 'ms'))
                },
                bw = function (e) {
                    var t = e.log;
                    return r.createElement(r.Fragment, null, r.createElement('span', {
                        className: 'text-red-600'
                    }, 'ValidationError'), ' ', r.createElement('span', {
                        className: 'text-yellow-600'
                    }, t.method, ' ', t.url, ' ', JSON.stringify(t.body)), ' ', t.error)
                },
                kw = {
                    error: 'red',
                    info: 'green',
                    warning: 'yellow',
                    debug: 'blue',
                    http: 'rgb(174 125 58)'
                },
                Mw = function () {
                    var e = Lg().user,
                        t = Ug().configuration;
                    return r.createElement(r.Fragment, null, r.createElement(x, null, r.createElement(E, {
                        element: r.createElement(Ew, null)
                    }, !t.demo && r.createElement(E, {
                        path: 'password',
                        element: r.createElement(ew, null)
                    }), r.createElement(E, {
                        path: 'application-tokens',
                        element: r.createElement(rw, null)
                    }), r.createElement(E, {
                        path: 'notifications',
                        element: r.createElement(ow, null)
                    }), r.createElement(E, {
                        path: 'preferences',
                        element: r.createElement(dw, null)
                    }), Boolean(e.admin) && r.createElement(r.Fragment, null, r.createElement(E, {
                        path: 'configuration',
                        element: r.createElement(cw, null)
                    }), r.createElement(E, {
                        path: 'logs',
                        element: r.createElement(gw, null)
                    })), r.createElement(E, {
                        path: '*',
                        element: r.createElement(k, {
                            to: t.demo ? 'application-tokens' : 'password',
                            replace: !0
                        })
                    }))))
                },
                Ew = function () {
                    var e = Pw(),
                        t = T(),
                        n = e.find((function (e) {
                            return e.path === t.pathname.split('/').at(- 1)
                        }));
                    return r.createElement(r.Fragment, null, n ? r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'text-4xl'
                    }, r.createElement(Oe, {
                        id: 'Settings'
                    })), r.createElement('div', {
                        className: 'flex flex-col mt-2 sm:flex-row'
                    }, r.createElement('div', {
                        className: 'flex flex-col px-3 border rounded sm:shrink-0 max-w-fit h-fit'
                    }, e.map((function (e) {
                        var t = e.path,
                            n = e.name;
                        return r.createElement(K, {
                            key: t,
                            to: t,
                            className: function (e) {
                                return tt('my-2 cursor-pointer text', e.isActive && 'underline ')
                            }
                        }, n)
                    }))), r.createElement('div', {
                        className: 'w-full mt-3 sm:ml-4 sm:mt-0'
                    }, r.createElement(iw, {
                        title: n.name
                    }, r.createElement(M, null))))) : r.createElement(M, null))
                },
                Pw = function () {
                    var e = Lg().user,
                        t = Ug().configuration;
                    return [].concat(Zy(t.demo ? [
                    ] : [
                        {
                            path: 'password',
                            name: Ze._('Password')
                        }
                    ]), [
                        {
                            path: 'application-tokens',
                            name: Ze._('Application tokens')
                        },
                        {
                            path: 'notifications',
                            name: Ze._('Notifications')
                        },
                        {
                            path: 'preferences',
                            name: Ze._('Preferences')
                        }
                    ], Zy(e.admin ? [
                        {
                            path: 'configuration',
                            name: Ze._('Configuration')
                        },
                        {
                            path: 'logs',
                            name: Ze._('Logs')
                        }
                    ] : [
                    ]))
                },
                xw = function (e) {
                    var t,
                        n,
                        a = e.mediaItem,
                        i = e.episode,
                        o = Lg().user;
                    return r.createElement('div', {
                        key: i.id,
                        className: 'flex flex-col w-full my-1 md:items-center md:flex-row'
                    }, r.createElement('div', {
                        className: 'flex w-full'
                    }, r.createElement('div', {
                        className: 'w-8 pr-2'
                    }, i.episodeNumber), r.createElement('div', {
                        className: 'flex-grow w-1 mr-2 overflow-hidden overflow-ellipsis'
                    }, r.createElement('span', {
                        className: tt({
                            'bg-current hover:bg-transparent cursor-pointer transition-all': au(o) && (!i.seenHistory || 0 === (null === (t = i.seenHistory) || void 0 === t ? void 0 : t.length))
                        })
                    }, i.title)), r.createElement('div', {
                        className: 'flex items-center pr-2'
                    }, i.releaseDate && r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'text-sm italic'
                    }, new Date(i.releaseDate).toLocaleDateString())))), r.createElement('div', {
                        className: 'flex py-2 md:ml-auto md:py-0'
                    }, r.createElement('div', {
                        className: 'flex w-10 md:justify-center'
                    }, Js(i) && r.createElement(fu, {
                        mediaItem: a,
                        episode: i
                    })), r.createElement('div', {
                        className: 'w-28'
                    }, (null === (n = i.seenHistory) || void 0 === n ? void 0 : n.length) > 0 && r.createElement(Oe, {
                        id: '{0, plural, one {Seen 1 time} other {Seen # times}}',
                        values: {
                            0: i.seenHistory.length
                        }
                    }))), r.createElement('div', {
                        className: 'py-1 md:flex md:ml-auto md:py-0'
                    }, r.createElement(Ys, {
                        openModal: function (e) {
                            return r.createElement('div', {
                                onClick: function () {
                                    return e()
                                },
                                className: tt('btn-blue text-sm', !$s(i) && 'opacity-0 pointer-events-none')
                            }, r.createElement(Oe, {
                                id: 'Add to seen history'
                            }))
                        }
                    }, (function (e) {
                        return r.createElement(uu, {
                            closeModal: e,
                            mediaItem: a,
                            episode: i
                        })
                    })), r.createElement('div', {
                        className: tt('btn-red ml-2 text-sm', !i.seen && 'opacity-0 pointer-events-none'),
                        onClick: function () {
                            confirm(Ze._('Do you want to remove episode {0} from seen history?', {
                                0: i.title
                            })) && Ur({
                                mediaItem: a,
                                episode: i
                            })
                        }
                    }, r.createElement(Oe, {
                        id: 'Remove from seen history'
                    }))))
                },
                Sw = function () {
                    var e,
                        t = j().mediaItemId,
                        n = Rr(Number(t)),
                        a = n.mediaItem,
                        i = n.isLoading,
                        o = n.error,
                        u = function (e) {
                            var t,
                                n = s((0, r.useState)(null), 2),
                                a = n[0],
                                i = n[1];
                            return (0, r.useEffect)((function () {
                                if (null === a && e) {
                                    var t = function (e) {
                                        var t;
                                        if (0 !== (null === (t = e.seasons) || void 0 === t ? void 0 : t.length)) return e.seen ? e.seasons[e.seasons.length - 1].id : e.firstUnwatchedEpisode ? e.firstUnwatchedEpisode.seasonId : e.seasons.length > 1 && e.seasons[0].isSpecialSeason ? e.seasons[1].id : e.seasons[0].id
                                    }(e);
                                    t && i(t)
                                }
                            }), [
                                e,
                                a
                            ]),
                            {
                                selectedSeason: null !== a && e ? null === (t = e.seasons) || void 0 === t ? void 0 : t.find((function (e) {
                                    return e.id === a
                                })) : null,
                                selectedSeasonId: a,
                                setSelectedSeasonId: i
                            }
                        }(a),
                        l = u.selectedSeason,
                        d = u.selectedSeasonId,
                        c = u.setSelectedSeasonId;
                    if (i || !l) return r.createElement(Oe, {
                        id: 'Loading'
                    });
                    if (o) return r.createElement(r.Fragment, null, o);
                    if (a && 'tv' !== a.mediaType) throw new Error(Ze._('This component can only be used with tv shows'));
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'sm:w-full'
                    }, r.createElement('div', {
                        className: 'flex w-full'
                    }, r.createElement(Q, {
                        className: 'text-2xl font-bold',
                        to: '/details/'.concat(a.id)
                    }, a.title)), r.createElement('div', {
                        className: 'flex flex-row flex-wrap w-full'
                    }, null === (e = a.seasons) || void 0 === e ? void 0 : e.map((function (e) {
                        return r.createElement('div', {
                            key: e.id
                        }, r.createElement('div', {
                            className: tt('mr-1 my-1 px-2 py-0.5 hover:bg-blue-300 rounded cursor-pointer select-none', {
                                'bg-indigo-600': d !== e.id,
                                'bg-red-500': d === e.id
                            }),
                            onClick: function () {
                                return c(e.id)
                            }
                        }, r.createElement(Oe, {
                            id: 'Season {0}',
                            values: {
                                0: e.seasonNumber
                            }
                        })))
                    }))), r.createElement(Tw, {
                        key: d,
                        mediaItem: a,
                        season: l
                    })))
                },
                Tw = function (e) {
                    var t,
                        n = e.mediaItem,
                        a = e.season,
                        i = Lg().user;
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'flex w-full'
                    }, (null === (t = a.episodes) || void 0 === t ? void 0 : t.filter((function (e) {
                        return e.releaseDate && new Date(e.releaseDate) <= new Date
                    })).length) > 0 && r.createElement(fu, {
                        mediaItem: n,
                        season: a
                    }), r.createElement(Ys, {
                        openModal: function (e) {
                            var t;
                            return r.createElement('div', {
                                onClick: function () {
                                    return e()
                                },
                                className: tt('ml-auto btn-blue text-sm', 0 === (null === (t = a.episodes) || void 0 === t ? void 0 : t.filter((function (e) {
                                    return e.releaseDate && new Date(e.releaseDate) <= new Date
                                })).length) && 'opacity-0 pointer-events-none')
                            }, r.createElement(Oe, {
                                id: 'Add season to seen history'
                            }))
                        }
                    }, (function (e) {
                        return r.createElement(uu, {
                            closeModal: e,
                            mediaItem: n,
                            season: a
                        })
                    }))), r.createElement('div', {
                        className: 'flex flex-col my-2 md:flex-row'
                    }, r.createElement('div', {
                        className: 'self-center w-60 shrink-0 md:mr-2 md:self-start'
                    }, r.createElement(Hg, {
                        src: a.posterSmall,
                        itemMediaType: 'tv'
                    })), a.description && r.createElement('div', {
                        className: 'py-2'
                    }, r.createElement('b', {
                        className: ''
                    }, r.createElement(Oe, {
                        id: 'Description'
                    }), ':'), r.createElement('div', {
                        className: tt('inline py-1', iu(i) && !a.seen && 'bg-current hover:bg-transparent transition-all cursor-pointer')
                    }, a.description))), r.createElement('div', {
                        className: 'w-full whitespace-nowrap'
                    }, a.episodes.map((function (e, t) {
                        return r.createElement('div', {
                            key: e.id,
                            className: tt({
                                'border-b border-gray-600/30 dark:border-neutral-300/30': t !== a.episodes.length - 1
                            })
                        }, r.createElement(xw, {
                            mediaItem: n,
                            episode: e
                        }))
                    }))))
                },
                Cw = function (e, t) {
                    return Cw = Object.setPrototypeOf || {
                        __proto__: [
                        ]
                    }
                        instanceof Array && function (e, t) {
                            e.__proto__ = t
                        }
                        || function (e, t) {
                            for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
                        },
                        Cw(e, t)
                };
            function Ww(e, t) {
                if ('function' != typeof t && null !== t) throw new TypeError('Class extends value ' + String(t) + ' is not a constructor or null');
                function n() {
                    this.constructor = e
                }
                Cw(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
            }
            var jw = function () {
                return jw = Object.assign || function (e) {
                    for (var t, n = 1, r = arguments.length; n < r; n++) for (var a in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
                    return e
                },
                    jw.apply(this, arguments)
            };
            function Dw(e, t, n) {
                if (n || 2 === arguments.length) for (var r, a = 0, i = t.length; a < i; a++) !r && a in t || (r || (r = Array.prototype.slice.call(t, 0, a)), r[a] = t[a]);
                return e.concat(r || Array.prototype.slice.call(t))
            }
            if (Object.create, Object.create, ('undefined' != typeof globalThis ? globalThis : window).FullCalendarVDom = {
                Component: r.Component,
                createElement: r.createElement,
                render: a.render,
                createRef: r.createRef,
                Fragment: r.Fragment,
                createContext: r.createContext,
                createPortal: a.createPortal,
                flushToDom: function () {
                },
                unmountComponentAtNode: a.unmountComponentAtNode
            }, 'undefined' == typeof FullCalendarVDom) throw new Error('Please import the top-level fullcalendar lib before attempting to import a plugin.');
            var Nw = FullCalendarVDom.Component,
                Iw = FullCalendarVDom.createElement,
                zw = (FullCalendarVDom.render, FullCalendarVDom.createRef),
                Rw = FullCalendarVDom.Fragment,
                Aw = FullCalendarVDom.createContext,
                Ow = FullCalendarVDom.createPortal,
                Hw = (FullCalendarVDom.flushToDom, FullCalendarVDom.unmountComponentAtNode, function () {
                    function e(e, t) {
                        this.context = e,
                            this.internalEventSource = t
                    }
                    return e.prototype.remove = function () {
                        this.context.dispatch({
                            type: 'REMOVE_EVENT_SOURCE',
                            sourceId: this.internalEventSource.sourceId
                        })
                    },
                        e.prototype.refetch = function () {
                            this.context.dispatch({
                                type: 'FETCH_EVENT_SOURCES',
                                sourceIds: [
                                    this.internalEventSource.sourceId
                                ],
                                isRefetch: !0
                            })
                        },
                        Object.defineProperty(e.prototype, 'id', {
                            get: function () {
                                return this.internalEventSource.publicId
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'url', {
                            get: function () {
                                return this.internalEventSource.meta.url
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'format', {
                            get: function () {
                                return this.internalEventSource.meta.format
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        e
                }());
            function _w(e) {
                e.parentNode && e.parentNode.removeChild(e)
            }
            function Lw(e, t) {
                if (e.closest) return e.closest(t);
                if (!document.documentElement.contains(e)) return null;
                do {
                    if (Fw(e, t)) return e;
                    e = e.parentElement || e.parentNode
                } while (null !== e && 1 === e.nodeType);
                return null
            }
            function Fw(e, t) {
                return (e.matches || e.matchesSelector || e.msMatchesSelector).call(e, t)
            }
            var Xw = /(top|left|right|bottom|width|height)$/i;
            function Uw(e, t, n) {
                null == n ? e.style[t] = '' : 'number' == typeof n && Xw.test(t) ? e.style[t] = n + 'px' : e.style[t] = n
            }
            function qw(e) {
                var t,
                    n;
                return null !== (n = null === (t = e.composedPath) || void 0 === t ? void 0 : t.call(e)[0]) && void 0 !== n ? n : e.target
            }
            var Gw = 0;
            function Vw() {
                return 'fc-dom-' + (Gw += 1)
            }
            function Yw(e, t, n, r) {
                var a = function (e, t) {
                    return function (n) {
                        var r = Lw(n.target, e);
                        r && t.call(r, n, r)
                    }
                }(n, r);
                return e.addEventListener(t, a),
                    function () {
                        e.removeEventListener(t, a)
                    }
            }
            function Bw(e) {
                return jw({
                    onClick: e
                }, $w(e))
            }
            function $w(e) {
                return {
                    tabIndex: 0,
                    onKeyDown: function (t) {
                        'Enter' !== t.key && ' ' !== t.key || (e(t), t.preventDefault())
                    }
                }
            }
            var Qw = 0;
            function Kw() {
                return String(Qw += 1)
            }
            function Jw(e, t, n) {
                return n.func ? n.func(e, t) : function (e, t) {
                    return e || t ? null == t ? - 1 : null == e ? 1 : 'string' == typeof e || 'string' == typeof t ? String(e).localeCompare(String(t)) : e - t : 0
                }(e[n.field], t[n.field]) * (n.order || 1)
            }
            function Zw(e, t) {
                var n = String(e);
                return '000'.substr(0, t - n.length) + n
            }
            function eb(e, t, n) {
                return 'function' == typeof e ? e.apply(void 0, t) : 'string' == typeof e ? t.reduce((function (e, t, n) {
                    return e.replace('$' + n, t || '')
                }), e) : n
            }
            function tb(e) {
                return e % 1 == 0
            }
            function nb(e) {
                var t = e.querySelector('.fc-scrollgrid-shrink-frame'),
                    n = e.querySelector('.fc-scrollgrid-shrink-cushion');
                if (!t) throw new Error('needs fc-scrollgrid-shrink-frame className');
                if (!n) throw new Error('needs fc-scrollgrid-shrink-cushion className');
                return e.getBoundingClientRect().width - t.getBoundingClientRect().width + n.getBoundingClientRect().width
            }
            var rb = [
                'sun',
                'mon',
                'tue',
                'wed',
                'thu',
                'fri',
                'sat'
            ];
            function ab(e, t) {
                var n = hb(e);
                return n[2] += 7 * t,
                    pb(n)
            }
            function ib(e, t) {
                var n = hb(e);
                return n[2] += t,
                    pb(n)
            }
            function ob(e, t) {
                var n = hb(e);
                return n[6] += t,
                    pb(n)
            }
            function sb(e, t) {
                return (t.valueOf() - e.valueOf()) / 86400000
            }
            function ub(e, t) {
                return vb(e) === vb(t) ? Math.round(sb(e, t)) : null
            }
            function lb(e) {
                return pb([e.getUTCFullYear(),
                e.getUTCMonth(),
                e.getUTCDate()])
            }
            function db(e, t, n, r) {
                var a = pb([t,
                    0,
                    1 + cb(t, n, r)]),
                    i = lb(e),
                    o = Math.round(sb(a, i));
                return Math.floor(o / 7) + 1
            }
            function cb(e, t, n) {
                var r = 7 + t - n;
                return - (7 + pb([e,
                    0,
                    r]).getUTCDay() - t) % 7 + r - 1
            }
            function mb(e) {
                return [e.getFullYear(),
                e.getMonth(),
                e.getDate(),
                e.getHours(),
                e.getMinutes(),
                e.getSeconds(),
                e.getMilliseconds()]
            }
            function fb(e) {
                return new Date(e[0], e[1] || 0, null == e[2] ? 1 : e[2], e[3] || 0, e[4] || 0, e[5] || 0)
            }
            function hb(e) {
                return [e.getUTCFullYear(),
                e.getUTCMonth(),
                e.getUTCDate(),
                e.getUTCHours(),
                e.getUTCMinutes(),
                e.getUTCSeconds(),
                e.getUTCMilliseconds()]
            }
            function pb(e) {
                return 1 === e.length && (e = e.concat([0])),
                    new Date(Date.UTC.apply(Date, e))
            }
            function gb(e) {
                return !isNaN(e.valueOf())
            }
            function vb(e) {
                return 1000 * e.getUTCHours() * 60 * 60 + 1000 * e.getUTCMinutes() * 60 + 1000 * e.getUTCSeconds() + e.getUTCMilliseconds()
            }
            function yb(e, t, n, r) {
                return {
                    instanceId: Kw(),
                    defId: e,
                    range: t,
                    forcedStartTzo: null == n ? null : n,
                    forcedEndTzo: null == r ? null : r
                }
            }
            var wb = Object.prototype.hasOwnProperty;
            function bb(e, t) {
                var n = {
                };
                if (t) for (var r in t) {
                    for (var a = [
                    ], i = e.length - 1; i >= 0; i -= 1) {
                        var o = e[i][r];
                        if ('object' == typeof o && o) a.unshift(o);
                        else if (void 0 !== o) {
                            n[r] = o;
                            break
                        }
                    }
                    a.length && (n[r] = bb(a))
                }
                for (i = e.length - 1; i >= 0; i -= 1) {
                    var s = e[i];
                    for (var u in s) u in n || (n[u] = s[u])
                }
                return n
            }
            function kb(e, t) {
                var n = {
                };
                for (var r in e) t(e[r], r) && (n[r] = e[r]);
                return n
            }
            function Mb(e, t) {
                var n = {
                };
                for (var r in e) n[r] = t(e[r], r);
                return n
            }
            function Eb(e) {
                for (var t = {
                }, n = 0, r = e; n < r.length; n++) t[r[n]] = !0;
                return t
            }
            function Pb(e) {
                var t = [
                ];
                for (var n in e) t.push(e[n]);
                return t
            }
            function xb(e, t) {
                if (e === t) return !0;
                for (var n in e) if (wb.call(e, n) && !(n in t)) return !1;
                for (var n in t) if (wb.call(t, n) && e[n] !== t[n]) return !1;
                return !0
            }
            function Sb(e, t) {
                var n = [
                ];
                for (var r in e) wb.call(e, r) && (r in t || n.push(r));
                for (var r in t) wb.call(t, r) && e[r] !== t[r] && n.push(r);
                return n
            }
            function Tb(e, t, n) {
                if (void 0 === n && (n = {
                }), e === t) return !0;
                for (var r in t) if (!(r in e && (a = e[r], i = t[r], o = n[r], a === i || !0 === o || o && o(a, i)))) return !1;
                var a,
                    i,
                    o;
                for (var r in e) if (!(r in t)) return !1;
                return !0
            }
            function Cb(e, t, n) {
                var r = n.dateEnv,
                    a = n.pluginHooks,
                    i = n.options,
                    o = e.defs,
                    s = e.instances;
                for (var u in s = kb(s, (function (e) {
                    return !o[e.defId].recurringDef
                })), o) {
                    var l = o[u];
                    if (l.recurringDef) {
                        var d = l.recurringDef.duration;
                        d || (d = l.allDay ? i.defaultAllDayEventDuration : i.defaultTimedEventDuration);
                        for (var c = 0, m = Wb(l, d, t, r, a.recurringTypes); c < m.length; c++) {
                            var f = m[c],
                                h = yb(u, {
                                    start: f,
                                    end: r.add(f, d)
                                });
                            s[h.instanceId] = h
                        }
                    }
                }
                return {
                    defs: o,
                    instances: s
                }
            }
            function Wb(e, t, n, r, a) {
                var i = a[e.recurringDef.typeId].expand(e.recurringDef.typeData, {
                    start: r.subtract(n.start, t),
                    end: n.end
                }, r);
                return e.allDay && (i = i.map(lb)),
                    i
            }
            var jb = /^(-?)(?:(\d+)\.)?(\d+):(\d\d)(?::(\d\d)(?:\.(\d\d\d))?)?/;
            function Db(e, t) {
                var n;
                return 'string' == typeof e ? function (e) {
                    var t = jb.exec(e);
                    if (t) {
                        var n = t[1] ? - 1 : 1;
                        return {
                            years: 0,
                            months: 0,
                            days: n * (t[2] ? parseInt(t[2], 10) : 0),
                            milliseconds: n * (60 * (t[3] ? parseInt(t[3], 10) : 0) * 60 * 1000 + 60 * (t[4] ? parseInt(t[4], 10) : 0) * 1000 + 1000 * (t[5] ? parseInt(t[5], 10) : 0) + (t[6] ? parseInt(t[6], 10) : 0))
                        }
                    }
                    return null
                }(e) : 'object' == typeof e && e ? Nb(e) : 'number' == typeof e ? Nb(((n = {
                })[t || 'milliseconds'] = e, n)) : null
            }
            function Nb(e) {
                var t = {
                    years: e.years || e.year || 0,
                    months: e.months || e.month || 0,
                    days: e.days || e.day || 0,
                    milliseconds: 60 * (e.hours || e.hour || 0) * 60 * 1000 + 60 * (e.minutes || e.minute || 0) * 1000 + 1000 * (e.seconds || e.second || 0) + (e.milliseconds || e.millisecond || e.ms || 0)
                },
                    n = e.weeks || e.week;
                return n && (t.days += 7 * n, t.specifiedWeeks = !0),
                    t
            }
            function Ib(e) {
                return zb(e) / 86400000
            }
            function zb(e) {
                return 31536000000 * e.years + 2592000000 * e.months + 86400000 * e.days + e.milliseconds
            }
            function Rb(e) {
                var t = e.milliseconds;
                if (t) {
                    if (t % 1000 != 0) return {
                        unit: 'millisecond',
                        value: t
                    };
                    if (t % 60000 != 0) return {
                        unit: 'second',
                        value: t / 1000
                    };
                    if (t % 3600000 != 0) return {
                        unit: 'minute',
                        value: t / 60000
                    };
                    if (t) return {
                        unit: 'hour',
                        value: t / 3600000
                    }
                }
                return e.days ? e.specifiedWeeks && e.days % 7 == 0 ? {
                    unit: 'week',
                    value: e.days / 7
                }
                    : {
                        unit: 'day',
                        value: e.days
                    }
                    : e.months ? {
                        unit: 'month',
                        value: e.months
                    }
                        : e.years ? {
                            unit: 'year',
                            value: e.years
                        }
                            : {
                                unit: 'millisecond',
                                value: 0
                            }
            }
            function Ab(e) {
                return e.toISOString().replace(/T.*$/, '')
            }
            function Ob(e, t) {
                void 0 === t && (t = !1);
                var n = e < 0 ? '-' : '+',
                    r = Math.abs(e),
                    a = Math.floor(r / 60),
                    i = Math.round(r % 60);
                return t ? n + Zw(a, 2) + ':' + Zw(i, 2) : 'GMT' + n + a + (i ? ':' + Zw(i, 2) : '')
            }
            function Hb(e, t, n) {
                if (e === t) return !0;
                var r,
                    a = e.length;
                if (a !== t.length) return !1;
                for (r = 0; r < a; r += 1) if (!(n ? n(e[r], t[r]) : e[r] === t[r])) return !1;
                return !0
            }
            function _b(e, t, n) {
                var r,
                    a;
                return function () {
                    for (var i = [
                    ], o = 0; o < arguments.length; o++) i[o] = arguments[o];
                    if (r) {
                        if (!Hb(r, i)) {
                            n && n(a);
                            var s = e.apply(this, i);
                            t && t(s, a) || (a = s)
                        }
                    } else a = e.apply(this, i);
                    return r = i,
                        a
                }
            }
            function Lb(e, t, n) {
                var r,
                    a,
                    i = this;
                return function (o) {
                    if (r) {
                        if (!xb(r, o)) {
                            n && n(a);
                            var s = e.call(i, o);
                            t && t(s, a) || (a = s)
                        }
                    } else a = e.call(i, o);
                    return r = o,
                        a
                }
            }
            var Fb = {
                week: 3,
                separator: 0,
                omitZeroMinute: 0,
                meridiem: 0,
                omitCommas: 0
            },
                Xb = {
                    timeZoneName: 7,
                    era: 6,
                    year: 5,
                    month: 4,
                    day: 2,
                    weekday: 2,
                    hour: 1,
                    minute: 1,
                    second: 1
                },
                Ub = /\s*([ap])\.?m\.?/i,
                qb = /,/g,
                Gb = /\s+/g,
                Vb = /\u200e/g,
                Yb = /UTC|GMT/,
                Bb = function () {
                    function e(e) {
                        var t = {
                        },
                            n = {
                            },
                            r = 0;
                        for (var a in e) a in Fb ? (n[a] = e[a], r = Math.max(Fb[a], r)) : (t[a] = e[a], a in Xb && (r = Math.max(Xb[a], r)));
                        this.standardDateProps = t,
                            this.extendedSettings = n,
                            this.severity = r,
                            this.buildFormattingFunc = _b($b)
                    }
                    return e.prototype.format = function (e, t) {
                        return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, t)(e)
                    },
                        e.prototype.formatRange = function (e, t, n, r) {
                            var a = this.standardDateProps,
                                i = this.extendedSettings,
                                o = function (e, t, n) {
                                    return n.getMarkerYear(e) !== n.getMarkerYear(t) ? 5 : n.getMarkerMonth(e) !== n.getMarkerMonth(t) ? 4 : n.getMarkerDay(e) !== n.getMarkerDay(t) ? 2 : vb(e) !== vb(t) ? 1 : 0
                                }(e.marker, t.marker, n.calendarSystem);
                            if (!o) return this.format(e, n);
                            var s = o;
                            !(s > 1) || 'numeric' !== a.year && '2-digit' !== a.year || 'numeric' !== a.month && '2-digit' !== a.month || 'numeric' !== a.day && '2-digit' !== a.day || (s = 1);
                            var u = this.format(e, n),
                                l = this.format(t, n);
                            if (u === l) return u;
                            var d = $b(function (e, t) {
                                var n = {
                                };
                                for (var r in e) (!(r in Xb) || Xb[r] <= t) && (n[r] = e[r]);
                                return n
                            }(a, s), i, n),
                                c = d(e),
                                m = d(t),
                                f = function (e, t, n, r) {
                                    for (var a = 0; a < e.length;) {
                                        var i = e.indexOf(t, a);
                                        if (- 1 === i) break;
                                        var o = e.substr(0, i);
                                        a = i + t.length;
                                        for (var s = e.substr(a), u = 0; u < n.length;) {
                                            var l = n.indexOf(r, u);
                                            if (- 1 === l) break;
                                            var d = n.substr(0, l);
                                            u = l + r.length;
                                            var c = n.substr(u);
                                            if (o === d && s === c) return {
                                                before: o,
                                                after: s
                                            }
                                        }
                                    }
                                    return null
                                }(u, c, l, m),
                                h = i.separator || r || n.defaultSeparator || '';
                            return f ? f.before + c + h + m + f.after : u + h + l
                        },
                        e.prototype.getLargestUnit = function () {
                            switch (this.severity) {
                                case 7:
                                case 6:
                                case 5:
                                    return 'year';
                                case 4:
                                    return 'month';
                                case 3:
                                    return 'week';
                                case 2:
                                    return 'day';
                                default:
                                    return 'time'
                            }
                        },
                        e
                }();
            function $b(e, t, n) {
                var r = Object.keys(e).length;
                return 1 === r && 'short' === e.timeZoneName ? function (e) {
                    return Ob(e.timeZoneOffset)
                }
                    : 0 === r && t.week ? function (e) {
                        return r = n.computeWeekNumber(e.marker),
                            a = n.weekText,
                            i = n.weekTextLong,
                            o = n.locale,
                            s = t.week,
                            u = [
                            ],
                            'long' === s ? u.push(i) : 'short' !== s && 'narrow' !== s || u.push(a),
                            'long' !== s && 'short' !== s || u.push(' '),
                            u.push(o.simpleNumberFormat.format(r)),
                            'rtl' === o.options.direction && u.reverse(),
                            u.join('');
                        var r,
                            a,
                            i,
                            o,
                            s,
                            u
                    }
                        : function (e, t, n) {
                            e = jw({
                            }, e),
                                t = jw({
                                }, t),
                                function (e, t) {
                                    e.timeZoneName && (e.hour || (e.hour = '2-digit'), e.minute || (e.minute = '2-digit')),
                                        'long' === e.timeZoneName && (e.timeZoneName = 'short'),
                                        t.omitZeroMinute && (e.second || e.millisecond) && delete t.omitZeroMinute
                                }(e, t),
                                e.timeZone = 'UTC';
                            var r,
                                a = new Intl.DateTimeFormat(n.locale.codes, e);
                            if (t.omitZeroMinute) {
                                var i = jw({
                                }, e);
                                delete i.minute,
                                    r = new Intl.DateTimeFormat(n.locale.codes, i)
                            }
                            return function (i) {
                                var o = i.marker;
                                return function (e, t, n, r, a) {
                                    return e = e.replace(Vb, ''),
                                        'short' === n.timeZoneName && (e = function (e, t) {
                                            var n = !1;
                                            return e = e.replace(Yb, (function () {
                                                return n = !0,
                                                    t
                                            })),
                                                n || (e += ' ' + t),
                                                e
                                        }(e, 'UTC' === a.timeZone || null == t.timeZoneOffset ? 'UTC' : Ob(t.timeZoneOffset))),
                                        r.omitCommas && (e = e.replace(qb, '').trim()),
                                        r.omitZeroMinute && (e = e.replace(':00', '')),
                                        !1 === r.meridiem ? e = e.replace(Ub, '').trim() : 'narrow' === r.meridiem ? e = e.replace(Ub, (function (e, t) {
                                            return t.toLocaleLowerCase()
                                        })) : 'short' === r.meridiem ? e = e.replace(Ub, (function (e, t) {
                                            return t.toLocaleLowerCase() + 'm'
                                        })) : 'lowercase' === r.meridiem && (e = e.replace(Ub, (function (e) {
                                            return e.toLocaleLowerCase()
                                        }))),
                                        (e = e.replace(Gb, ' ')).trim()
                                }((r && !o.getUTCMinutes() ? r : a).format(o), i, e, t, n)
                            }
                        }(e, t, n)
            }
            function Qb(e, t) {
                var n = t.markerToArray(e.marker);
                return {
                    marker: e.marker,
                    timeZoneOffset: e.timeZoneOffset,
                    array: n,
                    year: n[0],
                    month: n[1],
                    day: n[2],
                    hour: n[3],
                    minute: n[4],
                    second: n[5],
                    millisecond: n[6]
                }
            }
            function Kb(e, t, n, r) {
                var a = Qb(e, n.calendarSystem);
                return {
                    date: a,
                    start: a,
                    end: t ? Qb(t, n.calendarSystem) : null,
                    timeZone: n.timeZone,
                    localeCodes: n.locale.codes,
                    defaultSeparator: r || n.defaultSeparator
                }
            }
            var Jb = function () {
                function e(e) {
                    this.cmdStr = e
                }
                return e.prototype.format = function (e, t, n) {
                    return t.cmdFormatter(this.cmdStr, Kb(e, null, t, n))
                },
                    e.prototype.formatRange = function (e, t, n, r) {
                        return n.cmdFormatter(this.cmdStr, Kb(e, t, n, r))
                    },
                    e
            }(),
                Zb = function () {
                    function e(e) {
                        this.func = e
                    }
                    return e.prototype.format = function (e, t, n) {
                        return this.func(Kb(e, null, t, n))
                    },
                        e.prototype.formatRange = function (e, t, n, r) {
                            return this.func(Kb(e, t, n, r))
                        },
                        e
                }();
            function ek(e) {
                return 'object' == typeof e && e ? new Bb(e) : 'string' == typeof e ? new Jb(e) : 'function' == typeof e ? new Zb(e) : null
            }
            var tk = {
                navLinkDayClick: dk,
                navLinkWeekClick: dk,
                duration: Db,
                bootstrapFontAwesome: dk,
                buttonIcons: dk,
                customButtons: dk,
                defaultAllDayEventDuration: Db,
                defaultTimedEventDuration: Db,
                nextDayThreshold: Db,
                scrollTime: Db,
                scrollTimeReset: Boolean,
                slotMinTime: Db,
                slotMaxTime: Db,
                dayPopoverFormat: ek,
                slotDuration: Db,
                snapDuration: Db,
                headerToolbar: dk,
                footerToolbar: dk,
                defaultRangeSeparator: String,
                titleRangeSeparator: String,
                forceEventDuration: Boolean,
                dayHeaders: Boolean,
                dayHeaderFormat: ek,
                dayHeaderClassNames: dk,
                dayHeaderContent: dk,
                dayHeaderDidMount: dk,
                dayHeaderWillUnmount: dk,
                dayCellClassNames: dk,
                dayCellContent: dk,
                dayCellDidMount: dk,
                dayCellWillUnmount: dk,
                initialView: String,
                aspectRatio: Number,
                weekends: Boolean,
                weekNumberCalculation: dk,
                weekNumbers: Boolean,
                weekNumberClassNames: dk,
                weekNumberContent: dk,
                weekNumberDidMount: dk,
                weekNumberWillUnmount: dk,
                editable: Boolean,
                viewClassNames: dk,
                viewDidMount: dk,
                viewWillUnmount: dk,
                nowIndicator: Boolean,
                nowIndicatorClassNames: dk,
                nowIndicatorContent: dk,
                nowIndicatorDidMount: dk,
                nowIndicatorWillUnmount: dk,
                showNonCurrentDates: Boolean,
                lazyFetching: Boolean,
                startParam: String,
                endParam: String,
                timeZoneParam: String,
                timeZone: String,
                locales: dk,
                locale: dk,
                themeSystem: String,
                dragRevertDuration: Number,
                dragScroll: Boolean,
                allDayMaintainDuration: Boolean,
                unselectAuto: Boolean,
                dropAccept: dk,
                eventOrder: function (e) {
                    var t,
                        n,
                        r = [
                        ],
                        a = [
                        ];
                    for ('string' == typeof e ? a = e.split(/\s*,\s*/) : 'function' == typeof e ? a = [
                        e
                    ] : Array.isArray(e) && (a = e), t = 0; t < a.length; t += 1) 'string' == typeof (n = a[t]) ? r.push('-' === n.charAt(0) ? {
                        field: n.substring(1),
                        order: - 1
                    }
                        : {
                            field: n,
                            order: 1
                        }) : 'function' == typeof n && r.push({
                            func: n
                        });
                    return r
                },
                eventOrderStrict: Boolean,
                handleWindowResize: Boolean,
                windowResizeDelay: Number,
                longPressDelay: Number,
                eventDragMinDistance: Number,
                expandRows: Boolean,
                height: dk,
                contentHeight: dk,
                direction: String,
                weekNumberFormat: ek,
                eventResizableFromStart: Boolean,
                displayEventTime: Boolean,
                displayEventEnd: Boolean,
                weekText: String,
                weekTextLong: String,
                progressiveEventRendering: Boolean,
                businessHours: dk,
                initialDate: dk,
                now: dk,
                eventDataTransform: dk,
                stickyHeaderDates: dk,
                stickyFooterScrollbar: dk,
                viewHeight: dk,
                defaultAllDay: Boolean,
                eventSourceFailure: dk,
                eventSourceSuccess: dk,
                eventDisplay: String,
                eventStartEditable: Boolean,
                eventDurationEditable: Boolean,
                eventOverlap: dk,
                eventConstraint: dk,
                eventAllow: dk,
                eventBackgroundColor: String,
                eventBorderColor: String,
                eventTextColor: String,
                eventColor: String,
                eventClassNames: dk,
                eventContent: dk,
                eventDidMount: dk,
                eventWillUnmount: dk,
                selectConstraint: dk,
                selectOverlap: dk,
                selectAllow: dk,
                droppable: Boolean,
                unselectCancel: String,
                slotLabelFormat: dk,
                slotLaneClassNames: dk,
                slotLaneContent: dk,
                slotLaneDidMount: dk,
                slotLaneWillUnmount: dk,
                slotLabelClassNames: dk,
                slotLabelContent: dk,
                slotLabelDidMount: dk,
                slotLabelWillUnmount: dk,
                dayMaxEvents: dk,
                dayMaxEventRows: dk,
                dayMinWidth: Number,
                slotLabelInterval: Db,
                allDayText: String,
                allDayClassNames: dk,
                allDayContent: dk,
                allDayDidMount: dk,
                allDayWillUnmount: dk,
                slotMinWidth: Number,
                navLinks: Boolean,
                eventTimeFormat: ek,
                rerenderDelay: Number,
                moreLinkText: dk,
                moreLinkHint: dk,
                selectMinDistance: Number,
                selectable: Boolean,
                selectLongPressDelay: Number,
                eventLongPressDelay: Number,
                selectMirror: Boolean,
                eventMaxStack: Number,
                eventMinHeight: Number,
                eventMinWidth: Number,
                eventShortHeight: Number,
                slotEventOverlap: Boolean,
                plugins: dk,
                firstDay: Number,
                dayCount: Number,
                dateAlignment: String,
                dateIncrement: Db,
                hiddenDays: dk,
                monthMode: Boolean,
                fixedWeekCount: Boolean,
                validRange: dk,
                visibleRange: dk,
                titleFormat: dk,
                eventInteractive: Boolean,
                noEventsText: String,
                viewHint: dk,
                navLinkHint: dk,
                closeHint: String,
                timeHint: String,
                eventHint: String,
                moreLinkClick: dk,
                moreLinkClassNames: dk,
                moreLinkContent: dk,
                moreLinkDidMount: dk,
                moreLinkWillUnmount: dk
            },
                nk = {
                    eventDisplay: 'auto',
                    defaultRangeSeparator: ' - ',
                    titleRangeSeparator: ' – ',
                    defaultTimedEventDuration: '01:00:00',
                    defaultAllDayEventDuration: {
                        day: 1
                    },
                    forceEventDuration: !1,
                    nextDayThreshold: '00:00:00',
                    dayHeaders: !0,
                    initialView: '',
                    aspectRatio: 1.35,
                    headerToolbar: {
                        start: 'title',
                        center: '',
                        end: 'today prev,next'
                    },
                    weekends: !0,
                    weekNumbers: !1,
                    weekNumberCalculation: 'local',
                    editable: !1,
                    nowIndicator: !1,
                    scrollTime: '06:00:00',
                    scrollTimeReset: !0,
                    slotMinTime: '00:00:00',
                    slotMaxTime: '24:00:00',
                    showNonCurrentDates: !0,
                    lazyFetching: !0,
                    startParam: 'start',
                    endParam: 'end',
                    timeZoneParam: 'timeZone',
                    timeZone: 'local',
                    locales: [
                    ],
                    locale: '',
                    themeSystem: 'standard',
                    dragRevertDuration: 500,
                    dragScroll: !0,
                    allDayMaintainDuration: !1,
                    unselectAuto: !0,
                    dropAccept: '*',
                    eventOrder: 'start,-duration,allDay,title',
                    dayPopoverFormat: {
                        month: 'long',
                        day: 'numeric',
                        year: 'numeric'
                    },
                    handleWindowResize: !0,
                    windowResizeDelay: 100,
                    longPressDelay: 1000,
                    eventDragMinDistance: 5,
                    expandRows: !1,
                    navLinks: !1,
                    selectable: !1,
                    eventMinHeight: 15,
                    eventMinWidth: 30,
                    eventShortHeight: 30
                },
                rk = {
                    datesSet: dk,
                    eventsSet: dk,
                    eventAdd: dk,
                    eventChange: dk,
                    eventRemove: dk,
                    windowResize: dk,
                    eventClick: dk,
                    eventMouseEnter: dk,
                    eventMouseLeave: dk,
                    select: dk,
                    unselect: dk,
                    loading: dk,
                    _unmount: dk,
                    _beforeprint: dk,
                    _afterprint: dk,
                    _noEventDrop: dk,
                    _noEventResize: dk,
                    _resize: dk,
                    _scrollRequest: dk
                },
                ak = {
                    buttonText: dk,
                    buttonHints: dk,
                    views: dk,
                    plugins: dk,
                    initialEvents: dk,
                    events: dk,
                    eventSources: dk
                },
                ik = {
                    headerToolbar: ok,
                    footerToolbar: ok,
                    buttonText: ok,
                    buttonHints: ok,
                    buttonIcons: ok
                };
            function ok(e, t) {
                return 'object' == typeof e && 'object' == typeof t && e && t ? xb(e, t) : e === t
            }
            var sk = {
                type: String,
                component: dk,
                buttonText: String,
                buttonTextKey: String,
                dateProfileGeneratorClass: dk,
                usesMinMaxTime: Boolean,
                classNames: dk,
                content: dk,
                didMount: dk,
                willUnmount: dk
            };
            function uk(e) {
                return bb(e, ik)
            }
            function lk(e, t) {
                var n = {
                },
                    r = {
                    };
                for (var a in t) a in e && (n[a] = t[a](e[a]));
                for (var a in e) a in t || (r[a] = e[a]);
                return {
                    refined: n,
                    extra: r
                }
            }
            function dk(e) {
                return e
            }
            function ck(e, t, n, r) {
                for (var a = {
                    defs: {
                    },
                    instances: {
                    }
                }, i = Sk(n), o = 0, s = e; o < s.length; o++) {
                    var u = Pk(s[o], t, n, r, i);
                    u && mk(u, a)
                }
                return a
            }
            function mk(e, t) {
                return void 0 === t && (t = {
                    defs: {
                    },
                    instances: {
                    }
                }),
                    t.defs[e.def.defId] = e.def,
                    e.instance && (t.instances[e.instance.instanceId] = e.instance),
                    t
            }
            function fk(e, t) {
                return {
                    defs: jw(jw({
                    }, e.defs), t.defs),
                    instances: jw(jw({
                    }, e.instances), t.instances)
                }
            }
            function hk(e, t) {
                var n = kb(e.defs, t),
                    r = kb(e.instances, (function (e) {
                        return n[e.defId]
                    }));
                return {
                    defs: n,
                    instances: r
                }
            }
            function pk(e) {
                return Array.isArray(e) ? e : 'string' == typeof e ? e.split(/\s+/) : [
                ]
            }
            var gk = {
                display: String,
                editable: Boolean,
                startEditable: Boolean,
                durationEditable: Boolean,
                constraint: dk,
                overlap: dk,
                allow: dk,
                className: pk,
                classNames: pk,
                color: String,
                backgroundColor: String,
                borderColor: String,
                textColor: String
            },
                vk = {
                    display: null,
                    startEditable: null,
                    durationEditable: null,
                    constraints: [
                    ],
                    overlap: null,
                    allows: [
                    ],
                    backgroundColor: '',
                    borderColor: '',
                    textColor: '',
                    classNames: [
                    ]
                };
            function yk(e, t) {
                var n = function (e, t) {
                    return Array.isArray(e) ? ck(e, null, t, !0) : 'object' == typeof e && e ? ck([e], null, t, !0) : null != e ? String(e) : null
                }(e.constraint, t);
                return {
                    display: e.display || null,
                    startEditable: null != e.startEditable ? e.startEditable : e.editable,
                    durationEditable: null != e.durationEditable ? e.durationEditable : e.editable,
                    constraints: null != n ? [
                        n
                    ] : [
                    ],
                    overlap: null != e.overlap ? e.overlap : null,
                    allows: null != e.allow ? [
                        e.allow
                    ] : [
                    ],
                    backgroundColor: e.backgroundColor || e.color || '',
                    borderColor: e.borderColor || e.color || '',
                    textColor: e.textColor || '',
                    classNames: (e.className || [
                    ]).concat(e.classNames || [
                    ])
                }
            }
            function wk(e) {
                return e.reduce(bk, vk)
            }
            function bk(e, t) {
                return {
                    display: null != t.display ? t.display : e.display,
                    startEditable: null != t.startEditable ? t.startEditable : e.startEditable,
                    durationEditable: null != t.durationEditable ? t.durationEditable : e.durationEditable,
                    constraints: e.constraints.concat(t.constraints),
                    overlap: 'boolean' == typeof t.overlap ? t.overlap : e.overlap,
                    allows: e.allows.concat(t.allows),
                    backgroundColor: t.backgroundColor || e.backgroundColor,
                    borderColor: t.borderColor || e.borderColor,
                    textColor: t.textColor || e.textColor,
                    classNames: e.classNames.concat(t.classNames)
                }
            }
            var kk = {
                id: String,
                groupId: String,
                title: String,
                url: String,
                interactive: Boolean
            },
                Mk = {
                    start: dk,
                    end: dk,
                    date: dk,
                    allDay: Boolean
                },
                Ek = jw(jw(jw({
                }, kk), Mk), {
                    extendedProps: dk
                });
            function Pk(e, t, n, r, a) {
                void 0 === a && (a = Sk(n));
                var i = xk(e, n, a),
                    o = i.refined,
                    s = i.extra,
                    u = function (e, t) {
                        var n = null;
                        return e && (n = e.defaultAllDay),
                            null == n && (n = t.options.defaultAllDay),
                            n
                    }(t, n),
                    l = function (e, t, n, r) {
                        for (var a = 0; a < r.length; a += 1) {
                            var i = r[a].parse(e, n);
                            if (i) {
                                var o = e.allDay;
                                return null == o && null == (o = t) && null == (o = i.allDayGuess) && (o = !1),
                                {
                                    allDay: o,
                                    duration: i.duration,
                                    typeData: i.typeData,
                                    typeId: a
                                }
                            }
                        }
                        return null
                    }(o, u, n.dateEnv, n.pluginHooks.recurringTypes);
                if (l) return (d = Tk(o, s, t ? t.sourceId : '', l.allDay, Boolean(l.duration), n)).recurringDef = {
                    typeId: l.typeId,
                    typeData: l.typeData,
                    duration: l.duration
                },
                {
                    def: d,
                    instance: null
                };
                var d,
                    c = function (e, t, n, r) {
                        var a,
                            i,
                            o = e.allDay,
                            s = null,
                            u = !1,
                            l = null,
                            d = null != e.start ? e.start : e.date;
                        if (a = n.dateEnv.createMarkerMeta(d)) s = a.marker;
                        else if (!r) return null;
                        return null != e.end && (i = n.dateEnv.createMarkerMeta(e.end)),
                            null == o && (o = null != t ? t : (!a || a.isTimeUnspecified) && (!i || i.isTimeUnspecified)),
                            o && s && (s = lb(s)),
                            i && (l = i.marker, o && (l = lb(l)), s && l <= s && (l = null)),
                            l ? u = !0 : r || (u = n.options.forceEventDuration || !1, l = n.dateEnv.add(s, o ? n.options.defaultAllDayEventDuration : n.options.defaultTimedEventDuration)),
                        {
                            allDay: o,
                            hasEnd: u,
                            range: {
                                start: s,
                                end: l
                            },
                            forcedStartTzo: a ? a.forcedTzo : null,
                            forcedEndTzo: i ? i.forcedTzo : null
                        }
                    }(o, u, n, r);
                return c ? {
                    def: d = Tk(o, s, t ? t.sourceId : '', c.allDay, c.hasEnd, n),
                    instance: yb(d.defId, c.range, c.forcedStartTzo, c.forcedEndTzo)
                }
                    : null
            }
            function xk(e, t, n) {
                return void 0 === n && (n = Sk(t)),
                    lk(e, n)
            }
            function Sk(e) {
                return jw(jw(jw({
                }, gk), Ek), e.pluginHooks.eventRefiners)
            }
            function Tk(e, t, n, r, a, i) {
                for (var o = {
                    title: e.title || '',
                    groupId: e.groupId || '',
                    publicId: e.id || '',
                    url: e.url || '',
                    recurringDef: null,
                    defId: Kw(),
                    sourceId: n,
                    allDay: r,
                    hasEnd: a,
                    interactive: e.interactive,
                    ui: yk(e, i),
                    extendedProps: jw(jw({
                    }, e.extendedProps || {
                    }), t)
                }, s = 0, u = i.pluginHooks.eventDefMemberAdders; s < u.length; s++) {
                    var l = u[s];
                    jw(o, l(e))
                }
                return Object.freeze(o.ui.classNames),
                    Object.freeze(o.extendedProps),
                    o
            }
            function Ck(e) {
                var t = Math.floor(sb(e.start, e.end)) || 1,
                    n = lb(e.start);
                return {
                    start: n,
                    end: ib(n, t)
                }
            }
            function Wk(e, t) {
                void 0 === t && (t = Db(0));
                var n = null,
                    r = null;
                if (e.end) {
                    r = lb(e.end);
                    var a = e.end.valueOf() - r.valueOf();
                    a && a >= zb(t) && (r = ib(r, 1))
                }
                return e.start && (n = lb(e.start), r && r <= n && (r = ib(n, 1))),
                {
                    start: n,
                    end: r
                }
            }
            function jk(e, t, n, r) {
                return 'year' === r ? Db(n.diffWholeYears(e, t), 'year') : 'month' === r ? Db(n.diffWholeMonths(e, t), 'month') : (i = t, o = lb(a = e), s = lb(i), {
                    years: 0,
                    months: 0,
                    days: Math.round(sb(o, s)),
                    milliseconds: i.valueOf() - s.valueOf() - (a.valueOf() - o.valueOf())
                });
                var a,
                    i,
                    o,
                    s
            }
            function Dk(e, t) {
                var n,
                    r,
                    a = [
                    ],
                    i = t.start;
                for (e.sort(Nk), n = 0; n < e.length; n += 1) (r = e[n]).start > i && a.push({
                    start: i,
                    end: r.start
                }),
                    r.end > i && (i = r.end);
                return i < t.end && a.push({
                    start: i,
                    end: t.end
                }),
                    a
            }
            function Nk(e, t) {
                return e.start.valueOf() - t.start.valueOf()
            }
            function Ik(e, t) {
                var n = e.start,
                    r = e.end,
                    a = null;
                return null !== t.start && (n = null === n ? t.start : new Date(Math.max(n.valueOf(), t.start.valueOf()))),
                    null != t.end && (r = null === r ? t.end : new Date(Math.min(r.valueOf(), t.end.valueOf()))),
                    (null === n || null === r || n < r) && (a = {
                        start: n,
                        end: r
                    }),
                    a
            }
            function zk(e, t) {
                return (null === e.start || t >= e.start) && (null === e.end || t < e.end)
            }
            function Rk(e, t, n, r) {
                var a = {
                },
                    i = {
                    },
                    o = {
                    },
                    s = [
                    ],
                    u = [
                    ],
                    l = Hk(e.defs, t);
                for (var d in e.defs) 'inverse-background' === (f = l[(b = e.defs[d]).defId]).display && (b.groupId ? (a[b.groupId] = [
                ], o[b.groupId] || (o[b.groupId] = b)) : i[d] = [
                ]);
                for (var c in e.instances) {
                    var m = e.instances[c],
                        f = l[(b = e.defs[m.defId]).defId],
                        h = m.range,
                        p = !b.allDay && r ? Wk(h, r) : h,
                        g = Ik(p, n);
                    g && ('inverse-background' === f.display ? b.groupId ? a[b.groupId].push(g) : i[m.defId].push(g) : 'none' !== f.display && ('background' === f.display ? s : u).push({
                        def: b,
                        ui: f,
                        instance: m,
                        range: g,
                        isStart: p.start && p.start.valueOf() === g.start.valueOf(),
                        isEnd: p.end && p.end.valueOf() === g.end.valueOf()
                    }))
                }
                for (var v in a) for (var y = 0, w = Dk(a[v], n); y < w.length; y++) {
                    var b,
                        k = w[y];
                    f = l[(b = o[v]).defId],
                        s.push({
                            def: b,
                            ui: f,
                            instance: null,
                            range: k,
                            isStart: !1,
                            isEnd: !1
                        })
                }
                for (var d in i) for (var M = 0, E = Dk(i[d], n); M < E.length; M++) k = E[M],
                    s.push({
                        def: e.defs[d],
                        ui: l[d],
                        instance: null,
                        range: k,
                        isStart: !1,
                        isEnd: !1
                    });
                return {
                    bg: s,
                    fg: u
                }
            }
            function Ak(e, t) {
                e.fcSeg = t
            }
            function Ok(e) {
                return e.fcSeg || e.parentNode.fcSeg || null
            }
            function Hk(e, t) {
                return Mb(e, (function (e) {
                    return _k(e, t)
                }))
            }
            function _k(e, t) {
                var n = [
                ];
                return t[''] && n.push(t['']),
                    t[e.defId] && n.push(t[e.defId]),
                    n.push(e.ui),
                    wk(n)
            }
            function Lk(e, t) {
                var n = e.map(Fk);
                return n.sort((function (e, n) {
                    return function (e, t, n) {
                        var r,
                            a;
                        for (r = 0; r < n.length; r += 1) if (a = Jw(e, t, n[r])) return a;
                        return 0
                    }(e, n, t)
                })),
                    n.map((function (e) {
                        return e._seg
                    }))
            }
            function Fk(e) {
                var t = e.eventRange,
                    n = t.def,
                    r = t.instance ? t.instance.range : t.range,
                    a = r.start ? r.start.valueOf() : 0,
                    i = r.end ? r.end.valueOf() : 0;
                return jw(jw(jw({
                }, n.extendedProps), n), {
                    id: n.publicId,
                    start: a,
                    end: i,
                    duration: i - a,
                    allDay: Number(n.allDay),
                    _seg: e
                })
            }
            function Xk(e, t) {
                for (var n = t.pluginHooks.isDraggableTransformers, r = e.eventRange, a = r.def, i = r.ui, o = i.startEditable, s = 0, u = n; s < u.length; s++) o = (0, u[s])(o, a, i, t);
                return o
            }
            function Uk(e, t) {
                return e.isStart && e.eventRange.ui.durationEditable && t.options.eventResizableFromStart
            }
            function qk(e, t) {
                return e.isEnd && e.eventRange.ui.durationEditable
            }
            function Gk(e, t, n, r, a, i, o) {
                var s = n.dateEnv,
                    u = n.options,
                    l = u.displayEventTime,
                    d = u.displayEventEnd,
                    c = e.eventRange.def,
                    m = e.eventRange.instance;
                null == l && (l = !1 !== r),
                    null == d && (d = !1 !== a);
                var f = m.range.start,
                    h = m.range.end,
                    p = i || e.start || e.eventRange.range.start,
                    g = o || e.end || e.eventRange.range.end,
                    v = lb(f).valueOf() === lb(p).valueOf(),
                    y = lb(ob(h, - 1)).valueOf() === lb(ob(g, - 1)).valueOf();
                return l && !c.allDay && (v || y) ? (p = v ? f : p, g = y ? h : g, d && c.hasEnd ? s.formatRange(p, g, t, {
                    forcedStartTzo: i ? null : m.forcedStartTzo,
                    forcedEndTzo: o ? null : m.forcedEndTzo
                }) : s.format(p, t, {
                    forcedTzo: i ? null : m.forcedStartTzo
                })) : ''
            }
            function Vk(e, t, n) {
                var r = e.eventRange.range;
                return {
                    isPast: r.end < (n || t.start),
                    isFuture: r.start >= (n || t.end),
                    isToday: t && zk(t, r.start)
                }
            }
            function Yk(e, t) {
                var n = e.eventRange,
                    r = n.def,
                    a = n.instance,
                    i = r.url;
                if (i) return {
                    href: i
                };
                var o = t.emitter,
                    s = t.options.eventInteractive;
                return null == s && null == (s = r.interactive) && (s = Boolean(o.hasHandlers('eventClick'))),
                    s ? $w((function (e) {
                        o.trigger('eventClick', {
                            el: e.target,
                            event: new sM(t, r, a),
                            jsEvent: e,
                            view: t.viewApi
                        })
                    })) : {
                    }
            }
            var Bk = {
                start: dk,
                end: dk,
                allDay: Boolean
            };
            function $k(e, t, n) {
                return jw(jw({
                }, Qk(e, t, n)), {
                    timeZone: t.timeZone
                })
            }
            function Qk(e, t, n) {
                return {
                    start: t.toDate(e.start),
                    end: t.toDate(e.end),
                    startStr: t.formatIso(e.start, {
                        omitTime: n
                    }),
                    endStr: t.formatIso(e.end, {
                        omitTime: n
                    })
                }
            }
            function Kk(e, t, n) {
                var r = xk({
                    editable: !1
                }, n),
                    a = Tk(r.refined, r.extra, '', e.allDay, !0, n);
                return {
                    def: a,
                    ui: _k(a, t),
                    instance: yb(a.defId, e.range),
                    range: e.range,
                    isStart: !0,
                    isEnd: !0
                }
            }
            function Jk(e, t, n) {
                var r = n.dateEnv,
                    a = n.options,
                    i = t;
                return e ? (i = lb(i), i = r.add(i, a.defaultAllDayEventDuration)) : i = r.add(i, a.defaultTimedEventDuration),
                    i
            }
            function Zk(e, t, n, r) {
                var a = n.standardProps || {
                };
                null == a.hasEnd && t.durationEditable && (n.startDelta || n.endDelta) && (a.hasEnd = !0);
                var i = jw(jw(jw({
                }, e), a), {
                    ui: jw(jw({
                    }, e.ui), a.ui)
                });
                n.extendedProps && (i.extendedProps = jw(jw({
                }, i.extendedProps), n.extendedProps));
                for (var o = 0, s = r.pluginHooks.eventDefMutationAppliers; o < s.length; o++) (0, s[o])(i, n, r);
                return !i.hasEnd && r.options.forceEventDuration && (i.hasEnd = !0),
                    i
            }
            function eM(e, t, n, r, a) {
                var i = a.dateEnv,
                    o = r.standardProps && !0 === r.standardProps.allDay,
                    s = r.standardProps && !1 === r.standardProps.hasEnd,
                    u = jw({
                    }, e);
                return o && (u.range = Ck(u.range)),
                    r.datesDelta && n.startEditable && (u.range = {
                        start: i.add(u.range.start, r.datesDelta),
                        end: i.add(u.range.end, r.datesDelta)
                    }),
                    r.startDelta && n.durationEditable && (u.range = {
                        start: i.add(u.range.start, r.startDelta),
                        end: u.range.end
                    }),
                    r.endDelta && n.durationEditable && (u.range = {
                        start: u.range.start,
                        end: i.add(u.range.end, r.endDelta)
                    }),
                    s && (u.range = {
                        start: u.range.start,
                        end: Jk(t.allDay, u.range.start, a)
                    }),
                    t.allDay && (u.range = {
                        start: lb(u.range.start),
                        end: lb(u.range.end)
                    }),
                    u.range.end < u.range.start && (u.range.end = Jk(t.allDay, u.range.start, a)),
                    u
            }
            var tM = function () {
                function e(e, t, n) {
                    this.type = e,
                        this.getCurrentData = t,
                        this.dateEnv = n
                }
                return Object.defineProperty(e.prototype, 'calendar', {
                    get: function () {
                        return this.getCurrentData().calendarApi
                    },
                    enumerable: !1,
                    configurable: !0
                }),
                    Object.defineProperty(e.prototype, 'title', {
                        get: function () {
                            return this.getCurrentData().viewTitle
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(e.prototype, 'activeStart', {
                        get: function () {
                            return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start)
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(e.prototype, 'activeEnd', {
                        get: function () {
                            return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end)
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(e.prototype, 'currentStart', {
                        get: function () {
                            return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start)
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(e.prototype, 'currentEnd', {
                        get: function () {
                            return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end)
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    e.prototype.getOption = function (e) {
                        return this.getCurrentData().options[e]
                    },
                    e
            }(),
                nM = {
                    id: String,
                    defaultAllDay: Boolean,
                    url: String,
                    format: String,
                    events: dk,
                    eventDataTransform: dk,
                    success: dk,
                    failure: dk
                };
            function rM(e, t, n) {
                var r;
                if (void 0 === n && (n = aM(t)), 'string' == typeof e ? r = {
                    url: e
                }
                    : 'function' == typeof e || Array.isArray(e) ? r = {
                        events: e
                    }
                        : 'object' == typeof e && e && (r = e), r) {
                    var a = lk(r, n),
                        i = a.refined,
                        o = a.extra,
                        s = function (e, t) {
                            for (var n = t.pluginHooks.eventSourceDefs, r = n.length - 1; r >= 0; r -= 1) {
                                var a = n[r].parseMeta(e);
                                if (a) return {
                                    sourceDefId: r,
                                    meta: a
                                }
                            }
                            return null
                        }(i, t);
                    if (s) return {
                        _raw: e,
                        isFetching: !1,
                        latestFetchId: '',
                        fetchRange: null,
                        defaultAllDay: i.defaultAllDay,
                        eventDataTransform: i.eventDataTransform,
                        success: i.success,
                        failure: i.failure,
                        publicId: i.id || '',
                        sourceId: Kw(),
                        sourceDefId: s.sourceDefId,
                        meta: s.meta,
                        ui: yk(i, t),
                        extendedProps: o
                    }
                }
                return null
            }
            function aM(e) {
                return jw(jw(jw({
                }, gk), nM), e.pluginHooks.eventSourceRefiners)
            }
            function iM(e, t) {
                return 'function' == typeof e && (e = e()),
                    null == e ? t.createNowMarker() : t.createMarker(e)
            }
            var oM = function () {
                function e() {
                }
                return e.prototype.getCurrentData = function () {
                    return this.currentDataManager.getCurrentData()
                },
                    e.prototype.dispatch = function (e) {
                        return this.currentDataManager.dispatch(e)
                    },
                    Object.defineProperty(e.prototype, 'view', {
                        get: function () {
                            return this.getCurrentData().viewApi
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    e.prototype.batchRendering = function (e) {
                        e()
                    },
                    e.prototype.updateSize = function () {
                        this.trigger('_resize', !0)
                    },
                    e.prototype.setOption = function (e, t) {
                        this.dispatch({
                            type: 'SET_OPTION',
                            optionName: e,
                            rawOptionValue: t
                        })
                    },
                    e.prototype.getOption = function (e) {
                        return this.currentDataManager.currentCalendarOptionsInput[e]
                    },
                    e.prototype.getAvailableLocaleCodes = function () {
                        return Object.keys(this.getCurrentData().availableRawLocales)
                    },
                    e.prototype.on = function (e, t) {
                        var n = this.currentDataManager;
                        n.currentCalendarOptionsRefiners[e] ? n.emitter.on(e, t) : console.warn('Unknown listener name \'' + e + '\'')
                    },
                    e.prototype.off = function (e, t) {
                        this.currentDataManager.emitter.off(e, t)
                    },
                    e.prototype.trigger = function (e) {
                        for (var t, n = [
                        ], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];
                        (t = this.currentDataManager.emitter).trigger.apply(t, Dw([e], n))
                    },
                    e.prototype.changeView = function (e, t) {
                        var n = this;
                        this.batchRendering((function () {
                            if (n.unselect(), t) if (t.start && t.end) n.dispatch({
                                type: 'CHANGE_VIEW_TYPE',
                                viewType: e
                            }),
                                n.dispatch({
                                    type: 'SET_OPTION',
                                    optionName: 'visibleRange',
                                    rawOptionValue: t
                                });
                            else {
                                var r = n.getCurrentData().dateEnv;
                                n.dispatch({
                                    type: 'CHANGE_VIEW_TYPE',
                                    viewType: e,
                                    dateMarker: r.createMarker(t)
                                })
                            } else n.dispatch({
                                type: 'CHANGE_VIEW_TYPE',
                                viewType: e
                            })
                        }))
                    },
                    e.prototype.zoomTo = function (e, t) {
                        var n;
                        t = t || 'day',
                            n = this.getCurrentData().viewSpecs[t] || this.getUnitViewSpec(t),
                            this.unselect(),
                            n ? this.dispatch({
                                type: 'CHANGE_VIEW_TYPE',
                                viewType: n.type,
                                dateMarker: e
                            }) : this.dispatch({
                                type: 'CHANGE_DATE',
                                dateMarker: e
                            })
                    },
                    e.prototype.getUnitViewSpec = function (e) {
                        var t,
                            n,
                            r = this.getCurrentData(),
                            a = r.viewSpecs,
                            i = r.toolbarConfig,
                            o = [
                            ].concat(i.header ? i.header.viewsWithButtons : [
                            ], i.footer ? i.footer.viewsWithButtons : [
                            ]);
                        for (var s in a) o.push(s);
                        for (t = 0; t < o.length; t += 1) if ((n = a[o[t]]) && n.singleUnit === e) return n;
                        return null
                    },
                    e.prototype.prev = function () {
                        this.unselect(),
                            this.dispatch({
                                type: 'PREV'
                            })
                    },
                    e.prototype.next = function () {
                        this.unselect(),
                            this.dispatch({
                                type: 'NEXT'
                            })
                    },
                    e.prototype.prevYear = function () {
                        var e = this.getCurrentData();
                        this.unselect(),
                            this.dispatch({
                                type: 'CHANGE_DATE',
                                dateMarker: e.dateEnv.addYears(e.currentDate, - 1)
                            })
                    },
                    e.prototype.nextYear = function () {
                        var e = this.getCurrentData();
                        this.unselect(),
                            this.dispatch({
                                type: 'CHANGE_DATE',
                                dateMarker: e.dateEnv.addYears(e.currentDate, 1)
                            })
                    },
                    e.prototype.today = function () {
                        var e = this.getCurrentData();
                        this.unselect(),
                            this.dispatch({
                                type: 'CHANGE_DATE',
                                dateMarker: iM(e.calendarOptions.now, e.dateEnv)
                            })
                    },
                    e.prototype.gotoDate = function (e) {
                        var t = this.getCurrentData();
                        this.unselect(),
                            this.dispatch({
                                type: 'CHANGE_DATE',
                                dateMarker: t.dateEnv.createMarker(e)
                            })
                    },
                    e.prototype.incrementDate = function (e) {
                        var t = this.getCurrentData(),
                            n = Db(e);
                        n && (this.unselect(), this.dispatch({
                            type: 'CHANGE_DATE',
                            dateMarker: t.dateEnv.add(t.currentDate, n)
                        }))
                    },
                    e.prototype.getDate = function () {
                        var e = this.getCurrentData();
                        return e.dateEnv.toDate(e.currentDate)
                    },
                    e.prototype.formatDate = function (e, t) {
                        var n = this.getCurrentData().dateEnv;
                        return n.format(n.createMarker(e), ek(t))
                    },
                    e.prototype.formatRange = function (e, t, n) {
                        var r = this.getCurrentData().dateEnv;
                        return r.formatRange(r.createMarker(e), r.createMarker(t), ek(n), n)
                    },
                    e.prototype.formatIso = function (e, t) {
                        var n = this.getCurrentData().dateEnv;
                        return n.formatIso(n.createMarker(e), {
                            omitTime: t
                        })
                    },
                    e.prototype.select = function (e, t) {
                        var n;
                        n = null == t ? null != e.start ? e : {
                            start: e,
                            end: null
                        }
                            : {
                                start: e,
                                end: t
                            };
                        var r = this.getCurrentData(),
                            a = function (e, t, n) {
                                var r = function (e, t) {
                                    var n = lk(e, Bk),
                                        r = n.refined,
                                        a = n.extra,
                                        i = r.start ? t.createMarkerMeta(r.start) : null,
                                        o = r.end ? t.createMarkerMeta(r.end) : null,
                                        s = r.allDay;
                                    return null == s && (s = i && i.isTimeUnspecified && (!o || o.isTimeUnspecified)),
                                        jw({
                                            range: {
                                                start: i ? i.marker : null,
                                                end: o ? o.marker : null
                                            },
                                            allDay: s
                                        }, a)
                                }(e, t),
                                    a = r.range;
                                if (!a.start) return null;
                                if (!a.end) {
                                    if (null == n) return null;
                                    a.end = t.add(a.start, n)
                                }
                                return r
                            }(n, r.dateEnv, Db({
                                days: 1
                            }));
                        a && (this.dispatch({
                            type: 'SELECT_DATES',
                            selection: a
                        }), function (e, t, n) {
                            n.emitter.trigger('select', jw(jw({
                            }, function (e, t) {
                                for (var n, r, a = {
                                }, i = 0, o = t.pluginHooks.dateSpanTransforms; i < o.length; i++) {
                                    var s = o[i];
                                    jw(a, s(e, t))
                                }
                                return jw(a, (n = e, r = t.dateEnv, jw(jw({
                                }, Qk(n.range, r, n.allDay)), {
                                    allDay: n.allDay
                                }))),
                                    a
                            }(e, n)), {
                                jsEvent: null,
                                view: n.viewApi || n.calendarApi.view
                            }))
                        }(a, 0, r))
                    },
                    e.prototype.unselect = function (e) {
                        var t = this.getCurrentData();
                        t.dateSelection && (this.dispatch({
                            type: 'UNSELECT_DATES'
                        }), function (e, t) {
                            t.emitter.trigger('unselect', {
                                jsEvent: e ? e.origEvent : null,
                                view: t.viewApi || t.calendarApi.view
                            })
                        }(e, t))
                    },
                    e.prototype.addEvent = function (e, t) {
                        if (e instanceof sM) {
                            var n = e._def,
                                r = e._instance;
                            return this.getCurrentData().eventStore.defs[n.defId] || (this.dispatch({
                                type: 'ADD_EVENTS',
                                eventStore: mk({
                                    def: n,
                                    instance: r
                                })
                            }), this.triggerEventAdd(e)),
                                e
                        }
                        var a,
                            i = this.getCurrentData();
                        if (t instanceof Hw) a = t.internalEventSource;
                        else if ('boolean' == typeof t) t && (a = Pb(i.eventSources)[0]);
                        else if (null != t) {
                            var o = this.getEventSourceById(t);
                            if (!o) return console.warn('Could not find an event source with ID "' + t + '"'),
                                null;
                            a = o.internalEventSource
                        }
                        var s = Pk(e, a, i, !1);
                        if (s) {
                            var u = new sM(i, s.def, s.def.recurringDef ? null : s.instance);
                            return this.dispatch({
                                type: 'ADD_EVENTS',
                                eventStore: mk(s)
                            }),
                                this.triggerEventAdd(u),
                                u
                        }
                        return null
                    },
                    e.prototype.triggerEventAdd = function (e) {
                        var t = this;
                        this.getCurrentData().emitter.trigger('eventAdd', {
                            event: e,
                            relatedEvents: [
                            ],
                            revert: function () {
                                t.dispatch({
                                    type: 'REMOVE_EVENTS',
                                    eventStore: uM(e)
                                })
                            }
                        })
                    },
                    e.prototype.getEventById = function (e) {
                        var t = this.getCurrentData(),
                            n = t.eventStore,
                            r = n.defs,
                            a = n.instances;
                        for (var i in e = String(e), r) {
                            var o = r[i];
                            if (o.publicId === e) {
                                if (o.recurringDef) return new sM(t, o, null);
                                for (var s in a) {
                                    var u = a[s];
                                    if (u.defId === o.defId) return new sM(t, o, u)
                                }
                            }
                        }
                        return null
                    },
                    e.prototype.getEvents = function () {
                        var e = this.getCurrentData();
                        return lM(e.eventStore, e)
                    },
                    e.prototype.removeAllEvents = function () {
                        this.dispatch({
                            type: 'REMOVE_ALL_EVENTS'
                        })
                    },
                    e.prototype.getEventSources = function () {
                        var e = this.getCurrentData(),
                            t = e.eventSources,
                            n = [
                            ];
                        for (var r in t) n.push(new Hw(e, t[r]));
                        return n
                    },
                    e.prototype.getEventSourceById = function (e) {
                        var t = this.getCurrentData(),
                            n = t.eventSources;
                        for (var r in e = String(e), n) if (n[r].publicId === e) return new Hw(t, n[r]);
                        return null
                    },
                    e.prototype.addEventSource = function (e) {
                        var t = this.getCurrentData();
                        if (e instanceof Hw) return t.eventSources[e.internalEventSource.sourceId] || this.dispatch({
                            type: 'ADD_EVENT_SOURCES',
                            sources: [
                                e.internalEventSource
                            ]
                        }),
                            e;
                        var n = rM(e, t);
                        return n ? (this.dispatch({
                            type: 'ADD_EVENT_SOURCES',
                            sources: [
                                n
                            ]
                        }), new Hw(t, n)) : null
                    },
                    e.prototype.removeAllEventSources = function () {
                        this.dispatch({
                            type: 'REMOVE_ALL_EVENT_SOURCES'
                        })
                    },
                    e.prototype.refetchEvents = function () {
                        this.dispatch({
                            type: 'FETCH_EVENT_SOURCES',
                            isRefetch: !0
                        })
                    },
                    e.prototype.scrollToTime = function (e) {
                        var t = Db(e);
                        t && this.trigger('_scrollRequest', {
                            time: t
                        })
                    },
                    e
            }(),
                sM = function () {
                    function e(e, t, n) {
                        this._context = e,
                            this._def = t,
                            this._instance = n || null
                    }
                    return e.prototype.setProp = function (e, t) {
                        var n,
                            r;
                        if (e in Mk) console.warn('Could not set date-related prop \'name\'. Use one of the date-related methods instead.');
                        else if ('id' === e) t = kk[e](t),
                            this.mutate({
                                standardProps: {
                                    publicId: t
                                }
                            });
                        else if (e in kk) t = kk[e](t),
                            this.mutate({
                                standardProps: (n = {
                                }, n[e] = t, n)
                            });
                        else if (e in gk) {
                            var a = gk[e](t);
                            'color' === e ? a = {
                                backgroundColor: t,
                                borderColor: t
                            }
                                : 'editable' === e ? a = {
                                    startEditable: t,
                                    durationEditable: t
                                }
                                    : ((r = {
                                    })[e] = t, a = r),
                                this.mutate({
                                    standardProps: {
                                        ui: a
                                    }
                                })
                        } else console.warn('Could not set prop \'' + e + '\'. Use setExtendedProp instead.')
                    },
                        e.prototype.setExtendedProp = function (e, t) {
                            var n;
                            this.mutate({
                                extendedProps: (n = {
                                }, n[e] = t, n)
                            })
                        },
                        e.prototype.setStart = function (e, t) {
                            void 0 === t && (t = {
                            });
                            var n = this._context.dateEnv,
                                r = n.createMarker(e);
                            if (r && this._instance) {
                                var a = jk(this._instance.range.start, r, n, t.granularity);
                                t.maintainDuration ? this.mutate({
                                    datesDelta: a
                                }) : this.mutate({
                                    startDelta: a
                                })
                            }
                        },
                        e.prototype.setEnd = function (e, t) {
                            void 0 === t && (t = {
                            });
                            var n,
                                r = this._context.dateEnv;
                            if ((null == e || (n = r.createMarker(e))) && this._instance) if (n) {
                                var a = jk(this._instance.range.end, n, r, t.granularity);
                                this.mutate({
                                    endDelta: a
                                })
                            } else this.mutate({
                                standardProps: {
                                    hasEnd: !1
                                }
                            })
                        },
                        e.prototype.setDates = function (e, t, n) {
                            void 0 === n && (n = {
                            });
                            var r,
                                a,
                                i,
                                o = this._context.dateEnv,
                                s = {
                                    allDay: n.allDay
                                },
                                u = o.createMarker(e);
                            if (u && (null == t || (r = o.createMarker(t))) && this._instance) {
                                var l = this._instance.range;
                                !0 === n.allDay && (l = Ck(l));
                                var d = jk(l.start, u, o, n.granularity);
                                if (r) {
                                    var c = jk(l.end, r, o, n.granularity);
                                    i = c,
                                        (a = d).years === i.years && a.months === i.months && a.days === i.days && a.milliseconds === i.milliseconds ? this.mutate({
                                            datesDelta: d,
                                            standardProps: s
                                        }) : this.mutate({
                                            startDelta: d,
                                            endDelta: c,
                                            standardProps: s
                                        })
                                } else s.hasEnd = !1,
                                    this.mutate({
                                        datesDelta: d,
                                        standardProps: s
                                    })
                            }
                        },
                        e.prototype.moveStart = function (e) {
                            var t = Db(e);
                            t && this.mutate({
                                startDelta: t
                            })
                        },
                        e.prototype.moveEnd = function (e) {
                            var t = Db(e);
                            t && this.mutate({
                                endDelta: t
                            })
                        },
                        e.prototype.moveDates = function (e) {
                            var t = Db(e);
                            t && this.mutate({
                                datesDelta: t
                            })
                        },
                        e.prototype.setAllDay = function (e, t) {
                            void 0 === t && (t = {
                            });
                            var n = {
                                allDay: e
                            },
                                r = t.maintainDuration;
                            null == r && (r = this._context.options.allDayMaintainDuration),
                                this._def.allDay !== e && (n.hasEnd = r),
                                this.mutate({
                                    standardProps: n
                                })
                        },
                        e.prototype.formatRange = function (e) {
                            var t = this._context.dateEnv,
                                n = this._instance,
                                r = ek(e);
                            return this._def.hasEnd ? t.formatRange(n.range.start, n.range.end, r, {
                                forcedStartTzo: n.forcedStartTzo,
                                forcedEndTzo: n.forcedEndTzo
                            }) : t.format(n.range.start, r, {
                                forcedTzo: n.forcedStartTzo
                            })
                        },
                        e.prototype.mutate = function (t) {
                            var n = this._instance;
                            if (n) {
                                var r = this._def,
                                    a = this._context,
                                    i = a.getCurrentData().eventStore,
                                    o = function (e, t) {
                                        var n = e.instances[t];
                                        if (n) {
                                            var r = e.defs[n.defId],
                                                a = hk(e, (function (e) {
                                                    return t = r,
                                                        n = e,
                                                        Boolean(t.groupId && t.groupId === n.groupId);
                                                    var t,
                                                        n
                                                }));
                                            return a.defs[r.defId] = r,
                                                a.instances[n.instanceId] = n,
                                                a
                                        }
                                        return {
                                            defs: {
                                            },
                                            instances: {
                                            }
                                        }
                                    }(i, n.instanceId);
                                o = function (e, t, n, r) {
                                    var a = Hk(e.defs, {
                                        '': {
                                            display: '',
                                            startEditable: !0,
                                            durationEditable: !0,
                                            constraints: [
                                            ],
                                            overlap: null,
                                            allows: [
                                            ],
                                            backgroundColor: '',
                                            borderColor: '',
                                            textColor: '',
                                            classNames: [
                                            ]
                                        }
                                    }),
                                        i = {
                                            defs: {
                                            },
                                            instances: {
                                            }
                                        };
                                    for (var o in e.defs) {
                                        var s = e.defs[o];
                                        i.defs[o] = Zk(s, a[o], n, r)
                                    }
                                    for (var u in e.instances) {
                                        var l = e.instances[u];
                                        s = i.defs[l.defId],
                                            i.instances[u] = eM(l, s, a[l.defId], n, r)
                                    }
                                    return i
                                }(o, 0, t, a);
                                var s = new e(a, r, n);
                                this._def = o.defs[r.defId],
                                    this._instance = o.instances[n.instanceId],
                                    a.dispatch({
                                        type: 'MERGE_EVENTS',
                                        eventStore: o
                                    }),
                                    a.emitter.trigger('eventChange', {
                                        oldEvent: s,
                                        event: this,
                                        relatedEvents: lM(o, a, n),
                                        revert: function () {
                                            a.dispatch({
                                                type: 'RESET_EVENTS',
                                                eventStore: i
                                            })
                                        }
                                    })
                            }
                        },
                        e.prototype.remove = function () {
                            var e = this._context,
                                t = uM(this);
                            e.dispatch({
                                type: 'REMOVE_EVENTS',
                                eventStore: t
                            }),
                                e.emitter.trigger('eventRemove', {
                                    event: this,
                                    relatedEvents: [
                                    ],
                                    revert: function () {
                                        e.dispatch({
                                            type: 'MERGE_EVENTS',
                                            eventStore: t
                                        })
                                    }
                                })
                        },
                        Object.defineProperty(e.prototype, 'source', {
                            get: function () {
                                var e = this._def.sourceId;
                                return e ? new Hw(this._context, this._context.getCurrentData().eventSources[e]) : null
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'start', {
                            get: function () {
                                return this._instance ? this._context.dateEnv.toDate(this._instance.range.start) : null
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'end', {
                            get: function () {
                                return this._instance && this._def.hasEnd ? this._context.dateEnv.toDate(this._instance.range.end) : null
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'startStr', {
                            get: function () {
                                var e = this._instance;
                                return e ? this._context.dateEnv.formatIso(e.range.start, {
                                    omitTime: this._def.allDay,
                                    forcedTzo: e.forcedStartTzo
                                }) : ''
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'endStr', {
                            get: function () {
                                var e = this._instance;
                                return e && this._def.hasEnd ? this._context.dateEnv.formatIso(e.range.end, {
                                    omitTime: this._def.allDay,
                                    forcedTzo: e.forcedEndTzo
                                }) : ''
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'id', {
                            get: function () {
                                return this._def.publicId
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'groupId', {
                            get: function () {
                                return this._def.groupId
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'allDay', {
                            get: function () {
                                return this._def.allDay
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'title', {
                            get: function () {
                                return this._def.title
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'url', {
                            get: function () {
                                return this._def.url
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'display', {
                            get: function () {
                                return this._def.ui.display || 'auto'
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'startEditable', {
                            get: function () {
                                return this._def.ui.startEditable
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'durationEditable', {
                            get: function () {
                                return this._def.ui.durationEditable
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'constraint', {
                            get: function () {
                                return this._def.ui.constraints[0] || null
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'overlap', {
                            get: function () {
                                return this._def.ui.overlap
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'allow', {
                            get: function () {
                                return this._def.ui.allows[0] || null
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'backgroundColor', {
                            get: function () {
                                return this._def.ui.backgroundColor
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'borderColor', {
                            get: function () {
                                return this._def.ui.borderColor
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'textColor', {
                            get: function () {
                                return this._def.ui.textColor
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'classNames', {
                            get: function () {
                                return this._def.ui.classNames
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        Object.defineProperty(e.prototype, 'extendedProps', {
                            get: function () {
                                return this._def.extendedProps
                            },
                            enumerable: !1,
                            configurable: !0
                        }),
                        e.prototype.toPlainObject = function (e) {
                            void 0 === e && (e = {
                            });
                            var t = this._def,
                                n = t.ui,
                                r = this.startStr,
                                a = this.endStr,
                                i = {
                                };
                            return t.title && (i.title = t.title),
                                r && (i.start = r),
                                a && (i.end = a),
                                t.publicId && (i.id = t.publicId),
                                t.groupId && (i.groupId = t.groupId),
                                t.url && (i.url = t.url),
                                n.display && 'auto' !== n.display && (i.display = n.display),
                                e.collapseColor && n.backgroundColor && n.backgroundColor === n.borderColor ? i.color = n.backgroundColor : (n.backgroundColor && (i.backgroundColor = n.backgroundColor), n.borderColor && (i.borderColor = n.borderColor)),
                                n.textColor && (i.textColor = n.textColor),
                                n.classNames.length && (i.classNames = n.classNames),
                                Object.keys(t.extendedProps).length && (e.collapseExtendedProps ? jw(i, t.extendedProps) : i.extendedProps = t.extendedProps),
                                i
                        },
                        e.prototype.toJSON = function () {
                            return this.toPlainObject()
                        },
                        e
                }();
            function uM(e) {
                var t,
                    n,
                    r = e._def,
                    a = e._instance;
                return {
                    defs: (t = {
                    }, t[r.defId] = r, t),
                    instances: a ? (n = {
                    }, n[a.instanceId] = a, n) : {
                    }
                }
            }
            function lM(e, t, n) {
                var r = e.defs,
                    a = e.instances,
                    i = [
                    ],
                    o = n ? n.instanceId : '';
                for (var s in a) {
                    var u = a[s],
                        l = r[u.defId];
                    u.instanceId !== o && i.push(new sM(t, l, u))
                }
                return i
            }
            var dM,
                cM = {
                };
            dM = function () {
                function e() {
                }
                return e.prototype.getMarkerYear = function (e) {
                    return e.getUTCFullYear()
                },
                    e.prototype.getMarkerMonth = function (e) {
                        return e.getUTCMonth()
                    },
                    e.prototype.getMarkerDay = function (e) {
                        return e.getUTCDate()
                    },
                    e.prototype.arrayToMarker = function (e) {
                        return pb(e)
                    },
                    e.prototype.markerToArray = function (e) {
                        return hb(e)
                    },
                    e
            }(),
                cM.gregory = dM;
            var mM = /^\s*(\d{4})(-?(\d{2})(-?(\d{2})([T ](\d{2}):?(\d{2})(:?(\d{2})(\.(\d+))?)?(Z|(([-+])(\d{2})(:?(\d{2}))?))?)?)?)?$/,
                fM = function () {
                    function e(e) {
                        var t,
                            n = this.timeZone = e.timeZone,
                            r = 'local' !== n && 'UTC' !== n;
                        e.namedTimeZoneImpl && r && (this.namedTimeZoneImpl = new e.namedTimeZoneImpl(n)),
                            this.canComputeOffset = Boolean(!r || this.namedTimeZoneImpl),
                            this.calendarSystem = (t = e.calendarSystem, new cM[t]),
                            this.locale = e.locale,
                            this.weekDow = e.locale.week.dow,
                            this.weekDoy = e.locale.week.doy,
                            'ISO' === e.weekNumberCalculation && (this.weekDow = 1, this.weekDoy = 4),
                            'number' == typeof e.firstDay && (this.weekDow = e.firstDay),
                            'function' == typeof e.weekNumberCalculation && (this.weekNumberFunc = e.weekNumberCalculation),
                            this.weekText = null != e.weekText ? e.weekText : e.locale.options.weekText,
                            this.weekTextLong = (null != e.weekTextLong ? e.weekTextLong : e.locale.options.weekTextLong) || this.weekText,
                            this.cmdFormatter = e.cmdFormatter,
                            this.defaultSeparator = e.defaultSeparator
                    }
                    return e.prototype.createMarker = function (e) {
                        var t = this.createMarkerMeta(e);
                        return null === t ? null : t.marker
                    },
                        e.prototype.createNowMarker = function () {
                            return this.canComputeOffset ? this.timestampToMarker((new Date).valueOf()) : pb(mb(new Date))
                        },
                        e.prototype.createMarkerMeta = function (e) {
                            if ('string' == typeof e) return this.parse(e);
                            var t = null;
                            return 'number' == typeof e ? t = this.timestampToMarker(e) : e instanceof Date ? (e = e.valueOf(), isNaN(e) || (t = this.timestampToMarker(e))) : Array.isArray(e) && (t = pb(e)),
                                null !== t && gb(t) ? {
                                    marker: t,
                                    isTimeUnspecified: !1,
                                    forcedTzo: null
                                }
                                    : null
                        },
                        e.prototype.parse = function (e) {
                            var t = function (e) {
                                var t = mM.exec(e);
                                if (t) {
                                    var n = new Date(Date.UTC(Number(t[1]), t[3] ? Number(t[3]) - 1 : 0, Number(t[5] || 1), Number(t[7] || 0), Number(t[8] || 0), Number(t[10] || 0), t[12] ? 1000 * Number('0.' + t[12]) : 0));
                                    if (gb(n)) {
                                        var r = null;
                                        return t[13] && (r = ('-' === t[15] ? - 1 : 1) * (60 * Number(t[16] || 0) + Number(t[18] || 0))),
                                        {
                                            marker: n,
                                            isTimeUnspecified: !t[6],
                                            timeZoneOffset: r
                                        }
                                    }
                                }
                                return null
                            }(e);
                            if (null === t) return null;
                            var n = t.marker,
                                r = null;
                            return null !== t.timeZoneOffset && (this.canComputeOffset ? n = this.timestampToMarker(n.valueOf() - 60 * t.timeZoneOffset * 1000) : r = t.timeZoneOffset),
                            {
                                marker: n,
                                isTimeUnspecified: t.isTimeUnspecified,
                                forcedTzo: r
                            }
                        },
                        e.prototype.getYear = function (e) {
                            return this.calendarSystem.getMarkerYear(e)
                        },
                        e.prototype.getMonth = function (e) {
                            return this.calendarSystem.getMarkerMonth(e)
                        },
                        e.prototype.add = function (e, t) {
                            var n = this.calendarSystem.markerToArray(e);
                            return n[0] += t.years,
                                n[1] += t.months,
                                n[2] += t.days,
                                n[6] += t.milliseconds,
                                this.calendarSystem.arrayToMarker(n)
                        },
                        e.prototype.subtract = function (e, t) {
                            var n = this.calendarSystem.markerToArray(e);
                            return n[0] -= t.years,
                                n[1] -= t.months,
                                n[2] -= t.days,
                                n[6] -= t.milliseconds,
                                this.calendarSystem.arrayToMarker(n)
                        },
                        e.prototype.addYears = function (e, t) {
                            var n = this.calendarSystem.markerToArray(e);
                            return n[0] += t,
                                this.calendarSystem.arrayToMarker(n)
                        },
                        e.prototype.addMonths = function (e, t) {
                            var n = this.calendarSystem.markerToArray(e);
                            return n[1] += t,
                                this.calendarSystem.arrayToMarker(n)
                        },
                        e.prototype.diffWholeYears = function (e, t) {
                            var n = this.calendarSystem;
                            return vb(e) === vb(t) && n.getMarkerDay(e) === n.getMarkerDay(t) && n.getMarkerMonth(e) === n.getMarkerMonth(t) ? n.getMarkerYear(t) - n.getMarkerYear(e) : null
                        },
                        e.prototype.diffWholeMonths = function (e, t) {
                            var n = this.calendarSystem;
                            return vb(e) === vb(t) && n.getMarkerDay(e) === n.getMarkerDay(t) ? n.getMarkerMonth(t) - n.getMarkerMonth(e) + 12 * (n.getMarkerYear(t) - n.getMarkerYear(e)) : null
                        },
                        e.prototype.greatestWholeUnit = function (e, t) {
                            var n = this.diffWholeYears(e, t);
                            return null !== n ? {
                                unit: 'year',
                                value: n
                            }
                                : null !== (n = this.diffWholeMonths(e, t)) ? {
                                    unit: 'month',
                                    value: n
                                }
                                    : (n = function (e, t) {
                                        var n = ub(e, t);
                                        return null !== n && n % 7 == 0 ? n / 7 : null
                                    }(e, t), null !== n ? {
                                        unit: 'week',
                                        value: n
                                    }
                                            : null !== (n = ub(e, t)) ? {
                                                unit: 'day',
                                                value: n
                                            }
                                                : (n = function (e, t) {
                                                    return (t.valueOf() - e.valueOf()) / 3600000
                                                }(e, t), tb(n) ? {
                                                    unit: 'hour',
                                                    value: n
                                                }
                                                        : (n = function (e, t) {
                                                            return (t.valueOf() - e.valueOf()) / 60000
                                                        }(e, t), tb(n) ? {
                                                            unit: 'minute',
                                                            value: n
                                                        }
                                                                : (n = function (e, t) {
                                                                    return (t.valueOf() - e.valueOf()) / 1000
                                                                }(e, t), tb(n) ? {
                                                                    unit: 'second',
                                                                    value: n
                                                                }
                                                                        : {
                                                                            unit: 'millisecond',
                                                                            value: t.valueOf() - e.valueOf()
                                                                        }))))
                        },
                        e.prototype.countDurationsBetween = function (e, t, n) {
                            var r;
                            return n.years && null !== (r = this.diffWholeYears(e, t)) ? r / (Ib(n) / 365) : n.months && null !== (r = this.diffWholeMonths(e, t)) ? r / (Ib(n) / 30) : n.days && null !== (r = ub(e, t)) ? r / Ib(n) : (t.valueOf() - e.valueOf()) / zb(n)
                        },
                        e.prototype.startOf = function (e, t) {
                            return 'year' === t ? this.startOfYear(e) : 'month' === t ? this.startOfMonth(e) : 'week' === t ? this.startOfWeek(e) : 'day' === t ? lb(e) : 'hour' === t ? function (e) {
                                return pb([e.getUTCFullYear(),
                                e.getUTCMonth(),
                                e.getUTCDate(),
                                e.getUTCHours()])
                            }(e) : 'minute' === t ? function (e) {
                                return pb([e.getUTCFullYear(),
                                e.getUTCMonth(),
                                e.getUTCDate(),
                                e.getUTCHours(),
                                e.getUTCMinutes()])
                            }(e) : 'second' === t ? function (e) {
                                return pb([e.getUTCFullYear(),
                                e.getUTCMonth(),
                                e.getUTCDate(),
                                e.getUTCHours(),
                                e.getUTCMinutes(),
                                e.getUTCSeconds()])
                            }(e) : null
                        },
                        e.prototype.startOfYear = function (e) {
                            return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(e)])
                        },
                        e.prototype.startOfMonth = function (e) {
                            return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(e),
                            this.calendarSystem.getMarkerMonth(e)])
                        },
                        e.prototype.startOfWeek = function (e) {
                            return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(e),
                            this.calendarSystem.getMarkerMonth(e),
                            e.getUTCDate() - (e.getUTCDay() - this.weekDow + 7) % 7])
                        },
                        e.prototype.computeWeekNumber = function (e) {
                            return this.weekNumberFunc ? this.weekNumberFunc(this.toDate(e)) : function (e, t, n) {
                                var r = e.getUTCFullYear(),
                                    a = db(e, r, t, n);
                                if (a < 1) return db(e, r - 1, t, n);
                                var i = db(e, r + 1, t, n);
                                return i >= 1 ? Math.min(a, i) : a
                            }(e, this.weekDow, this.weekDoy)
                        },
                        e.prototype.format = function (e, t, n) {
                            return void 0 === n && (n = {
                            }),
                                t.format({
                                    marker: e,
                                    timeZoneOffset: null != n.forcedTzo ? n.forcedTzo : this.offsetForMarker(e)
                                }, this)
                        },
                        e.prototype.formatRange = function (e, t, n, r) {
                            return void 0 === r && (r = {
                            }),
                                r.isEndExclusive && (t = ob(t, - 1)),
                                n.formatRange({
                                    marker: e,
                                    timeZoneOffset: null != r.forcedStartTzo ? r.forcedStartTzo : this.offsetForMarker(e)
                                }, {
                                    marker: t,
                                    timeZoneOffset: null != r.forcedEndTzo ? r.forcedEndTzo : this.offsetForMarker(t)
                                }, this, r.defaultSeparator)
                        },
                        e.prototype.formatIso = function (e, t) {
                            void 0 === t && (t = {
                            });
                            var n = null;
                            return t.omitTimeZoneOffset || (n = null != t.forcedTzo ? t.forcedTzo : this.offsetForMarker(e)),
                                function (e, t, n) {
                                    void 0 === n && (n = !1);
                                    var r = e.toISOString();
                                    return r = r.replace('.000', ''),
                                        n && (r = r.replace('T00:00:00Z', '')),
                                        r.length > 10 && (null == t ? r = r.replace('Z', '') : 0 !== t && (r = r.replace('Z', Ob(t, !0)))),
                                        r
                                }(e, n, t.omitTime)
                        },
                        e.prototype.timestampToMarker = function (e) {
                            return 'local' === this.timeZone ? pb(mb(new Date(e))) : 'UTC' !== this.timeZone && this.namedTimeZoneImpl ? pb(this.namedTimeZoneImpl.timestampToArray(e)) : new Date(e)
                        },
                        e.prototype.offsetForMarker = function (e) {
                            return 'local' === this.timeZone ? - fb(hb(e)).getTimezoneOffset() : 'UTC' === this.timeZone ? 0 : this.namedTimeZoneImpl ? this.namedTimeZoneImpl.offsetForArray(hb(e)) : null
                        },
                        e.prototype.toDate = function (e, t) {
                            return 'local' === this.timeZone ? fb(hb(e)) : 'UTC' === this.timeZone ? new Date(e.valueOf()) : this.namedTimeZoneImpl ? new Date(e.valueOf() - 1000 * this.namedTimeZoneImpl.offsetForArray(hb(e)) * 60) : new Date(e.valueOf() - (t || 0))
                        },
                        e
                }(),
                hM = [
                ],
                pM = {
                    code: 'en',
                    week: {
                        dow: 0,
                        doy: 4
                    },
                    direction: 'ltr',
                    buttonText: {
                        prev: 'prev',
                        next: 'next',
                        prevYear: 'prev year',
                        nextYear: 'next year',
                        year: 'year',
                        today: 'today',
                        month: 'month',
                        week: 'week',
                        day: 'day',
                        list: 'list'
                    },
                    weekText: 'W',
                    weekTextLong: 'Week',
                    closeHint: 'Close',
                    timeHint: 'Time',
                    eventHint: 'Event',
                    allDayText: 'all-day',
                    moreLinkText: 'more',
                    noEventsText: 'No events to display'
                },
                gM = jw(jw({
                }, pM), {
                    buttonHints: {
                        prev: 'Previous $0',
                        next: 'Next $0',
                        today: function (e, t) {
                            return 'day' === t ? 'Today' : 'This ' + e
                        }
                    },
                    viewHint: '$0 view',
                    navLinkHint: 'Go to $0',
                    moreLinkHint: function (e) {
                        return 'Show ' + e + ' more event' + (1 === e ? '' : 's')
                    }
                });
            function vM(e) {
                for (var t = e.length > 0 ? e[0].code : 'en', n = hM.concat(e), r = {
                    en: gM
                }, a = 0, i = n; a < i.length; a++) {
                    var o = i[a];
                    r[o.code] = o
                }
                return {
                    map: r,
                    defaultCode: t
                }
            }
            function yM(e, t) {
                return 'object' != typeof e || Array.isArray(e) ? function (e, t) {
                    var n = [
                    ].concat(e || [
                    ]),
                        r = function (e, t) {
                            for (var n = 0; n < e.length; n += 1) for (var r = e[n].toLocaleLowerCase().split('-'), a = r.length; a > 0; a -= 1) {
                                var i = r.slice(0, a).join('-');
                                if (t[i]) return t[i]
                            }
                            return null
                        }(n, t) || gM;
                    return wM(e, n, r)
                }(e, t) : wM(e.code, [
                    e.code
                ], e)
            }
            function wM(e, t, n) {
                var r = bb([pM,
                    n], [
                    'buttonText'
                ]);
                delete r.code;
                var a = r.week;
                return delete r.week,
                {
                    codeArg: e,
                    codes: t,
                    week: a,
                    simpleNumberFormat: new Intl.NumberFormat(e),
                    options: r
                }
            }
            var bM,
                kM = {
                    startTime: '09:00',
                    endTime: '17:00',
                    daysOfWeek: [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    display: 'inverse-background',
                    classNames: 'fc-non-business',
                    groupId: '_businessHours'
                };
            function MM() {
                return null == bM && (bM = function () {
                    if ('undefined' == typeof document) return !0;
                    var e = document.createElement('div');
                    e.style.position = 'absolute',
                        e.style.top = '0px',
                        e.style.left = '0px',
                        e.innerHTML = '<table><tr><td><div></div></td></tr></table>',
                        e.querySelector('table').style.height = '100px',
                        e.querySelector('div').style.height = '100%',
                        document.body.appendChild(e);
                    var t = e.querySelector('div').offsetHeight > 0;
                    return document.body.removeChild(e),
                        t
                }()),
                    bM
            }
            var EM = {
                defs: {
                },
                instances: {
                }
            };
            function PM(e, t, n) {
                var r = [
                ];
                e && r.push(e),
                    t && r.push(t);
                var a = {
                    '': wk(r)
                };
                return n && jw(a, n),
                    a
            }
            function xM(e, t, n, r) {
                return {
                    dow: e.getUTCDay(),
                    isDisabled: Boolean(r && !zk(r.activeRange, e)),
                    isOther: Boolean(r && !zk(r.currentRange, e)),
                    isToday: Boolean(t && zk(t, e)),
                    isPast: Boolean(n ? e < n : !!t && e < t.start),
                    isFuture: Boolean(n ? e > n : !!t && e >= t.end)
                }
            }
            function SM(e, t) {
                var n = [
                    'fc-day',
                    'fc-day-' + rb[e.dow]
                ];
                return e.isDisabled ? n.push('fc-day-disabled') : (e.isToday && (n.push('fc-day-today'), n.push(t.getClass('today'))), e.isPast && n.push('fc-day-past'), e.isFuture && n.push('fc-day-future'), e.isOther && n.push('fc-day-other')),
                    n
            }
            !function () {
                function e() {
                    this.getKeysForEventDefs = _b(this._getKeysForEventDefs),
                        this.splitDateSelection = _b(this._splitDateSpan),
                        this.splitEventStore = _b(this._splitEventStore),
                        this.splitIndividualUi = _b(this._splitIndividualUi),
                        this.splitEventDrag = _b(this._splitInteraction),
                        this.splitEventResize = _b(this._splitInteraction),
                        this.eventUiBuilders = {
                        }
                }
                e.prototype.splitProps = function (e) {
                    var t = this,
                        n = this.getKeyInfo(e),
                        r = this.getKeysForEventDefs(e.eventStore),
                        a = this.splitDateSelection(e.dateSelection),
                        i = this.splitIndividualUi(e.eventUiBases, r),
                        o = this.splitEventStore(e.eventStore, r),
                        s = this.splitEventDrag(e.eventDrag),
                        u = this.splitEventResize(e.eventResize),
                        l = {
                        };
                    for (var d in this.eventUiBuilders = Mb(n, (function (e, n) {
                        return t.eventUiBuilders[n] || _b(PM)
                    })), n) {
                        var c = n[d],
                            m = o[d] || EM,
                            f = this.eventUiBuilders[d];
                        l[d] = {
                            businessHours: c.businessHours || e.businessHours,
                            dateSelection: a[d] || null,
                            eventStore: m,
                            eventUiBases: f(e.eventUiBases[''], c.ui, i[d]),
                            eventSelection: m.instances[e.eventSelection] ? e.eventSelection : '',
                            eventDrag: s[d] || null,
                            eventResize: u[d] || null
                        }
                    }
                    return l
                },
                    e.prototype._splitDateSpan = function (e) {
                        var t = {
                        };
                        if (e) for (var n = 0, r = this.getKeysForDateSpan(e); n < r.length; n++) t[r[n]] = e;
                        return t
                    },
                    e.prototype._getKeysForEventDefs = function (e) {
                        var t = this;
                        return Mb(e.defs, (function (e) {
                            return t.getKeysForEventDef(e)
                        }))
                    },
                    e.prototype._splitEventStore = function (e, t) {
                        var n = e.defs,
                            r = e.instances,
                            a = {
                            };
                        for (var i in n) for (var o = 0, s = t[i]; o < s.length; o++) a[m = s[o]] || (a[m] = {
                            defs: {
                            },
                            instances: {
                            }
                        }),
                            a[m].defs[i] = n[i];
                        for (var u in r) for (var l = r[u], d = 0, c = t[l.defId]; d < c.length; d++) {
                            var m;
                            a[m = c[d]] && (a[m].instances[u] = l)
                        }
                        return a
                    },
                    e.prototype._splitIndividualUi = function (e, t) {
                        var n = {
                        };
                        for (var r in e) if (r) for (var a = 0, i = t[r]; a < i.length; a++) {
                            var o = i[a];
                            n[o] || (n[o] = {
                            }),
                                n[o][r] = e[r]
                        }
                        return n
                    },
                    e.prototype._splitInteraction = function (e) {
                        var t = {
                        };
                        if (e) {
                            var n = this._splitEventStore(e.affectedEvents, this._getKeysForEventDefs(e.affectedEvents)),
                                r = this._getKeysForEventDefs(e.mutatedEvents),
                                a = this._splitEventStore(e.mutatedEvents, r),
                                i = function (r) {
                                    t[r] || (t[r] = {
                                        affectedEvents: n[r] || EM,
                                        mutatedEvents: a[r] || EM,
                                        isEvent: e.isEvent
                                    })
                                };
                            for (var o in n) i(o);
                            for (var o in a) i(o)
                        }
                        return t
                    }
            }();
            var TM,
                CM = ek({
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                }),
                WM = ek({
                    week: 'long'
                });
            function jM(e, t, n, r) {
                void 0 === n && (n = 'day'),
                    void 0 === r && (r = !0);
                var a = e.dateEnv,
                    i = e.options,
                    o = e.calendarApi,
                    s = a.format(t, 'week' === n ? WM : CM);
                if (i.navLinks) {
                    var u = a.toDate(t),
                        l = function (e) {
                            var r = 'day' === n ? i.navLinkDayClick : 'week' === n ? i.navLinkWeekClick : null;
                            'function' == typeof r ? r.call(o, a.toDate(t), e) : ('string' == typeof r && (n = r), o.zoomTo(t, n))
                        };
                    return jw({
                        title: eb(i.navLinkHint, [
                            s,
                            u
                        ], s),
                        'data-navlink': ''
                    }, r ? Bw(l) : {
                        onClick: l
                    })
                }
                return {
                    'aria-label': s
                }
            }
            var DM = function () {
                function e() {
                    this.handlers = {
                    },
                        this.thisContext = null
                }
                return e.prototype.setThisContext = function (e) {
                    this.thisContext = e
                },
                    e.prototype.setOptions = function (e) {
                        this.options = e
                    },
                    e.prototype.on = function (e, t) {
                        !function (e, t, n) {
                            (e[t] || (e[t] = [
                            ])).push(n)
                        }(this.handlers, e, t)
                    },
                    e.prototype.off = function (e, t) {
                        !function (e, t, n) {
                            n ? e[t] && (e[t] = e[t].filter((function (e) {
                                return e !== n
                            }))) : delete e[t]
                        }(this.handlers, e, t)
                    },
                    e.prototype.trigger = function (e) {
                        for (var t = [
                        ], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                        for (var r = this.handlers[e] || [
                        ], a = this.options && this.options[e], i = [
                        ].concat(a || [
                        ], r), o = 0, s = i; o < s.length; o++) {
                            var u = s[o];
                            u.apply(this.thisContext, t)
                        }
                    },
                    e.prototype.hasHandlers = function (e) {
                        return Boolean(this.handlers[e] && this.handlers[e].length || this.options && this.options[e])
                    },
                    e
            }(),
                NM = function () {
                    function e(e, t, n, r) {
                        this.els = t;
                        var a = this.originClientRect = e.getBoundingClientRect();
                        n && this.buildElHorizontals(a.left),
                            r && this.buildElVerticals(a.top)
                    }
                    return e.prototype.buildElHorizontals = function (e) {
                        for (var t = [
                        ], n = [
                        ], r = 0, a = this.els; r < a.length; r++) {
                            var i = a[r].getBoundingClientRect();
                            t.push(i.left - e),
                                n.push(i.right - e)
                        }
                        this.lefts = t,
                            this.rights = n
                    },
                        e.prototype.buildElVerticals = function (e) {
                            for (var t = [
                            ], n = [
                            ], r = 0, a = this.els; r < a.length; r++) {
                                var i = a[r].getBoundingClientRect();
                                t.push(i.top - e),
                                    n.push(i.bottom - e)
                            }
                            this.tops = t,
                                this.bottoms = n
                        },
                        e.prototype.leftToIndex = function (e) {
                            var t,
                                n = this.lefts,
                                r = this.rights,
                                a = n.length;
                            for (t = 0; t < a; t += 1) if (e >= n[t] && e < r[t]) return t
                        },
                        e.prototype.topToIndex = function (e) {
                            var t,
                                n = this.tops,
                                r = this.bottoms,
                                a = n.length;
                            for (t = 0; t < a; t += 1) if (e >= n[t] && e < r[t]) return t
                        },
                        e.prototype.getWidth = function (e) {
                            return this.rights[e] - this.lefts[e]
                        },
                        e.prototype.getHeight = function (e) {
                            return this.bottoms[e] - this.tops[e]
                        },
                        e
                }(),
                IM = function () {
                    function e() {
                    }
                    return e.prototype.getMaxScrollTop = function () {
                        return this.getScrollHeight() - this.getClientHeight()
                    },
                        e.prototype.getMaxScrollLeft = function () {
                            return this.getScrollWidth() - this.getClientWidth()
                        },
                        e.prototype.canScrollVertically = function () {
                            return this.getMaxScrollTop() > 0
                        },
                        e.prototype.canScrollHorizontally = function () {
                            return this.getMaxScrollLeft() > 0
                        },
                        e.prototype.canScrollUp = function () {
                            return this.getScrollTop() > 0
                        },
                        e.prototype.canScrollDown = function () {
                            return this.getScrollTop() < this.getMaxScrollTop()
                        },
                        e.prototype.canScrollLeft = function () {
                            return this.getScrollLeft() > 0
                        },
                        e.prototype.canScrollRight = function () {
                            return this.getScrollLeft() < this.getMaxScrollLeft()
                        },
                        e
                }(),
                zM = (function (e) {
                    function t(t) {
                        var n = e.call(this) || this;
                        return n.el = t,
                            n
                    }
                    Ww(t, e),
                        t.prototype.getScrollTop = function () {
                            return this.el.scrollTop
                        },
                        t.prototype.getScrollLeft = function () {
                            return this.el.scrollLeft
                        },
                        t.prototype.setScrollTop = function (e) {
                            this.el.scrollTop = e
                        },
                        t.prototype.setScrollLeft = function (e) {
                            this.el.scrollLeft = e
                        },
                        t.prototype.getScrollWidth = function () {
                            return this.el.scrollWidth
                        },
                        t.prototype.getScrollHeight = function () {
                            return this.el.scrollHeight
                        },
                        t.prototype.getClientHeight = function () {
                            return this.el.clientHeight
                        },
                        t.prototype.getClientWidth = function () {
                            return this.el.clientWidth
                        }
                }(IM), function (e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    Ww(t, e),
                        t.prototype.getScrollTop = function () {
                            return window.pageYOffset
                        },
                        t.prototype.getScrollLeft = function () {
                            return window.pageXOffset
                        },
                        t.prototype.setScrollTop = function (e) {
                            window.scroll(window.pageXOffset, e)
                        },
                        t.prototype.setScrollLeft = function (e) {
                            window.scroll(e, window.pageYOffset)
                        },
                        t.prototype.getScrollWidth = function () {
                            return document.documentElement.scrollWidth
                        },
                        t.prototype.getScrollHeight = function () {
                            return document.documentElement.scrollHeight
                        },
                        t.prototype.getClientHeight = function () {
                            return document.documentElement.clientHeight
                        },
                        t.prototype.getClientWidth = function () {
                            return document.documentElement.clientWidth
                        }
                }(IM), function () {
                    function e(e) {
                        this.iconOverrideOption && this.setIconOverride(e[this.iconOverrideOption])
                    }
                    return e.prototype.setIconOverride = function (e) {
                        var t,
                            n;
                        if ('object' == typeof e && e) {
                            for (n in t = jw({
                            }, this.iconClasses), e) t[n] = this.applyIconOverridePrefix(e[n]);
                            this.iconClasses = t
                        } else !1 === e && (this.iconClasses = {
                        })
                    },
                        e.prototype.applyIconOverridePrefix = function (e) {
                            var t = this.iconOverridePrefix;
                            return t && 0 !== e.indexOf(t) && (e = t + e),
                                e
                        },
                        e.prototype.getClass = function (e) {
                            return this.classes[e] || ''
                        },
                        e.prototype.getIconClass = function (e, t) {
                            var n;
                            return (n = t && this.rtlIconClasses && this.rtlIconClasses[e] || this.iconClasses[e]) ? this.baseIconClass + ' ' + n : ''
                        },
                        e.prototype.getCustomButtonIconClass = function (e) {
                            var t;
                            return this.iconOverrideCustomButtonOption && (t = e[this.iconOverrideCustomButtonOption]) ? this.baseIconClass + ' ' + this.applyIconOverridePrefix(t) : ''
                        },
                        e
                }());
            zM.prototype.classes = {
            },
                zM.prototype.iconClasses = {
                },
                zM.prototype.baseIconClass = '',
                zM.prototype.iconOverridePrefix = '';
            var RM = function () {
                function e(e, t, n, r) {
                    var a = this;
                    this.execFunc = e,
                        this.emitter = t,
                        this.scrollTime = n,
                        this.scrollTimeReset = r,
                        this.handleScrollRequest = function (e) {
                            a.queuedRequest = jw({
                            }, a.queuedRequest || {
                            }, e),
                                a.drain()
                        },
                        t.on('_scrollRequest', this.handleScrollRequest),
                        this.fireInitialScroll()
                }
                return e.prototype.detach = function () {
                    this.emitter.off('_scrollRequest', this.handleScrollRequest)
                },
                    e.prototype.update = function (e) {
                        e && this.scrollTimeReset ? this.fireInitialScroll() : this.drain()
                    },
                    e.prototype.fireInitialScroll = function () {
                        this.handleScrollRequest({
                            time: this.scrollTime
                        })
                    },
                    e.prototype.drain = function () {
                        this.queuedRequest && this.execFunc(this.queuedRequest) && (this.queuedRequest = null)
                    },
                    e
            }(),
                AM = Aw({
                });
            function OM(e, t, n, r, a, i, o, s, u, l, d, c, m) {
                return {
                    dateEnv: a,
                    options: n,
                    pluginHooks: o,
                    emitter: l,
                    dispatch: s,
                    getCurrentData: u,
                    calendarApi: d,
                    viewSpec: e,
                    viewApi: t,
                    dateProfileGenerator: r,
                    theme: i,
                    isRtl: 'rtl' === n.direction,
                    addResizeHandler: function (e) {
                        l.on('_resize', e)
                    },
                    removeResizeHandler: function (e) {
                        l.off('_resize', e)
                    },
                    createScrollResponder: function (e) {
                        return new RM(e, l, Db(n.scrollTime), n.scrollTimeReset)
                    },
                    registerInteractiveComponent: c,
                    unregisterInteractiveComponent: m
                }
            }
            var HM = function (e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ww(t, e),
                    t.prototype.shouldComponentUpdate = function (e, t) {
                        return this.debug && console.log(Sb(e, this.props), Sb(t, this.state)),
                            !Tb(this.props, e, this.propEquality) || !Tb(this.state, t, this.stateEquality)
                    },
                    t.addPropsEquality = LM,
                    t.addStateEquality = FM,
                    t.contextType = AM,
                    t
            }(Nw);
            HM.prototype.propEquality = {
            },
                HM.prototype.stateEquality = {
                };
            var _M = function (e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ww(t, e),
                    t.contextType = AM,
                    t
            }(HM);
            function LM(e) {
                var t = Object.create(this.prototype.propEquality);
                jw(t, e),
                    this.prototype.propEquality = t
            }
            function FM(e) {
                var t = Object.create(this.prototype.stateEquality);
                jw(t, e),
                    this.prototype.stateEquality = t
            }
            function XM(e, t) {
                'function' == typeof e ? e(t) : e && (e.current = t)
            }
            var UM = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.uid = Kw(),
                        t
                }
                return Ww(t, e),
                    t.prototype.prepareHits = function () {
                    },
                    t.prototype.queryHit = function (e, t, n, r) {
                        return null
                    },
                    t.prototype.isValidSegDownEl = function (e) {
                        return !this.props.eventDrag && !this.props.eventResize && !Lw(e, '.fc-event-mirror')
                    },
                    t.prototype.isValidDateDownEl = function (e) {
                        return !(Lw(e, '.fc-event:not(.fc-bg-event)') || Lw(e, '.fc-more-link') || Lw(e, 'a[data-navlink]') || Lw(e, '.fc-popover'))
                    },
                    t
            }(_M);
            function qM(e) {
                return {
                    id: Kw(),
                    deps: e.deps || [
                    ],
                    reducers: e.reducers || [
                    ],
                    isLoadingFuncs: e.isLoadingFuncs || [
                    ],
                    contextInit: [
                    ].concat(e.contextInit || [
                    ]),
                    eventRefiners: e.eventRefiners || {
                    },
                    eventDefMemberAdders: e.eventDefMemberAdders || [
                    ],
                    eventSourceRefiners: e.eventSourceRefiners || {
                    },
                    isDraggableTransformers: e.isDraggableTransformers || [
                    ],
                    eventDragMutationMassagers: e.eventDragMutationMassagers || [
                    ],
                    eventDefMutationAppliers: e.eventDefMutationAppliers || [
                    ],
                    dateSelectionTransformers: e.dateSelectionTransformers || [
                    ],
                    datePointTransforms: e.datePointTransforms || [
                    ],
                    dateSpanTransforms: e.dateSpanTransforms || [
                    ],
                    views: e.views || {
                    },
                    viewPropsTransformers: e.viewPropsTransformers || [
                    ],
                    isPropsValid: e.isPropsValid || null,
                    externalDefTransforms: e.externalDefTransforms || [
                    ],
                    viewContainerAppends: e.viewContainerAppends || [
                    ],
                    eventDropTransformers: e.eventDropTransformers || [
                    ],
                    componentInteractions: e.componentInteractions || [
                    ],
                    calendarInteractions: e.calendarInteractions || [
                    ],
                    themeClasses: e.themeClasses || {
                    },
                    eventSourceDefs: e.eventSourceDefs || [
                    ],
                    cmdFormatter: e.cmdFormatter,
                    recurringTypes: e.recurringTypes || [
                    ],
                    namedTimeZonedImpl: e.namedTimeZonedImpl,
                    initialView: e.initialView || '',
                    elementDraggingImpl: e.elementDraggingImpl,
                    optionChangeHandlers: e.optionChangeHandlers || {
                    },
                    scrollGridImpl: e.scrollGridImpl || null,
                    contentTypeHandlers: e.contentTypeHandlers || {
                    },
                    listenerRefiners: e.listenerRefiners || {
                    },
                    optionRefiners: e.optionRefiners || {
                    },
                    propSetHandlers: e.propSetHandlers || {
                    }
                }
            }
            var GM = function (e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ww(t, e),
                    t
            }(zM);
            function VM(e, t, n, r) {
                if (t[e]) return t[e];
                var a = function (e, t, n, r) {
                    var a = n[e],
                        i = r[e],
                        o = function (e) {
                            return a && null !== a[e] ? a[e] : i && null !== i[e] ? i[e] : null
                        },
                        s = o('component'),
                        u = o('superType'),
                        l = null;
                    if (u) {
                        if (u === e) throw new Error('Can\'t have a custom view type that references itself');
                        l = VM(u, t, n, r)
                    }
                    return !s && l && (s = l.component),
                        s ? {
                            type: e,
                            component: s,
                            defaults: jw(jw({
                            }, l ? l.defaults : {
                            }), a ? a.rawOptions : {
                            }),
                            overrides: jw(jw({
                            }, l ? l.overrides : {
                            }), i ? i.rawOptions : {
                            })
                        }
                            : null
                }(e, t, n, r);
                return a && (t[e] = a),
                    a
            }
            GM.prototype.classes = {
                root: 'fc-theme-standard',
                tableCellShaded: 'fc-cell-shaded',
                buttonGroup: 'fc-button-group',
                button: 'fc-button fc-button-primary',
                buttonActive: 'fc-button-active'
            },
                GM.prototype.baseIconClass = 'fc-icon',
                GM.prototype.iconClasses = {
                    close: 'fc-icon-x',
                    prev: 'fc-icon-chevron-left',
                    next: 'fc-icon-chevron-right',
                    prevYear: 'fc-icon-chevrons-left',
                    nextYear: 'fc-icon-chevrons-right'
                },
                GM.prototype.rtlIconClasses = {
                    prev: 'fc-icon-chevron-right',
                    next: 'fc-icon-chevron-left',
                    prevYear: 'fc-icon-chevrons-right',
                    nextYear: 'fc-icon-chevrons-left'
                },
                GM.prototype.iconOverrideOption = 'buttonIcons',
                GM.prototype.iconOverrideCustomButtonOption = 'icon',
                GM.prototype.iconOverridePrefix = 'fc-icon-';
            var YM = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.rootElRef = zw(),
                        t.handleRootEl = function (e) {
                            XM(t.rootElRef, e),
                                t.props.elRef && XM(t.props.elRef, e)
                        },
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this,
                            t = this.props,
                            n = t.hookProps;
                        return Iw(KM, {
                            hookProps: n,
                            didMount: t.didMount,
                            willUnmount: t.willUnmount,
                            elRef: this.handleRootEl
                        }, (function (r) {
                            return Iw($M, {
                                hookProps: n,
                                content: t.content,
                                defaultContent: t.defaultContent,
                                backupElRef: e.rootElRef
                            }, (function (e, a) {
                                return t.children(r, ZM(t.classNames, n), e, a)
                            }))
                        }))
                    },
                    t
            }(_M),
                BM = Aw(0);
            function $M(e) {
                return Iw(BM.Consumer, null, (function (t) {
                    return Iw(QM, jw({
                        renderId: t
                    }, e))
                }))
            }
            var QM = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.innerElRef = zw(),
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        return this.props.children(this.innerElRef, this.renderInnerContent())
                    },
                    t.prototype.componentDidMount = function () {
                        this.updateCustomContent()
                    },
                    t.prototype.componentDidUpdate = function () {
                        this.updateCustomContent()
                    },
                    t.prototype.componentWillUnmount = function () {
                        this.customContentInfo && this.customContentInfo.destroy && this.customContentInfo.destroy()
                    },
                    t.prototype.renderInnerContent = function () {
                        var e = this.customContentInfo,
                            t = this.getInnerContent(),
                            n = this.getContentMeta(t);
                        return e && e.contentKey === n.contentKey ? e && (e.contentVal = t[n.contentKey]) : (e && (e.destroy && e.destroy(), e = this.customContentInfo = null), n.contentKey && (e = this.customContentInfo = jw({
                            contentKey: n.contentKey,
                            contentVal: t[n.contentKey]
                        }, n.buildLifecycleFuncs()))),
                            e ? [
                            ] : t
                    },
                    t.prototype.getInnerContent = function () {
                        var e = this.props,
                            t = eE(e.content, e.hookProps);
                        return void 0 === t && (t = eE(e.defaultContent, e.hookProps)),
                            null == t ? null : t
                    },
                    t.prototype.getContentMeta = function (e) {
                        var t = this.context.pluginHooks.contentTypeHandlers,
                            n = '',
                            r = null;
                        if (e) for (var a in t) if (void 0 !== e[a]) {
                            n = a,
                                r = t[a];
                            break
                        }
                        return {
                            contentKey: n,
                            buildLifecycleFuncs: r
                        }
                    },
                    t.prototype.updateCustomContent = function () {
                        this.customContentInfo && this.customContentInfo.render(this.innerElRef.current || this.props.backupElRef.current, this.customContentInfo.contentVal)
                    },
                    t
            }(_M),
                KM = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleRootEl = function (e) {
                            t.rootEl = e,
                                t.props.elRef && XM(t.props.elRef, e)
                        },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            return this.props.children(this.handleRootEl)
                        },
                        t.prototype.componentDidMount = function () {
                            var e = this.props.didMount;
                            e && e(jw(jw({
                            }, this.props.hookProps), {
                                el: this.rootEl
                            }))
                        },
                        t.prototype.componentWillUnmount = function () {
                            var e = this.props.willUnmount;
                            e && e(jw(jw({
                            }, this.props.hookProps), {
                                el: this.rootEl
                            }))
                        },
                        t
                }(_M);
            function JM() {
                var e,
                    t,
                    n = [
                    ];
                return function (r, a) {
                    return t && xb(t, a) && r === e || (e = r, t = a, n = ZM(r, a)),
                        n
                }
            }
            function ZM(e, t) {
                return 'function' == typeof e && (e = e(t)),
                    pk(e)
            }
            function eE(e, t) {
                return 'function' == typeof e ? e(t, Iw) : e
            }
            var tE = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.normalizeClassNames = JM(),
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.props,
                            t = this.context,
                            n = t.options,
                            r = {
                                view: t.viewApi
                            },
                            a = this.normalizeClassNames(n.viewClassNames, r);
                        return Iw(KM, {
                            hookProps: r,
                            didMount: n.viewDidMount,
                            willUnmount: n.viewWillUnmount,
                            elRef: e.elRef
                        }, (function (t) {
                            return e.children(t, [
                                'fc-' + e.viewSpec.type + '-view',
                                'fc-view'
                            ].concat(a))
                        }))
                    },
                    t
            }(_M);
            function nE(e) {
                return Mb(e, rE)
            }
            function rE(e) {
                var t,
                    n = 'function' == typeof e ? {
                        component: e
                    }
                        : e,
                    r = n.component;
                return n.content && (t = n, r = function (e) {
                    return Iw(AM.Consumer, null, (function (n) {
                        return Iw(tE, {
                            viewSpec: n.viewSpec
                        }, (function (r, a) {
                            var i = jw(jw({
                            }, e), {
                                nextDayThreshold: n.options.nextDayThreshold
                            });
                            return Iw(YM, {
                                hookProps: i,
                                classNames: t.classNames,
                                content: t.content,
                                didMount: t.didMount,
                                willUnmount: t.willUnmount,
                                elRef: r
                            }, (function (e, t, n, r) {
                                return Iw('div', {
                                    className: a.concat(t).join(' '),
                                    ref: e
                                }, r)
                            }))
                        }))
                    }))
                }),
                {
                    superType: n.type,
                    component: r,
                    rawOptions: n
                }
            }
            function aE(e, t, n, r) {
                var a = nE(e),
                    i = nE(t.views),
                    o = function (e, t) {
                        var n,
                            r = {
                            };
                        for (n in e) VM(n, r, e, t);
                        for (n in t) VM(n, r, e, t);
                        return r
                    }(a, i);
                return Mb(o, (function (e) {
                    return function (e, t, n, r, a) {
                        var i = e.overrides.duration || e.defaults.duration || r.duration || n.duration,
                            o = null,
                            s = '',
                            u = '',
                            l = {
                            };
                        if (i && (o = function (e) {
                            var t = JSON.stringify(e),
                                n = iE[t];
                            return void 0 === n && (n = Db(e), iE[t] = n),
                                n
                        }(i), o)) {
                            var d = Rb(o);
                            s = d.unit,
                                1 === d.value && (u = s, l = t[s] ? t[s].rawOptions : {
                                })
                        }
                        var c = function (t) {
                            var n = t.buttonText || {
                            },
                                r = e.defaults.buttonTextKey;
                            return null != r && null != n[r] ? n[r] : null != n[e.type] ? n[e.type] : null != n[u] ? n[u] : null
                        },
                            m = function (t) {
                                var n = t.buttonHints || {
                                },
                                    r = e.defaults.buttonTextKey;
                                return null != r && null != n[r] ? n[r] : null != n[e.type] ? n[e.type] : null != n[u] ? n[u] : null
                            };
                        return {
                            type: e.type,
                            component: e.component,
                            duration: o,
                            durationUnit: s,
                            singleUnit: u,
                            optionDefaults: e.defaults,
                            optionOverrides: jw(jw({
                            }, l), e.overrides),
                            buttonTextOverride: c(r) || c(n) || e.overrides.buttonText,
                            buttonTextDefault: c(a) || e.defaults.buttonText || c(nk) || e.type,
                            buttonTitleOverride: m(r) || m(n) || e.overrides.buttonHint,
                            buttonTitleDefault: m(a) || e.defaults.buttonHint || m(nk)
                        }
                    }(e, i, t, n, r)
                }))
            }
            var iE = {
            },
                oE = function () {
                    function e(e) {
                        this.props = e,
                            this.nowDate = iM(e.nowInput, e.dateEnv),
                            this.initHiddenDays()
                    }
                    return e.prototype.buildPrev = function (e, t, n) {
                        var r = this.props.dateEnv,
                            a = r.subtract(r.startOf(t, e.currentRangeUnit), e.dateIncrement);
                        return this.build(a, - 1, n)
                    },
                        e.prototype.buildNext = function (e, t, n) {
                            var r = this.props.dateEnv,
                                a = r.add(r.startOf(t, e.currentRangeUnit), e.dateIncrement);
                            return this.build(a, 1, n)
                        },
                        e.prototype.build = function (e, t, n) {
                            void 0 === n && (n = !0);
                            var r,
                                a,
                                i,
                                o,
                                s,
                                u,
                                l,
                                d,
                                c,
                                m,
                                f = this.props;
                            return r = this.buildValidRange(),
                                r = this.trimHiddenDays(r),
                                n && (l = e, e = null != (d = r).start && l < d.start ? d.start : null != d.end && l >= d.end ? new Date(d.end.valueOf() - 1) : l),
                                a = this.buildCurrentRangeInfo(e, t),
                                i = /^(year|month|week|day)$/.test(a.unit),
                                o = this.buildRenderRange(this.trimHiddenDays(a.range), a.unit, i),
                                s = o = this.trimHiddenDays(o),
                                f.showNonCurrentDates || (s = Ik(s, a.range)),
                                s = Ik(s = this.adjustActiveRange(s), r),
                                c = a.range,
                                m = r,
                                u = (null === c.end || null === m.start || c.end > m.start) && (null === c.start || null === m.end || c.start < m.end),
                            {
                                validRange: r,
                                currentRange: a.range,
                                currentRangeUnit: a.unit,
                                isRangeAllDay: i,
                                activeRange: s,
                                renderRange: o,
                                slotMinTime: f.slotMinTime,
                                slotMaxTime: f.slotMaxTime,
                                isValid: u,
                                dateIncrement: this.buildDateIncrement(a.duration)
                            }
                        },
                        e.prototype.buildValidRange = function () {
                            var e = this.props.validRangeInput,
                                t = 'function' == typeof e ? e.call(this.props.calendarApi, this.nowDate) : e;
                            return this.refineRange(t) || {
                                start: null,
                                end: null
                            }
                        },
                        e.prototype.buildCurrentRangeInfo = function (e, t) {
                            var n,
                                r = this.props,
                                a = null,
                                i = null,
                                o = null;
                            return r.duration ? (a = r.duration, i = r.durationUnit, o = this.buildRangeFromDuration(e, t, a, i)) : (n = this.props.dayCount) ? (i = 'day', o = this.buildRangeFromDayCount(e, t, n)) : (o = this.buildCustomVisibleRange(e)) ? i = r.dateEnv.greatestWholeUnit(o.start, o.end).unit : (i = Rb(a = this.getFallbackDuration()).unit, o = this.buildRangeFromDuration(e, t, a, i)),
                            {
                                duration: a,
                                unit: i,
                                range: o
                            }
                        },
                        e.prototype.getFallbackDuration = function () {
                            return Db({
                                day: 1
                            })
                        },
                        e.prototype.adjustActiveRange = function (e) {
                            var t = this.props,
                                n = t.dateEnv,
                                r = t.usesMinMaxTime,
                                a = t.slotMinTime,
                                i = t.slotMaxTime,
                                o = e.start,
                                s = e.end;
                            return r && (Ib(a) < 0 && (o = lb(o), o = n.add(o, a)), Ib(i) > 1 && (s = ib(s = lb(s), - 1), s = n.add(s, i))),
                            {
                                start: o,
                                end: s
                            }
                        },
                        e.prototype.buildRangeFromDuration = function (e, t, n, r) {
                            var a,
                                i,
                                o,
                                s = this.props,
                                u = s.dateEnv,
                                l = s.dateAlignment;
                            if (!l) {
                                var d = this.props.dateIncrement;
                                l = d && zb(d) < zb(n) ? Rb(d).unit : r
                            }
                            function c() {
                                a = u.startOf(e, l),
                                    i = u.add(a, n),
                                    o = {
                                        start: a,
                                        end: i
                                    }
                            }
                            return Ib(n) <= 1 && this.isHiddenDay(a) && (a = lb(a = this.skipHiddenDays(a, t))),
                                c(),
                                this.trimHiddenDays(o) || (e = this.skipHiddenDays(e, t), c()),
                                o
                        },
                        e.prototype.buildRangeFromDayCount = function (e, t, n) {
                            var r,
                                a = this.props,
                                i = a.dateEnv,
                                o = a.dateAlignment,
                                s = 0,
                                u = e;
                            o && (u = i.startOf(u, o)),
                                u = lb(u),
                                r = u = this.skipHiddenDays(u, t);
                            do {
                                r = ib(r, 1),
                                    this.isHiddenDay(r) || (s += 1)
                            } while (s < n);
                            return {
                                start: u,
                                end: r
                            }
                        },
                        e.prototype.buildCustomVisibleRange = function (e) {
                            var t = this.props,
                                n = t.visibleRangeInput,
                                r = 'function' == typeof n ? n.call(t.calendarApi, t.dateEnv.toDate(e)) : n,
                                a = this.refineRange(r);
                            return !a || null != a.start && null != a.end ? a : null
                        },
                        e.prototype.buildRenderRange = function (e, t, n) {
                            return e
                        },
                        e.prototype.buildDateIncrement = function (e) {
                            var t;
                            return this.props.dateIncrement || ((t = this.props.dateAlignment) ? Db(1, t) : e || Db({
                                days: 1
                            }))
                        },
                        e.prototype.refineRange = function (e) {
                            if (e) {
                                var t = function (e, t) {
                                    var n = null,
                                        r = null;
                                    return e.start && (n = t.createMarker(e.start)),
                                        e.end && (r = t.createMarker(e.end)),
                                        n || r ? n && r && r < n ? null : {
                                            start: n,
                                            end: r
                                        }
                                            : null
                                }(e, this.props.dateEnv);
                                return t && (t = Wk(t)),
                                    t
                            }
                            return null
                        },
                        e.prototype.initHiddenDays = function () {
                            var e,
                                t = this.props.hiddenDays || [
                                ],
                                n = [
                                ],
                                r = 0;
                            for (!1 === this.props.weekends && t.push(0, 6), e = 0; e < 7; e += 1) (n[e] = - 1 !== t.indexOf(e)) || (r += 1);
                            if (!r) throw new Error('invalid hiddenDays');
                            this.isHiddenDayHash = n
                        },
                        e.prototype.trimHiddenDays = function (e) {
                            var t = e.start,
                                n = e.end;
                            return t && (t = this.skipHiddenDays(t)),
                                n && (n = this.skipHiddenDays(n, - 1, !0)),
                                null == t || null == n || t < n ? {
                                    start: t,
                                    end: n
                                }
                                    : null
                        },
                        e.prototype.isHiddenDay = function (e) {
                            return e instanceof Date && (e = e.getUTCDay()),
                                this.isHiddenDayHash[e]
                        },
                        e.prototype.skipHiddenDays = function (e, t, n) {
                            for (void 0 === t && (t = 1), void 0 === n && (n = !1); this.isHiddenDayHash[(e.getUTCDay() + (n ? t : 0) + 7) % 7];) e = ib(e, t);
                            return e
                        },
                        e
                }();
            function sE(e) {
                for (var t in e) if (e[t].isFetching) return !0;
                return !1
            }
            function uE(e, t, n, r) {
                for (var a = {
                }, i = 0, o = t; i < o.length; i++) {
                    var s = o[i];
                    a[s.sourceId] = s
                }
                return n && (a = lE(a, n, r)),
                    jw(jw({
                    }, e), a)
            }
            function lE(e, t, n) {
                return dE(e, kb(e, (function (e) {
                    return function (e, t, n) {
                        return fE(e, n) ? !n.options.lazyFetching || !e.fetchRange || e.isFetching || t.start < e.fetchRange.start || t.end > e.fetchRange.end : !e.latestFetchId
                    }(e, t, n)
                })), t, !1, n)
            }
            function dE(e, t, n, r, a) {
                var i = {
                };
                for (var o in e) {
                    var s = e[o];
                    t[o] ? i[o] = cE(s, n, r, a) : i[o] = s
                }
                return i
            }
            function cE(e, t, n, r) {
                var a = r.options,
                    i = r.calendarApi,
                    o = r.pluginHooks.eventSourceDefs[e.sourceDefId],
                    s = Kw();
                return o.fetch({
                    eventSource: e,
                    range: t,
                    isRefetch: n,
                    context: r
                }, (function (n) {
                    var o = n.rawEvents;
                    a.eventSourceSuccess && (o = a.eventSourceSuccess.call(i, o, n.xhr) || o),
                        e.success && (o = e.success.call(i, o, n.xhr) || o),
                        r.dispatch({
                            type: 'RECEIVE_EVENTS',
                            sourceId: e.sourceId,
                            fetchId: s,
                            fetchRange: t,
                            rawEvents: o
                        })
                }), (function (n) {
                    console.warn(n.message, n),
                        a.eventSourceFailure && a.eventSourceFailure.call(i, n),
                        e.failure && e.failure(n),
                        r.dispatch({
                            type: 'RECEIVE_EVENT_ERROR',
                            sourceId: e.sourceId,
                            fetchId: s,
                            fetchRange: t,
                            error: n
                        })
                })),
                    jw(jw({
                    }, e), {
                        isFetching: !0,
                        latestFetchId: s
                    })
            }
            function mE(e, t) {
                return kb(e, (function (e) {
                    return fE(e, t)
                }))
            }
            function fE(e, t) {
                return !t.pluginHooks.eventSourceDefs[e.sourceDefId].ignoreRange
            }
            function hE(e, t) {
                var n;
                if (t) {
                    n = [
                    ];
                    for (var r = 0, a = e; r < a.length; r++) {
                        var i = a[r],
                            o = t(i);
                        o ? n.push(o) : null == o && n.push(i)
                    }
                } else n = e;
                return n
            }
            function pE(e, t) {
                return hk(e, (function (e) {
                    return e.sourceId !== t
                }))
            }
            function gE(e, t) {
                switch (t.type) {
                    case 'UNSELECT_DATES':
                        return null;
                    case 'SELECT_DATES':
                        return t.selection;
                    default:
                        return e
                }
            }
            function vE(e, t) {
                switch (t.type) {
                    case 'UNSELECT_EVENT':
                        return '';
                    case 'SELECT_EVENT':
                        return t.eventInstanceId;
                    default:
                        return e
                }
            }
            function yE(e, t) {
                var n;
                switch (t.type) {
                    case 'UNSET_EVENT_DRAG':
                        return null;
                    case 'SET_EVENT_DRAG':
                        return {
                            affectedEvents: (n = t.state).affectedEvents,
                            mutatedEvents: n.mutatedEvents,
                            isEvent: n.isEvent
                        };
                    default:
                        return e
                }
            }
            function wE(e, t) {
                var n;
                switch (t.type) {
                    case 'UNSET_EVENT_RESIZE':
                        return null;
                    case 'SET_EVENT_RESIZE':
                        return {
                            affectedEvents: (n = t.state).affectedEvents,
                            mutatedEvents: n.mutatedEvents,
                            isEvent: n.isEvent
                        };
                    default:
                        return e
                }
            }
            function bE(e, t, n, r, a) {
                return {
                    header: e.headerToolbar ? kE(e.headerToolbar, e, t, n, r, a) : null,
                    footer: e.footerToolbar ? kE(e.footerToolbar, e, t, n, r, a) : null
                }
            }
            function kE(e, t, n, r, a, i) {
                var o = {
                },
                    s = [
                    ],
                    u = !1;
                for (var l in e) {
                    var d = ME(e[l], t, n, r, a, i);
                    o[l] = d.widgets,
                        s.push.apply(s, d.viewsWithButtons),
                        u = u || d.hasTitle
                }
                return {
                    sectionWidgets: o,
                    viewsWithButtons: s,
                    hasTitle: u
                }
            }
            function ME(e, t, n, r, a, i) {
                var o = 'rtl' === t.direction,
                    s = t.customButtons || {
                    },
                    u = n.buttonText || {
                    },
                    l = t.buttonText || {
                    },
                    d = n.buttonHints || {
                    },
                    c = t.buttonHints || {
                    },
                    m = e ? e.split(' ') : [
                    ],
                    f = [
                    ],
                    h = !1;
                return {
                    widgets: m.map((function (e) {
                        return e.split(',').map((function (e) {
                            if ('title' === e) return h = !0,
                            {
                                buttonName: e
                            };
                            var n,
                                m,
                                p,
                                g,
                                v,
                                y;
                            if (n = s[e]) p = function (e) {
                                n.click && n.click.call(e.target, e, e.target)
                            },
                                (g = r.getCustomButtonIconClass(n)) || (g = r.getIconClass(e, o)) || (v = n.text),
                                y = n.hint || n.text;
                            else if (m = a[e]) {
                                f.push(e),
                                    p = function () {
                                        i.changeView(e)
                                    },
                                    (v = m.buttonTextOverride) || (g = r.getIconClass(e, o)) || (v = m.buttonTextDefault);
                                var w = m.buttonTextOverride || m.buttonTextDefault;
                                y = eb(m.buttonTitleOverride || m.buttonTitleDefault || t.viewHint, [
                                    w,
                                    e
                                ], w)
                            } else if (i[e]) if (p = function () {
                                i[e]()
                            }, (v = u[e]) || (g = r.getIconClass(e, o)) || (v = l[e]), 'prevYear' === e || 'nextYear' === e) {
                                var b = 'prevYear' === e ? 'prev' : 'next';
                                y = eb(d[b] || c[b], [
                                    l.year || 'year',
                                    'year'
                                ], l[e])
                            } else y = function (t) {
                                return eb(d[e] || c[e], [
                                    l[t] || t,
                                    t
                                ], l[e])
                            };
                            return {
                                buttonName: e,
                                buttonClick: p,
                                buttonIcon: g,
                                buttonText: v,
                                buttonHint: y
                            }
                        }))
                    })),
                    viewsWithButtons: f,
                    hasTitle: h
                }
            }
            var EE = {
                parseMeta: function (e) {
                    return 'function' == typeof e.events ? e.events : null
                },
                fetch: function (e, t, n) {
                    var r = e.context.dateEnv;
                    !function (e, t, n) {
                        var r = !1,
                            a = function () {
                                r || (r = !0, t.apply(this, arguments))
                            },
                            i = function () {
                                r || (r = !0, n && n.apply(this, arguments))
                            },
                            o = e(a, i);
                        o && 'function' == typeof o.then && o.then(a, i)
                    }(e.eventSource.meta.bind(null, $k(e.range, r)), (function (e) {
                        t({
                            rawEvents: e
                        })
                    }), n)
                }
            };
            function PE(e) {
                var t = [
                ];
                for (var n in e) t.push(encodeURIComponent(n) + '=' + encodeURIComponent(e[n]));
                return t.join('&')
            }
            function xE(e, t) {
                for (var n = Pb(t.getCurrentData().eventSources), r = [
                ], a = 0, i = e; a < i.length; a++) {
                    for (var o = i[a], s = !1, u = 0; u < n.length; u += 1) if (n[u]._raw === o) {
                        n.splice(u, 1),
                            s = !0;
                        break
                    }
                    s || r.push(o)
                }
                for (var l = 0, d = n; l < d.length; l++) {
                    var c = d[l];
                    t.dispatch({
                        type: 'REMOVE_EVENT_SOURCE',
                        sourceId: c.sourceId
                    })
                }
                for (var m = 0, f = r; m < f.length; m++) {
                    var h = f[m];
                    t.calendarApi.addEventSource(h)
                }
            }
            var SE = [
                qM({
                    eventSourceDefs: [
                        {
                            ignoreRange: !0,
                            parseMeta: function (e) {
                                return Array.isArray(e.events) ? e.events : null
                            },
                            fetch: function (e, t) {
                                t({
                                    rawEvents: e.eventSource.meta
                                })
                            }
                        }
                    ]
                }),
                qM({
                    eventSourceDefs: [
                        EE
                    ]
                }),
                qM({
                    eventSourceRefiners: {
                        method: String,
                        extraParams: dk,
                        startParam: String,
                        endParam: String,
                        timeZoneParam: String
                    },
                    eventSourceDefs: [
                        {
                            parseMeta: function (e) {
                                return !e.url || 'json' !== e.format && e.format ? null : {
                                    url: e.url,
                                    format: 'json',
                                    method: (e.method || 'GET').toUpperCase(),
                                    extraParams: e.extraParams,
                                    startParam: e.startParam,
                                    endParam: e.endParam,
                                    timeZoneParam: e.timeZoneParam
                                }
                            },
                            fetch: function (e, t, n) {
                                var r = e.eventSource.meta,
                                    a = function (e, t, n) {
                                        var r,
                                            a,
                                            i,
                                            o,
                                            s = n.dateEnv,
                                            u = n.options,
                                            l = {
                                            };
                                        return null == (r = e.startParam) && (r = u.startParam),
                                            null == (a = e.endParam) && (a = u.endParam),
                                            null == (i = e.timeZoneParam) && (i = u.timeZoneParam),
                                            o = 'function' == typeof e.extraParams ? e.extraParams() : e.extraParams || {
                                            },
                                            jw(l, o),
                                            l[r] = s.formatIso(t.start),
                                            l[a] = s.formatIso(t.end),
                                            'local' !== s.timeZone && (l[i] = s.timeZone),
                                            l
                                    }(r, e.range, e.context);
                                !function (e, t, n, r, a) {
                                    var i = null;
                                    'GET' === (e = e.toUpperCase()) ? t = function (e, t) {
                                        return e + (- 1 === e.indexOf('?') ? '?' : '&') + PE(t)
                                    }(t, n) : i = PE(n);
                                    var o = new XMLHttpRequest;
                                    o.open(e, t, !0),
                                        'GET' !== e && o.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'),
                                        o.onload = function () {
                                            if (o.status >= 200 && o.status < 400) {
                                                var e = !1,
                                                    t = void 0;
                                                try {
                                                    t = JSON.parse(o.responseText),
                                                        e = !0
                                                } catch (e) {
                                                }
                                                e ? r(t, o) : a('Failure parsing JSON', o)
                                            } else a('Request failed', o)
                                        },
                                        o.onerror = function () {
                                            a('Request failed', o)
                                        },
                                        o.send(i)
                                }(r.method, r.url, a, (function (e, n) {
                                    t({
                                        rawEvents: e,
                                        xhr: n
                                    })
                                }), (function (e, t) {
                                    n({
                                        message: e,
                                        xhr: t
                                    })
                                }))
                            }
                        }
                    ]
                }),
                qM({
                    recurringTypes: [
                        {
                            parse: function (e, t) {
                                if (e.daysOfWeek || e.startTime || e.endTime || e.startRecur || e.endRecur) {
                                    var n = {
                                        daysOfWeek: e.daysOfWeek || null,
                                        startTime: e.startTime || null,
                                        endTime: e.endTime || null,
                                        startRecur: e.startRecur ? t.createMarker(e.startRecur) : null,
                                        endRecur: e.endRecur ? t.createMarker(e.endRecur) : null
                                    },
                                        r = void 0;
                                    return e.duration && (r = e.duration),
                                        !r && e.startTime && e.endTime && (a = e.endTime, i = e.startTime, r = {
                                            years: a.years - i.years,
                                            months: a.months - i.months,
                                            days: a.days - i.days,
                                            milliseconds: a.milliseconds - i.milliseconds
                                        }),
                                    {
                                        allDayGuess: Boolean(!e.startTime && !e.endTime),
                                        duration: r,
                                        typeData: n
                                    }
                                }
                                var a,
                                    i;
                                return null
                            },
                            expand: function (e, t, n) {
                                var r = Ik(t, {
                                    start: e.startRecur,
                                    end: e.endRecur
                                });
                                return r ? function (e, t, n, r) {
                                    for (var a = e ? Eb(e) : null, i = lb(n.start), o = n.end, s = [
                                    ]; i < o;) {
                                        var u = void 0;
                                        a && !a[i.getUTCDay()] || (u = t ? r.add(i, t) : i, s.push(u)),
                                            i = ib(i, 1)
                                    }
                                    return s
                                }(e.daysOfWeek, e.startTime, r, n) : [
                                ]
                            }
                        }
                    ],
                    eventRefiners: {
                        daysOfWeek: dk,
                        startTime: Db,
                        endTime: Db,
                        duration: Db,
                        startRecur: dk,
                        endRecur: dk
                    }
                }),
                qM({
                    optionChangeHandlers: {
                        events: function (e, t) {
                            xE([e], t)
                        },
                        eventSources: xE
                    }
                }),
                qM({
                    isLoadingFuncs: [
                        function (e) {
                            return sE(e.eventSources)
                        }
                    ],
                    contentTypeHandlers: {
                        html: function () {
                            var e = null,
                                t = '';
                            return {
                                render: function (n, r) {
                                    n === e && r === t || (n.innerHTML = r),
                                        e = n,
                                        t = r
                                },
                                destroy: function () {
                                    e.innerHTML = '',
                                        e = null,
                                        t = ''
                                }
                            }
                        },
                        domNodes: function () {
                            var e = null,
                                t = [
                                ];
                            function n() {
                                t.forEach(_w),
                                    t = [
                                    ],
                                    e = null
                            }
                            return {
                                render: function (r, a) {
                                    var i = Array.prototype.slice.call(a);
                                    if (r !== e || !Hb(t, i)) {
                                        for (var o = 0, s = i; o < s.length; o++) {
                                            var u = s[o];
                                            r.appendChild(u)
                                        }
                                        n()
                                    }
                                    e = r,
                                        t = i
                                },
                                destroy: n
                            }
                        }
                    },
                    propSetHandlers: {
                        dateProfile: function (e, t) {
                            t.emitter.trigger('datesSet', jw(jw({
                            }, $k(e.activeRange, t.dateEnv)), {
                                view: t.viewApi
                            }))
                        },
                        eventStore: function (e, t) {
                            var n = t.emitter;
                            n.hasHandlers('eventsSet') && n.trigger('eventsSet', lM(e, t))
                        }
                    }
                })
            ],
                TE = function () {
                    function e(e) {
                        this.drainedOption = e,
                            this.isRunning = !1,
                            this.isDirty = !1,
                            this.pauseDepths = {
                            },
                            this.timeoutId = 0
                    }
                    return e.prototype.request = function (e) {
                        this.isDirty = !0,
                            this.isPaused() || (this.clearTimeout(), null == e ? this.tryDrain() : this.timeoutId = setTimeout(this.tryDrain.bind(this), e))
                    },
                        e.prototype.pause = function (e) {
                            void 0 === e && (e = '');
                            var t = this.pauseDepths;
                            t[e] = (t[e] || 0) + 1,
                                this.clearTimeout()
                        },
                        e.prototype.resume = function (e, t) {
                            void 0 === e && (e = '');
                            var n = this.pauseDepths;
                            e in n && (t ? delete n[e] : (n[e] -= 1, n[e] <= 0 && delete n[e]), this.tryDrain())
                        },
                        e.prototype.isPaused = function () {
                            return Object.keys(this.pauseDepths).length
                        },
                        e.prototype.tryDrain = function () {
                            if (!this.isRunning && !this.isPaused()) {
                                for (this.isRunning = !0; this.isDirty;) this.isDirty = !1,
                                    this.drained();
                                this.isRunning = !1
                            }
                        },
                        e.prototype.clear = function () {
                            this.clearTimeout(),
                                this.isDirty = !1,
                                this.pauseDepths = {
                                }
                        },
                        e.prototype.clearTimeout = function () {
                            this.timeoutId && (clearTimeout(this.timeoutId), this.timeoutId = 0)
                        },
                        e.prototype.drained = function () {
                            this.drainedOption && this.drainedOption()
                        },
                        e
                }(),
                CE = function () {
                    function e(e, t) {
                        this.runTaskOption = e,
                            this.drainedOption = t,
                            this.queue = [
                            ],
                            this.delayedRunner = new TE(this.drain.bind(this))
                    }
                    return e.prototype.request = function (e, t) {
                        this.queue.push(e),
                            this.delayedRunner.request(t)
                    },
                        e.prototype.pause = function (e) {
                            this.delayedRunner.pause(e)
                        },
                        e.prototype.resume = function (e, t) {
                            this.delayedRunner.resume(e, t)
                        },
                        e.prototype.drain = function () {
                            for (var e = this.queue; e.length;) {
                                for (var t = [
                                ], n = void 0; n = e.shift();) this.runTask(n),
                                    t.push(n);
                                this.drained(t)
                            }
                        },
                        e.prototype.runTask = function (e) {
                            this.runTaskOption && this.runTaskOption(e)
                        },
                        e.prototype.drained = function (e) {
                            this.drainedOption && this.drainedOption(e)
                        },
                        e
                }();
            function WE(e, t, n) {
                var r;
                return r = /^(year|month)$/.test(e.currentRangeUnit) ? e.currentRange : e.activeRange,
                    n.formatRange(r.start, r.end, ek(t.titleFormat || function (e) {
                        var t = e.currentRangeUnit;
                        if ('year' === t) return {
                            year: 'numeric'
                        };
                        if ('month' === t) return {
                            year: 'numeric',
                            month: 'long'
                        };
                        var n = ub(e.currentRange.start, e.currentRange.end);
                        return null !== n && n > 1 ? {
                            year: 'numeric',
                            month: 'short',
                            day: 'numeric'
                        }
                            : {
                                year: 'numeric',
                                month: 'long',
                                day: 'numeric'
                            }
                    }(e)), {
                        isEndExclusive: e.isRangeAllDay,
                        defaultSeparator: t.titleRangeSeparator
                    })
            }
            var jE = function () {
                function e(e) {
                    var t,
                        n,
                        r,
                        a = this;
                    this.computeOptionsData = _b(this._computeOptionsData),
                        this.computeCurrentViewData = _b(this._computeCurrentViewData),
                        this.organizeRawLocales = _b(vM),
                        this.buildLocale = _b(yM),
                        this.buildPluginHooks = (n = [
                        ], r = [
                        ], function (e, a) {
                            return t && Hb(e, n) && Hb(a, r) || (t = function (e, t) {
                                var n = {
                                },
                                    r = {
                                        reducers: [
                                        ],
                                        isLoadingFuncs: [
                                        ],
                                        contextInit: [
                                        ],
                                        eventRefiners: {
                                        },
                                        eventDefMemberAdders: [
                                        ],
                                        eventSourceRefiners: {
                                        },
                                        isDraggableTransformers: [
                                        ],
                                        eventDragMutationMassagers: [
                                        ],
                                        eventDefMutationAppliers: [
                                        ],
                                        dateSelectionTransformers: [
                                        ],
                                        datePointTransforms: [
                                        ],
                                        dateSpanTransforms: [
                                        ],
                                        views: {
                                        },
                                        viewPropsTransformers: [
                                        ],
                                        isPropsValid: null,
                                        externalDefTransforms: [
                                        ],
                                        viewContainerAppends: [
                                        ],
                                        eventDropTransformers: [
                                        ],
                                        componentInteractions: [
                                        ],
                                        calendarInteractions: [
                                        ],
                                        themeClasses: {
                                        },
                                        eventSourceDefs: [
                                        ],
                                        cmdFormatter: null,
                                        recurringTypes: [
                                        ],
                                        namedTimeZonedImpl: null,
                                        initialView: '',
                                        elementDraggingImpl: null,
                                        optionChangeHandlers: {
                                        },
                                        scrollGridImpl: null,
                                        contentTypeHandlers: {
                                        },
                                        listenerRefiners: {
                                        },
                                        optionRefiners: {
                                        },
                                        propSetHandlers: {
                                        }
                                    };
                                function a(e) {
                                    for (var t = 0, i = e; t < i.length; t++) {
                                        var o = i[t];
                                        n[o.id] || (n[o.id] = !0, a(o.deps), u = o, r = {
                                            reducers: (s = r).reducers.concat(u.reducers),
                                            isLoadingFuncs: s.isLoadingFuncs.concat(u.isLoadingFuncs),
                                            contextInit: s.contextInit.concat(u.contextInit),
                                            eventRefiners: jw(jw({
                                            }, s.eventRefiners), u.eventRefiners),
                                            eventDefMemberAdders: s.eventDefMemberAdders.concat(u.eventDefMemberAdders),
                                            eventSourceRefiners: jw(jw({
                                            }, s.eventSourceRefiners), u.eventSourceRefiners),
                                            isDraggableTransformers: s.isDraggableTransformers.concat(u.isDraggableTransformers),
                                            eventDragMutationMassagers: s.eventDragMutationMassagers.concat(u.eventDragMutationMassagers),
                                            eventDefMutationAppliers: s.eventDefMutationAppliers.concat(u.eventDefMutationAppliers),
                                            dateSelectionTransformers: s.dateSelectionTransformers.concat(u.dateSelectionTransformers),
                                            datePointTransforms: s.datePointTransforms.concat(u.datePointTransforms),
                                            dateSpanTransforms: s.dateSpanTransforms.concat(u.dateSpanTransforms),
                                            views: jw(jw({
                                            }, s.views), u.views),
                                            viewPropsTransformers: s.viewPropsTransformers.concat(u.viewPropsTransformers),
                                            isPropsValid: u.isPropsValid || s.isPropsValid,
                                            externalDefTransforms: s.externalDefTransforms.concat(u.externalDefTransforms),
                                            viewContainerAppends: s.viewContainerAppends.concat(u.viewContainerAppends),
                                            eventDropTransformers: s.eventDropTransformers.concat(u.eventDropTransformers),
                                            calendarInteractions: s.calendarInteractions.concat(u.calendarInteractions),
                                            componentInteractions: s.componentInteractions.concat(u.componentInteractions),
                                            themeClasses: jw(jw({
                                            }, s.themeClasses), u.themeClasses),
                                            eventSourceDefs: s.eventSourceDefs.concat(u.eventSourceDefs),
                                            cmdFormatter: u.cmdFormatter || s.cmdFormatter,
                                            recurringTypes: s.recurringTypes.concat(u.recurringTypes),
                                            namedTimeZonedImpl: u.namedTimeZonedImpl || s.namedTimeZonedImpl,
                                            initialView: s.initialView || u.initialView,
                                            elementDraggingImpl: s.elementDraggingImpl || u.elementDraggingImpl,
                                            optionChangeHandlers: jw(jw({
                                            }, s.optionChangeHandlers), u.optionChangeHandlers),
                                            scrollGridImpl: u.scrollGridImpl || s.scrollGridImpl,
                                            contentTypeHandlers: jw(jw({
                                            }, s.contentTypeHandlers), u.contentTypeHandlers),
                                            listenerRefiners: jw(jw({
                                            }, s.listenerRefiners), u.listenerRefiners),
                                            optionRefiners: jw(jw({
                                            }, s.optionRefiners), u.optionRefiners),
                                            propSetHandlers: jw(jw({
                                            }, s.propSetHandlers), u.propSetHandlers)
                                        })
                                    }
                                    var s,
                                        u
                                }
                                return e && a(e),
                                    a(t),
                                    r
                            }(e, a)),
                                n = e,
                                r = a,
                                t
                        }),
                        this.buildDateEnv = _b(DE),
                        this.buildTheme = _b(NE),
                        this.parseToolbars = _b(bE),
                        this.buildViewSpecs = _b(aE),
                        this.buildDateProfileGenerator = Lb(IE),
                        this.buildViewApi = _b(zE),
                        this.buildViewUiProps = Lb(OE),
                        this.buildEventUiBySource = _b(RE, xb),
                        this.buildEventUiBases = _b(AE),
                        this.parseContextBusinessHours = Lb(_E),
                        this.buildTitle = _b(WE),
                        this.emitter = new DM,
                        this.actionRunner = new CE(this._handleAction.bind(this), this.updateData.bind(this)),
                        this.currentCalendarOptionsInput = {
                        },
                        this.currentCalendarOptionsRefined = {
                        },
                        this.currentViewOptionsInput = {
                        },
                        this.currentViewOptionsRefined = {
                        },
                        this.currentCalendarOptionsRefiners = {
                        },
                        this.getCurrentData = function () {
                            return a.data
                        },
                        this.dispatch = function (e) {
                            a.actionRunner.request(e)
                        },
                        this.props = e,
                        this.actionRunner.pause();
                    var i = {
                    },
                        o = this.computeOptionsData(e.optionOverrides, i, e.calendarApi),
                        s = o.calendarOptions.initialView || o.pluginHooks.initialView,
                        u = this.computeCurrentViewData(s, o, e.optionOverrides, i);
                    e.calendarApi.currentDataManager = this,
                        this.emitter.setThisContext(e.calendarApi),
                        this.emitter.setOptions(u.options);
                    var l,
                        d,
                        c,
                        m = (l = o.calendarOptions, d = o.dateEnv, null != (c = l.initialDate) ? d.createMarker(c) : iM(l.now, d)),
                        f = u.dateProfileGenerator.build(m);
                    zk(f.activeRange, m) || (m = f.currentRange.start);
                    for (var h = {
                        dateEnv: o.dateEnv,
                        options: o.calendarOptions,
                        pluginHooks: o.pluginHooks,
                        calendarApi: e.calendarApi,
                        dispatch: this.dispatch,
                        emitter: this.emitter,
                        getCurrentData: this.getCurrentData
                    }, p = 0, g = o.pluginHooks.contextInit; p < g.length; p++) (0, g[p])(h);
                    for (var v = function (e, t, n) {
                        var r = t ? t.activeRange : null;
                        return uE({
                        }, function (e, t) {
                            var n = aM(t),
                                r = [
                                ].concat(e.eventSources || [
                                ]),
                                a = [
                                ];
                            e.initialEvents && r.unshift(e.initialEvents),
                                e.events && r.unshift(e.events);
                            for (var i = 0, o = r; i < o.length; i++) {
                                var s = rM(o[i], t, n);
                                s && a.push(s)
                            }
                            return a
                        }(e, n), r, n)
                    }(o.calendarOptions, f, h), y = {
                        dynamicOptionOverrides: i,
                        currentViewType: s,
                        currentDate: m,
                        dateProfile: f,
                        businessHours: this.parseContextBusinessHours(h),
                        eventSources: v,
                        eventUiBases: {
                        },
                        eventStore: {
                            defs: {
                            },
                            instances: {
                            }
                        },
                        renderableEventStore: {
                            defs: {
                            },
                            instances: {
                            }
                        },
                        dateSelection: null,
                        eventSelection: '',
                        eventDrag: null,
                        eventResize: null,
                        selectionConfig: this.buildViewUiProps(h).selectionConfig
                    }, w = jw(jw({
                    }, h), y), b = 0, k = o.pluginHooks.reducers; b < k.length; b++) {
                        var M = k[b];
                        jw(y, M(null, null, w))
                    }
                    HE(y, h) && this.emitter.trigger('loading', !0),
                        this.state = y,
                        this.updateData(),
                        this.actionRunner.resume()
                }
                return e.prototype.resetOptions = function (e, t) {
                    var n = this.props;
                    n.optionOverrides = t ? jw(jw({
                    }, n.optionOverrides), e) : e,
                        this.actionRunner.request({
                            type: 'NOTHING'
                        })
                },
                    e.prototype._handleAction = function (e) {
                        var t = this,
                            n = t.props,
                            r = t.state,
                            a = t.emitter,
                            i = function (e, t) {
                                var n;
                                return 'SET_OPTION' === t.type ? jw(jw({
                                }, e), ((n = {
                                })[t.optionName] = t.rawOptionValue, n)) : e
                            }(r.dynamicOptionOverrides, e),
                            o = this.computeOptionsData(n.optionOverrides, i, n.calendarApi),
                            s = function (e, t) {
                                return 'CHANGE_VIEW_TYPE' === t.type && (e = t.viewType),
                                    e
                            }(r.currentViewType, e),
                            u = this.computeCurrentViewData(s, o, n.optionOverrides, i);
                        n.calendarApi.currentDataManager = this,
                            a.setThisContext(n.calendarApi),
                            a.setOptions(u.options);
                        var l = {
                            dateEnv: o.dateEnv,
                            options: o.calendarOptions,
                            pluginHooks: o.pluginHooks,
                            calendarApi: n.calendarApi,
                            dispatch: this.dispatch,
                            emitter: a,
                            getCurrentData: this.getCurrentData
                        },
                            d = r.currentDate,
                            c = r.dateProfile;
                        this.data && this.data.dateProfileGenerator !== u.dateProfileGenerator && (c = u.dateProfileGenerator.build(d)),
                            d = function (e, t) {
                                return 'CHANGE_DATE' === t.type ? t.dateMarker : e
                            }(d, e),
                            c = function (e, t, n, r) {
                                var a;
                                switch (t.type) {
                                    case 'CHANGE_VIEW_TYPE':
                                        return r.build(t.dateMarker || n);
                                    case 'CHANGE_DATE':
                                        return r.build(t.dateMarker);
                                    case 'PREV':
                                        if ((a = r.buildPrev(e, n)).isValid) return a;
                                        break;
                                    case 'NEXT':
                                        if ((a = r.buildNext(e, n)).isValid) return a
                                }
                                return e
                            }(c, e, d, u.dateProfileGenerator),
                            'PREV' !== e.type && 'NEXT' !== e.type && zk(c.currentRange, d) || (d = c.currentRange.start);
                        for (var m = function (e, t, n, r) {
                            var a,
                                i,
                                o = n ? n.activeRange : null;
                            switch (t.type) {
                                case 'ADD_EVENT_SOURCES':
                                    return uE(e, t.sources, o, r);
                                case 'REMOVE_EVENT_SOURCE':
                                    return a = e,
                                        i = t.sourceId,
                                        kb(a, (function (e) {
                                            return e.sourceId !== i
                                        }));
                                case 'PREV':
                                case 'NEXT':
                                case 'CHANGE_DATE':
                                case 'CHANGE_VIEW_TYPE':
                                    return n ? lE(e, o, r) : e;
                                case 'FETCH_EVENT_SOURCES':
                                    return dE(e, t.sourceIds ? Eb(t.sourceIds) : mE(e, r), o, t.isRefetch || !1, r);
                                case 'RECEIVE_EVENTS':
                                case 'RECEIVE_EVENT_ERROR':
                                    return function (e, t, n, r) {
                                        var a,
                                            i = e[t];
                                        return i && n === i.latestFetchId ? jw(jw({
                                        }, e), ((a = {
                                        })[t] = jw(jw({
                                        }, i), {
                                            isFetching: !1,
                                            fetchRange: r
                                        }), a)) : e
                                    }(e, t.sourceId, t.fetchId, t.fetchRange);
                                case 'REMOVE_ALL_EVENT_SOURCES':
                                    return {
                                    };
                                default:
                                    return e
                            }
                        }(r.eventSources, e, c, l), f = function (e, t, n, r, a) {
                            switch (t.type) {
                                case 'RECEIVE_EVENTS':
                                    return function (e, t, n, r, a, i) {
                                        if (t && n === t.latestFetchId) {
                                            var o = ck(function (e, t, n) {
                                                var r = n.options.eventDataTransform,
                                                    a = t ? t.eventDataTransform : null;
                                                return a && (e = hE(e, a)),
                                                    r && (e = hE(e, r)),
                                                    e
                                            }(a, t, i), t, i);
                                            return r && (o = Cb(o, r, i)),
                                                fk(pE(e, t.sourceId), o)
                                        }
                                        return e
                                    }(e, n[t.sourceId], t.fetchId, t.fetchRange, t.rawEvents, a);
                                case 'ADD_EVENTS':
                                    return function (e, t, n, r) {
                                        return n && (t = Cb(t, n, r)),
                                            fk(e, t)
                                    }(e, t.eventStore, r ? r.activeRange : null, a);
                                case 'RESET_EVENTS':
                                    return t.eventStore;
                                case 'MERGE_EVENTS':
                                    return fk(e, t.eventStore);
                                case 'PREV':
                                case 'NEXT':
                                case 'CHANGE_DATE':
                                case 'CHANGE_VIEW_TYPE':
                                    return r ? Cb(e, r.activeRange, a) : e;
                                case 'REMOVE_EVENTS':
                                    return function (e, t) {
                                        var n = e.defs,
                                            r = e.instances,
                                            a = {
                                            },
                                            i = {
                                            };
                                        for (var o in n) t.defs[o] || (a[o] = n[o]);
                                        for (var s in r) !t.instances[s] && a[r[s].defId] && (i[s] = r[s]);
                                        return {
                                            defs: a,
                                            instances: i
                                        }
                                    }(e, t.eventStore);
                                case 'REMOVE_EVENT_SOURCE':
                                    return pE(e, t.sourceId);
                                case 'REMOVE_ALL_EVENT_SOURCES':
                                    return hk(e, (function (e) {
                                        return !e.sourceId
                                    }));
                                case 'REMOVE_ALL_EVENTS':
                                    return {
                                        defs: {
                                        },
                                        instances: {
                                        }
                                    };
                                default:
                                    return e
                            }
                        }(r.eventStore, e, m, c, l), h = sE(m) && !u.options.progressiveEventRendering && r.renderableEventStore || f, p = this.buildViewUiProps(l), g = p.eventUiSingleBase, v = p.selectionConfig, y = this.buildEventUiBySource(m), w = {
                            dynamicOptionOverrides: i,
                            currentViewType: s,
                            currentDate: d,
                            dateProfile: c,
                            eventSources: m,
                            eventStore: f,
                            renderableEventStore: h,
                            selectionConfig: v,
                            eventUiBases: this.buildEventUiBases(h.defs, g, y),
                            businessHours: this.parseContextBusinessHours(l),
                            dateSelection: gE(r.dateSelection, e),
                            eventSelection: vE(r.eventSelection, e),
                            eventDrag: yE(r.eventDrag, e),
                            eventResize: wE(r.eventResize, e)
                        }, b = jw(jw({
                        }, l), w), k = 0, M = o.pluginHooks.reducers; k < M.length; k++) {
                            var E = M[k];
                            jw(w, E(r, e, b))
                        }
                        var P = HE(r, l),
                            x = HE(w, l);
                        !P && x ? a.trigger('loading', !0) : P && !x && a.trigger('loading', !1),
                            this.state = w,
                            n.onAction && n.onAction(e)
                    },
                    e.prototype.updateData = function () {
                        var e,
                            t,
                            n,
                            r,
                            a,
                            i,
                            o,
                            s,
                            u,
                            l = this.props,
                            d = this.state,
                            c = this.data,
                            m = this.computeOptionsData(l.optionOverrides, d.dynamicOptionOverrides, l.calendarApi),
                            f = this.computeCurrentViewData(d.currentViewType, m, l.optionOverrides, d.dynamicOptionOverrides),
                            h = this.data = jw(jw(jw({
                                viewTitle: this.buildTitle(d.dateProfile, f.options, m.dateEnv),
                                calendarApi: l.calendarApi,
                                dispatch: this.dispatch,
                                emitter: this.emitter,
                                getCurrentData: this.getCurrentData
                            }, m), f), d),
                            p = m.pluginHooks.optionChangeHandlers,
                            g = c && c.calendarOptions,
                            v = m.calendarOptions;
                        if (g && g !== v) for (var y in g.timeZone !== v.timeZone && (d.eventSources = h.eventSources = (i = h.eventSources, s = h, u = (o = d.dateProfile) ? o.activeRange : null, dE(i, mE(i, s), u, !0, s)), d.eventStore = h.eventStore = (e = h.eventStore, t = c.dateEnv, n = h.dateEnv, r = e.defs, a = Mb(e.instances, (function (e) {
                            var a = r[e.defId];
                            return a.allDay || a.recurringDef ? e : jw(jw({
                            }, e), {
                                range: {
                                    start: n.createMarker(t.toDate(e.range.start, e.forcedStartTzo)),
                                    end: n.createMarker(t.toDate(e.range.end, e.forcedEndTzo))
                                },
                                forcedStartTzo: n.canComputeOffset ? null : e.forcedStartTzo,
                                forcedEndTzo: n.canComputeOffset ? null : e.forcedEndTzo
                            })
                        })), {
                            defs: r,
                            instances: a
                        })), p) g[y] !== v[y] && p[y](v[y], h);
                        l.onData && l.onData(h)
                    },
                    e.prototype._computeOptionsData = function (e, t, n) {
                        var r = this.processRawCalendarOptions(e, t),
                            a = r.refinedOptions,
                            i = r.pluginHooks,
                            o = r.localeDefaults,
                            s = r.availableLocaleData;
                        LE(r.extra);
                        var u = this.buildDateEnv(a.timeZone, a.locale, a.weekNumberCalculation, a.firstDay, a.weekText, i, s, a.defaultRangeSeparator),
                            l = this.buildViewSpecs(i.views, e, t, o),
                            d = this.buildTheme(a, i);
                        return {
                            calendarOptions: a,
                            pluginHooks: i,
                            dateEnv: u,
                            viewSpecs: l,
                            theme: d,
                            toolbarConfig: this.parseToolbars(a, e, d, l, n),
                            localeDefaults: o,
                            availableRawLocales: s.map
                        }
                    },
                    e.prototype.processRawCalendarOptions = function (e, t) {
                        var n = uk([nk,
                            e,
                            t]),
                            r = n.locales,
                            a = n.locale,
                            i = this.organizeRawLocales(r),
                            o = i.map,
                            s = this.buildLocale(a || i.defaultCode, o).options,
                            u = this.buildPluginHooks(e.plugins || [
                            ], SE),
                            l = this.currentCalendarOptionsRefiners = jw(jw(jw(jw(jw({
                            }, tk), rk), ak), u.listenerRefiners), u.optionRefiners),
                            d = {
                            },
                            c = uk([nk,
                                s,
                                e,
                                t]),
                            m = {
                            },
                            f = this.currentCalendarOptionsInput,
                            h = this.currentCalendarOptionsRefined,
                            p = !1;
                        for (var g in c) 'plugins' !== g && (c[g] === f[g] || ik[g] && g in f && ik[g](f[g], c[g]) ? m[g] = h[g] : l[g] ? (m[g] = l[g](c[g]), p = !0) : d[g] = f[g]);
                        return p && (this.currentCalendarOptionsInput = c, this.currentCalendarOptionsRefined = m),
                        {
                            rawOptions: this.currentCalendarOptionsInput,
                            refinedOptions: this.currentCalendarOptionsRefined,
                            pluginHooks: u,
                            availableLocaleData: i,
                            localeDefaults: s,
                            extra: d
                        }
                    },
                    e.prototype._computeCurrentViewData = function (e, t, n, r) {
                        var a = t.viewSpecs[e];
                        if (!a) throw new Error('viewType "' + e + '" is not available. Please make sure you\'ve loaded all neccessary plugins');
                        var i = this.processRawViewOptions(a, t.pluginHooks, t.localeDefaults, n, r),
                            o = i.refinedOptions;
                        return LE(i.extra),
                        {
                            viewSpec: a,
                            options: o,
                            dateProfileGenerator: this.buildDateProfileGenerator({
                                dateProfileGeneratorClass: a.optionDefaults.dateProfileGeneratorClass,
                                duration: a.duration,
                                durationUnit: a.durationUnit,
                                usesMinMaxTime: a.optionDefaults.usesMinMaxTime,
                                dateEnv: t.dateEnv,
                                calendarApi: this.props.calendarApi,
                                slotMinTime: o.slotMinTime,
                                slotMaxTime: o.slotMaxTime,
                                showNonCurrentDates: o.showNonCurrentDates,
                                dayCount: o.dayCount,
                                dateAlignment: o.dateAlignment,
                                dateIncrement: o.dateIncrement,
                                hiddenDays: o.hiddenDays,
                                weekends: o.weekends,
                                nowInput: o.now,
                                validRangeInput: o.validRange,
                                visibleRangeInput: o.visibleRange,
                                monthMode: o.monthMode,
                                fixedWeekCount: o.fixedWeekCount
                            }),
                            viewApi: this.buildViewApi(e, this.getCurrentData, t.dateEnv)
                        }
                    },
                    e.prototype.processRawViewOptions = function (e, t, n, r, a) {
                        var i = uk([nk,
                            e.optionDefaults,
                            n,
                            r,
                            e.optionOverrides,
                            a]),
                            o = jw(jw(jw(jw(jw(jw({
                            }, tk), rk), ak), sk), t.listenerRefiners), t.optionRefiners),
                            s = {
                            },
                            u = this.currentViewOptionsInput,
                            l = this.currentViewOptionsRefined,
                            d = !1,
                            c = {
                            };
                        for (var m in i) i[m] === u[m] ? s[m] = l[m] : (i[m] === this.currentCalendarOptionsInput[m] ? m in this.currentCalendarOptionsRefined && (s[m] = this.currentCalendarOptionsRefined[m]) : o[m] ? s[m] = o[m](i[m]) : c[m] = i[m], d = !0);
                        return d && (this.currentViewOptionsInput = i, this.currentViewOptionsRefined = s),
                        {
                            rawOptions: this.currentViewOptionsInput,
                            refinedOptions: this.currentViewOptionsRefined,
                            extra: c
                        }
                    },
                    e
            }();
            function DE(e, t, n, r, a, i, o, s) {
                var u = yM(t || o.defaultCode, o.map);
                return new fM({
                    calendarSystem: 'gregory',
                    timeZone: e,
                    namedTimeZoneImpl: i.namedTimeZonedImpl,
                    locale: u,
                    weekNumberCalculation: n,
                    firstDay: r,
                    weekText: a,
                    cmdFormatter: i.cmdFormatter,
                    defaultSeparator: s
                })
            }
            function NE(e, t) {
                return new (t.themeClasses[e.themeSystem] || GM)(e)
            }
            function IE(e) {
                return new (e.dateProfileGeneratorClass || oE)(e)
            }
            function zE(e, t, n) {
                return new tM(e, t, n)
            }
            function RE(e) {
                return Mb(e, (function (e) {
                    return e.ui
                }))
            }
            function AE(e, t, n) {
                var r = {
                    '': t
                };
                for (var a in e) {
                    var i = e[a];
                    i.sourceId && n[i.sourceId] && (r[a] = n[i.sourceId])
                }
                return r
            }
            function OE(e) {
                var t = e.options;
                return {
                    eventUiSingleBase: yk({
                        display: t.eventDisplay,
                        editable: t.editable,
                        startEditable: t.eventStartEditable,
                        durationEditable: t.eventDurationEditable,
                        constraint: t.eventConstraint,
                        overlap: 'boolean' == typeof t.eventOverlap ? t.eventOverlap : void 0,
                        allow: t.eventAllow,
                        backgroundColor: t.eventBackgroundColor,
                        borderColor: t.eventBorderColor,
                        textColor: t.eventTextColor,
                        color: t.eventColor
                    }, e),
                    selectionConfig: yk({
                        constraint: t.selectConstraint,
                        overlap: 'boolean' == typeof t.selectOverlap ? t.selectOverlap : void 0,
                        allow: t.selectAllow
                    }, e)
                }
            }
            function HE(e, t) {
                for (var n = 0, r = t.pluginHooks.isLoadingFuncs; n < r.length; n++) if ((0, r[n])(e)) return !0;
                return !1
            }
            function _E(e) {
                return t = e.options.businessHours,
                    n = e,
                    ck(function (e) {
                        return (!0 === e ? [
                            {
                            }
                        ] : Array.isArray(e) ? e.filter((function (e) {
                            return e.daysOfWeek
                        })) : 'object' == typeof e && e ? [
                            e
                        ] : [
                        ]).map((function (e) {
                            return jw(jw({
                            }, kM), e)
                        }))
                    }(t), null, n);
                var t,
                    n
            }
            function LE(e, t) {
                for (var n in e) console.warn('Unknown option \'' + n + '\'' + (t ? ' for view \'' + t + '\'' : ''))
            }
            var FE = function (e) {
                function t(t) {
                    var n = e.call(this, t) || this;
                    return n.handleData = function (e) {
                        n.dataManager ? n.setState(e) : n.state = e
                    },
                        n.dataManager = new jE({
                            optionOverrides: t.optionOverrides,
                            calendarApi: t.calendarApi,
                            onData: n.handleData
                        }),
                        n
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        return this.props.children(this.state)
                    },
                    t.prototype.componentDidUpdate = function (e) {
                        var t = this.props.optionOverrides;
                        t !== e.optionOverrides && this.dataManager.resetOptions(t)
                    },
                    t
            }(Nw),
                XE = function () {
                    function e() {
                        this.strictOrder = !1,
                            this.allowReslicing = !1,
                            this.maxCoord = - 1,
                            this.maxStackCnt = - 1,
                            this.levelCoords = [
                            ],
                            this.entriesByLevel = [
                            ],
                            this.stackCnts = {
                            }
                    }
                    return e.prototype.addSegs = function (e) {
                        for (var t = [
                        ], n = 0, r = e; n < r.length; n++) {
                            var a = r[n];
                            this.insertEntry(a, t)
                        }
                        return t
                    },
                        e.prototype.insertEntry = function (e, t) {
                            var n = this.findInsertion(e);
                            return this.isInsertionValid(n, e) ? (this.insertEntryAt(e, n), 1) : this.handleInvalidInsertion(n, e, t)
                        },
                        e.prototype.isInsertionValid = function (e, t) {
                            return (- 1 === this.maxCoord || e.levelCoord + t.thickness <= this.maxCoord) && (- 1 === this.maxStackCnt || e.stackCnt < this.maxStackCnt)
                        },
                        e.prototype.handleInvalidInsertion = function (e, t, n) {
                            return this.allowReslicing && e.touchingEntry ? this.splitEntry(t, e.touchingEntry, n) : (n.push(t), 0)
                        },
                        e.prototype.splitEntry = function (e, t, n) {
                            var r = 0,
                                a = [
                                ],
                                i = e.span,
                                o = t.span;
                            return i.start < o.start && (r += this.insertEntry({
                                index: e.index,
                                thickness: e.thickness,
                                span: {
                                    start: i.start,
                                    end: o.start
                                }
                            }, a)),
                                i.end > o.end && (r += this.insertEntry({
                                    index: e.index,
                                    thickness: e.thickness,
                                    span: {
                                        start: o.end,
                                        end: i.end
                                    }
                                }, a)),
                                r ? (n.push.apply(n, Dw([{
                                    index: e.index,
                                    thickness: e.thickness,
                                    span: GE(o, i)
                                }
                                ], a)), r) : (n.push(e), 0)
                        },
                        e.prototype.insertEntryAt = function (e, t) {
                            var n = this.entriesByLevel,
                                r = this.levelCoords;
                            - 1 === t.lateral ? (VE(r, t.level, t.levelCoord), VE(n, t.level, [
                                e
                            ])) : VE(n[t.level], t.lateral, e),
                                this.stackCnts[qE(e)] = t.stackCnt
                        },
                        e.prototype.findInsertion = function (e) {
                            for (var t = this, n = t.levelCoords, r = t.entriesByLevel, a = t.strictOrder, i = t.stackCnts, o = n.length, s = 0, u = - 1, l = - 1, d = null, c = 0, m = 0; m < o; m += 1) {
                                var f = n[m];
                                if (!a && f >= s + e.thickness) break;
                                for (var h = r[m], p = void 0, g = YE(h, e.span.start, UE), v = g[0] + g[1]; (p = h[v]) && p.span.start < e.span.end;) {
                                    var y = f + p.thickness;
                                    y > s && (s = y, d = p, u = m, l = v),
                                        y === s && (c = Math.max(c, i[qE(p)] + 1)),
                                        v += 1
                                }
                            }
                            var w = 0;
                            if (d) for (w = u + 1; w < o && n[w] < s;) w += 1;
                            var b = - 1;
                            return w < o && n[w] === s && (b = YE(r[w], e.span.end, UE)[0]),
                            {
                                touchingLevel: u,
                                touchingLateral: l,
                                touchingEntry: d,
                                stackCnt: c,
                                levelCoord: s,
                                level: w,
                                lateral: b
                            }
                        },
                        e.prototype.toRects = function () {
                            for (var e = this.entriesByLevel, t = this.levelCoords, n = e.length, r = [
                            ], a = 0; a < n; a += 1) for (var i = e[a], o = t[a], s = 0, u = i; s < u.length; s++) {
                                var l = u[s];
                                r.push(jw(jw({
                                }, l), {
                                    levelCoord: o
                                }))
                            }
                            return r
                        },
                        e
                }();
            function UE(e) {
                return e.span.end
            }
            function qE(e) {
                return e.index + ':' + e.span.start
            }
            function GE(e, t) {
                var n = Math.max(e.start, t.start),
                    r = Math.min(e.end, t.end);
                return n < r ? {
                    start: n,
                    end: r
                }
                    : null
            }
            function VE(e, t, n) {
                e.splice(t, 0, n)
            }
            function YE(e, t, n) {
                var r = 0,
                    a = e.length;
                if (!a || t < n(e[r])) return [0,
                    0];
                if (t > n(e[a - 1])) return [a,
                    0];
                for (; r < a;) {
                    var i = Math.floor(r + (a - r) / 2),
                        o = n(e[i]);
                    if (t < o) a = i;
                    else {
                        if (!(t > o)) return [i,
                            1];
                        r = i + 1
                    }
                }
                return [r,
                    0]
            }
            var BE = function () {
                function e(e) {
                    this.component = e.component,
                        this.isHitComboAllowed = e.isHitComboAllowed || null
                }
                return e.prototype.destroy = function () {
                },
                    e
            }();
            function $E(e, t) {
                return {
                    component: e,
                    el: t.el,
                    useEventCenter: null == t.useEventCenter || t.useEventCenter,
                    isHitComboAllowed: t.isHitComboAllowed || null
                }
            }
            var QE = {
            };
            (function () {
                function e(e, t) {
                    this.emitter = new DM
                }
                e.prototype.destroy = function () {
                },
                    e.prototype.setMirrorIsVisible = function (e) {
                    },
                    e.prototype.setMirrorNeedsRevert = function (e) {
                    },
                    e.prototype.setAutoScrollEnabled = function (e) {
                    }
            })(),
                Boolean;
            var KE = function (e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this,
                            t = this.props.widgetGroups.map((function (t) {
                                return e.renderWidgetGroup(t)
                            }));
                        return Iw.apply(void 0, Dw(['div',
                            {
                                className: 'fc-toolbar-chunk'
                            }
                        ], t))
                    },
                    t.prototype.renderWidgetGroup = function (e) {
                        for (var t = this.props, n = this.context.theme, r = [
                        ], a = !0, i = 0, o = e; i < o.length; i++) {
                            var s = o[i],
                                u = s.buttonName,
                                l = s.buttonClick,
                                d = s.buttonText,
                                c = s.buttonIcon,
                                m = s.buttonHint;
                            if ('title' === u) a = !1,
                                r.push(Iw('h2', {
                                    className: 'fc-toolbar-title',
                                    id: t.titleId
                                }, t.title));
                            else {
                                var f = u === t.activeButton,
                                    h = !t.isTodayEnabled && 'today' === u || !t.isPrevEnabled && 'prev' === u || !t.isNextEnabled && 'next' === u,
                                    p = [
                                        'fc-' + u + '-button',
                                        n.getClass('button')
                                    ];
                                f && p.push(n.getClass('buttonActive')),
                                    r.push(Iw('button', {
                                        type: 'button',
                                        title: 'function' == typeof m ? m(t.navUnit) : m,
                                        disabled: h,
                                        'aria-pressed': f,
                                        className: p.join(' '),
                                        onClick: l
                                    }, d || (c ? Iw('span', {
                                        className: c
                                    }) : '')))
                            }
                        }
                        if (r.length > 1) {
                            var g = a && n.getClass('buttonGroup') || '';
                            return Iw.apply(void 0, Dw(['div',
                                {
                                    className: g
                                }
                            ], r))
                        }
                        return r[0]
                    },
                    t
            }(_M),
                JE = function (e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e,
                                t,
                                n = this.props,
                                r = n.model,
                                a = n.extraClassName,
                                i = !1,
                                o = r.sectionWidgets,
                                s = o.center;
                            return o.left ? (i = !0, e = o.left) : e = o.start,
                                o.right ? (i = !0, t = o.right) : t = o.end,
                                Iw('div', {
                                    className: [
                                        a || '',
                                        'fc-toolbar',
                                        i ? 'fc-toolbar-ltr' : ''
                                    ].join(' ')
                                }, this.renderSection('start', e || [
                                ]), this.renderSection('center', s || [
                                ]), this.renderSection('end', t || [
                                ]))
                        },
                        t.prototype.renderSection = function (e, t) {
                            var n = this.props;
                            return Iw(KE, {
                                key: e,
                                widgetGroups: t,
                                title: n.title,
                                navUnit: n.navUnit,
                                activeButton: n.activeButton,
                                isTodayEnabled: n.isTodayEnabled,
                                isPrevEnabled: n.isPrevEnabled,
                                isNextEnabled: n.isNextEnabled,
                                titleId: n.titleId
                            })
                        },
                        t
                }(_M),
                ZE = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            availableWidth: null
                        },
                            t.handleEl = function (e) {
                                t.el = e,
                                    XM(t.props.elRef, e),
                                    t.updateAvailableWidth()
                            },
                            t.handleResize = function () {
                                t.updateAvailableWidth()
                            },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = this.state,
                                n = e.aspectRatio,
                                r = [
                                    'fc-view-harness',
                                    n || e.liquid || e.height ? 'fc-view-harness-active' : 'fc-view-harness-passive'
                                ],
                                a = '',
                                i = '';
                            return n ? null !== t.availableWidth ? a = t.availableWidth / n : i = 1 / n * 100 + '%' : a = e.height || '',
                                Iw('div', {
                                    'aria-labelledby': e.labeledById,
                                    ref: this.handleEl,
                                    className: r.join(' '),
                                    style: {
                                        height: a,
                                        paddingBottom: i
                                    }
                                }, e.children)
                        },
                        t.prototype.componentDidMount = function () {
                            this.context.addResizeHandler(this.handleResize)
                        },
                        t.prototype.componentWillUnmount = function () {
                            this.context.removeResizeHandler(this.handleResize)
                        },
                        t.prototype.updateAvailableWidth = function () {
                            this.el && this.props.aspectRatio && this.setState({
                                availableWidth: this.el.offsetWidth
                            })
                        },
                        t
                }(_M),
                eP = function (e) {
                    function t(t) {
                        var n = e.call(this, t) || this;
                        return n.handleSegClick = function (e, t) {
                            var r = n.component,
                                a = r.context,
                                i = Ok(t);
                            if (i && r.isValidSegDownEl(e.target)) {
                                var o = Lw(e.target, '.fc-event-forced-url'),
                                    s = o ? o.querySelector('a[href]').href : '';
                                a.emitter.trigger('eventClick', {
                                    el: t,
                                    event: new sM(r.context, i.eventRange.def, i.eventRange.instance),
                                    jsEvent: e,
                                    view: a.viewApi
                                }),
                                    s && !e.defaultPrevented && (window.location.href = s)
                            }
                        },
                            n.destroy = Yw(t.el, 'click', '.fc-event', n.handleSegClick),
                            n
                    }
                    return Ww(t, e),
                        t
                }(BE),
                tP = function (e) {
                    function t(t) {
                        var n,
                            r,
                            a,
                            i,
                            o = e.call(this, t) || this;
                        return o.handleEventElRemove = function (e) {
                            e === o.currentSegEl && o.handleSegLeave(null, o.currentSegEl)
                        },
                            o.handleSegEnter = function (e, t) {
                                Ok(t) && (o.currentSegEl = t, o.triggerEvent('eventMouseEnter', e, t))
                            },
                            o.handleSegLeave = function (e, t) {
                                o.currentSegEl && (o.currentSegEl = null, o.triggerEvent('eventMouseLeave', e, t))
                            },
                            o.removeHoverListeners = (n = t.el, '.fc-event', r = o.handleSegEnter, a = o.handleSegLeave, Yw(n, 'mouseover', '.fc-event', (function (e, t) {
                                if (t !== i) {
                                    i = t,
                                        r(e, t);
                                    var n = function (e) {
                                        i = null,
                                            a(e, t),
                                            t.removeEventListener('mouseleave', n)
                                    };
                                    t.addEventListener('mouseleave', n)
                                }
                            }))),
                            o
                    }
                    return Ww(t, e),
                        t.prototype.destroy = function () {
                            this.removeHoverListeners()
                        },
                        t.prototype.triggerEvent = function (e, t, n) {
                            var r = this.component,
                                a = r.context,
                                i = Ok(n);
                            t && !r.isValidSegDownEl(t.target) || a.emitter.trigger(e, {
                                el: n,
                                event: new sM(a, i.eventRange.def, i.eventRange.instance),
                                jsEvent: t,
                                view: a.viewApi
                            })
                        },
                        t
                }(BE),
                nP = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.buildViewContext = _b(OM),
                            t.buildViewPropTransformers = _b(aP),
                            t.buildToolbarProps = _b(rP),
                            t.headerRef = zw(),
                            t.footerRef = zw(),
                            t.interactionsStore = {
                            },
                            t.state = {
                                viewLabelId: Vw()
                            },
                            t.registerInteractiveComponent = function (e, n) {
                                var r = $E(e, n),
                                    a = [
                                        eP,
                                        tP
                                    ].concat(t.props.pluginHooks.componentInteractions).map((function (e) {
                                        return new e(r)
                                    }));
                                t.interactionsStore[e.uid] = a,
                                    QE[e.uid] = r
                            },
                            t.unregisterInteractiveComponent = function (e) {
                                for (var n = 0, r = t.interactionsStore[e.uid]; n < r.length; n++) r[n].destroy();
                                delete t.interactionsStore[e.uid],
                                    delete QE[e.uid]
                            },
                            t.resizeRunner = new TE((function () {
                                t.props.emitter.trigger('_resize', !0),
                                    t.props.emitter.trigger('windowResize', {
                                        view: t.props.viewApi
                                    })
                            })),
                            t.handleWindowResize = function (e) {
                                var n = t.props.options;
                                n.handleWindowResize && e.target === window && t.resizeRunner.request(n.windowResizeDelay)
                            },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e,
                                t = this.props,
                                n = t.toolbarConfig,
                                r = t.options,
                                a = this.buildToolbarProps(t.viewSpec, t.dateProfile, t.dateProfileGenerator, t.currentDate, iM(t.options.now, t.dateEnv), t.viewTitle),
                                i = !1,
                                o = '';
                            t.isHeightAuto || t.forPrint ? o = '' : null != r.height ? i = !0 : null != r.contentHeight ? o = r.contentHeight : e = Math.max(r.aspectRatio, 0.5);
                            var s = this.buildViewContext(t.viewSpec, t.viewApi, t.options, t.dateProfileGenerator, t.dateEnv, t.theme, t.pluginHooks, t.dispatch, t.getCurrentData, t.emitter, t.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent),
                                u = n.header && n.header.hasTitle ? this.state.viewLabelId : '';
                            return Iw(AM.Provider, {
                                value: s
                            }, n.header && Iw(JE, jw({
                                ref: this.headerRef,
                                extraClassName: 'fc-header-toolbar',
                                model: n.header,
                                titleId: u
                            }, a)), Iw(ZE, {
                                liquid: i,
                                height: o,
                                aspectRatio: e,
                                labeledById: u
                            }, this.renderView(t), this.buildAppendContent()), n.footer && Iw(JE, jw({
                                ref: this.footerRef,
                                extraClassName: 'fc-footer-toolbar',
                                model: n.footer,
                                titleId: ''
                            }, a)))
                        },
                        t.prototype.componentDidMount = function () {
                            var e = this.props;
                            this.calendarInteractions = e.pluginHooks.calendarInteractions.map((function (t) {
                                return new t(e)
                            })),
                                window.addEventListener('resize', this.handleWindowResize);
                            var t = e.pluginHooks.propSetHandlers;
                            for (var n in t) t[n](e[n], e)
                        },
                        t.prototype.componentDidUpdate = function (e) {
                            var t = this.props,
                                n = t.pluginHooks.propSetHandlers;
                            for (var r in n) t[r] !== e[r] && n[r](t[r], t)
                        },
                        t.prototype.componentWillUnmount = function () {
                            window.removeEventListener('resize', this.handleWindowResize),
                                this.resizeRunner.clear();
                            for (var e = 0, t = this.calendarInteractions; e < t.length; e++) t[e].destroy();
                            this.props.emitter.trigger('_unmount')
                        },
                        t.prototype.buildAppendContent = function () {
                            var e = this.props,
                                t = e.pluginHooks.viewContainerAppends.map((function (t) {
                                    return t(e)
                                }));
                            return Iw.apply(void 0, Dw([Rw,
                                {
                                }
                            ], t))
                        },
                        t.prototype.renderView = function (e) {
                            for (var t = e.pluginHooks, n = e.viewSpec, r = {
                                dateProfile: e.dateProfile,
                                businessHours: e.businessHours,
                                eventStore: e.renderableEventStore,
                                eventUiBases: e.eventUiBases,
                                dateSelection: e.dateSelection,
                                eventSelection: e.eventSelection,
                                eventDrag: e.eventDrag,
                                eventResize: e.eventResize,
                                isHeightAuto: e.isHeightAuto,
                                forPrint: e.forPrint
                            }, a = 0, i = this.buildViewPropTransformers(t.viewPropsTransformers); a < i.length; a++) {
                                var o = i[a];
                                jw(r, o.transform(r, e))
                            }
                            var s = n.component;
                            return Iw(s, jw({
                            }, r))
                        },
                        t
                }(HM);
            function rP(e, t, n, r, a, i) {
                var o = n.build(a, void 0, !1),
                    s = n.buildPrev(t, r, !1),
                    u = n.buildNext(t, r, !1);
                return {
                    title: i,
                    activeButton: e.type,
                    navUnit: e.singleUnit,
                    isTodayEnabled: o.isValid && !zk(t.currentRange, a),
                    isPrevEnabled: s.isValid,
                    isNextEnabled: u.isValid
                }
            }
            function aP(e) {
                return e.map((function (e) {
                    return new e
                }))
            }
            var iP = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        forPrint: !1
                    },
                        t.handleBeforePrint = function () {
                            t.setState({
                                forPrint: !0
                            })
                        },
                        t.handleAfterPrint = function () {
                            t.setState({
                                forPrint: !1
                            })
                        },
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.props,
                            t = e.options,
                            n = this.state.forPrint,
                            r = n || 'auto' === t.height || 'auto' === t.contentHeight,
                            a = r || null == t.height ? '' : t.height,
                            i = [
                                'fc',
                                n ? 'fc-media-print' : 'fc-media-screen',
                                'fc-direction-' + t.direction,
                                e.theme.getClass('root')
                            ];
                        return MM() || i.push('fc-liquid-hack'),
                            e.children(i, a, r, n)
                    },
                    t.prototype.componentDidMount = function () {
                        var e = this.props.emitter;
                        e.on('_beforeprint', this.handleBeforePrint),
                            e.on('_afterprint', this.handleAfterPrint)
                    },
                    t.prototype.componentWillUnmount = function () {
                        var e = this.props.emitter;
                        e.off('_beforeprint', this.handleBeforePrint),
                            e.off('_afterprint', this.handleAfterPrint)
                    },
                    t
            }(_M),
                oP = 'fc-col-header-cell';
            function sP(e) {
                return e.text
            }
            var uP = function (e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.context,
                            t = e.dateEnv,
                            n = e.options,
                            r = e.theme,
                            a = e.viewApi,
                            i = this.props,
                            o = i.date,
                            s = i.dateProfile,
                            u = xM(o, i.todayRange, null, s),
                            l = [
                                oP
                            ].concat(SM(u, r)),
                            d = t.format(o, i.dayHeaderFormat),
                            c = !u.isDisabled && i.colCnt > 1 ? jM(this.context, o) : {
                            },
                            m = jw(jw(jw({
                                date: t.toDate(o),
                                view: a
                            }, i.extraHookProps), {
                                text: d
                            }), u);
                        return Iw(YM, {
                            hookProps: m,
                            classNames: n.dayHeaderClassNames,
                            content: n.dayHeaderContent,
                            defaultContent: sP,
                            didMount: n.dayHeaderDidMount,
                            willUnmount: n.dayHeaderWillUnmount
                        }, (function (e, t, n, r) {
                            return Iw('th', jw({
                                ref: e,
                                role: 'columnheader',
                                className: l.concat(t).join(' '),
                                'data-date': u.isDisabled ? void 0 : Ab(o),
                                colSpan: i.colSpan
                            }, i.extraDataAttrs), Iw('div', {
                                className: 'fc-scrollgrid-sync-inner'
                            }, !u.isDisabled && Iw('a', jw({
                                ref: n,
                                className: [
                                    'fc-col-header-cell-cushion',
                                    i.isSticky ? 'fc-sticky' : ''
                                ].join(' ')
                            }, c), r)))
                        }))
                    },
                    t
            }(_M),
                lP = ek({
                    weekday: 'long'
                }),
                dP = function (e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = this.context,
                                n = t.dateEnv,
                                r = t.theme,
                                a = t.viewApi,
                                i = t.options,
                                o = ib(new Date(259200000), e.dow),
                                s = {
                                    dow: e.dow,
                                    isDisabled: !1,
                                    isFuture: !1,
                                    isPast: !1,
                                    isToday: !1,
                                    isOther: !1
                                },
                                u = [
                                    oP
                                ].concat(SM(s, r), e.extraClassNames || [
                                ]),
                                l = n.format(o, e.dayHeaderFormat),
                                d = jw(jw(jw(jw({
                                    date: o
                                }, s), {
                                    view: a
                                }), e.extraHookProps), {
                                    text: l
                                });
                            return Iw(YM, {
                                hookProps: d,
                                classNames: i.dayHeaderClassNames,
                                content: i.dayHeaderContent,
                                defaultContent: sP,
                                didMount: i.dayHeaderDidMount,
                                willUnmount: i.dayHeaderWillUnmount
                            }, (function (t, r, a, i) {
                                return Iw('th', jw({
                                    ref: t,
                                    role: 'columnheader',
                                    className: u.concat(r).join(' '),
                                    colSpan: e.colSpan
                                }, e.extraDataAttrs), Iw('div', {
                                    className: 'fc-scrollgrid-sync-inner'
                                }, Iw('a', {
                                    'aria-label': n.format(o, lP),
                                    className: [
                                        'fc-col-header-cell-cushion',
                                        e.isSticky ? 'fc-sticky' : ''
                                    ].join(' '),
                                    ref: a
                                }, i)))
                            }))
                        },
                        t
                }(_M),
                cP = function (e) {
                    function t(t, n) {
                        var r = e.call(this, t, n) || this;
                        return r.initialNowDate = iM(n.options.now, n.dateEnv),
                            r.initialNowQueriedMs = (new Date).valueOf(),
                            r.state = r.computeTiming().currentState,
                            r
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = this.state;
                            return e.children(t.nowDate, t.todayRange)
                        },
                        t.prototype.componentDidMount = function () {
                            this.setTimeout()
                        },
                        t.prototype.componentDidUpdate = function (e) {
                            e.unit !== this.props.unit && (this.clearTimeout(), this.setTimeout())
                        },
                        t.prototype.componentWillUnmount = function () {
                            this.clearTimeout()
                        },
                        t.prototype.computeTiming = function () {
                            var e = this.props,
                                t = this.context,
                                n = ob(this.initialNowDate, (new Date).valueOf() - this.initialNowQueriedMs),
                                r = t.dateEnv.startOf(n, e.unit),
                                a = t.dateEnv.add(r, Db(1, e.unit)),
                                i = a.valueOf() - n.valueOf();
                            return i = Math.min(86400000, i),
                            {
                                currentState: {
                                    nowDate: r,
                                    todayRange: mP(r)
                                },
                                nextState: {
                                    nowDate: a,
                                    todayRange: mP(a)
                                },
                                waitMs: i
                            }
                        },
                        t.prototype.setTimeout = function () {
                            var e = this,
                                t = this.computeTiming(),
                                n = t.nextState,
                                r = t.waitMs;
                            this.timeoutId = setTimeout((function () {
                                e.setState(n, (function () {
                                    e.setTimeout()
                                }))
                            }), r)
                        },
                        t.prototype.clearTimeout = function () {
                            this.timeoutId && clearTimeout(this.timeoutId)
                        },
                        t.contextType = AM,
                        t
                }(Nw);
            function mP(e) {
                var t = lb(e);
                return {
                    start: t,
                    end: ib(t, 1)
                }
            }
            var fP = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.createDayHeaderFormatter = _b(hP),
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.context,
                            t = this.props,
                            n = t.dates,
                            r = t.dateProfile,
                            a = t.datesRepDistinctDays,
                            i = t.renderIntro,
                            o = this.createDayHeaderFormatter(e.options.dayHeaderFormat, a, n.length);
                        return Iw(cP, {
                            unit: 'day'
                        }, (function (e, t) {
                            return Iw('tr', {
                                role: 'row'
                            }, i && i('day'), n.map((function (e) {
                                return a ? Iw(uP, {
                                    key: e.toISOString(),
                                    date: e,
                                    dateProfile: r,
                                    todayRange: t,
                                    colCnt: n.length,
                                    dayHeaderFormat: o
                                }) : Iw(dP, {
                                    key: e.getUTCDay(),
                                    dow: e.getUTCDay(),
                                    dayHeaderFormat: o
                                })
                            })))
                        }))
                    },
                    t
            }(_M);
            function hP(e, t, n) {
                return e || function (e, t) {
                    return ek(!e || t > 10 ? {
                        weekday: 'short'
                    }
                        : t > 1 ? {
                            weekday: 'short',
                            month: 'numeric',
                            day: 'numeric',
                            omitCommas: !0
                        }
                            : {
                                weekday: 'long'
                            })
                }(t, n)
            }
            var pP = function () {
                function e(e, t) {
                    for (var n = e.start, r = e.end, a = [
                    ], i = [
                    ], o = - 1; n < r;) t.isHiddenDay(n) ? a.push(o + 0.5) : (o += 1, a.push(o), i.push(n)),
                        n = ib(n, 1);
                    this.dates = i,
                        this.indices = a,
                        this.cnt = i.length
                }
                return e.prototype.sliceRange = function (e) {
                    var t = this.getDateDayIndex(e.start),
                        n = this.getDateDayIndex(ib(e.end, - 1)),
                        r = Math.max(0, t),
                        a = Math.min(this.cnt - 1, n);
                    return (r = Math.ceil(r)) <= (a = Math.floor(a)) ? {
                        firstIndex: r,
                        lastIndex: a,
                        isStart: t === r,
                        isEnd: n === a
                    }
                        : null
                },
                    e.prototype.getDateDayIndex = function (e) {
                        var t = this.indices,
                            n = Math.floor(sb(this.dates[0], e));
                        return n < 0 ? t[0] - 1 : n >= t.length ? t[t.length - 1] + 1 : t[n]
                    },
                    e
            }(),
                gP = function () {
                    function e(e, t) {
                        var n,
                            r,
                            a,
                            i = e.dates;
                        if (t) {
                            for (r = i[0].getUTCDay(), n = 1; n < i.length && i[n].getUTCDay() !== r; n += 1);
                            a = Math.ceil(i.length / n)
                        } else a = 1,
                            n = i.length;
                        this.rowCnt = a,
                            this.colCnt = n,
                            this.daySeries = e,
                            this.cells = this.buildCells(),
                            this.headerDates = this.buildHeaderDates()
                    }
                    return e.prototype.buildCells = function () {
                        for (var e = [
                        ], t = 0; t < this.rowCnt; t += 1) {
                            for (var n = [
                            ], r = 0; r < this.colCnt; r += 1) n.push(this.buildCell(t, r));
                            e.push(n)
                        }
                        return e
                    },
                        e.prototype.buildCell = function (e, t) {
                            var n = this.daySeries.dates[e * this.colCnt + t];
                            return {
                                key: n.toISOString(),
                                date: n
                            }
                        },
                        e.prototype.buildHeaderDates = function () {
                            for (var e = [
                            ], t = 0; t < this.colCnt; t += 1) e.push(this.cells[0][t].date);
                            return e
                        },
                        e.prototype.sliceRange = function (e) {
                            var t = this.colCnt,
                                n = this.daySeries.sliceRange(e),
                                r = [
                                ];
                            if (n) for (var a = n.firstIndex, i = n.lastIndex, o = a; o <= i;) {
                                var s = Math.floor(o / t),
                                    u = Math.min((s + 1) * t, i + 1);
                                r.push({
                                    row: s,
                                    firstCol: o % t,
                                    lastCol: (u - 1) % t,
                                    isStart: n.isStart && o === a,
                                    isEnd: n.isEnd && u - 1 === i
                                }),
                                    o = u
                            }
                            return r
                        },
                        e
                }(),
                vP = function () {
                    function e() {
                        this.sliceBusinessHours = _b(this._sliceBusinessHours),
                            this.sliceDateSelection = _b(this._sliceDateSpan),
                            this.sliceEventStore = _b(this._sliceEventStore),
                            this.sliceEventDrag = _b(this._sliceInteraction),
                            this.sliceEventResize = _b(this._sliceInteraction),
                            this.forceDayIfListItem = !1
                    }
                    return e.prototype.sliceProps = function (e, t, n, r) {
                        for (var a = [
                        ], i = 4; i < arguments.length; i++) a[i - 4] = arguments[i];
                        var o = e.eventUiBases,
                            s = this.sliceEventStore.apply(this, Dw([e.eventStore,
                                o,
                                t,
                                n], a));
                        return {
                            dateSelectionSegs: this.sliceDateSelection.apply(this, Dw([e.dateSelection,
                                o,
                                r], a)),
                            businessHourSegs: this.sliceBusinessHours.apply(this, Dw([e.businessHours,
                                t,
                                n,
                                r], a)),
                            fgEventSegs: s.fg,
                            bgEventSegs: s.bg,
                            eventDrag: this.sliceEventDrag.apply(this, Dw([e.eventDrag,
                                o,
                                t,
                                n], a)),
                            eventResize: this.sliceEventResize.apply(this, Dw([e.eventResize,
                                o,
                                t,
                                n], a)),
                            eventSelection: e.eventSelection
                        }
                    },
                        e.prototype.sliceNowDate = function (e, t) {
                            for (var n = [
                            ], r = 2; r < arguments.length; r++) n[r - 2] = arguments[r];
                            return this._sliceDateSpan.apply(this, Dw([{
                                range: {
                                    start: e,
                                    end: ob(e, 1)
                                },
                                allDay: !1
                            },
                            {
                            },
                                t], n))
                        },
                        e.prototype._sliceBusinessHours = function (e, t, n, r) {
                            for (var a = [
                            ], i = 4; i < arguments.length; i++) a[i - 4] = arguments[i];
                            return e ? this._sliceEventStore.apply(this, Dw([Cb(e, yP(t, Boolean(n)), r),
                            {
                            },
                                t,
                                n], a)).bg : [
                            ]
                        },
                        e.prototype._sliceEventStore = function (e, t, n, r) {
                            for (var a = [
                            ], i = 4; i < arguments.length; i++) a[i - 4] = arguments[i];
                            if (e) {
                                var o = Rk(e, t, yP(n, Boolean(r)), r);
                                return {
                                    bg: this.sliceEventRanges(o.bg, a),
                                    fg: this.sliceEventRanges(o.fg, a)
                                }
                            }
                            return {
                                bg: [
                                ],
                                fg: [
                                ]
                            }
                        },
                        e.prototype._sliceInteraction = function (e, t, n, r) {
                            for (var a = [
                            ], i = 4; i < arguments.length; i++) a[i - 4] = arguments[i];
                            if (!e) return null;
                            var o = Rk(e.mutatedEvents, t, yP(n, Boolean(r)), r);
                            return {
                                segs: this.sliceEventRanges(o.fg, a),
                                affectedInstances: e.affectedEvents.instances,
                                isEvent: e.isEvent
                            }
                        },
                        e.prototype._sliceDateSpan = function (e, t, n) {
                            for (var r = [
                            ], a = 3; a < arguments.length; a++) r[a - 3] = arguments[a];
                            if (!e) return [];
                            for (var i = Kk(e, t, n), o = this.sliceRange.apply(this, Dw([e.range], r)), s = 0, u = o; s < u.length; s++) {
                                var l = u[s];
                                l.eventRange = i
                            }
                            return o
                        },
                        e.prototype.sliceEventRanges = function (e, t) {
                            for (var n = [
                            ], r = 0, a = e; r < a.length; r++) {
                                var i = a[r];
                                n.push.apply(n, this.sliceEventRange(i, t))
                            }
                            return n
                        },
                        e.prototype.sliceEventRange = function (e, t) {
                            var n = e.range;
                            this.forceDayIfListItem && 'list-item' === e.ui.display && (n = {
                                start: n.start,
                                end: ib(n.start, 1)
                            });
                            for (var r = this.sliceRange.apply(this, Dw([n], t)), a = 0, i = r; a < i.length; a++) {
                                var o = i[a];
                                o.eventRange = e,
                                    o.isStart = e.isStart && o.isStart,
                                    o.isEnd = e.isEnd && o.isEnd
                            }
                            return r
                        },
                        e
                }();
            function yP(e, t) {
                var n = e.activeRange;
                return t ? n : {
                    start: ob(n.start, e.slotMinTime.milliseconds),
                    end: ob(n.end, e.slotMaxTime.milliseconds - 86400000)
                }
            }
            var wP = /^(visible|hidden)$/,
                bP = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleEl = function (e) {
                            t.el = e,
                                XM(t.props.elRef, e)
                        },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = e.liquid,
                                n = e.liquidIsAbsolute,
                                r = t && n,
                                a = [
                                    'fc-scroller'
                                ];
                            return t && (n ? a.push('fc-scroller-liquid-absolute') : a.push('fc-scroller-liquid')),
                                Iw('div', {
                                    ref: this.handleEl,
                                    className: a.join(' '),
                                    style: {
                                        overflowX: e.overflowX,
                                        overflowY: e.overflowY,
                                        left: r && - (e.overcomeLeft || 0) || '',
                                        right: r && - (e.overcomeRight || 0) || '',
                                        bottom: r && - (e.overcomeBottom || 0) || '',
                                        marginLeft: !r && - (e.overcomeLeft || 0) || '',
                                        marginRight: !r && - (e.overcomeRight || 0) || '',
                                        marginBottom: !r && - (e.overcomeBottom || 0) || '',
                                        maxHeight: e.maxHeight || ''
                                    }
                                }, e.children)
                        },
                        t.prototype.needsXScrolling = function () {
                            if (wP.test(this.props.overflowX)) return !1;
                            for (var e = this.el, t = this.el.getBoundingClientRect().width - this.getYScrollbarWidth(), n = e.children, r = 0; r < n.length; r += 1) if (n[r].getBoundingClientRect().width > t) return !0;
                            return !1
                        },
                        t.prototype.needsYScrolling = function () {
                            if (wP.test(this.props.overflowY)) return !1;
                            for (var e = this.el, t = this.el.getBoundingClientRect().height - this.getXScrollbarWidth(), n = e.children, r = 0; r < n.length; r += 1) if (n[r].getBoundingClientRect().height > t) return !0;
                            return !1
                        },
                        t.prototype.getXScrollbarWidth = function () {
                            return wP.test(this.props.overflowX) ? 0 : this.el.offsetHeight - this.el.clientHeight
                        },
                        t.prototype.getYScrollbarWidth = function () {
                            return wP.test(this.props.overflowY) ? 0 : this.el.offsetWidth - this.el.clientWidth
                        },
                        t
                }(_M),
                kP = function () {
                    function e(e) {
                        var t = this;
                        this.masterCallback = e,
                            this.currentMap = {
                            },
                            this.depths = {
                            },
                            this.callbackMap = {
                            },
                            this.handleValue = function (e, n) {
                                var r = t,
                                    a = r.depths,
                                    i = r.currentMap,
                                    o = !1,
                                    s = !1;
                                null !== e ? (o = n in i, i[n] = e, a[n] = (a[n] || 0) + 1, s = !0) : (a[n] -= 1, a[n] || (delete i[n], delete t.callbackMap[n], o = !0)),
                                    t.masterCallback && (o && t.masterCallback(null, String(n)), s && t.masterCallback(e, String(n)))
                            }
                    }
                    return e.prototype.createRef = function (e) {
                        var t = this,
                            n = this.callbackMap[e];
                        return n || (n = this.callbackMap[e] = function (n) {
                            t.handleValue(n, String(e))
                        }),
                            n
                    },
                        e.prototype.collect = function (e, t, n) {
                            return function (e, t, n, r) {
                                void 0 === t && (t = 0),
                                    void 0 === r && (r = 1);
                                var a = [
                                ];
                                null == n && (n = Object.keys(e).length);
                                for (var i = t; i < n; i += r) {
                                    var o = e[i];
                                    void 0 !== o && a.push(o)
                                }
                                return a
                            }(this.currentMap, e, t, n)
                        },
                        e.prototype.getAll = function () {
                            return Pb(this.currentMap)
                        },
                        e
                }();
            function MP(e, t) {
                return e.liquid && t.liquid
            }
            function EP(e, t) {
                return Hb(e, t, xb)
            }
            function PP(e, t) {
                for (var n = [
                ], r = 0, a = e; r < a.length; r++) for (var i = a[r], o = i.span || 1, s = 0; s < o; s += 1) n.push(Iw('col', {
                    style: {
                        width: 'shrink' === i.width ? xP(t) : i.width || '',
                        minWidth: i.minWidth || ''
                    }
                }));
                return Iw.apply(void 0, Dw(['colgroup',
                    {
                    }
                ], n))
            }
            function xP(e) {
                return null == e ? 4 : e
            }
            function SP(e, t) {
                var n = [
                    'fc-scrollgrid-section',
                    'fc-scrollgrid-section-' + e.type,
                    e.className
                ];
                return t && e.liquid && null == e.maxHeight && n.push('fc-scrollgrid-section-liquid'),
                    e.isSticky && n.push('fc-scrollgrid-section-sticky'),
                    n
            }
            function TP(e) {
                return Iw('div', {
                    className: 'fc-scrollgrid-sticky-shim',
                    style: {
                        width: e.clientWidth,
                        minWidth: e.tableMinWidth
                    }
                })
            }
            function CP(e) {
                var t = e.stickyHeaderDates;
                return null != t && 'auto' !== t || (t = 'auto' === e.height || 'auto' === e.viewHeight),
                    t
            }
            var WP = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.processCols = _b((function (e) {
                        return e
                    }), EP),
                        t.renderMicroColGroup = _b(PP),
                        t.scrollerRefs = new kP,
                        t.scrollerElRefs = new kP(t._handleScrollerEl.bind(t)),
                        t.state = {
                            shrinkWidth: null,
                            forceYScrollbars: !1,
                            scrollerClientWidths: {
                            },
                            scrollerClientHeights: {
                            }
                        },
                        t.handleSizing = function () {
                            t.setState(jw({
                                shrinkWidth: t.computeShrinkWidth()
                            }, t.computeScrollerDims()))
                        },
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this,
                            t = e.props,
                            n = e.state,
                            r = e.context,
                            a = t.sections || [
                            ],
                            i = this.processCols(t.cols),
                            o = this.renderMicroColGroup(i, n.shrinkWidth),
                            s = function (e, t) {
                                var n = [
                                    'fc-scrollgrid',
                                    t.theme.getClass('table')
                                ];
                                return e && n.push('fc-scrollgrid-liquid'),
                                    n
                            }(t.liquid, r);
                        t.collapsibleWidth && s.push('fc-scrollgrid-collapsible');
                        for (var u, l = a.length, d = 0, c = [
                        ], m = [
                        ], f = [
                        ]; d < l && 'header' === (u = a[d]).type;) c.push(this.renderSection(u, o, !0)),
                            d += 1;
                        for (; d < l && 'body' === (u = a[d]).type;) m.push(this.renderSection(u, o, !1)),
                            d += 1;
                        for (; d < l && 'footer' === (u = a[d]).type;) f.push(this.renderSection(u, o, !0)),
                            d += 1;
                        var h = !MM(),
                            p = {
                                role: 'rowgroup'
                            };
                        return Iw('table', {
                            role: 'grid',
                            className: s.join(' '),
                            style: {
                                height: t.height
                            }
                        }, Boolean(!h && c.length) && Iw.apply(void 0, Dw(['thead',
                            p], c)), Boolean(!h && m.length) && Iw.apply(void 0, Dw(['tbody',
                                p], m)), Boolean(!h && f.length) && Iw.apply(void 0, Dw(['tfoot',
                                    p], f)), h && Iw.apply(void 0, Dw(Dw(Dw(['tbody',
                                        p], c), m), f)))
                    },
                    t.prototype.renderSection = function (e, t, n) {
                        return 'outerContent' in e ? Iw(Rw, {
                            key: e.key
                        }, e.outerContent) : Iw('tr', {
                            key: e.key,
                            role: 'presentation',
                            className: SP(e, this.props.liquid).join(' ')
                        }, this.renderChunkTd(e, t, e.chunk, n))
                    },
                    t.prototype.renderChunkTd = function (e, t, n, r) {
                        if ('outerContent' in n) return n.outerContent;
                        var a = this.props,
                            i = this.state,
                            o = i.forceYScrollbars,
                            s = i.scrollerClientWidths,
                            u = i.scrollerClientHeights,
                            l = function (e, t) {
                                return null != t.maxHeight || MP(e, t)
                            }(a, e),
                            d = MP(a, e),
                            c = a.liquid ? o ? 'scroll' : l ? 'auto' : 'hidden' : 'visible',
                            m = e.key,
                            f = function (e, t, n, r) {
                                var a = n.expandRows;
                                return 'function' == typeof t.content ? t.content(n) : Iw('table', {
                                    role: 'presentation',
                                    className: [
                                        t.tableClassName,
                                        e.syncRowHeights ? 'fc-scrollgrid-sync-table' : ''
                                    ].join(' '),
                                    style: {
                                        minWidth: n.tableMinWidth,
                                        width: n.clientWidth,
                                        height: a ? n.clientHeight : ''
                                    }
                                }, n.tableColGroupNode, Iw(r ? 'thead' : 'tbody', {
                                    role: 'presentation'
                                }, 'function' == typeof t.rowContent ? t.rowContent(n) : t.rowContent))
                            }(e, n, {
                                tableColGroupNode: t,
                                tableMinWidth: '',
                                clientWidth: a.collapsibleWidth || void 0 === s[m] ? null : s[m],
                                clientHeight: void 0 !== u[m] ? u[m] : null,
                                expandRows: e.expandRows,
                                syncRowHeights: !1,
                                rowSyncHeights: [
                                ],
                                reportRowHeightChange: function () {
                                }
                            }, r);
                        return Iw(r ? 'th' : 'td', {
                            ref: n.elRef,
                            role: 'presentation'
                        }, Iw('div', {
                            className: 'fc-scroller-harness' + (d ? ' fc-scroller-harness-liquid' : '')
                        }, Iw(bP, {
                            ref: this.scrollerRefs.createRef(m),
                            elRef: this.scrollerElRefs.createRef(m),
                            overflowY: c,
                            overflowX: a.liquid ? 'hidden' : 'visible',
                            maxHeight: e.maxHeight,
                            liquid: d,
                            liquidIsAbsolute: !0
                        }, f)))
                    },
                    t.prototype._handleScrollerEl = function (e, t) {
                        var n = function (e, t) {
                            for (var n = 0, r = e; n < r.length; n++) {
                                var a = r[n];
                                if (a.key === t) return a
                            }
                            return null
                        }(this.props.sections, t);
                        n && XM(n.chunk.scrollerElRef, e)
                    },
                    t.prototype.componentDidMount = function () {
                        this.handleSizing(),
                            this.context.addResizeHandler(this.handleSizing)
                    },
                    t.prototype.componentDidUpdate = function () {
                        this.handleSizing()
                    },
                    t.prototype.componentWillUnmount = function () {
                        this.context.removeResizeHandler(this.handleSizing)
                    },
                    t.prototype.computeShrinkWidth = function () {
                        return function (e) {
                            for (var t = 0, n = e; t < n.length; t++) if ('shrink' === n[t].width) return !0;
                            return !1
                        }(this.props.cols) ? function (e) {
                            for (var t = function (e, t) {
                                for (var n = e instanceof HTMLElement ? [
                                    e
                                ] : e, r = [
                                ], a = 0; a < n.length; a += 1) for (var i = n[a].querySelectorAll('.fc-scrollgrid-shrink'), o = 0; o < i.length; o += 1) r.push(i[o]);
                                return r
                            }(e), n = 0, r = 0, a = t; r < a.length; r++) {
                                var i = a[r];
                                n = Math.max(n, nb(i))
                            }
                            return Math.ceil(n)
                        }(this.scrollerElRefs.getAll()) : 0
                    },
                    t.prototype.computeScrollerDims = function () {
                        var e = (TM || (TM = function () {
                            var e = document.createElement('div');
                            e.style.overflow = 'scroll',
                                e.style.position = 'absolute',
                                e.style.top = '-9999px',
                                e.style.left = '-9999px',
                                document.body.appendChild(e);
                            var t = function (e) {
                                return {
                                    x: e.offsetHeight - e.clientHeight,
                                    y: e.offsetWidth - e.clientWidth
                                }
                            }(e);
                            return document.body.removeChild(e),
                                t
                        }()), TM),
                            t = this.scrollerRefs,
                            n = this.scrollerElRefs,
                            r = !1,
                            a = {
                            },
                            i = {
                            };
                        for (var o in t.currentMap) {
                            var s = t.currentMap[o];
                            if (s && s.needsYScrolling()) {
                                r = !0;
                                break
                            }
                        }
                        for (var u = 0, l = this.props.sections; u < l.length; u++) {
                            o = l[u].key;
                            var d = n.currentMap[o];
                            if (d) {
                                var c = d.parentNode;
                                a[o] = Math.floor(c.getBoundingClientRect().width - (r ? e.y : 0)),
                                    i[o] = Math.floor(c.getBoundingClientRect().height)
                            }
                        }
                        return {
                            forceYScrollbars: r,
                            scrollerClientWidths: a,
                            scrollerClientHeights: i
                        }
                    },
                    t
            }(_M);
            WP.addStateEquality({
                scrollerClientWidths: xb,
                scrollerClientHeights: xb
            });
            var jP = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.elRef = zw(),
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.props,
                            t = this.context,
                            n = t.options,
                            r = e.seg,
                            a = r.eventRange,
                            i = a.ui,
                            o = {
                                event: new sM(t, a.def, a.instance),
                                view: t.viewApi,
                                timeText: e.timeText,
                                textColor: i.textColor,
                                backgroundColor: i.backgroundColor,
                                borderColor: i.borderColor,
                                isDraggable: !e.disableDragging && Xk(r, t),
                                isStartResizable: !e.disableResizing && Uk(r, t),
                                isEndResizable: !e.disableResizing && qk(r),
                                isMirror: Boolean(e.isDragging || e.isResizing || e.isDateSelecting),
                                isStart: Boolean(r.isStart),
                                isEnd: Boolean(r.isEnd),
                                isPast: Boolean(e.isPast),
                                isFuture: Boolean(e.isFuture),
                                isToday: Boolean(e.isToday),
                                isSelected: Boolean(e.isSelected),
                                isDragging: Boolean(e.isDragging),
                                isResizing: Boolean(e.isResizing)
                            },
                            s = function (e) {
                                var t = [
                                    'fc-event'
                                ];
                                return e.isMirror && t.push('fc-event-mirror'),
                                    e.isDraggable && t.push('fc-event-draggable'),
                                    (e.isStartResizable || e.isEndResizable) && t.push('fc-event-resizable'),
                                    e.isDragging && t.push('fc-event-dragging'),
                                    e.isResizing && t.push('fc-event-resizing'),
                                    e.isSelected && t.push('fc-event-selected'),
                                    e.isStart && t.push('fc-event-start'),
                                    e.isEnd && t.push('fc-event-end'),
                                    e.isPast && t.push('fc-event-past'),
                                    e.isToday && t.push('fc-event-today'),
                                    e.isFuture && t.push('fc-event-future'),
                                    t
                            }(o).concat(i.classNames);
                        return Iw(YM, {
                            hookProps: o,
                            classNames: n.eventClassNames,
                            content: n.eventContent,
                            defaultContent: e.defaultContent,
                            didMount: n.eventDidMount,
                            willUnmount: n.eventWillUnmount,
                            elRef: this.elRef
                        }, (function (t, n, r, a) {
                            return e.children(t, s.concat(n), r, a, o)
                        }))
                    },
                    t.prototype.componentDidMount = function () {
                        Ak(this.elRef.current, this.props.seg)
                    },
                    t.prototype.componentDidUpdate = function (e) {
                        var t = this.props.seg;
                        t !== e.seg && Ak(this.elRef.current, t)
                    },
                    t
            }(_M),
                DP = function (e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = this.context,
                                n = e.seg,
                                r = t.options.eventTimeFormat || e.defaultTimeFormat,
                                a = Gk(n, r, t, e.defaultDisplayEventTime, e.defaultDisplayEventEnd);
                            return Iw(jP, {
                                seg: n,
                                timeText: a,
                                disableDragging: e.disableDragging,
                                disableResizing: e.disableResizing,
                                defaultContent: e.defaultContent || NP,
                                isDragging: e.isDragging,
                                isResizing: e.isResizing,
                                isDateSelecting: e.isDateSelecting,
                                isSelected: e.isSelected,
                                isPast: e.isPast,
                                isFuture: e.isFuture,
                                isToday: e.isToday
                            }, (function (r, a, i, o, s) {
                                return Iw('a', jw({
                                    className: e.extraClassNames.concat(a).join(' '),
                                    style: {
                                        borderColor: s.borderColor,
                                        backgroundColor: s.backgroundColor
                                    },
                                    ref: r
                                }, Yk(n, t)), Iw('div', {
                                    className: 'fc-event-main',
                                    ref: i,
                                    style: {
                                        color: s.textColor
                                    }
                                }, o), s.isStartResizable && Iw('div', {
                                    className: 'fc-event-resizer fc-event-resizer-start'
                                }), s.isEndResizable && Iw('div', {
                                    className: 'fc-event-resizer fc-event-resizer-end'
                                }))
                            }))
                        },
                        t
                }(_M);
            function NP(e) {
                return Iw('div', {
                    className: 'fc-event-main-frame'
                }, e.timeText && Iw('div', {
                    className: 'fc-event-time'
                }, e.timeText), Iw('div', {
                    className: 'fc-event-title-container'
                }, Iw('div', {
                    className: 'fc-event-title fc-sticky'
                }, e.event.title || Iw(Rw, null, ' '))))
            }
            var IP = ek({
                day: 'numeric'
            }),
                zP = function (e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = this.context,
                                n = t.options,
                                r = RP({
                                    date: e.date,
                                    dateProfile: e.dateProfile,
                                    todayRange: e.todayRange,
                                    showDayNumber: e.showDayNumber,
                                    extraProps: e.extraHookProps,
                                    viewApi: t.viewApi,
                                    dateEnv: t.dateEnv
                                });
                            return Iw($M, {
                                hookProps: r,
                                content: n.dayCellContent,
                                defaultContent: e.defaultContent
                            }, e.children)
                        },
                        t
                }(_M);
            function RP(e) {
                var t = e.date,
                    n = e.dateEnv,
                    r = xM(t, e.todayRange, null, e.dateProfile);
                return jw(jw(jw({
                    date: n.toDate(t),
                    view: e.viewApi
                }, r), {
                    dayNumberText: e.showDayNumber ? n.format(t, IP) : ''
                }), e.extraProps)
            }
            var AP = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.refineHookProps = Lb(RP),
                        t.normalizeClassNames = JM(),
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.props,
                            t = this.context,
                            n = t.options,
                            r = this.refineHookProps({
                                date: e.date,
                                dateProfile: e.dateProfile,
                                todayRange: e.todayRange,
                                showDayNumber: e.showDayNumber,
                                extraProps: e.extraHookProps,
                                viewApi: t.viewApi,
                                dateEnv: t.dateEnv
                            }),
                            a = SM(r, t.theme).concat(r.isDisabled ? [
                            ] : this.normalizeClassNames(n.dayCellClassNames, r)),
                            i = r.isDisabled ? {
                            }
                                : {
                                    'data-date': Ab(e.date)
                                };
                        return Iw(KM, {
                            hookProps: r,
                            didMount: n.dayCellDidMount,
                            willUnmount: n.dayCellWillUnmount,
                            elRef: e.elRef
                        }, (function (t) {
                            return e.children(t, a, i, r.isDisabled)
                        }))
                    },
                    t
            }(_M);
            function OP(e) {
                return Iw('div', {
                    className: 'fc-' + e
                })
            }
            var HP = function (e) {
                return Iw(jP, {
                    defaultContent: _P,
                    seg: e.seg,
                    timeText: '',
                    disableDragging: !0,
                    disableResizing: !0,
                    isDragging: !1,
                    isResizing: !1,
                    isDateSelecting: !1,
                    isSelected: !1,
                    isPast: e.isPast,
                    isFuture: e.isFuture,
                    isToday: e.isToday
                }, (function (e, t, n, r, a) {
                    return Iw('div', {
                        ref: e,
                        className: [
                            'fc-bg-event'
                        ].concat(t).join(' '),
                        style: {
                            backgroundColor: a.backgroundColor
                        }
                    }, r)
                }))
            };
            function _P(e) {
                return e.event.title && Iw('div', {
                    className: 'fc-event-title'
                }, e.event.title)
            }
            var LP = function (e) {
                return Iw(AM.Consumer, null, (function (t) {
                    var n = t.dateEnv,
                        r = t.options,
                        a = e.date,
                        i = r.weekNumberFormat || e.defaultFormat,
                        o = n.computeWeekNumber(a),
                        s = n.format(a, i);
                    return Iw(YM, {
                        hookProps: {
                            num: o,
                            text: s,
                            date: a
                        },
                        classNames: r.weekNumberClassNames,
                        content: r.weekNumberContent,
                        defaultContent: FP,
                        didMount: r.weekNumberDidMount,
                        willUnmount: r.weekNumberWillUnmount
                    }, e.children)
                }))
            };
            function FP(e) {
                return e.text
            }
            var XP = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.state = {
                        titleId: Vw()
                    },
                        t.handleRootEl = function (e) {
                            t.rootEl = e,
                                t.props.elRef && XM(t.props.elRef, e)
                        },
                        t.handleDocumentMouseDown = function (e) {
                            var n = qw(e);
                            t.rootEl.contains(n) || t.handleCloseClick()
                        },
                        t.handleDocumentKeyDown = function (e) {
                            'Escape' === e.key && t.handleCloseClick()
                        },
                        t.handleCloseClick = function () {
                            var e = t.props.onClose;
                            e && e()
                        },
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.context,
                            t = e.theme,
                            n = e.options,
                            r = this.props,
                            a = this.state,
                            i = [
                                'fc-popover',
                                t.getClass('popover')
                            ].concat(r.extraClassNames || [
                            ]);
                        return Ow(Iw('div', jw({
                            id: r.id,
                            className: i.join(' '),
                            'aria-labelledby': a.titleId
                        }, r.extraAttrs, {
                            ref: this.handleRootEl
                        }), Iw('div', {
                            className: 'fc-popover-header ' + t.getClass('popoverHeader')
                        }, Iw('span', {
                            className: 'fc-popover-title',
                            id: a.titleId
                        }, r.title), Iw('span', {
                            className: 'fc-popover-close ' + t.getIconClass('close'),
                            title: n.closeHint,
                            onClick: this.handleCloseClick
                        })), Iw('div', {
                            className: 'fc-popover-body ' + t.getClass('popoverContent')
                        }, r.children)), r.parentEl)
                    },
                    t.prototype.componentDidMount = function () {
                        document.addEventListener('mousedown', this.handleDocumentMouseDown),
                            document.addEventListener('keydown', this.handleDocumentKeyDown),
                            this.updateSize()
                    },
                    t.prototype.componentWillUnmount = function () {
                        document.removeEventListener('mousedown', this.handleDocumentMouseDown),
                            document.removeEventListener('keydown', this.handleDocumentKeyDown)
                    },
                    t.prototype.updateSize = function () {
                        var e = this.context.isRtl,
                            t = this.props,
                            n = t.alignmentEl,
                            r = t.alignGridTop,
                            a = this.rootEl,
                            i = function (e) {
                                for (var t, n, r, a = function (e) {
                                    for (var t = [
                                    ]; e instanceof HTMLElement;) {
                                        var n = window.getComputedStyle(e);
                                        if ('fixed' === n.position) break;
                                        /(auto|scroll)/.test(n.overflow + n.overflowY + n.overflowX) && t.push(e),
                                            e = e.parentNode
                                    }
                                    return t
                                }(e), i = e.getBoundingClientRect(), o = 0, s = a; o < s.length; o++) {
                                    var u = (t = i, n = s[o].getBoundingClientRect(), (r = {
                                        left: Math.max(t.left, n.left),
                                        right: Math.min(t.right, n.right),
                                        top: Math.max(t.top, n.top),
                                        bottom: Math.min(t.bottom, n.bottom)
                                    }).left < r.right && r.top < r.bottom && r);
                                    if (!u) return null;
                                    i = u
                                }
                                return i
                            }(n);
                        if (i) {
                            var o = a.getBoundingClientRect(),
                                s = r ? Lw(n, '.fc-scrollgrid').getBoundingClientRect().top : i.top,
                                u = e ? i.right - o.width : i.left;
                            s = Math.max(s, 10),
                                u = Math.min(u, document.documentElement.clientWidth - 10 - o.width),
                                u = Math.max(u, 10);
                            var l = a.offsetParent.getBoundingClientRect();
                            !function (e, t) {
                                for (var n in t) Uw(e, n, t[n])
                            }(a, {
                                top: s - l.top,
                                left: u - l.left
                            })
                        }
                    },
                    t
            }(_M),
                UP = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.handleRootEl = function (e) {
                            t.rootEl = e,
                                e ? t.context.registerInteractiveComponent(t, {
                                    el: e,
                                    useEventCenter: !1
                                }) : t.context.unregisterInteractiveComponent(t)
                        },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.context,
                                t = e.options,
                                n = e.dateEnv,
                                r = this.props,
                                a = r.startDate,
                                i = r.todayRange,
                                o = r.dateProfile,
                                s = n.format(a, t.dayPopoverFormat);
                            return Iw(AP, {
                                date: a,
                                dateProfile: o,
                                todayRange: i,
                                elRef: this.handleRootEl
                            }, (function (e, t, n) {
                                return Iw(XP, {
                                    elRef: e,
                                    id: r.id,
                                    title: s,
                                    extraClassNames: [
                                        'fc-more-popover'
                                    ].concat(t),
                                    extraAttrs: n,
                                    parentEl: r.parentEl,
                                    alignmentEl: r.alignmentEl,
                                    alignGridTop: r.alignGridTop,
                                    onClose: r.onClose
                                }, Iw(zP, {
                                    date: a,
                                    dateProfile: o,
                                    todayRange: i
                                }, (function (e, t) {
                                    return t && Iw('div', {
                                        className: 'fc-more-popover-misc',
                                        ref: e
                                    }, t)
                                })), r.children)
                            }))
                        },
                        t.prototype.queryHit = function (e, t, n, r) {
                            var a = this.rootEl,
                                i = this.props;
                            return e >= 0 && e < n && t >= 0 && t < r ? {
                                dateProfile: i.dateProfile,
                                dateSpan: jw({
                                    allDay: !0,
                                    range: {
                                        start: i.startDate,
                                        end: i.endDate
                                    }
                                }, i.extraDateSpan),
                                dayEl: a,
                                rect: {
                                    left: 0,
                                    top: 0,
                                    right: n,
                                    bottom: r
                                },
                                layer: 1
                            }
                                : null
                        },
                        t
                }(UM),
                qP = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.linkElRef = zw(),
                            t.state = {
                                isPopoverOpen: !1,
                                popoverId: Vw()
                            },
                            t.handleClick = function (e) {
                                var n = t,
                                    r = n.props,
                                    a = n.context,
                                    i = a.options.moreLinkClick,
                                    o = VP(r).start;
                                function s(e) {
                                    var t = e.eventRange,
                                        n = t.def,
                                        r = t.instance,
                                        i = t.range;
                                    return {
                                        event: new sM(a, n, r),
                                        start: a.dateEnv.toDate(i.start),
                                        end: a.dateEnv.toDate(i.end),
                                        isStart: e.isStart,
                                        isEnd: e.isEnd
                                    }
                                }
                                'function' == typeof i && (i = i({
                                    date: o,
                                    allDay: Boolean(r.allDayDate),
                                    allSegs: r.allSegs.map(s),
                                    hiddenSegs: r.hiddenSegs.map(s),
                                    jsEvent: e,
                                    view: a.viewApi
                                })),
                                    i && 'popover' !== i ? 'string' == typeof i && a.calendarApi.zoomTo(o, i) : t.setState({
                                        isPopoverOpen: !0
                                    })
                            },
                            t.handlePopoverClose = function () {
                                t.setState({
                                    isPopoverOpen: !1
                                })
                            },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this,
                                t = this.props,
                                n = this.state;
                            return Iw(AM.Consumer, null, (function (r) {
                                var a = r.viewApi,
                                    i = r.options,
                                    o = r.calendarApi,
                                    s = i.moreLinkText,
                                    u = t.moreCnt,
                                    l = VP(t),
                                    d = 'function' == typeof s ? s.call(o, u) : '+' + u + ' ' + s,
                                    c = eb(i.moreLinkHint, [
                                        u
                                    ], d),
                                    m = {
                                        num: u,
                                        shortText: '+' + u,
                                        text: d,
                                        view: a
                                    };
                                return Iw(Rw, null, Boolean(t.moreCnt) && Iw(YM, {
                                    elRef: e.linkElRef,
                                    hookProps: m,
                                    classNames: i.moreLinkClassNames,
                                    content: i.moreLinkContent,
                                    defaultContent: t.defaultContent || GP,
                                    didMount: i.moreLinkDidMount,
                                    willUnmount: i.moreLinkWillUnmount
                                }, (function (r, a, i, o) {
                                    return t.children(r, [
                                        'fc-more-link'
                                    ].concat(a), i, o, e.handleClick, c, n.isPopoverOpen, n.isPopoverOpen ? n.popoverId : '')
                                })), n.isPopoverOpen && Iw(UP, {
                                    id: n.popoverId,
                                    startDate: l.start,
                                    endDate: l.end,
                                    dateProfile: t.dateProfile,
                                    todayRange: t.todayRange,
                                    extraDateSpan: t.extraDateSpan,
                                    parentEl: e.parentEl,
                                    alignmentEl: t.alignmentElRef.current,
                                    alignGridTop: t.alignGridTop,
                                    onClose: e.handlePopoverClose
                                }, t.popoverContent()))
                            }))
                        },
                        t.prototype.componentDidMount = function () {
                            this.updateParentEl()
                        },
                        t.prototype.componentDidUpdate = function () {
                            this.updateParentEl()
                        },
                        t.prototype.updateParentEl = function () {
                            this.linkElRef.current && (this.parentEl = Lw(this.linkElRef.current, '.fc-view-harness'))
                        },
                        t
                }(_M);
            function GP(e) {
                return e.text
            }
            function VP(e) {
                if (e.allDayDate) return {
                    start: e.allDayDate,
                    end: ib(e.allDayDate, 1)
                };
                var t,
                    n = e.hiddenSegs;
                return {
                    start: (t = n, t.reduce(YP).eventRange.range.start),
                    end: BP(n)
                }
            }
            function YP(e, t) {
                return e.eventRange.range.start < t.eventRange.range.start ? e : t
            }
            function BP(e) {
                return e.reduce($P).eventRange.range.end
            }
            function $P(e, t) {
                return e.eventRange.range.end > t.eventRange.range.end ? e : t
            }
            var QP = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t._calendarApi = new oM,
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        return r.createElement(FE, {
                            optionOverrides: this.props,
                            calendarApi: this._calendarApi
                        }, (function (e) {
                            return r.createElement(iP, {
                                options: e.calendarOptions,
                                theme: e.theme,
                                emitter: e.emitter
                            }, (function (t, n, a, i) {
                                return r.createElement('div', {
                                    className: t.join(' '),
                                    style: {
                                        height: n
                                    }
                                }, r.createElement(nP, jw({
                                    isHeightAuto: a,
                                    forPrint: i
                                }, e)))
                            }))
                        }))
                    },
                    t.prototype.getApi = function () {
                        return this._calendarApi
                    },
                    t
            }(r.Component),
                KP = QP,
                JP = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.headerElRef = zw(),
                            t
                    }
                    return Ww(t, e),
                        t.prototype.renderSimpleLayout = function (e, t) {
                            var n = this.props,
                                r = this.context,
                                a = [
                                ],
                                i = CP(r.options);
                            return e && a.push({
                                type: 'header',
                                key: 'header',
                                isSticky: i,
                                chunk: {
                                    elRef: this.headerElRef,
                                    tableClassName: 'fc-col-header',
                                    rowContent: e
                                }
                            }),
                                a.push({
                                    type: 'body',
                                    key: 'body',
                                    liquid: !0,
                                    chunk: {
                                        content: t
                                    }
                                }),
                                Iw(tE, {
                                    viewSpec: r.viewSpec
                                }, (function (e, t) {
                                    return Iw('div', {
                                        ref: e,
                                        className: [
                                            'fc-daygrid'
                                        ].concat(t).join(' ')
                                    }, Iw(WP, {
                                        liquid: !n.isHeightAuto && !n.forPrint,
                                        collapsibleWidth: n.forPrint,
                                        cols: [
                                        ],
                                        sections: a
                                    }))
                                }))
                        },
                        t.prototype.renderHScrollLayout = function (e, t, n, r) {
                            var a = this.context.pluginHooks.scrollGridImpl;
                            if (!a) throw new Error('No ScrollGrid implementation');
                            var i = this.props,
                                o = this.context,
                                s = !i.forPrint && CP(o.options),
                                u = !i.forPrint && function (e) {
                                    var t = e.stickyFooterScrollbar;
                                    return null != t && 'auto' !== t || (t = 'auto' === e.height || 'auto' === e.viewHeight),
                                        t
                                }(o.options),
                                l = [
                                ];
                            return e && l.push({
                                type: 'header',
                                key: 'header',
                                isSticky: s,
                                chunks: [
                                    {
                                        key: 'main',
                                        elRef: this.headerElRef,
                                        tableClassName: 'fc-col-header',
                                        rowContent: e
                                    }
                                ]
                            }),
                                l.push({
                                    type: 'body',
                                    key: 'body',
                                    liquid: !0,
                                    chunks: [
                                        {
                                            key: 'main',
                                            content: t
                                        }
                                    ]
                                }),
                                u && l.push({
                                    type: 'footer',
                                    key: 'footer',
                                    isSticky: !0,
                                    chunks: [
                                        {
                                            key: 'main',
                                            content: TP
                                        }
                                    ]
                                }),
                                Iw(tE, {
                                    viewSpec: o.viewSpec
                                }, (function (e, t) {
                                    return Iw('div', {
                                        ref: e,
                                        className: [
                                            'fc-daygrid'
                                        ].concat(t).join(' ')
                                    }, Iw(a, {
                                        liquid: !i.isHeightAuto && !i.forPrint,
                                        collapsibleWidth: i.forPrint,
                                        colGroups: [
                                            {
                                                cols: [
                                                    {
                                                        span: n,
                                                        minWidth: r
                                                    }
                                                ]
                                            }
                                        ],
                                        sections: l
                                    }))
                                }))
                        },
                        t
                }(UM);
            function ZP(e, t) {
                for (var n = [
                ], r = 0; r < t; r += 1) n[r] = [
                ];
                for (var a = 0, i = e; a < i.length; a++) {
                    var o = i[a];
                    n[o.row].push(o)
                }
                return n
            }
            function ex(e, t) {
                for (var n = [
                ], r = 0; r < t; r += 1) n[r] = [
                ];
                for (var a = 0, i = e; a < i.length; a++) {
                    var o = i[a];
                    n[o.firstCol].push(o)
                }
                return n
            }
            function tx(e, t) {
                var n = [
                ];
                if (e) {
                    for (o = 0; o < t; o += 1) n[o] = {
                        affectedInstances: e.affectedInstances,
                        isEvent: e.isEvent,
                        segs: [
                        ]
                    };
                    for (var r = 0, a = e.segs; r < a.length; r++) {
                        var i = a[r];
                        n[i.row].segs.push(i)
                    }
                } else for (var o = 0; o < t; o += 1) n[o] = null;
                return n
            }
            var nx = function (e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.props,
                            t = jM(this.context, e.date);
                        return Iw(zP, {
                            date: e.date,
                            dateProfile: e.dateProfile,
                            todayRange: e.todayRange,
                            showDayNumber: e.showDayNumber,
                            extraHookProps: e.extraHookProps,
                            defaultContent: rx
                        }, (function (n, r) {
                            return (r || e.forceDayTop) && Iw('div', {
                                className: 'fc-daygrid-day-top',
                                ref: n
                            }, Iw('a', jw({
                                id: e.dayNumberId,
                                className: 'fc-daygrid-day-number'
                            }, t), r || Iw(Rw, null, ' ')))
                        }))
                    },
                    t
            }(_M);
            function rx(e) {
                return e.dayNumberText
            }
            var ax = ek({
                hour: 'numeric',
                minute: '2-digit',
                omitZeroMinute: !0,
                meridiem: 'narrow'
            });
            function ix(e) {
                var t = e.eventRange.ui.display;
                return 'list-item' === t || 'auto' === t && !e.eventRange.def.allDay && e.firstCol === e.lastCol && e.isStart && e.isEnd
            }
            var ox = function (e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.props;
                        return Iw(DP, jw({
                        }, e, {
                            extraClassNames: [
                                'fc-daygrid-event',
                                'fc-daygrid-block-event',
                                'fc-h-event'
                            ],
                            defaultTimeFormat: ax,
                            defaultDisplayEventEnd: e.defaultDisplayEventEnd,
                            disableResizing: !e.seg.eventRange.def.allDay
                        }))
                    },
                    t
            }(_M),
                sx = function (e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = this.context,
                                n = t.options.eventTimeFormat || ax,
                                r = Gk(e.seg, n, t, !0, e.defaultDisplayEventEnd);
                            return Iw(jP, {
                                seg: e.seg,
                                timeText: r,
                                defaultContent: ux,
                                isDragging: e.isDragging,
                                isResizing: !1,
                                isDateSelecting: !1,
                                isSelected: e.isSelected,
                                isPast: e.isPast,
                                isFuture: e.isFuture,
                                isToday: e.isToday
                            }, (function (n, r, a, i) {
                                return Iw('a', jw({
                                    className: [
                                        'fc-daygrid-event',
                                        'fc-daygrid-dot-event'
                                    ].concat(r).join(' '),
                                    ref: n
                                }, Yk(e.seg, t)), i)
                            }))
                        },
                        t
                }(_M);
            function ux(e) {
                return Iw(Rw, null, Iw('div', {
                    className: 'fc-daygrid-event-dot',
                    style: {
                        borderColor: e.borderColor || e.backgroundColor
                    }
                }), e.timeText && Iw('div', {
                    className: 'fc-event-time'
                }, e.timeText), Iw('div', {
                    className: 'fc-event-title'
                }, e.event.title || Iw(Rw, null, ' ')))
            }
            var lx = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.compileSegs = _b(dx),
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this.props,
                            t = this.compileSegs(e.singlePlacements),
                            n = t.allSegs,
                            r = t.invisibleSegs;
                        return Iw(qP, {
                            dateProfile: e.dateProfile,
                            todayRange: e.todayRange,
                            allDayDate: e.allDayDate,
                            moreCnt: e.moreCnt,
                            allSegs: n,
                            hiddenSegs: r,
                            alignmentElRef: e.alignmentElRef,
                            alignGridTop: e.alignGridTop,
                            extraDateSpan: e.extraDateSpan,
                            popoverContent: function () {
                                var t = (e.eventDrag ? e.eventDrag.affectedInstances : null) || (e.eventResize ? e.eventResize.affectedInstances : null) || {
                                };
                                return Iw(Rw, null, n.map((function (n) {
                                    var r = n.eventRange.instance.instanceId;
                                    return Iw('div', {
                                        className: 'fc-daygrid-event-harness',
                                        key: r,
                                        style: {
                                            visibility: t[r] ? 'hidden' : ''
                                        }
                                    }, ix(n) ? Iw(sx, jw({
                                        seg: n,
                                        isDragging: !1,
                                        isSelected: r === e.eventSelection,
                                        defaultDisplayEventEnd: !1
                                    }, Vk(n, e.todayRange))) : Iw(ox, jw({
                                        seg: n,
                                        isDragging: !1,
                                        isResizing: !1,
                                        isDateSelecting: !1,
                                        isSelected: r === e.eventSelection,
                                        defaultDisplayEventEnd: !1
                                    }, Vk(n, e.todayRange))))
                                })))
                            }
                        }, (function (e, t, n, r, a, i, o, s) {
                            return Iw('a', jw({
                                ref: e,
                                className: [
                                    'fc-daygrid-more-link'
                                ].concat(t).join(' '),
                                title: i,
                                'aria-expanded': o,
                                'aria-controls': s
                            }, Bw(a)), r)
                        }))
                    },
                    t
            }(_M);
            function dx(e) {
                for (var t = [
                ], n = [
                ], r = 0, a = e; r < a.length; r++) {
                    var i = a[r];
                    t.push(i.seg),
                        i.isVisible || n.push(i.seg)
                }
                return {
                    allSegs: t,
                    invisibleSegs: n
                }
            }
            var cx = ek({
                week: 'narrow'
            }),
                mx = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.rootElRef = zw(),
                            t.state = {
                                dayNumberId: Vw()
                            },
                            t.handleRootEl = function (e) {
                                XM(t.rootElRef, e),
                                    XM(t.props.elRef, e)
                            },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this,
                                t = e.context,
                                n = e.props,
                                r = e.state,
                                a = e.rootElRef,
                                i = n.date,
                                o = n.dateProfile,
                                s = jM(t, i, 'week');
                            return Iw(AP, {
                                date: i,
                                dateProfile: o,
                                todayRange: n.todayRange,
                                showDayNumber: n.showDayNumber,
                                extraHookProps: n.extraHookProps,
                                elRef: this.handleRootEl
                            }, (function (e, t, u, l) {
                                return Iw('td', jw({
                                    ref: e,
                                    role: 'gridcell',
                                    className: [
                                        'fc-daygrid-day'
                                    ].concat(t, n.extraClassNames || [
                                    ]).join(' ')
                                }, u, n.extraDataAttrs, n.showDayNumber ? {
                                    'aria-labelledby': r.dayNumberId
                                }
                                    : {
                                    }), Iw('div', {
                                        className: 'fc-daygrid-day-frame fc-scrollgrid-sync-inner',
                                        ref: n.innerElRef
                                    }, n.showWeekNumber && Iw(LP, {
                                        date: i,
                                        defaultFormat: cx
                                    }, (function (e, t, n, r) {
                                        return Iw('a', jw({
                                            ref: e,
                                            className: [
                                                'fc-daygrid-week-number'
                                            ].concat(t).join(' ')
                                        }, s), r)
                                    })), !l && Iw(nx, {
                                        date: i,
                                        dateProfile: o,
                                        showDayNumber: n.showDayNumber,
                                        dayNumberId: r.dayNumberId,
                                        forceDayTop: n.forceDayTop,
                                        todayRange: n.todayRange,
                                        extraHookProps: n.extraHookProps
                                    }), Iw('div', {
                                        className: 'fc-daygrid-day-events',
                                        ref: n.fgContentElRef
                                    }, n.fgContent, Iw('div', {
                                        className: 'fc-daygrid-day-bottom',
                                        style: {
                                            marginTop: n.moreMarginTop
                                        }
                                    }, Iw(lx, {
                                        allDayDate: i,
                                        singlePlacements: n.singlePlacements,
                                        moreCnt: n.moreCnt,
                                        alignmentElRef: a,
                                        alignGridTop: !n.showDayNumber,
                                        extraDateSpan: n.extraDateSpan,
                                        dateProfile: n.dateProfile,
                                        eventSelection: n.eventSelection,
                                        eventDrag: n.eventDrag,
                                        eventResize: n.eventResize,
                                        todayRange: n.todayRange
                                    }))), Iw('div', {
                                        className: 'fc-daygrid-day-bg'
                                    }, n.bgContent)))
                            }))
                        },
                        t
                }(UM);
            function fx(e, t, n, r) {
                if (e.firstCol === t && e.lastCol === n - 1) return e;
                var a = e.eventRange,
                    i = a.range,
                    o = Ik(i, {
                        start: r[t].date,
                        end: ib(r[n - 1].date, 1)
                    });
                return jw(jw({
                }, e), {
                    firstCol: t,
                    lastCol: n - 1,
                    eventRange: {
                        def: a.def,
                        ui: jw(jw({
                        }, a.ui), {
                            durationEditable: !1
                        }),
                        instance: a.instance,
                        range: o
                    },
                    isStart: e.isStart && o.start.valueOf() === i.start.valueOf(),
                    isEnd: e.isEnd && o.end.valueOf() === i.end.valueOf()
                })
            }
            var hx = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.hiddenConsumes = !1,
                        t.forceHidden = {
                        },
                        t
                }
                return Ww(t, e),
                    t.prototype.addSegs = function (t) {
                        for (var n = this, r = e.prototype.addSegs.call(this, t), a = this.entriesByLevel, i = function (e) {
                            return !n.forceHidden[qE(e)]
                        }, o = 0; o < a.length; o += 1) a[o] = a[o].filter(i);
                        return r
                    },
                    t.prototype.handleInvalidInsertion = function (t, n, r) {
                        var a = this.entriesByLevel,
                            i = this.forceHidden,
                            o = t.touchingEntry,
                            s = t.touchingLevel,
                            u = t.touchingLateral;
                        if (this.hiddenConsumes && o) {
                            var l = qE(o);
                            if (!i[l]) if (this.allowReslicing) {
                                var d = jw(jw({
                                }, o), {
                                    span: GE(o.span, n.span)
                                });
                                i[qE(d)] = !0,
                                    a[s][u] = d,
                                    this.splitEntry(o, n, r)
                            } else i[l] = !0,
                                r.push(o)
                        }
                        return e.prototype.handleInvalidInsertion.call(this, t, n, r)
                    },
                    t
            }(XE),
                px = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.cellElRefs = new kP,
                            t.frameElRefs = new kP,
                            t.fgElRefs = new kP,
                            t.segHarnessRefs = new kP,
                            t.rootElRef = zw(),
                            t.state = {
                                framePositions: null,
                                maxContentHeight: null,
                                eventInstanceHeights: {
                                }
                            },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this,
                                t = this,
                                n = t.props,
                                r = t.state,
                                a = t.context.options,
                                i = n.cells.length,
                                o = ex(n.businessHourSegs, i),
                                s = ex(n.bgEventSegs, i),
                                u = ex(this.getHighlightSegs(), i),
                                l = ex(this.getMirrorSegs(), i),
                                d = function (e, t, n, r, a, i, o) {
                                    var s = new hx;
                                    s.allowReslicing = !0,
                                        s.strictOrder = r,
                                        !0 === t || !0 === n ? (s.maxCoord = i, s.hiddenConsumes = !0) : 'number' == typeof t ? s.maxStackCnt = t : 'number' == typeof n && (s.maxStackCnt = n, s.hiddenConsumes = !0);
                                    for (var u = [
                                    ], l = [
                                    ], d = 0; d < e.length; d += 1) {
                                        var c = a[(x = e[d]).eventRange.instance.instanceId];
                                        null != c ? u.push({
                                            index: d,
                                            thickness: c,
                                            span: {
                                                start: x.firstCol,
                                                end: x.lastCol + 1
                                            }
                                        }) : l.push(x)
                                    }
                                    for (var m = s.addSegs(u), f = function (e, t, n) {
                                        for (var r = function (e, t) {
                                            for (var n = [
                                            ], r = 0; r < t; r += 1) n.push([]);
                                            for (var a = 0, i = e; a < i.length; a++) {
                                                var o = i[a];
                                                for (r = o.span.start; r < o.span.end; r += 1) n[r].push(o)
                                            }
                                            return n
                                        }(e, n.length), a = [
                                        ], i = [
                                        ], o = [
                                        ], s = 0; s < n.length; s += 1) {
                                            for (var u = r[s], l = [
                                            ], d = 0, c = 0, m = 0, f = u; m < f.length; m++) {
                                                var h = t[(y = f[m]).index];
                                                l.push({
                                                    seg: fx(h, s, s + 1, n),
                                                    isVisible: !0,
                                                    isAbsolute: !1,
                                                    absoluteTop: y.levelCoord,
                                                    marginTop: y.levelCoord - d
                                                }),
                                                    d = y.levelCoord + y.thickness
                                            }
                                            var p = [
                                            ];
                                            d = 0,
                                                c = 0;
                                            for (var g = 0, v = u; g < v.length; g++) {
                                                h = t[(y = v[g]).index];
                                                var y,
                                                    w = y.span.end - y.span.start > 1,
                                                    b = y.span.start === s;
                                                c += y.levelCoord - d,
                                                    d = y.levelCoord + y.thickness,
                                                    w ? (c += y.thickness, b && p.push({
                                                        seg: fx(h, y.span.start, y.span.end, n),
                                                        isVisible: !0,
                                                        isAbsolute: !0,
                                                        absoluteTop: y.levelCoord,
                                                        marginTop: 0
                                                    })) : b && (p.push({
                                                        seg: fx(h, y.span.start, y.span.end, n),
                                                        isVisible: !0,
                                                        isAbsolute: !1,
                                                        absoluteTop: y.levelCoord,
                                                        marginTop: c
                                                    }), c = 0)
                                            }
                                            a.push(l),
                                                i.push(p),
                                                o.push(c)
                                        }
                                        return {
                                            singleColPlacements: a,
                                            multiColPlacements: i,
                                            leftoverMargins: o
                                        }
                                    }(s.toRects(), e, o), h = f.singleColPlacements, p = f.multiColPlacements, g = f.leftoverMargins, v = [
                                    ], y = [
                                    ], w = 0, b = l; w < b.length; w++) {
                                        p[(x = b[w]).firstCol].push({
                                            seg: x,
                                            isVisible: !1,
                                            isAbsolute: !0,
                                            absoluteTop: 0,
                                            marginTop: 0
                                        });
                                        for (var k = x.firstCol; k <= x.lastCol; k += 1) h[k].push({
                                            seg: fx(x, k, k + 1, o),
                                            isVisible: !1,
                                            isAbsolute: !1,
                                            absoluteTop: 0,
                                            marginTop: 0
                                        })
                                    }
                                    for (k = 0; k < o.length; k += 1) v.push(0);
                                    for (var M = 0, E = m; M < E.length; M++) {
                                        var P = E[M],
                                            x = e[P.index],
                                            S = P.span;
                                        for (p[S.start].push({
                                            seg: fx(x, S.start, S.end, o),
                                            isVisible: !1,
                                            isAbsolute: !0,
                                            absoluteTop: 0,
                                            marginTop: 0
                                        }), k = S.start; k < S.end; k += 1) v[k] += 1,
                                            h[k].push({
                                                seg: fx(x, k, k + 1, o),
                                                isVisible: !1,
                                                isAbsolute: !1,
                                                absoluteTop: 0,
                                                marginTop: 0
                                            })
                                    }
                                    for (k = 0; k < o.length; k += 1) y.push(g[k]);
                                    return {
                                        singleColPlacements: h,
                                        multiColPlacements: p,
                                        moreCnts: v,
                                        moreMarginTops: y
                                    }
                                }(Lk(n.fgEventSegs, a.eventOrder), n.dayMaxEvents, n.dayMaxEventRows, a.eventOrderStrict, r.eventInstanceHeights, r.maxContentHeight, n.cells),
                                c = d.singleColPlacements,
                                m = d.multiColPlacements,
                                f = d.moreCnts,
                                h = d.moreMarginTops,
                                p = n.eventDrag && n.eventDrag.affectedInstances || n.eventResize && n.eventResize.affectedInstances || {
                                };
                            return Iw('tr', {
                                ref: this.rootElRef,
                                role: 'row'
                            }, n.renderIntro && n.renderIntro(), n.cells.map((function (t, r) {
                                var a = e.renderFgSegs(r, n.forPrint ? c[r] : m[r], n.todayRange, p),
                                    i = e.renderFgSegs(r, function (e, t) {
                                        if (!e.length) return [];
                                        var n = function (e) {
                                            for (var t = {
                                            }, n = 0, r = e; n < r.length; n++) for (var a = 0, i = r[n]; a < i.length; a++) {
                                                var o = i[a];
                                                t[o.seg.eventRange.instance.instanceId] = o.absoluteTop
                                            }
                                            return t
                                        }(t);
                                        return e.map((function (e) {
                                            return {
                                                seg: e,
                                                isVisible: !0,
                                                isAbsolute: !0,
                                                absoluteTop: n[e.eventRange.instance.instanceId],
                                                marginTop: 0
                                            }
                                        }))
                                    }(l[r], m), n.todayRange, {
                                    }, Boolean(n.eventDrag), Boolean(n.eventResize), !1);
                                return Iw(mx, {
                                    key: t.key,
                                    elRef: e.cellElRefs.createRef(t.key),
                                    innerElRef: e.frameElRefs.createRef(t.key),
                                    dateProfile: n.dateProfile,
                                    date: t.date,
                                    showDayNumber: n.showDayNumbers,
                                    showWeekNumber: n.showWeekNumbers && 0 === r,
                                    forceDayTop: n.showWeekNumbers,
                                    todayRange: n.todayRange,
                                    eventSelection: n.eventSelection,
                                    eventDrag: n.eventDrag,
                                    eventResize: n.eventResize,
                                    extraHookProps: t.extraHookProps,
                                    extraDataAttrs: t.extraDataAttrs,
                                    extraClassNames: t.extraClassNames,
                                    extraDateSpan: t.extraDateSpan,
                                    moreCnt: f[r],
                                    moreMarginTop: h[r],
                                    singlePlacements: c[r],
                                    fgContentElRef: e.fgElRefs.createRef(t.key),
                                    fgContent: Iw(Rw, null, Iw(Rw, null, a), Iw(Rw, null, i)),
                                    bgContent: Iw(Rw, null, e.renderFillSegs(u[r], 'highlight'), e.renderFillSegs(o[r], 'non-business'), e.renderFillSegs(s[r], 'bg-event'))
                                })
                            })))
                        },
                        t.prototype.componentDidMount = function () {
                            this.updateSizing(!0)
                        },
                        t.prototype.componentDidUpdate = function (e, t) {
                            var n = this.props;
                            this.updateSizing(!xb(e, n))
                        },
                        t.prototype.getHighlightSegs = function () {
                            var e = this.props;
                            return e.eventDrag && e.eventDrag.segs.length ? e.eventDrag.segs : e.eventResize && e.eventResize.segs.length ? e.eventResize.segs : e.dateSelectionSegs
                        },
                        t.prototype.getMirrorSegs = function () {
                            var e = this.props;
                            return e.eventResize && e.eventResize.segs.length ? e.eventResize.segs : [
                            ]
                        },
                        t.prototype.renderFgSegs = function (e, t, n, r, a, i, o) {
                            var s = this.context,
                                u = this.props.eventSelection,
                                l = this.state.framePositions,
                                d = 1 === this.props.cells.length,
                                c = a || i || o,
                                m = [
                                ];
                            if (l) for (var f = 0, h = t; f < h.length; f++) {
                                var p = h[f],
                                    g = p.seg,
                                    v = g.eventRange.instance.instanceId,
                                    y = v + ':' + e,
                                    w = p.isVisible && !r[v],
                                    b = p.isAbsolute,
                                    k = '',
                                    M = '';
                                b && (s.isRtl ? (M = 0, k = l.lefts[g.lastCol] - l.lefts[g.firstCol]) : (k = 0, M = l.rights[g.firstCol] - l.rights[g.lastCol])),
                                    m.push(Iw('div', {
                                        className: 'fc-daygrid-event-harness' + (b ? ' fc-daygrid-event-harness-abs' : ''),
                                        key: y,
                                        ref: c ? null : this.segHarnessRefs.createRef(y),
                                        style: {
                                            visibility: w ? '' : 'hidden',
                                            marginTop: b ? '' : p.marginTop,
                                            top: b ? p.absoluteTop : '',
                                            left: k,
                                            right: M
                                        }
                                    }, ix(g) ? Iw(sx, jw({
                                        seg: g,
                                        isDragging: a,
                                        isSelected: v === u,
                                        defaultDisplayEventEnd: d
                                    }, Vk(g, n))) : Iw(ox, jw({
                                        seg: g,
                                        isDragging: a,
                                        isResizing: i,
                                        isDateSelecting: o,
                                        isSelected: v === u,
                                        defaultDisplayEventEnd: d
                                    }, Vk(g, n)))))
                            }
                            return m
                        },
                        t.prototype.renderFillSegs = function (e, t) {
                            var n,
                                r = this.context.isRtl,
                                a = this.props.todayRange,
                                i = this.state.framePositions,
                                o = [
                                ];
                            if (i) for (var s = 0, u = e; s < u.length; s++) {
                                var l = u[s],
                                    d = r ? {
                                        right: 0,
                                        left: i.lefts[l.lastCol] - i.lefts[l.firstCol]
                                    }
                                        : {
                                            left: 0,
                                            right: i.rights[l.firstCol] - i.rights[l.lastCol]
                                        };
                                o.push(Iw('div', {
                                    key: (n = l.eventRange, n.instance ? n.instance.instanceId : n.def.defId + ':' + n.range.start.toISOString()),
                                    className: 'fc-daygrid-bg-harness',
                                    style: d
                                }, 'bg-event' === t ? Iw(HP, jw({
                                    seg: l
                                }, Vk(l, a))) : OP(t)))
                            }
                            return Iw.apply(void 0, Dw([Rw,
                                {
                                }
                            ], o))
                        },
                        t.prototype.updateSizing = function (e) {
                            var t = this.props,
                                n = this.frameElRefs;
                            if (!t.forPrint && null !== t.clientWidth) {
                                if (e) {
                                    var r = t.cells.map((function (e) {
                                        return n.currentMap[e.key]
                                    }));
                                    if (r.length) {
                                        var a = this.rootElRef.current;
                                        this.setState({
                                            framePositions: new NM(a, r, !0, !1)
                                        })
                                    }
                                }
                                var i = this.state.eventInstanceHeights,
                                    o = this.queryEventInstanceHeights(),
                                    s = !0 === t.dayMaxEvents || !0 === t.dayMaxEventRows;
                                this.setState({
                                    eventInstanceHeights: jw(jw({
                                    }, i), o),
                                    maxContentHeight: s ? this.computeMaxContentHeight() : null
                                })
                            }
                        },
                        t.prototype.queryEventInstanceHeights = function () {
                            var e = this.segHarnessRefs.currentMap,
                                t = {
                                };
                            for (var n in e) {
                                var r = Math.round(e[n].getBoundingClientRect().height),
                                    a = n.split(':')[0];
                                t[a] = Math.max(t[a] || 0, r)
                            }
                            return t
                        },
                        t.prototype.computeMaxContentHeight = function () {
                            var e = this.props.cells[0].key,
                                t = this.cellElRefs.currentMap[e],
                                n = this.fgElRefs.currentMap[e];
                            return t.getBoundingClientRect().bottom - n.getBoundingClientRect().top
                        },
                        t.prototype.getCellEls = function () {
                            var e = this.cellElRefs.currentMap;
                            return this.props.cells.map((function (t) {
                                return e[t.key]
                            }))
                        },
                        t
                }(UM);
            px.addStateEquality({
                eventInstanceHeights: xb
            });
            var gx = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.splitBusinessHourSegs = _b(ZP),
                        t.splitBgEventSegs = _b(ZP),
                        t.splitFgEventSegs = _b(ZP),
                        t.splitDateSelectionSegs = _b(ZP),
                        t.splitEventDrag = _b(tx),
                        t.splitEventResize = _b(tx),
                        t.rowRefs = new kP,
                        t.handleRootEl = function (e) {
                            t.rootEl = e,
                                e ? t.context.registerInteractiveComponent(t, {
                                    el: e,
                                    isHitComboAllowed: t.props.isHitComboAllowed
                                }) : t.context.unregisterInteractiveComponent(t)
                        },
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this,
                            t = this.props,
                            n = t.dateProfile,
                            r = t.dayMaxEventRows,
                            a = t.dayMaxEvents,
                            i = t.expandRows,
                            o = t.cells.length,
                            s = this.splitBusinessHourSegs(t.businessHourSegs, o),
                            u = this.splitBgEventSegs(t.bgEventSegs, o),
                            l = this.splitFgEventSegs(t.fgEventSegs, o),
                            d = this.splitDateSelectionSegs(t.dateSelectionSegs, o),
                            c = this.splitEventDrag(t.eventDrag, o),
                            m = this.splitEventResize(t.eventResize, o),
                            f = !0 === a || !0 === r;
                        return f && !i && (f = !1, r = null, a = null),
                            Iw('div', {
                                className: [
                                    'fc-daygrid-body',
                                    f ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',
                                    i ? '' : 'fc-daygrid-body-natural'
                                ].join(' '),
                                ref: this.handleRootEl,
                                style: {
                                    width: t.clientWidth,
                                    minWidth: t.tableMinWidth
                                }
                            }, Iw(cP, {
                                unit: 'day'
                            }, (function (f, h) {
                                return Iw(Rw, null, Iw('table', {
                                    role: 'presentation',
                                    className: 'fc-scrollgrid-sync-table',
                                    style: {
                                        width: t.clientWidth,
                                        minWidth: t.tableMinWidth,
                                        height: i ? t.clientHeight : ''
                                    }
                                }, t.colGroupNode, Iw('tbody', {
                                    role: 'presentation'
                                }, t.cells.map((function (i, f) {
                                    return Iw(px, {
                                        ref: e.rowRefs.createRef(f),
                                        key: i.length ? i[0].date.toISOString() : f,
                                        showDayNumbers: o > 1,
                                        showWeekNumbers: t.showWeekNumbers,
                                        todayRange: h,
                                        dateProfile: n,
                                        cells: i,
                                        renderIntro: t.renderRowIntro,
                                        businessHourSegs: s[f],
                                        eventSelection: t.eventSelection,
                                        bgEventSegs: u[f].filter(vx),
                                        fgEventSegs: l[f],
                                        dateSelectionSegs: d[f],
                                        eventDrag: c[f],
                                        eventResize: m[f],
                                        dayMaxEvents: a,
                                        dayMaxEventRows: r,
                                        clientWidth: t.clientWidth,
                                        clientHeight: t.clientHeight,
                                        forPrint: t.forPrint
                                    })
                                })))))
                            })))
                    },
                    t.prototype.prepareHits = function () {
                        this.rowPositions = new NM(this.rootEl, this.rowRefs.collect().map((function (e) {
                            return e.getCellEls()[0]
                        })), !1, !0),
                            this.colPositions = new NM(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), !0, !1)
                    },
                    t.prototype.queryHit = function (e, t) {
                        var n = this.colPositions,
                            r = this.rowPositions,
                            a = n.leftToIndex(e),
                            i = r.topToIndex(t);
                        if (null != i && null != a) {
                            var o = this.props.cells[i][a];
                            return {
                                dateProfile: this.props.dateProfile,
                                dateSpan: jw({
                                    range: this.getCellRange(i, a),
                                    allDay: !0
                                }, o.extraDateSpan),
                                dayEl: this.getCellEl(i, a),
                                rect: {
                                    left: n.lefts[a],
                                    right: n.rights[a],
                                    top: r.tops[i],
                                    bottom: r.bottoms[i]
                                },
                                layer: 0
                            }
                        }
                        return null
                    },
                    t.prototype.getCellEl = function (e, t) {
                        return this.rowRefs.currentMap[e].getCellEls()[t]
                    },
                    t.prototype.getCellRange = function (e, t) {
                        var n = this.props.cells[e][t].date;
                        return {
                            start: n,
                            end: ib(n, 1)
                        }
                    },
                    t
            }(UM);
            function vx(e) {
                return e.eventRange.def.allDay
            }
            var yx = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.forceDayIfListItem = !0,
                        t
                }
                return Ww(t, e),
                    t.prototype.sliceRange = function (e, t) {
                        return t.sliceRange(e)
                    },
                    t
            }(vP),
                wx = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.slicer = new yx,
                            t.tableRef = zw(),
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = this.context;
                            return Iw(gx, jw({
                                ref: this.tableRef
                            }, this.slicer.sliceProps(e, e.dateProfile, e.nextDayThreshold, t, e.dayTableModel), {
                                dateProfile: e.dateProfile,
                                cells: e.dayTableModel.cells,
                                colGroupNode: e.colGroupNode,
                                tableMinWidth: e.tableMinWidth,
                                renderRowIntro: e.renderRowIntro,
                                dayMaxEvents: e.dayMaxEvents,
                                dayMaxEventRows: e.dayMaxEventRows,
                                showWeekNumbers: e.showWeekNumbers,
                                expandRows: e.expandRows,
                                headerAlignElRef: e.headerAlignElRef,
                                clientWidth: e.clientWidth,
                                clientHeight: e.clientHeight,
                                forPrint: e.forPrint
                            }))
                        },
                        t
                }(UM),
                bx = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.buildDayTableModel = _b(kx),
                            t.headerRef = zw(),
                            t.tableRef = zw(),
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this,
                                t = this.context,
                                n = t.options,
                                r = t.dateProfileGenerator,
                                a = this.props,
                                i = this.buildDayTableModel(a.dateProfile, r),
                                o = n.dayHeaders && Iw(fP, {
                                    ref: this.headerRef,
                                    dateProfile: a.dateProfile,
                                    dates: i.headerDates,
                                    datesRepDistinctDays: 1 === i.rowCnt
                                }),
                                s = function (t) {
                                    return Iw(wx, {
                                        ref: e.tableRef,
                                        dateProfile: a.dateProfile,
                                        dayTableModel: i,
                                        businessHours: a.businessHours,
                                        dateSelection: a.dateSelection,
                                        eventStore: a.eventStore,
                                        eventUiBases: a.eventUiBases,
                                        eventSelection: a.eventSelection,
                                        eventDrag: a.eventDrag,
                                        eventResize: a.eventResize,
                                        nextDayThreshold: n.nextDayThreshold,
                                        colGroupNode: t.tableColGroupNode,
                                        tableMinWidth: t.tableMinWidth,
                                        dayMaxEvents: n.dayMaxEvents,
                                        dayMaxEventRows: n.dayMaxEventRows,
                                        showWeekNumbers: n.weekNumbers,
                                        expandRows: !a.isHeightAuto,
                                        headerAlignElRef: e.headerElRef,
                                        clientWidth: t.clientWidth,
                                        clientHeight: t.clientHeight,
                                        forPrint: a.forPrint
                                    })
                                };
                            return n.dayMinWidth ? this.renderHScrollLayout(o, s, i.colCnt, n.dayMinWidth) : this.renderSimpleLayout(o, s)
                        },
                        t
                }(JP);
            function kx(e, t) {
                var n = new pP(e.renderRange, t);
                return new gP(n, /year|month|week/.test(e.currentRangeUnit))
            }
            var Mx = function (e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return Ww(t, e),
                    t.prototype.buildRenderRange = function (t, n, r) {
                        var a,
                            i = this.props.dateEnv,
                            o = e.prototype.buildRenderRange.call(this, t, n, r),
                            s = o.start,
                            u = o.end;
                        return /^(year|month)$/.test(n) && (s = i.startOfWeek(s), (a = i.startOfWeek(u)).valueOf() !== u.valueOf() && (u = ab(a, 1))),
                            this.props.monthMode && this.props.fixedWeekCount && (u = ab(u, 6 - Math.ceil(sb(s, u) / 7))),
                        {
                            start: s,
                            end: u
                        }
                    },
                    t
            }(oE),
                Ex = qM({
                    initialView: 'dayGridMonth',
                    views: {
                        dayGrid: {
                            component: bx,
                            dateProfileGeneratorClass: Mx
                        },
                        dayGridDay: {
                            type: 'dayGrid',
                            duration: {
                                days: 1
                            }
                        },
                        dayGridWeek: {
                            type: 'dayGrid',
                            duration: {
                                weeks: 1
                            }
                        },
                        dayGridMonth: {
                            type: 'dayGrid',
                            duration: {
                                months: 1
                            },
                            monthMode: !0,
                            fixedWeekCount: !0
                        }
                    }
                }),
                Px = function (e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            textId: Vw()
                        },
                            t
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.context,
                                t = e.theme,
                                n = e.dateEnv,
                                r = e.options,
                                a = e.viewApi,
                                i = this.props,
                                o = i.cellId,
                                s = i.dayDate,
                                u = i.todayRange,
                                l = this.state.textId,
                                d = xM(s, u),
                                c = r.listDayFormat ? n.format(s, r.listDayFormat) : '',
                                m = r.listDaySideFormat ? n.format(s, r.listDaySideFormat) : '',
                                f = jw({
                                    date: n.toDate(s),
                                    view: a,
                                    textId: l,
                                    text: c,
                                    sideText: m,
                                    navLinkAttrs: jM(this.context, s),
                                    sideNavLinkAttrs: jM(this.context, s, 'day', !1)
                                }, d),
                                h = [
                                    'fc-list-day'
                                ].concat(SM(d, t));
                            return Iw(YM, {
                                hookProps: f,
                                classNames: r.dayHeaderClassNames,
                                content: r.dayHeaderContent,
                                defaultContent: xx,
                                didMount: r.dayHeaderDidMount,
                                willUnmount: r.dayHeaderWillUnmount
                            }, (function (e, n, r, a) {
                                return Iw('tr', {
                                    ref: e,
                                    className: h.concat(n).join(' '),
                                    'data-date': Ab(s)
                                }, Iw('th', {
                                    scope: 'colgroup',
                                    colSpan: 3,
                                    id: o,
                                    'aria-labelledby': l
                                }, Iw('div', {
                                    className: 'fc-list-day-cushion ' + t.getClass('tableCellShaded'),
                                    ref: r
                                }, a)))
                            }))
                        },
                        t
                }(_M);
            function xx(e) {
                return Iw(Rw, null, e.text && Iw('a', jw({
                    id: e.textId,
                    className: 'fc-list-day-text'
                }, e.navLinkAttrs), e.text), e.sideText && Iw('a', jw({
                    'aria-hidden': !0,
                    className: 'fc-list-day-side-text'
                }, e.sideNavLinkAttrs), e.sideText))
            }
            var Sx = ek({
                hour: 'numeric',
                minute: '2-digit',
                meridiem: 'short'
            }),
                Tx = function (e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Ww(t, e),
                        t.prototype.render = function () {
                            var e = this.props,
                                t = this.context,
                                n = e.seg,
                                r = e.timeHeaderId,
                                a = e.eventHeaderId,
                                i = e.dateHeaderId,
                                o = t.options.eventTimeFormat || Sx;
                            return Iw(jP, {
                                seg: n,
                                timeText: '',
                                disableDragging: !0,
                                disableResizing: !0,
                                defaultContent: function () {
                                    return function (e, t) {
                                        var n = Yk(e, t);
                                        return Iw('a', jw({
                                        }, n), e.eventRange.def.title)
                                    }(n, t)
                                },
                                isPast: e.isPast,
                                isFuture: e.isFuture,
                                isToday: e.isToday,
                                isSelected: e.isSelected,
                                isDragging: e.isDragging,
                                isResizing: e.isResizing,
                                isDateSelecting: e.isDateSelecting
                            }, (function (e, s, u, l, d) {
                                return Iw('tr', {
                                    className: [
                                        'fc-list-event',
                                        d.event.url ? 'fc-event-forced-url' : ''
                                    ].concat(s).join(' '),
                                    ref: e
                                }, function (e, t, n, r, a) {
                                    var i,
                                        o = n.options;
                                    if (!1 !== o.displayEventTime) {
                                        var s = e.eventRange.def,
                                            u = e.eventRange.instance,
                                            l = !1,
                                            d = void 0;
                                        if (s.allDay ? l = !0 : sb((i = Wk(e.eventRange.range)).start, i.end) > 1 ? e.isStart ? d = Gk(e, t, n, null, null, u.range.start, e.end) : e.isEnd ? d = Gk(e, t, n, null, null, e.start, u.range.end) : l = !0 : d = Gk(e, t, n), l) {
                                            var c = {
                                                text: n.options.allDayText,
                                                view: n.viewApi
                                            };
                                            return Iw(YM, {
                                                hookProps: c,
                                                classNames: o.allDayClassNames,
                                                content: o.allDayContent,
                                                defaultContent: Cx,
                                                didMount: o.allDayDidMount,
                                                willUnmount: o.allDayWillUnmount
                                            }, (function (e, t, n, i) {
                                                return Iw('td', {
                                                    ref: e,
                                                    headers: r + ' ' + a,
                                                    className: [
                                                        'fc-list-event-time'
                                                    ].concat(t).join(' ')
                                                }, i)
                                            }))
                                        }
                                        return Iw('td', {
                                            className: 'fc-list-event-time'
                                        }, d)
                                    }
                                    return null
                                }(n, o, t, r, i), Iw('td', {
                                    'aria-hidden': !0,
                                    className: 'fc-list-event-graphic'
                                }, Iw('span', {
                                    className: 'fc-list-event-dot',
                                    style: {
                                        borderColor: d.borderColor || d.backgroundColor
                                    }
                                })), Iw('td', {
                                    ref: u,
                                    headers: a + ' ' + i,
                                    className: 'fc-list-event-title'
                                }, l))
                            }))
                        },
                        t
                }(_M);
            function Cx(e) {
                return e.text
            }
            var Wx = function (e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.computeDateVars = _b(Dx),
                        t.eventStoreToSegs = _b(t._eventStoreToSegs),
                        t.state = {
                            timeHeaderId: Vw(),
                            eventHeaderId: Vw(),
                            dateHeaderIdRoot: Vw()
                        },
                        t.setRootEl = function (e) {
                            e ? t.context.registerInteractiveComponent(t, {
                                el: e
                            }) : t.context.unregisterInteractiveComponent(t)
                        },
                        t
                }
                return Ww(t, e),
                    t.prototype.render = function () {
                        var e = this,
                            t = this.props,
                            n = this.context,
                            r = [
                                'fc-list',
                                n.theme.getClass('table'),
                                !1 !== n.options.stickyHeaderDates ? 'fc-list-sticky' : ''
                            ],
                            a = this.computeDateVars(t.dateProfile),
                            i = a.dayDates,
                            o = a.dayRanges,
                            s = this.eventStoreToSegs(t.eventStore, t.eventUiBases, o);
                        return Iw(tE, {
                            viewSpec: n.viewSpec,
                            elRef: this.setRootEl
                        }, (function (n, a) {
                            return Iw('div', {
                                ref: n,
                                className: r.concat(a).join(' ')
                            }, Iw(bP, {
                                liquid: !t.isHeightAuto,
                                overflowX: t.isHeightAuto ? 'visible' : 'hidden',
                                overflowY: t.isHeightAuto ? 'visible' : 'auto'
                            }, s.length > 0 ? e.renderSegList(s, i) : e.renderEmptyMessage()))
                        }))
                    },
                    t.prototype.renderEmptyMessage = function () {
                        var e = this.context,
                            t = e.options,
                            n = e.viewApi,
                            r = {
                                text: t.noEventsText,
                                view: n
                            };
                        return Iw(YM, {
                            hookProps: r,
                            classNames: t.noEventsClassNames,
                            content: t.noEventsContent,
                            defaultContent: jx,
                            didMount: t.noEventsDidMount,
                            willUnmount: t.noEventsWillUnmount
                        }, (function (e, t, n, r) {
                            return Iw('div', {
                                className: [
                                    'fc-list-empty'
                                ].concat(t).join(' '),
                                ref: e
                            }, Iw('div', {
                                className: 'fc-list-empty-cushion',
                                ref: n
                            }, r))
                        }))
                    },
                    t.prototype.renderSegList = function (e, t) {
                        var n = this.context,
                            r = n.theme,
                            a = n.options,
                            i = this.state,
                            o = i.timeHeaderId,
                            s = i.eventHeaderId,
                            u = i.dateHeaderIdRoot,
                            l = function (e) {
                                var t,
                                    n,
                                    r = [
                                    ];
                                for (t = 0; t < e.length; t += 1) (r[(n = e[t]).dayIndex] || (r[n.dayIndex] = [
                                ])).push(n);
                                return r
                            }(e);
                        return Iw(cP, {
                            unit: 'day'
                        }, (function (e, n) {
                            for (var i = [
                            ], d = 0; d < l.length; d += 1) {
                                var c = l[d];
                                if (c) {
                                    var m = Ab(t[d]),
                                        f = u + '-' + m;
                                    i.push(Iw(Px, {
                                        key: m,
                                        cellId: f,
                                        dayDate: t[d],
                                        todayRange: n
                                    }));
                                    for (var h = 0, p = c = Lk(c, a.eventOrder); h < p.length; h++) {
                                        var g = p[h];
                                        i.push(Iw(Tx, jw({
                                            key: m + ':' + g.eventRange.instance.instanceId,
                                            seg: g,
                                            isDragging: !1,
                                            isResizing: !1,
                                            isDateSelecting: !1,
                                            isSelected: !1,
                                            timeHeaderId: o,
                                            eventHeaderId: s,
                                            dateHeaderId: f
                                        }, Vk(g, n, e))))
                                    }
                                }
                            }
                            return Iw('table', {
                                className: 'fc-list-table ' + r.getClass('table')
                            }, Iw('thead', null, Iw('tr', null, Iw('th', {
                                scope: 'col',
                                id: o
                            }, a.timeHint), Iw('th', {
                                scope: 'col',
                                'aria-hidden': !0
                            }), Iw('th', {
                                scope: 'col',
                                id: s
                            }, a.eventHint))), Iw('tbody', null, i))
                        }))
                    },
                    t.prototype._eventStoreToSegs = function (e, t, n) {
                        return this.eventRangesToSegs(Rk(e, t, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, n)
                    },
                    t.prototype.eventRangesToSegs = function (e, t) {
                        for (var n = [
                        ], r = 0, a = e; r < a.length; r++) {
                            var i = a[r];
                            n.push.apply(n, this.eventRangeToSegs(i, t))
                        }
                        return n
                    },
                    t.prototype.eventRangeToSegs = function (e, t) {
                        var n,
                            r,
                            a,
                            i = this.context.dateEnv,
                            o = this.context.options.nextDayThreshold,
                            s = e.range,
                            u = e.def.allDay,
                            l = [
                            ];
                        for (n = 0; n < t.length; n += 1) if ((r = Ik(s, t[n])) && (a = {
                            component: this,
                            eventRange: e,
                            start: r.start,
                            end: r.end,
                            isStart: e.isStart && r.start.valueOf() === s.start.valueOf(),
                            isEnd: e.isEnd && r.end.valueOf() === s.end.valueOf(),
                            dayIndex: n
                        }, l.push(a), !a.isEnd && !u && n + 1 < t.length && s.end < i.add(t[n + 1].start, o))) {
                            a.end = s.end,
                                a.isEnd = !0;
                            break
                        }
                        return l
                    },
                    t
            }(UM);
            function jx(e) {
                return e.text
            }
            function Dx(e) {
                for (var t = lb(e.renderRange.start), n = e.renderRange.end, r = [
                ], a = [
                ]; t < n;) r.push(t),
                    a.push({
                        start: t,
                        end: ib(t, 1)
                    }),
                    t = ib(t, 1);
                return {
                    dayDates: r,
                    dayRanges: a
                }
            }
            function Nx(e) {
                return !1 === e ? null : ek(e)
            }
            var Ix = qM({
                optionRefiners: {
                    listDayFormat: Nx,
                    listDaySideFormat: Nx,
                    noEventsClassNames: dk,
                    noEventsContent: dk,
                    noEventsDidMount: dk,
                    noEventsWillUnmount: dk
                },
                views: {
                    list: {
                        component: Wx,
                        buttonTextKey: 'list',
                        listDayFormat: {
                            month: 'long',
                            day: 'numeric',
                            year: 'numeric'
                        }
                    },
                    listDay: {
                        type: 'list',
                        duration: {
                            days: 1
                        },
                        listDayFormat: {
                            weekday: 'long'
                        }
                    },
                    listWeek: {
                        type: 'list',
                        duration: {
                            weeks: 1
                        },
                        listDayFormat: {
                            weekday: 'long'
                        },
                        listDaySideFormat: {
                            month: 'long',
                            day: 'numeric',
                            year: 'numeric'
                        }
                    },
                    listMonth: {
                        type: 'list',
                        duration: {
                            month: 1
                        },
                        listDaySideFormat: {
                            weekday: 'long'
                        }
                    },
                    listYear: {
                        type: 'list',
                        duration: {
                            year: 1
                        },
                        listDaySideFormat: {
                            weekday: 'long'
                        }
                    }
                }
            }),
                zx = n(1965),
                Rx = function () {
                    var e = s((0, r.useState)(), 2),
                        t = e[0],
                        n = e[1],
                        a = (0, d.useQuery)(['calendar',
                            null == t ? void 0 : t.startStr,
                            null == t ? void 0 : t.endStr], (function () {
                                return ve.calendar.get({
                                    start: t.startStr,
                                    end: t.endStr
                                })
                            }), {
                            enabled: void 0 !== t
                        }).data,
                        i = (0, r.useMemo)((function () {
                            return null == a ? void 0 : a.episodes.map((function (e) {
                                return {
                                    title: e.tvShow.title,
                                    date: new Date(e.releaseDate),
                                    allDay: !0,
                                    backgroundColor: Ox(e),
                                    borderColor: Ox(e),
                                    id: e.tvShowId.toString() + e.id.toString(),
                                    extendedProps: {
                                        tvShowTitle: e.tvShow.title,
                                        episodeNumber: Qs(e),
                                        episodeTitle: e.title,
                                        seen: e.seen,
                                        url: '/details/'.concat(e.tvShowId)
                                    }
                                }
                            }))
                        }), [
                            a
                        ]),
                        o = (0, r.useMemo)((function () {
                            return null == a ? void 0 : a.items.map((function (e) {
                                return {
                                    title: e.title,
                                    date: new Date(e.releaseDate),
                                    allDay: !0,
                                    backgroundColor: Ax(e.mediaType),
                                    borderColor: Ax(e.mediaType),
                                    extendedProps: {
                                        seen: e.seen,
                                        url: '/details/'.concat(e.id)
                                    }
                                }
                            }))
                        }), [
                            a
                        ]),
                        u = (0, r.useMemo)((function () {
                            return [].concat(Zy(i || [
                            ]), Zy(o || [
                            ]))
                        }), [
                            i,
                            o
                        ]),
                        l = He();
                    return r.createElement('div', {
                        className: 'p-2'
                    }, r.createElement(KP, {
                        locales: zx.Z,
                        locale: l.i18n.locale,
                        plugins: [
                            Ex,
                            Ix
                        ],
                        headerToolbar: {
                            left: 'title',
                            center: '',
                            right: 'today prev,next dayGridMonth,listMonth'
                        },
                        views: {
                            listMonth: {
                                displayEventTime: !1
                            },
                            dayGridMonth: {
                            }
                        },
                        initialView: 'dayGridMonth',
                        dayMaxEvents: !0,
                        height: 'auto',
                        datesSet: n,
                        events: u,
                        eventContent: function (e) {
                            return r.createElement(Q, {
                                to: e.event.extendedProps.url
                            }, r.createElement('div', {
                                className: 'flex'
                            }, r.createElement('span', {
                                className: 'overflow-hidden text-ellipsis'
                            }, e.event.title), e.event.extendedProps.episodeNumber && r.createElement('span', null, ' ', e.event.extendedProps.episodeNumber), e.event.extendedProps.seen && r.createElement('i', {
                                className: 'pl-0.5 ml-auto flex material-icons'
                            }, 'check_circle_outline')))
                        }
                    }))
                },
                Ax = function (e) {
                    switch (e) {
                        case 'book':
                            return 'red';
                        case 'tv':
                            return 'blue';
                        case 'movie':
                            return 'orange';
                        case 'video_game':
                            return 'violet'
                    }
                },
                Ox = function (e) {
                    return 1 === e.episodeNumber ? 1 === e.seasonNumber ? _x : Hx : null
                },
                Hx = 'orange',
                _x = 'green',
                Lx = function () {
                    var e = s((0, r.useState)(''), 2),
                        t = e[0],
                        n = e[1],
                        a = s((0, r.useState)(''), 2),
                        i = a[0],
                        o = a[1],
                        u = s((0, r.useState)(''), 2),
                        l = u[0],
                        c = u[1],
                        m = Ug().configuration,
                        f = function () {
                            var e,
                                t = s(r.useState(), 2),
                                n = t[0],
                                a = t[1],
                                i = (0, d.useMutation)((e = ve.user.register, function () {
                                    var t = te(fe().mark((function t(n) {
                                        return fe().wrap((function (t) {
                                            for (; ;) switch (t.prev = t.next) {
                                                case 0:
                                                    return t.abrupt('return', ye(e(n)));
                                                case 1:
                                                case 'end':
                                                    return t.stop()
                                            }
                                        }), t)
                                    })));
                                    return function (e) {
                                        return t.apply(this, arguments)
                                    }
                                }()), {
                                    onSuccess: function (e) {
                                        e.data && (cj.invalidateQueries('configuration'), cj.invalidateQueries('user'))
                                    },
                                    onSettled: function (e) {
                                        e.error ? a(e.error) : a(void 0)
                                    }
                                });
                            return {
                                registerUser: i.mutate,
                                error: n
                            }
                        }(),
                        h = f.registerUser,
                        p = f.error,
                        g = function () {
                            var e = te(fe().mark((function e(n) {
                                return fe().wrap((function (e) {
                                    for (; ;) switch (e.prev = e.next) {
                                        case 0:
                                            n.preventDefault(),
                                                h({
                                                    username: t,
                                                    password: i,
                                                    confirmPassword: l
                                                });
                                        case 2:
                                        case 'end':
                                            return e.stop()
                                    }
                                }), e)
                            })));
                            return function (t) {
                                return e.apply(this, arguments)
                            }
                        }();
                    return r.createElement('div', {
                        className: 'flex items-center'
                    }, r.createElement('div', {
                        className: 'mx-auto mt-20'
                    }, r.createElement('div', {
                        className: 'mb-10 text-5xl'
                    }, r.createElement(Oe, {
                        id: 'Register'
                    })), r.createElement('form', {
                        onSubmit: g
                    }, r.createElement('div', {
                        className: 'pb-5'
                    }, r.createElement('label', {
                        htmlFor: 'username',
                        className: 'block text-lg'
                    }, r.createElement(Oe, {
                        id: 'Username'
                    }), ':'), r.createElement('input', {
                        id: 'username',
                        type: 'text',
                        name: 'username',
                        required: !0,
                        autoFocus: !0,
                        className: 'w-72',
                        onChange: function (e) {
                            return n(e.target.value)
                        }
                    })), r.createElement('div', {
                        className: 'pb-5'
                    }, r.createElement('label', {
                        htmlFor: 'password',
                        className: 'block text-lg'
                    }, r.createElement(Oe, {
                        id: 'Password'
                    }), ':'), r.createElement('input', {
                        id: 'password',
                        type: 'password',
                        name: 'password',
                        className: 'w-72',
                        required: !0,
                        onChange: function (e) {
                            return o(e.target.value)
                        }
                    })), r.createElement('div', {
                        className: 'pb-5'
                    }, r.createElement('label', {
                        htmlFor: 'confirmPassword',
                        className: 'block text-lg'
                    }, r.createElement(Oe, {
                        id: 'Confirm password'
                    }), ':'), r.createElement('input', {
                        id: 'confirmPassword',
                        type: 'password',
                        name: 'confirmPassword',
                        className: 'w-72',
                        required: !0,
                        onChange: function (e) {
                            return c(e.target.value)
                        }
                    })), r.createElement('div', null, r.createElement('button', {
                        className: 'w-full mt-2'
                    }, r.createElement(Oe, {
                        id: 'Register'
                    })))), !(null != m && m.noUsers) && r.createElement(Q, {
                        to: '/login'
                    }, r.createElement('button', {
                        className: 'w-full mt-4'
                    }, r.createElement(Oe, {
                        id: 'Login'
                    }))), p && r.createElement('div', {
                        className: 'pt-2 font-bold text-red-700 dark:text-red-600'
                    }, p)))
                },
                Fx = function () {
                    return r.createElement('div', {
                        className: 'flex items-center justify-center h-screen text-8xl'
                    }, '404')
                };
            function Xx(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function (t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))),
                        n.push.apply(n, r)
                }
                return n
            }
            function Ux(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {
                    };
                    t % 2 ? Xx(Object(n), !0).forEach((function (t) {
                        Ee(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Xx(Object(n)).forEach((function (t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            n(5827);
            var qx = function () {
                var e,
                    t = j().mediaItemId,
                    n = Rr(Number(t)),
                    a = n.mediaItem,
                    i = n.isLoading,
                    o = n.error,
                    s = (0, r.useMemo)((function () {
                        return null == a ? void 0 : a.seasons.flatMap((function (e) {
                            return e.episodes
                        })).reduce((function (e, t) {
                            return Ux(Ux({
                            }, e), {
                            }, Ee({
                            }, t.id, t))
                        }), {
                        })
                    }), [
                        a
                    ]);
                return i ? r.createElement(Oe, {
                    id: 'Loading'
                }) : o ? r.createElement(r.Fragment, null, o) : r.createElement(r.Fragment, null, (null === (e = a.seenHistory) || void 0 === e ? void 0 : e.length) > 0 && r.createElement('div', {
                    className: 'mt-3'
                }, r.createElement('div', null, Zs(a) && r.createElement(Oe, {
                    id: '{0, plural, one {Listened 1 time} other {Listened # times}}',
                    values: {
                        0: a.seenHistory.length
                    }
                }), eu(a) && r.createElement(Oe, {
                    id: '{0, plural, one {Read 1 time} other {Read # times}}',
                    values: {
                        0: a.seenHistory.length
                    }
                }), (tu(a) || nu(a)) && r.createElement(Oe, {
                    id: '{0, plural, one {Seen 1 time} other {Seen # times}}',
                    values: {
                        0: a.seenHistory.length
                    }
                }), ru(a) && r.createElement(Oe, {
                    id: '{0, plural, one {Played 1 time} other {Played # times}}',
                    values: {
                        0: a.seenHistory.length
                    }
                })), r.createElement('ul', {
                    className: 'list-disc'
                }, a.seenHistory.sort((function (e, t) {
                    return t.date - e.date
                })).map((function (e) {
                    return r.createElement('li', {
                        key: e.id
                    }, Zs(a) && (e.date > 0 ? r.createElement(Oe, {
                        id: 'Listened at {0}',
                        values: {
                            0: new Date(e.date).toLocaleString()
                        }
                    }) : r.createElement(Oe, {
                        id: 'No date'
                    })), eu(a) && (e.date > 0 ? r.createElement(Oe, {
                        id: 'Read at {0}',
                        values: {
                            0: new Date(e.date).toLocaleString()
                        }
                    }) : r.createElement(Oe, {
                        id: 'No date'
                    })), (tu(a) || nu(a)) && (e.date > 0 ? r.createElement(Oe, {
                        id: 'Seen at {0}',
                        values: {
                            0: new Date(e.date).toLocaleString()
                        }
                    }) : r.createElement(Oe, {
                        id: 'No date'
                    })), ru(a) && (e.date > 0 ? r.createElement(Oe, {
                        id: 'Played at {0}',
                        values: {
                            0: new Date(e.date).toLocaleString()
                        }
                    }) : r.createElement(Oe, {
                        id: 'No date'
                    })), r.createElement('div', null, e.episodeId && s[e.episodeId] && r.createElement(Oe, {
                        id: 'Episode {0} {1}',
                        values: {
                            0: Qs(s[e.episodeId]),
                            1: s[e.episodeId].title
                        }
                    })))
                })))))
            },
                Gx = function (e) {
                    var t = e.path,
                        n = e.imgSrc;
                    return r.createElement(Q, {
                        to: t,
                        className: 'mt-4 no-underline w-fit'
                    }, r.createElement('div', {
                        className: 'flex flex-row items-center text-lg btn-blue'
                    }, r.createElement(Oe, {
                        id: 'Import from'
                    }), ' ', r.createElement('img', {
                        src: n,
                        className: 'inline-block h-8 ml-2 '
                    })))
                },
                Vx = function () {
                    var e = Me().darkMode;
                    return r.createElement('div', {
                        className: 'flex flex-col items-center justify-center mt-4'
                    }, r.createElement(Gx, {
                        path: 'trakttv',
                        imgSrc: e ? 'logo/trakt-white.svg' : 'logo/trakt-black.svg'
                    }), r.createElement(Gx, {
                        path: 'goodreads',
                        imgSrc: 'logo/goodreads.svg'
                    }))
                },
                Yx = function (e) {
                    var t = e.columns,
                        n = e.rows,
                        a = e.exported,
                        i = e.imported;
                    return r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'my-4 text-2xl font-bold text-center'
                    }, r.createElement(Oe, {
                        id: 'Summary'
                    })), r.createElement('table', {
                        className: 'w-full divide-y divide-gray-300 table-auto'
                    }, r.createElement('thead', null, r.createElement('tr', {
                        className: 'divide-x'
                    }, r.createElement('th', {
                        className: 'w-[1%]'
                    }), t.map((function (e) {
                        return r.createElement('th', {
                            key: e,
                            className: tt('py-2 text-lg font-semibold', t.length > 2 && 'writing-mode-vertical sm:writing-mode-initial')
                        }, e)
                    })))), r.createElement('tbody', {
                        className: 'divide-y'
                    }, n.map((function (e, n) {
                        return r.createElement('tr', {
                            key: e,
                            className: 'divide-x'
                        }, r.createElement('td', {
                            className: 'py-2 pr-4 text-md whitespace-nowrap'
                        }, e), t.map((function (e, t) {
                            var o,
                                s,
                                u;
                            return r.createElement('td', {
                                key: e,
                                className: 'text-sm text-center'
                            }, null !== (o = a.at(n)) && void 0 !== o && o.at(t) ? r.createElement(r.Fragment, null, (null === (s = i.at(n)) || void 0 === s ? void 0 : s.at(t)) || '?', ' /', ' ', null === (u = a.at(n)) || void 0 === u ? void 0 : u.at(t)) : r.createElement(r.Fragment, null))
                        })))
                    })))))
                },
                Bx = function () {
                    var e,
                        t,
                        n,
                        a,
                        i,
                        o,
                        u,
                        l,
                        c,
                        m,
                        f,
                        h,
                        p,
                        g,
                        v,
                        y,
                        w,
                        b,
                        k,
                        M,
                        E,
                        P,
                        x,
                        S,
                        T,
                        C,
                        W,
                        j,
                        D,
                        N,
                        I,
                        z,
                        R,
                        A,
                        O,
                        H = (A = (R = s((0, r.useState)(), 2))[0], O = R[1], {
                            deviceCode: (0, d.useQuery)(['import',
                                'TraktTv',
                                'device-code'], ve.importTrakttv.deviceToken).data,
                            state: (0, d.useQuery)(['import',
                                'TraktTv',
                                'state'], ve.importTrakttv.state, {
                                refetchInterval: 100,
                                enabled: 'imported' !== A,
                                onSettled: function (e) {
                                    return O(null == e ? void 0 : e.state)
                                }
                            }).data
                        }),
                        _ = H.deviceCode,
                        L = H.state;
                    return r.createElement('div', {
                        className: 'flex flex-col justify-center w-full mt-4'
                    }, r.createElement('div', {
                        className: 'flex flex-col items-center w-full'
                    }, L ? r.createElement(r.Fragment, null, _ && 'waiting-for-authentication' === (null == L ? void 0 : L.state) ? r.createElement('div', {
                        className: ''
                    }, r.createElement(Oe, {
                        id: 'Go to <0>{0}</0> and enter following code: {1}',
                        values: {
                            0: _.verificationUrl,
                            1: _.userCode
                        },
                        components: {
                            0: r.createElement('a', {
                                href: _.verificationUrl,
                                className: 'link',
                                target: '_blank',
                                rel: 'noopener noreferrer'
                            })
                        }
                    }), r.createElement('div', {
                        className: 'ml-2 text-sm btn',
                        onClick: function () {
                            navigator.permissions.query({
                                name: 'clipboard-write'
                            }).then((function (e) {
                                'granted' != e.state && 'prompt' != e.state || navigator.clipboard.writeText(_.userCode)
                            }))
                        }
                    }, r.createElement(Oe, {
                        id: 'Copy to clipboard'
                    }))) : r.createElement(r.Fragment, null, r.createElement('div', {
                        className: 'text-2xl'
                    }, $x[L.state]))) : r.createElement(Oe, {
                        id: 'Loading'
                    }), r.createElement('div', {
                        className: 'py-4'
                    }, (null == L ? void 0 : L.progress) > 0 && r.createElement(ys, {
                        from: {
                            percent: 0
                        },
                        to: {
                            percent: 100 * L.progress
                        }
                    }, (function (e) {
                        var t = e.percent;
                        return r.createElement('div', {
                            className: 'block h-4 border rounded w-80 bg-grad',
                            style: {
                                background: 'linear-gradient(to right, black '.concat(t, '%, transparent ').concat(t, '%)')
                            }
                        })
                    }))), (null == L ? void 0 : L.exportSummary) && r.createElement(Yx, {
                        columns: [
                            Ze._('Movies'),
                            Ze._('Shows'),
                            Ze._('Seasons'),
                            Ze._('Episodes')
                        ],
                        rows: [
                            Ze._('Watchlist'),
                            Ze._('Seen history'),
                            Ze._('Ratings')
                        ],
                        exported: [
                            [null === (e = L.exportSummary) || void 0 === e || null === (t = e.watchlist) || void 0 === t ? void 0 : t.movies,
                            null === (n = L.exportSummary) || void 0 === n || null === (a = n.watchlist) || void 0 === a ? void 0 : a.shows,
                                null,
                                null],
                            [
                                null === (i = L.exportSummary) || void 0 === i || null === (o = i.seen) || void 0 === o ? void 0 : o.movies,
                                null,
                                null,
                                null === (u = L.exportSummary) || void 0 === u || null === (l = u.seen) || void 0 === l ? void 0 : l.episodes,
                                ,
                            ],
                            [
                                null === (c = L.exportSummary) || void 0 === c || null === (m = c.ratings) || void 0 === m ? void 0 : m.movies,
                                null === (f = L.exportSummary) || void 0 === f || null === (h = f.ratings) || void 0 === h ? void 0 : h.shows,
                                null === (p = L.exportSummary) || void 0 === p || null === (g = p.ratings) || void 0 === g ? void 0 : g.seasons,
                                null === (v = L.exportSummary) || void 0 === v || null === (y = v.ratings) || void 0 === y ? void 0 : y.episodes
                            ]
                        ],
                        imported: [
                            [null === (w = L.importSummary) || void 0 === w || null === (b = w.watchlist) || void 0 === b ? void 0 : b.movies,
                            null === (k = L.importSummary) || void 0 === k || null === (M = k.watchlist) || void 0 === M ? void 0 : M.shows,
                                null,
                                null],
                            [
                                null === (E = L.importSummary) || void 0 === E || null === (P = E.seen) || void 0 === P ? void 0 : P.movies,
                                null,
                                null,
                                null === (x = L.importSummary) || void 0 === x || null === (S = x.seen) || void 0 === S ? void 0 : S.episodes,
                                ,
                            ],
                            [
                                null === (T = L.importSummary) || void 0 === T || null === (C = T.ratings) || void 0 === C ? void 0 : C.movies,
                                null === (W = L.importSummary) || void 0 === W || null === (j = W.ratings) || void 0 === j ? void 0 : j.shows,
                                null === (D = L.importSummary) || void 0 === D || null === (N = D.ratings) || void 0 === N ? void 0 : N.seasons,
                                null === (I = L.importSummary) || void 0 === I || null === (z = I.ratings) || void 0 === z ? void 0 : z.episodes
                            ]
                        ]
                    })))
                },
                $x = {
                    exporting: Ze._('Exporting'),
                    uninitialized: Ze._('Uninitialized'),
                    'updating-metadata': Ze._('Updating metadata'),
                    'waiting-for-authentication': Ze._('Waiting for authentication'),
                    imported: Ze._('Imported'),
                    importing: Ze._('Importing')
                },
                Qx = function () {
                    return r.createElement(Vy, {
                        args: {
                            orderBy: 'lastSeen',
                            sortOrder: 'desc',
                            onlyOnWatchlist: !0
                        },
                        showSortOrderControls: !0,
                        showSearch: !1,
                        gridItemAppearance: {
                            showRating: !0,
                            topBar: {
                                showFirstUnwatchedEpisodeBadge: !0,
                                showOnWatchlistIcon: !0,
                                showUnwatchedEpisodesCount: !0
                            }
                        }
                    })
                },
                Kx = function () {
                    var e,
                        t = s((0, r.useState)(), 2),
                        n = t[0],
                        a = t[1],
                        i = {
                            goodreadsImport: (e = (0, d.useMutation)(ve.importGoodreads.import)).mutate,
                            summary: e.data,
                            loading: e.isLoading
                        },
                        o = i.goodreadsImport,
                        u = i.summary,
                        l = i.loading;
                    return r.createElement('div', null, !u && r.createElement('form', {
                        onSubmit: function (e) {
                            e.preventDefault(),
                                o({
                                    url: n
                                })
                        },
                        className: 'flex flex-col items-center justify-center mt-4'
                    }, r.createElement('div', {
                        className: 'mt-4 text-md'
                    }, r.createElement(Oe, {
                        id: 'Go to <0>https://www.goodreads.com/review/list</0> and copy RSS url from the bottom of the page',
                        components: {
                            0: r.createElement('a', {
                                href: 'https://www.goodreads.com/review/list',
                                className: 'link',
                                target: '_blank',
                                rel: 'noopener noreferrer'
                            })
                        }
                    })), r.createElement('label', {
                        className: 'my-2'
                    }, r.createElement(Oe, {
                        id: 'RSS link'
                    }), r.createElement('input', {
                        onChange: function (e) {
                            return a(e.currentTarget.value)
                        },
                        required: !0,
                        type: 'url',
                        className: 'block w-96'
                    })), r.createElement('button', {
                        className: 'my-4 text-lg btn',
                        disabled: l
                    }, r.createElement(Oe, {
                        id: 'import'
                    })), r.createElement('img', {
                        src: '/image/goodreads_import.png'
                    })), l && r.createElement(Oe, {
                        id: 'Importing'
                    }), u && r.createElement(Yx, {
                        columns: [
                            Ze._('Books')
                        ],
                        rows: [
                            Ze._('Read'),
                            Ze._('To read'),
                            Ze._('Currently reading'),
                            Ze._('Rating')
                        ],
                        exported: [
                            [u.read],
                            [
                                u.toRead
                            ],
                            [
                                u.currentlyReading
                            ],
                            [
                                u.ratings
                            ]
                        ],
                        imported: [
                            [u.read],
                            [
                                u.toRead
                            ],
                            [
                                u.currentlyReading
                            ],
                            [
                                u.ratings
                            ]
                        ]
                    }))
                },
                Jx = function () {
                    var e = Lg(),
                        t = e.isLoading,
                        n = e.user,
                        a = Ug(),
                        i = a.configuration,
                        o = a.isLoading;
                    return t || o ? r.createElement(r.Fragment, null, 'Loading...') : r.createElement(r.Fragment, null, r.createElement(x, null, r.createElement(E, {
                        element: r.createElement(Zx, null)
                    }, n ? r.createElement(r.Fragment, null, r.createElement(E, {
                        path: '/login',
                        element: r.createElement(k, {
                            to: '/',
                            replace: !0
                        })
                    }), i.enableRegistration && r.createElement(E, {
                        path: '/register',
                        element: r.createElement(k, {
                            to: '/',
                            replace: !0
                        })
                    }), r.createElement(E, {
                        path: '/',
                        element: r.createElement(Ay, null)
                    }), r.createElement(E, {
                        path: '/settings/*',
                        element: r.createElement(Mw, {
                            key: 'settings'
                        })
                    }), r.createElement(E, {
                        path: '/tv',
                        element: r.createElement(Yy, {
                            key: '/tv',
                            mediaType: 'tv'
                        })
                    }), r.createElement(E, {
                        path: '/movies',
                        element: r.createElement(Yy, {
                            key: '/movies',
                            mediaType: 'movie'
                        })
                    }), r.createElement(E, {
                        path: '/games',
                        element: r.createElement(Yy, {
                            key: '/games',
                            mediaType: 'video_game'
                        })
                    }), r.createElement(E, {
                        path: '/books',
                        element: r.createElement(Yy, {
                            key: '/books',
                            mediaType: 'book'
                        })
                    }), r.createElement(E, {
                        path: '/audiobooks',
                        element: r.createElement(Yy, {
                            key: '/audiobooks',
                            mediaType: 'audiobook'
                        })
                    }), r.createElement(E, {
                        path: '/upcoming',
                        element: r.createElement(Ky, {
                            key: '/audiobooks'
                        })
                    }), r.createElement(E, {
                        path: '/watchlist',
                        element: r.createElement(Qx, {
                            key: '/watchlist'
                        })
                    }), r.createElement(E, {
                        path: '/in-progress',
                        element: r.createElement(Jy, {
                            key: '/in-progress'
                        })
                    }), r.createElement(E, {
                        path: '/calendar',
                        element: r.createElement(Rx, {
                            key: '/calendar'
                        })
                    }), r.createElement(E, {
                        path: '/details/:mediaItemId',
                        element: r.createElement(Kg, {
                            key: '/details'
                        })
                    }), r.createElement(E, {
                        path: '/episodes/:mediaItemId',
                        element: r.createElement(Sw, {
                            key: '/episodes'
                        })
                    }), r.createElement(E, {
                        path: '/seen-history/:mediaItemId',
                        element: r.createElement(qx, {
                            key: '/seen-history'
                        })
                    }), r.createElement(E, {
                        path: '/import',
                        element: r.createElement(Vx, {
                            key: '/import'
                        })
                    }), r.createElement(E, {
                        path: '/import/trakttv',
                        element: r.createElement(Bx, {
                            key: '/import/trakttv'
                        })
                    }), r.createElement(E, {
                        path: '/import/goodreads',
                        element: r.createElement(Kx, {
                            key: '/import/goodreads'
                        })
                    })) : r.createElement(r.Fragment, null, !i.noUsers && r.createElement(E, {
                        path: '/login',
                        element: r.createElement(Oy, {
                            key: '/login'
                        })
                    }), i.enableRegistration && r.createElement(E, {
                        path: '/register',
                        element: r.createElement(Lx, {
                            key: '/register'
                        })
                    }))), r.createElement(E, {
                        path: '*',
                        element: n ? r.createElement(Fx, null) : r.createElement(k, {
                            to: i.noUsers ? '/register' : '/login',
                            replace: !0
                        })
                    })))
                },
                Zx = function () {
                    return r.createElement(r.Fragment, null, r.createElement($y, null), r.createElement('div', {
                        className: 'flex flex-col items-center max-w-5xl m-auto'
                    }, r.createElement('div', {
                        className: 'w-full p-2',
                        key: location.pathname
                    }, r.createElement(M, null))))
                };
            n(2023);
            const eS = (e, t) => t ? 'other' : 1 == e ? 'one' : 'other',
                tS = (e, t) => t ? 'other' : 0 == e || 1 == e ? 'one' : 'other',
                nS = (e, t) => t ? 'other' : e >= 0 && e <= 1 ? 'one' : 'other',
                rS = (e, t) => {
                    const n = !String(e).split('.')[1];
                    return t ? 'other' : 1 == e && n ? 'one' : 'other'
                },
                aS = (e, t) => 'other',
                iS = (e, t) => t ? 'other' : 1 == e ? 'one' : 2 == e ? 'two' : 'other',
                oS = eS,
                sS = tS,
                uS = nS,
                lS = eS,
                dS = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e && n[0].slice(- 2);
                    return t ? 'other' : 0 == e ? 'zero' : 1 == e ? 'one' : 2 == e ? 'two' : r >= 3 && r <= 10 ? 'few' : r >= 11 && r <= 99 ? 'many' : 'other'
                },
                cS = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e && n[0].slice(- 2);
                    return t ? 'other' : 0 == e ? 'zero' : 1 == e ? 'one' : 2 == e ? 'two' : r >= 3 && r <= 10 ? 'few' : r >= 11 && r <= 99 ? 'many' : 'other'
                },
                mS = (e, t) => t ? 1 == e || 5 == e || 7 == e || 8 == e || 9 == e || 10 == e ? 'one' : 2 == e || 3 == e ? 'two' : 4 == e ? 'few' : 6 == e ? 'many' : 'other' : e >= 0 && e <= 1 ? 'one' : 'other',
                fS = eS,
                hS = rS,
                pS = (e, t) => {
                    const n = String(e).split('.')[0],
                        r = n.slice(- 1),
                        a = n.slice(- 2),
                        i = n.slice(- 3);
                    return t ? 1 == r || 2 == r || 5 == r || 7 == r || 8 == r || 20 == a || 50 == a || 70 == a || 80 == a ? 'one' : 3 == r || 4 == r || 100 == i || 200 == i || 300 == i || 400 == i || 500 == i || 600 == i || 700 == i || 800 == i || 900 == i ? 'few' : 0 == n || 6 == r || 40 == a || 60 == a || 90 == a ? 'many' : 'other' : 1 == e ? 'one' : 'other'
                },
                gS = (e, t) => 1 == e ? 'one' : 'other',
                vS = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e,
                        a = r && n[0].slice(- 1),
                        i = r && n[0].slice(- 2);
                    return t ? 2 != a && 3 != a || 12 == i || 13 == i ? 'other' : 'few' : 1 == a && 11 != i ? 'one' : a >= 2 && a <= 4 && (i < 12 || i > 14) ? 'few' : r && 0 == a || a >= 5 && a <= 9 || i >= 11 && i <= 14 ? 'many' : 'other'
                },
                yS = eS,
                wS = eS,
                bS = eS,
                kS = tS,
                MS = aS,
                ES = (e, t) => t ? 1 == e || 5 == e || 7 == e || 8 == e || 9 == e || 10 == e ? 'one' : 2 == e || 3 == e ? 'two' : 4 == e ? 'few' : 6 == e ? 'many' : 'other' : e >= 0 && e <= 1 ? 'one' : 'other',
                PS = aS,
                xS = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e,
                        a = r && n[0].slice(- 1),
                        i = r && n[0].slice(- 2),
                        o = r && n[0].slice(- 6);
                    return t ? 'other' : 1 == a && 11 != i && 71 != i && 91 != i ? 'one' : 2 == a && 12 != i && 72 != i && 92 != i ? 'two' : (3 == a || 4 == a || 9 == a) && (i < 10 || i > 19) && (i < 70 || i > 79) && (i < 90 || i > 99) ? 'few' : 0 != e && r && 0 == o ? 'many' : 'other'
                },
                SS = eS,
                TS = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 1),
                        s = r.slice(- 2),
                        u = a.slice(- 1),
                        l = a.slice(- 2);
                    return t ? 'other' : i && 1 == o && 11 != s || 1 == u && 11 != l ? 'one' : i && o >= 2 && o <= 4 && (s < 12 || s > 14) || u >= 2 && u <= 4 && (l < 12 || l > 14) ? 'few' : 'other'
                },
                CS = (e, t) => {
                    const n = !String(e).split('.')[1];
                    return t ? 1 == e || 3 == e ? 'one' : 2 == e ? 'two' : 4 == e ? 'few' : 'other' : 1 == e && n ? 'one' : 'other'
                },
                WS = eS,
                jS = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 1),
                        s = a.slice(- 1);
                    return t ? 'other' : i && (1 == r || 2 == r || 3 == r) || i && 4 != o && 6 != o && 9 != o || !i && 4 != s && 6 != s && 9 != s ? 'one' : 'other'
                },
                DS = eS,
                NS = eS,
                IS = eS,
                zS = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1];
                    return t ? 'other' : 1 == e && a ? 'one' : r >= 2 && r <= 4 && a ? 'few' : a ? 'other' : 'many'
                },
                RS = (e, t) => t ? 0 == e || 7 == e || 8 == e || 9 == e ? 'zero' : 1 == e ? 'one' : 2 == e ? 'two' : 3 == e || 4 == e ? 'few' : 5 == e || 6 == e ? 'many' : 'other' : 0 == e ? 'zero' : 1 == e ? 'one' : 2 == e ? 'two' : 3 == e ? 'few' : 6 == e ? 'many' : 'other',
                AS = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = Number(n[0]) == e;
                    return t || 1 != e && (a || 0 != r && 1 != r) ? 'other' : 'one'
                },
                OS = rS,
                HS = nS,
                _S = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 2),
                        s = a.slice(- 2);
                    return t ? 'other' : i && 1 == o || 1 == s ? 'one' : i && 2 == o || 2 == s ? 'two' : i && (3 == o || 4 == o) || 3 == s || 4 == s ? 'few' : 'other'
                },
                LS = eS,
                FS = aS,
                XS = eS,
                US = eS,
                qS = (e, t) => {
                    const n = String(e).split('.'),
                        r = !n[1],
                        a = Number(n[0]) == e,
                        i = a && n[0].slice(- 1),
                        o = a && n[0].slice(- 2);
                    return t ? 1 == i && 11 != o ? 'one' : 2 == i && 12 != o ? 'two' : 3 == i && 13 != o ? 'few' : 'other' : 1 == e && r ? 'one' : 'other'
                },
                GS = eS,
                VS = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 6);
                    return t ? 'other' : 1 == e ? 'one' : 0 != r && 0 == i && a ? 'many' : 'other'
                },
                YS = rS,
                BS = eS,
                $S = nS,
                QS = (e, t) => t ? 'other' : e >= 0 && e < 2 ? 'one' : 'other',
                KS = rS,
                JS = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 1),
                        s = a.slice(- 1);
                    return t ? 1 == e ? 'one' : 'other' : i && (1 == r || 2 == r || 3 == r) || i && 4 != o && 6 != o && 9 != o || !i && 4 != s && 6 != s && 9 != s ? 'one' : 'other'
                },
                ZS = eS,
                eT = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 6);
                    return t ? 1 == e ? 'one' : 'other' : e >= 0 && e < 2 ? 'one' : 0 != r && 0 == i && a ? 'many' : 'other'
                },
                tT = eS,
                nT = rS,
                rT = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e;
                    return t ? 1 == e ? 'one' : 'other' : 1 == e ? 'one' : 2 == e ? 'two' : r && e >= 3 && e <= 6 ? 'few' : r && e >= 7 && e <= 10 ? 'many' : 'other'
                },
                aT = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e;
                    return t ? 1 == e || 11 == e ? 'one' : 2 == e || 12 == e ? 'two' : 3 == e || 13 == e ? 'few' : 'other' : 1 == e || 11 == e ? 'one' : 2 == e || 12 == e ? 'two' : r && e >= 3 && e <= 10 || r && e >= 13 && e <= 19 ? 'few' : 'other'
                },
                iT = rS,
                oT = eS,
                sT = (e, t) => t ? 1 == e ? 'one' : 2 == e || 3 == e ? 'two' : 4 == e ? 'few' : 6 == e ? 'many' : 'other' : e >= 0 && e <= 1 ? 'one' : 'other',
                uT = tS,
                lT = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 1),
                        o = r.slice(- 2);
                    return t ? 'other' : a && 1 == i ? 'one' : a && 2 == i ? 'two' : !a || 0 != o && 20 != o && 40 != o && 60 != o && 80 != o ? a ? 'other' : 'many' : 'few'
                },
                dT = eS,
                cT = eS,
                mT = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = Number(n[0]) == e,
                        o = i && n[0].slice(- 1);
                    return t ? 'other' : 1 == e && a ? 'one' : 2 == r && a ? 'two' : a && (e < 0 || e > 10) && i && 0 == o ? 'many' : 'other'
                },
                fT = (e, t) => t ? 1 == e ? 'one' : 2 == e || 3 == e ? 'two' : 4 == e ? 'few' : 6 == e ? 'many' : 'other' : e >= 0 && e <= 1 ? 'one' : 'other',
                hT = aS,
                pT = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 1),
                        s = r.slice(- 2),
                        u = a.slice(- 1),
                        l = a.slice(- 2);
                    return t ? 'other' : i && 1 == o && 11 != s || 1 == u && 11 != l ? 'one' : i && o >= 2 && o <= 4 && (s < 12 || s > 14) || u >= 2 && u <= 4 && (l < 12 || l > 14) ? 'few' : 'other'
                },
                gT = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 2),
                        s = a.slice(- 2);
                    return t ? 'other' : i && 1 == o || 1 == s ? 'one' : i && 2 == o || 2 == s ? 'two' : i && (3 == o || 4 == o) || 3 == s || 4 == s ? 'few' : 'other'
                },
                vT = (e, t) => t ? 1 == e || 5 == e ? 'one' : 'other' : 1 == e ? 'one' : 'other',
                yT = (e, t) => t ? 1 == e ? 'one' : 'other' : e >= 0 && e < 2 ? 'one' : 'other',
                wT = rS,
                bT = aS,
                kT = aS,
                MT = aS,
                ET = rS,
                PT = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = Number(n[0]) == e,
                        i = r.slice(- 1),
                        o = r.slice(- 2);
                    return t ? 'other' : a && 1 == i && 11 != o || !a ? 'one' : 'other'
                },
                xT = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 6);
                    return t ? 11 == e || 8 == e || 80 == e || 800 == e ? 'many' : 'other' : 1 == e && a ? 'one' : 0 != r && 0 == i && a ? 'many' : 'other'
                },
                ST = iS,
                TT = aS,
                CT = aS,
                WT = eS,
                jT = eS,
                DT = aS,
                NT = aS,
                IT = (e, t) => {
                    const n = String(e).split('.')[0],
                        r = n.slice(- 2);
                    return t ? 1 == n ? 'one' : 0 == n || r >= 2 && r <= 20 || 40 == r || 60 == r || 80 == r ? 'many' : 'other' : 1 == e ? 'one' : 'other'
                },
                zT = (e, t) => t ? 'other' : e >= 0 && e < 2 ? 'one' : 'other',
                RT = eS,
                AT = eS,
                OT = aS,
                HT = aS,
                _T = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e,
                        a = r && n[0].slice(- 1);
                    return t ? 6 == a || 9 == a || r && 0 == a && 0 != e ? 'many' : 'other' : 1 == e ? 'one' : 'other'
                },
                LT = eS,
                FT = eS,
                XT = aS,
                UT = nS,
                qT = aS,
                GT = eS,
                VT = eS,
                YT = (e, t) => t ? 'other' : 0 == e ? 'zero' : 1 == e ? 'one' : 'other',
                BT = eS,
                $T = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e,
                        a = r && n[0].slice(- 2),
                        i = r && n[0].slice(- 3),
                        o = r && n[0].slice(- 5),
                        s = r && n[0].slice(- 6);
                    return t ? r && e >= 1 && e <= 4 || a >= 1 && a <= 4 || a >= 21 && a <= 24 || a >= 41 && a <= 44 || a >= 61 && a <= 64 || a >= 81 && a <= 84 ? 'one' : 5 == e || 5 == a ? 'many' : 'other' : 0 == e ? 'zero' : 1 == e ? 'one' : 2 == a || 22 == a || 42 == a || 62 == a || 82 == a || r && 0 == i && (o >= 1000 && o <= 20000 || 40000 == o || 60000 == o || 80000 == o) || 0 != e && 100000 == s ? 'two' : 3 == a || 23 == a || 43 == a || 63 == a || 83 == a ? 'few' : 1 == e || 1 != a && 21 != a && 41 != a && 61 != a && 81 != a ? 'other' : 'many'
                },
                QT = eS,
                KT = (e, t) => {
                    const n = String(e).split('.')[0];
                    return t ? 'other' : 0 == e ? 'zero' : 0 != n && 1 != n || 0 == e ? 'other' : 'one'
                },
                JT = eS,
                ZT = eS,
                eC = (e, t) => {
                    const n = String(e).split('.'),
                        r = !n[1],
                        a = Number(n[0]) == e;
                    return t ? 11 == e || 8 == e || a && e >= 80 && e <= 89 || a && e >= 800 && e <= 899 ? 'many' : 'other' : 1 == e && r ? 'one' : 'other'
                },
                tC = aS,
                nC = tS,
                rC = (e, t) => t && 1 == e ? 'one' : 'other',
                aC = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[1] || '',
                        a = Number(n[0]) == e,
                        i = a && n[0].slice(- 1),
                        o = a && n[0].slice(- 2);
                    return t ? 'other' : 1 == i && (o < 11 || o > 19) ? 'one' : i >= 2 && i <= 9 && (o < 11 || o > 19) ? 'few' : 0 != r ? 'many' : 'other'
                },
                iC = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[1] || '',
                        a = r.length,
                        i = Number(n[0]) == e,
                        o = i && n[0].slice(- 1),
                        s = i && n[0].slice(- 2),
                        u = r.slice(- 2),
                        l = r.slice(- 1);
                    return t ? 'other' : i && 0 == o || s >= 11 && s <= 19 || 2 == a && u >= 11 && u <= 19 ? 'zero' : 1 == o && 11 != s || 2 == a && 1 == l && 11 != u || 2 != a && 1 == l ? 'one' : 'other'
                },
                oC = eS,
                sC = tS,
                uC = eS,
                lC = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 1),
                        s = r.slice(- 2),
                        u = a.slice(- 1),
                        l = a.slice(- 2);
                    return t ? 1 == o && 11 != s ? 'one' : 2 == o && 12 != s ? 'two' : 7 != o && 8 != o || 17 == s || 18 == s ? 'other' : 'many' : i && 1 == o && 11 != s || 1 == u && 11 != l ? 'one' : 'other'
                },
                dC = eS,
                cC = eS,
                mC = (e, t) => {
                    const n = String(e).split('.'),
                        r = !n[1],
                        a = Number(n[0]) == e && n[0].slice(- 2);
                    return t ? 1 == e ? 'one' : 'other' : 1 == e && r ? 'one' : !r || 0 == e || a >= 2 && a <= 19 ? 'few' : 'other'
                },
                fC = (e, t) => t ? 1 == e ? 'one' : 2 == e || 3 == e ? 'two' : 4 == e ? 'few' : 'other' : 1 == e ? 'one' : 'other',
                hC = (e, t) => t && 1 == e ? 'one' : 'other',
                pC = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e && n[0].slice(- 2);
                    return t ? 'other' : 1 == e ? 'one' : 0 == e || r >= 2 && r <= 10 ? 'few' : r >= 11 && r <= 19 ? 'many' : 'other'
                },
                gC = aS,
                vC = eS,
                yC = iS,
                wC = eS,
                bC = eS,
                kC = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e;
                    return t ? r && e >= 1 && e <= 4 ? 'one' : 'other' : 1 == e ? 'one' : 'other'
                },
                MC = rS,
                EC = eS,
                PC = eS,
                xC = eS,
                SC = aS,
                TC = eS,
                CC = tS,
                WC = eS,
                jC = eS,
                DC = eS,
                NC = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e;
                    return t ? 1 == e || 5 == e || r && e >= 7 && e <= 9 ? 'one' : 2 == e || 3 == e ? 'two' : 4 == e ? 'few' : 6 == e ? 'many' : 'other' : 1 == e ? 'one' : 'other'
                },
                IC = eS,
                zC = aS,
                RC = tS,
                AC = eS,
                OC = nS,
                HC = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 1),
                        o = r.slice(- 2);
                    return t ? 'other' : 1 == e && a ? 'one' : a && i >= 2 && i <= 4 && (o < 12 || o > 14) ? 'few' : a && 1 != r && (0 == i || 1 == i) || a && i >= 5 && i <= 9 || a && o >= 12 && o <= 14 ? 'many' : 'other'
                },
                _C = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[1] || '',
                        a = r.length,
                        i = Number(n[0]) == e,
                        o = i && n[0].slice(- 1),
                        s = i && n[0].slice(- 2),
                        u = r.slice(- 2),
                        l = r.slice(- 1);
                    return t ? 'other' : i && 0 == o || s >= 11 && s <= 19 || 2 == a && u >= 11 && u <= 19 ? 'zero' : 1 == o && 11 != s || 2 == a && 1 == l && 11 != u || 2 != a && 1 == l ? 'one' : 'other'
                },
                LC = eS,
                FC = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 6);
                    return t ? 'other' : 0 == r || 1 == r ? 'one' : 0 != r && 0 == i && a ? 'many' : 'other'
                },
                XC = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 6);
                    return t ? 'other' : 1 == e && a ? 'one' : 0 != r && 0 == i && a ? 'many' : 'other'
                },
                UC = eS,
                qC = (e, t) => {
                    const n = String(e).split('.'),
                        r = !n[1],
                        a = Number(n[0]) == e && n[0].slice(- 2);
                    return t ? 1 == e ? 'one' : 'other' : 1 == e && r ? 'one' : !r || 0 == e || a >= 2 && a <= 19 ? 'few' : 'other'
                },
                GC = eS,
                VC = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 1),
                        o = r.slice(- 2);
                    return t ? 'other' : a && 1 == i && 11 != o ? 'one' : a && i >= 2 && i <= 4 && (o < 12 || o > 14) ? 'few' : a && 0 == i || a && i >= 5 && i <= 9 || a && o >= 11 && o <= 14 ? 'many' : 'other'
                },
                YC = eS,
                BC = aS,
                $C = eS,
                QC = iS,
                KC = (e, t) => {
                    const n = !String(e).split('.')[1];
                    return t ? 11 == e || 8 == e || 80 == e || 800 == e ? 'many' : 'other' : 1 == e && n ? 'one' : 'other'
                },
                JC = (e, t) => {
                    const n = !String(e).split('.')[1];
                    return t ? 11 == e || 8 == e || 80 == e || 800 == e ? 'many' : 'other' : 1 == e && n ? 'one' : 'other'
                },
                ZC = eS,
                eW = eS,
                tW = iS,
                nW = eS,
                rW = aS,
                aW = aS,
                iW = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 1),
                        s = r.slice(- 2),
                        u = a.slice(- 1),
                        l = a.slice(- 2);
                    return t ? 'other' : i && 1 == o && 11 != s || 1 == u && 11 != l ? 'one' : i && o >= 2 && o <= 4 && (s < 12 || s > 14) || u >= 2 && u <= 4 && (l < 12 || l > 14) ? 'few' : 'other'
                },
                oW = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e;
                    return t ? 'other' : e >= 0 && e <= 1 ? 'one' : r && e >= 2 && e <= 10 ? 'few' : 'other'
                },
                sW = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '';
                    return t ? 'other' : 0 == e || 1 == e || 0 == r && 1 == a ? 'one' : 'other'
                },
                uW = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1];
                    return t ? 'other' : 1 == e && a ? 'one' : r >= 2 && r <= 4 && a ? 'few' : a ? 'other' : 'many'
                },
                lW = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = r.slice(- 2);
                    return t ? 'other' : a && 1 == i ? 'one' : a && 2 == i ? 'two' : a && (3 == i || 4 == i) || !a ? 'few' : 'other'
                },
                dW = iS,
                cW = iS,
                mW = iS,
                fW = iS,
                hW = iS,
                pW = eS,
                gW = eS,
                vW = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e,
                        a = r && n[0].slice(- 1),
                        i = r && n[0].slice(- 2);
                    return t ? 1 == e ? 'one' : 4 == a && 14 != i ? 'many' : 'other' : 1 == e ? 'one' : 'other'
                },
                yW = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 1),
                        s = r.slice(- 2),
                        u = a.slice(- 1),
                        l = a.slice(- 2);
                    return t ? 'other' : i && 1 == o && 11 != s || 1 == u && 11 != l ? 'one' : i && o >= 2 && o <= 4 && (s < 12 || s > 14) || u >= 2 && u <= 4 && (l < 12 || l > 14) ? 'few' : 'other'
                },
                wW = eS,
                bW = eS,
                kW = eS,
                MW = aS,
                EW = (e, t) => {
                    const n = String(e).split('.'),
                        r = !n[1],
                        a = Number(n[0]) == e,
                        i = a && n[0].slice(- 1),
                        o = a && n[0].slice(- 2);
                    return t ? 1 != i && 2 != i || 11 == o || 12 == o ? 'other' : 'one' : 1 == e && r ? 'one' : 'other'
                },
                PW = rS,
                xW = eS,
                SW = eS,
                TW = eS,
                CW = eS,
                WW = aS,
                jW = tS,
                DW = eS,
                NW = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e && n[0].slice(- 1);
                    return t ? 6 == r || 9 == r || 10 == e ? 'few' : 'other' : 1 == e ? 'one' : 'other'
                },
                IW = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = n[1] || '',
                        i = !n[1],
                        o = r.slice(- 1),
                        s = a.slice(- 1);
                    return t ? 1 == e ? 'one' : 'other' : i && (1 == r || 2 == r || 3 == r) || i && 4 != o && 6 != o && 9 != o || !i && 4 != s && 6 != s && 9 != s ? 'one' : 'other'
                },
                zW = eS,
                RW = aS,
                AW = aS,
                OW = eS,
                HW = eS,
                _W = (e, t) => {
                    const n = String(e).split('.'),
                        r = Number(n[0]) == e;
                    return t ? 'other' : 0 == e || 1 == e || r && e >= 11 && e <= 99 ? 'one' : 'other'
                },
                LW = eS,
                FW = (e, t) => {
                    const n = String(e).split('.'),
                        r = n[0],
                        a = !n[1],
                        i = Number(n[0]) == e,
                        o = i && n[0].slice(- 1),
                        s = i && n[0].slice(- 2),
                        u = r.slice(- 1),
                        l = r.slice(- 2);
                    return t ? 3 == o && 13 != s ? 'few' : 'other' : a && 1 == u && 11 != l ? 'one' : a && u >= 2 && u <= 4 && (l < 12 || l > 14) ? 'few' : a && 0 == u || a && u >= 5 && u <= 9 || a && l >= 11 && l <= 14 ? 'many' : 'other'
                },
                XW = aS,
                UW = rS,
                qW = eS,
                GW = eS,
                VW = (e, t) => t && 1 == e ? 'one' : 'other',
                YW = eS,
                BW = eS,
                $W = tS,
                QW = eS,
                KW = aS,
                JW = eS,
                ZW = eS,
                ej = rS,
                tj = aS,
                nj = aS,
                rj = aS,
                aj = nS;
            var ij,
                oj,
                sj,
                uj,
                lj;
            oj = {
                da: {
                    '<0><1/> </0>listening': '<0><1/> </0> lytter',
                    '<0><1/> </0>playing': '<0><1/> </0> afspiller',
                    '<0><1/> </0>reading': '<0><1/> </0> læser',
                    '<0><1/> </0>watching': '<0><1/> </0> afspiller',
                    '<0>{0}</0> audiobooks (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> lydbøger (<1>',
                        [
                            '1'
                        ],
                        '</1> afspilninger)'
                    ],
                    '<0>{0}</0> books (<1>{1}</1> reads)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> bøger (<1>',
                        [
                            '1'
                        ],
                        '</1> læste)'
                    ],
                    '<0>{0}</0> episodes (<1>{1}</1> plays of <2>{2}</2> shows)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> episoder (<1>',
                        [
                            '1'
                        ],
                        '</1> afspilninger af <2>',
                        [
                            '2'
                        ],
                        '</2> serier)'
                    ],
                    '<0>{0}</0> movies (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> film (<1>',
                        [
                            '1'
                        ],
                        '</1> afspilninger)'
                    ],
                    '<0>{0}</0> video games (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> videospil (<1>',
                        [
                            '1'
                        ],
                        '</1> afspilninger)'
                    ],
                    'API keys can be acquired here': 'API-nøgler kan findes her',
                    'Access Token': 'Adgangstoken',
                    'Add season to seen history': 'Tilføj sæson til historik',
                    'Add to listened history': 'Tilføj afspillede til historik',
                    'Add to played history': 'Tilføj afspillede til historik',
                    'Add to read history': 'Tilføj læste til historik',
                    'Add to seen history': 'Tilføj til historik',
                    'Add to watchlist': 'Tilføj til overvågningsliste',
                    'Add token': 'Tilføj token',
                    All: 'Alle',
                    'App token': 'App token',
                    'Application tokens': 'Applikationstokens',
                    'At release date': 'På udgivelsesdagen',
                    'Audible language': 'Audible-sprog',
                    Audiobook: 'Lydbog',
                    Audiobooks: 'Lydbøger',
                    'Avoid episode spoilers': 'Undgå episodespoilere',
                    'Avoid season spoilers': 'Undgå sæsonspoilere',
                    Book: 'Bog',
                    Books: 'Bøger',
                    Calendar: 'Kalender',
                    Cancel: 'Annuller',
                    'Change password': 'Ændrer kodeord',
                    'Client ID': 'Klient-ID',
                    'Client Secret': 'Klient-secret',
                    Configuration: 'Konfiguration',
                    'Confirm new password': 'Bekræft nyt kodeord',
                    'Confirm password': 'Bekræft kodeord',
                    'Continue watching': 'Fortsæt med at se',
                    'Copy to clipboard': 'Kopier til udklipsholder',
                    'Current password': 'Nuværende kodeord',
                    'Current password is incorrect': 'Nuværende kodeord er forkert',
                    'Currently reading': 'Læser i øjeblikket',
                    'Custom date': 'Brugerdefineret dato',
                    Debug: 'Fejlfinding',
                    Description: 'Beskrivelse',
                    'Do you want to remove episode {0} from seen history?': [
                        'Vil du fjerne episode ',
                        [
                            '0'
                        ],
                        ' fra historikken?'
                    ],
                    Duration: 'Varighed',
                    'Enable registration': 'Aktiver registrering',
                    Episode: 'Episode',
                    'Episode {0} {1}': [
                        'Episode ',
                        [
                            '0'
                        ],
                        ' ',
                        [
                            '1'
                        ]
                    ],
                    Episodes: 'Episoder',
                    'Episodes page': 'Episodeside',
                    Error: 'Fejl',
                    Exporting: 'Eksporterer',
                    'First unwatched episode': 'Første uafspillede episode',
                    Games: 'Spil',
                    General: 'Generelt',
                    'Go to <0>https://www.goodreads.com/review/list</0> and copy RSS url from the bottom of the page': 'Gå til <0>https://www.goodreads.com/review/list</0> og kopier RSS-url\'en fra bunden af siden',
                    'Go to <0>{0}</0> and enter following code: {1}': [
                        'Gå til <0>',
                        [
                            '0'
                        ],
                        '</0> og insæt følgende: ',
                        [
                            '1'
                        ]
                    ],
                    'Gotify server url': 'Gotify server url',
                    'Hide overview of unseen seasons': 'Skjul oversigt over uafspillede sæsoner',
                    'Hide title of unseen episodes': 'Skjul titel på uafspillede sæsoner',
                    Home: 'Hjem',
                    Http: 'Http',
                    'I am listening it': 'Jeg lytter til den',
                    'I am playing it': 'Jeg spiller det',
                    'I am reading it': 'Jeg læser den',
                    'I am watching it': 'Jeg ser den',
                    'I do not remember': 'Det husker jeg ikke',
                    'I finished listening it': 'Jeg er færdig med at lytte den',
                    'I finished playing it': 'Jeg er færdig med at spille det',
                    'I finished reading it': 'Jeg er færdig med at læse den',
                    'I finished watching it': 'Jeg er færdig med at se den',
                    'IGDB credentials': 'IGDB legitimationsoplysninger',
                    Import: 'Importér',
                    'Import from': 'Importér fra',
                    Imported: 'Importeret',
                    Importing: 'Importerer',
                    'In progress': 'Igangværende',
                    'Incorrect password or username': 'Forkert adgangskode eller brugernavn',
                    Info: 'Info',
                    Key: 'Nøgle',
                    Language: 'Sprog',
                    'Last airing': 'Sidste udsendelse',
                    'Last listened at {0}': [
                        'Sidst afspilet den ',
                        [
                            '0'
                        ]
                    ],
                    'Last played at {0}': [
                        'Sidst afspillet den ',
                        [
                            '0'
                        ]
                    ],
                    'Last read at {0}': [
                        'Sidst læst den ',
                        [
                            '0'
                        ]
                    ],
                    'Last seen': 'Sidst afspillet',
                    'Last seen at {0}': [
                        'Sidst afspillet den ',
                        [
                            '0'
                        ]
                    ],
                    Listened: 'Afspillet',
                    'Listened at {0}': [
                        'Afspillet den ',
                        [
                            '0'
                        ]
                    ],
                    'Listened history': 'Afspilningshistorik',
                    Loading: 'Indlæser',
                    Login: 'Login',
                    Logout: 'Log ud',
                    Logs: 'Log',
                    'Mark as listened': 'Marker som afspillet',
                    'Mark as played': 'Marker som afspillet',
                    'Mark as read': 'Marker som læst',
                    'Mark as seen': 'Marker som set',
                    'Mark {0} as seen': [
                        'Markér ',
                        [
                            '0'
                        ],
                        ' som set'
                    ],
                    'Media type': 'Medietype',
                    'Metadata providers credentials': 'Metadataudbydernes legitimationsoplysninger',
                    Movie: 'Film',
                    Movies: 'Film',
                    Network: 'Netværk',
                    'New password': 'Nyt kodeord',
                    'Next airing': 'Næste udsendelse',
                    'Next episode': 'Næste episode',
                    'Next episode to watch': 'Næste episode at se',
                    'No date': 'Ingen dato',
                    'No more logs': 'Der er ikke mere i loggen',
                    Notifications: 'Notifikationer',
                    Now: 'Nu',
                    'Number of pages': 'Antal sider',
                    'On watchlist': 'På overvågningslisten',
                    Overview: 'Oversigt',
                    Password: 'Kodeord',
                    'Password has been changed': 'Kodeordet er ændret',
                    'Passwords do not match': 'Kodeordene passer ikke sammen',
                    Platform: 'Platform',
                    Played: 'Afspillet',
                    'Played at {0}': [
                        'Afspillet den ',
                        [
                            '0'
                        ]
                    ],
                    'Played history': 'Afspilningshistorik',
                    Preferences: 'Præferencer',
                    Priority: 'Prioritet',
                    Progress: 'Status',
                    'Public reviews': 'Offentlige anmeldelser',
                    'RSS link': 'RSS-link',
                    Rated: 'Bedømt',
                    Rating: 'Bedømmelse',
                    Ratings: 'Bedømmelser',
                    Read: 'Læs',
                    'Read at {0}': [
                        'Læst den ',
                        [
                            '0'
                        ]
                    ],
                    'Read history': 'Læsehistorik',
                    'Receive notification for all media items on your watchlist, when its release date changes': 'Modtag notifikationer for alt på din liste, når udgivelsesdatoen ændres',
                    'Receive notification for all media items on your watchlist, when its status changes': 'Modtag notifikationer for alt på din overvågningsliste, når statussen ændres',
                    'Receive notification for all media items on your watchlist, when they are released, including new seasons for tv shows': 'Modtag notifikationer for alt på din overvågningsliste, inkluderet nye sæsoner for Tv-shows, når det udgives',
                    'Receive notification for all tv shows on your watchlist, when its number of seasons changes': 'Modtag notifikationer for alle Tv-shows på din overvågningsliste, når deres antal af sæsoner ændres',
                    'Receive notification for every episode for all tv shows on your watchlist, when it\'s released': 'Modtag notifikationer for hver episode i alle Tv-shows på din overvågningsliste, når de udgives',
                    'Recently released': 'Seneste udgivelse',
                    Register: 'Registrer',
                    'Release <0/>': 'Udgivelse <0/>',
                    'Release date': 'Udgivelsesdato',
                    'Released <0/>': 'Udgivet <0/>',
                    'Remove "{0}" from watchlist?': [
                        'Fjern "',
                        [
                            '0'
                        ],
                        '" fra overvågningslisten?'
                    ],
                    'Remove from listened history': 'Fjern fra historik',
                    'Remove from played history': 'Fjern fra afspilningshistorik',
                    'Remove from read history': 'Fjern fra læsningshistorik',
                    'Remove from seen history': 'Fjern fra afspilningshistorik',
                    'Remove from watchlist': 'Fjern fra overvågningsliste',
                    'Remove token': 'Fjern token',
                    'Review by <0><1>{author}</1></0> at {date}': [
                        'Anmeldelse af <0><1>',
                        [
                            'author'
                        ],
                        '</1></0> fra ',
                        [
                            'date'
                        ]
                    ],
                    Runtime: 'Spilletid',
                    Save: 'Gem',
                    'Save review': 'Gem anmeldelse',
                    Search: 'Søg',
                    'Search for items or <0>import</0>': 'Søg eller <0>importér</0>',
                    Season: 'Sæson',
                    'Season {0}': [
                        'Sæson ',
                        [
                            '0'
                        ]
                    ],
                    Seasons: 'Sæsoner',
                    'Seen at {0}': [
                        'Set den ',
                        [
                            '0'
                        ]
                    ],
                    'Seen history': 'Historik',
                    Select: 'Vælg',
                    'Send notification for episodes releases': 'Send notifikation for nyudgivne episoder',
                    'Send notification for releases': 'Send notifikation for udgivelser',
                    'Send notification when number of seasons changes': 'Send notifikation når antallet af sæsoner ændrer sig',
                    'Send notification when release date changes': 'Send notifikation når udgivelsesdagen ændres',
                    'Send notification when status changes': 'Send notifikation når statussen ændres',
                    'Server error: {errorMessage}': [
                        'Serverfejl: ',
                        [
                            'errorMessage'
                        ]
                    ],
                    'Server language': 'Serversprog',
                    'Server url (only for self hosting)': 'Server-url (kun for self-hosting)',
                    Set: 'Indstil',
                    'Set progress': 'Indstil fremskridt',
                    Settings: 'Indstillinger',
                    'Show your reviews to other users': 'Vis dine anmeldelser til andre brugere',
                    Shows: 'Shows',
                    Source: 'Kilde',
                    Status: 'Status',
                    Summary: 'Resumé',
                    'S{0}': [
                        'S',
                        [
                            '0'
                        ]
                    ],
                    'S{0}E{1}': [
                        'S',
                        [
                            '0'
                        ],
                        'E',
                        [
                            '1'
                        ]
                    ],
                    'TMDB language': 'TMDB-sprog',
                    'This component can only be used with tv shows': 'Denne komponent kan kun bruges med Tv-shows',
                    Title: 'Titel',
                    'To read': 'At læse',
                    Topic: 'Emne',
                    Tv: 'Tv',
                    Uninitialized: 'Ikke-initialiseret',
                    Unrated: 'Ikke vurderet',
                    'Unseen episodes count': 'Antal uafspillede episoder',
                    Upcoming: 'Kommende',
                    'Update metadata': 'Opdater metadata',
                    'Updating metadata': 'Opdater metadata',
                    'User key': 'Brugernøgle',
                    Username: 'Brugernavn',
                    'Video game': 'Videospil',
                    'Waiting for authentication': 'Venter på godkendelse',
                    Warning: 'Advarsel',
                    Watched: 'Set',
                    Watchlist: 'Overvågningsliste',
                    'What is the last episode of "{0}" you see?': [
                        'Hvilken episode af "',
                        [
                            '0'
                        ],
                        '" har du sidst set?'
                    ],
                    'What is the last episode you see?': 'Hvilken episode så du sidst?',
                    'When did you listen it?': 'Hvornår lyttede du til det?',
                    'When did you listen to "{0}"?': [
                        'Hvornår lyttede du til "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you play "{0}"?': [
                        'Hvornår spillede du "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you play it?': 'Hvornår spillede du det?',
                    'When did you read "{0}"?': [
                        'Hvornår læste du "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you read it?': 'Hvornår læste du den?',
                    'When did you see "{0}"?': [
                        'Hvornår så du "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you see it?': 'Hvornår så du den?',
                    import: 'importér',
                    '{0, plural, one { Found # item for query "<0>{searchQuery}</0>"} other { Found # items for query "<1>{searchQuery}</1>"}}': [
                        ['0',
                            'plural',
                            {
                                one: [
                                    ' Fandt ',
                                    '#',
                                    ' punkt for forespørgslen "<0>',
                                    [
                                        'searchQuery'
                                    ],
                                    '</0>"'
                                ],
                                other: [
                                    ' Fandt ',
                                    '#',
                                    ' punkt i forespørgslen "<1>',
                                    [
                                        'searchQuery'
                                    ],
                                    '</1>"'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Author} other {Authors}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Forfatter',
                                other: 'Forfattere'
                            }
                        ]
                    ],
                    '{0, plural, one {Genre} other {Genres}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Genre',
                                other: 'Genrer'
                            }
                        ]
                    ],
                    '{0, plural, one {Listened 1 time} other {Listened # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Afspillet 1 gang',
                                other: [
                                    'Afspillet ',
                                    '#',
                                    ' gange'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Narrator} other {Narrators}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Fortæller',
                                other: 'Fortællere'
                            }
                        ]
                    ],
                    '{0, plural, one {Platform} other {platforms}}': [
                        ['0',
                            'plural',
                            {
                                one: 'platform',
                                other: 'platforme'
                            }
                        ]
                    ],
                    '{0, plural, one {Played 1 time} other {Played # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Afspillet 1 gang',
                                other: [
                                    'Afspillet ',
                                    '#',
                                    ' gange'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Read 1 time} other {Read # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Læst 1 gang',
                                other: [
                                    'Læst ',
                                    '#',
                                    ' gange'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Seen 1 time} other {Seen # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Set 1 gang',
                                other: [
                                    'Set ',
                                    '#',
                                    ' gange'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, other {unseen}}': [
                        ['0',
                            'plural',
                            {
                                other: 'uafspillet'
                            }
                        ]
                    ],
                    '{count, plural, one {Do you want to remove # seen history entry?} other {Do you want to remove all # seen history entries?}}': [
                        ['count',
                            'plural',
                            {
                                one: [
                                    'Vil du fjerne ',
                                    '#',
                                    ' afspillet emne fra historikken?'
                                ],
                                other: [
                                    'Vil du fjerne alle ',
                                    '#',
                                    ' afspillede emner fra historikken?'
                                ]
                            }
                        ]
                    ],
                    '{duration, plural, one {minute} other {minutes}}': [
                        ['duration',
                            'plural',
                            {
                                one: 'minut',
                                other: 'minutter'
                            }
                        ]
                    ],
                    '{numberOfItemsTotal, plural, one {1 item} other {# items}}': [
                        ['numberOfItemsTotal',
                            'plural',
                            {
                                one: '1 emne',
                                other: [
                                    '#',
                                    ' emner'
                                ]
                            }
                        ]
                    ],
                    '{value, plural, one {minute} other {minutes}}': [
                        ['value',
                            'plural',
                            {
                                one: 'minut',
                                other: 'minutter'
                            }
                        ]
                    ],
                    '{value, plural, one {page} other {pages}}': [
                        ['value',
                            'plural',
                            {
                                one: 'side',
                                other: 'sider'
                            }
                        ]
                    ]
                },
                de: {
                    '<0><1/> </0>listening': '<0><1/> </0>höre gerade',
                    '<0><1/> </0>playing': '<0><1/> </0>spiele gerade\n',
                    '<0><1/> </0>reading': '<0><1/> </0>lese gerade',
                    '<0><1/> </0>watching': '<0><1/> </0>schaue gerade',
                    '<0>{0}</0> audiobooks (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> Hörbücher (<1>',
                        [
                            '1'
                        ],
                        '</1> abgespielt)\n'
                    ],
                    '<0>{0}</0> books (<1>{1}</1> reads)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> Bücher (<1>',
                        [
                            '1'
                        ],
                        '</1> gelesen)'
                    ],
                    '<0>{0}</0> episodes (<1>{1}</1> plays of <2>{2}</2> shows)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> Folgen (<1>',
                        [
                            '1'
                        ],
                        '</1> geschaut von  <2>',
                        [
                            '2'
                        ],
                        '</2> Serien)'
                    ],
                    '<0>{0}</0> movies (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> Filme (<1>',
                        [
                            '1'
                        ],
                        '</1> geschaut)'
                    ],
                    '<0>{0}</0> video games (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> Video Spiele (<1>',
                        [
                            '1'
                        ],
                        '</1> gespielt)'
                    ],
                    'API keys can be acquired here': 'API-Schlüssel können hier bezogen werden',
                    'Access Token': 'Zugangs-Token',
                    'Add season to seen history': 'Staffel zur Gesehenliste hinzufügen',
                    'Add to listened history': 'Zu Gehört hinzufügen',
                    'Add to played history': 'Zu Gespielt hinzufügen',
                    'Add to read history': 'Zu Gelesen hinzufügen',
                    'Add to seen history': 'Zur Gesehenliste hinzufügen',
                    'Add to watchlist': 'Zur Watchlist hinzufügen',
                    'Add token': 'Token hinzufügen',
                    All: 'Alle',
                    'App token': 'Anwendungs-Token',
                    'Application tokens': 'Anwendungstoken',
                    'At release date': 'Am Erscheinungstag',
                    'Audible language': 'Audible Sprachen',
                    Audiobook: 'Hörbuch',
                    Audiobooks: 'Hörbücher',
                    'Avoid episode spoilers': 'Folgen Spoiler vermeiden',
                    'Avoid season spoilers': 'Staffel Spoiler vermeiden',
                    Book: 'Buch',
                    Books: 'Bücher',
                    Calendar: 'Kalender',
                    Cancel: 'Abbrechen',
                    'Change password': 'Passwort ändern',
                    'Client ID': 'Kunden ID',
                    'Client Secret': 'Kunden-Geheimnis',
                    Configuration: 'Einstellungen',
                    'Confirm new password': 'Neues Passwort bestätigen',
                    'Confirm password': 'Passwort bestätigen',
                    'Continue watching': 'weiter ansehen',
                    'Copy to clipboard': 'in die Zwischenablage kopieren',
                    'Current password': 'Aktuelles Passwort',
                    'Current password is incorrect': 'Aktuelles Passwort ist falsch',
                    'Currently reading': 'Lese zurzeit',
                    'Custom date': 'Eigenes Datum',
                    Debug: 'Debug',
                    Description: 'Beschreibung',
                    'Do you want to remove episode {0} from seen history?': [
                        'Möchtest du die Folge ',
                        [
                            '0'
                        ],
                        ' von der Gesehenliste entfernen?'
                    ],
                    Duration: 'Dauer',
                    'Enable registration': 'Registrierung erlauben',
                    Episode: 'Folge',
                    'Episode {0} {1}': [
                        'Folge ',
                        [
                            '0'
                        ],
                        ' ',
                        [
                            '1'
                        ]
                    ],
                    Episodes: 'Folgen',
                    'Episodes page': 'Folgenübersicht',
                    Error: 'Fehler',
                    Exporting: 'Wird exportiert...',
                    'First unwatched episode': 'Erste ungesehene Folge',
                    Games: 'Spiele',
                    General: 'Allgemein',
                    'Go to <0>https://www.goodreads.com/review/list</0> and copy RSS url from the bottom of the page': 'Gehe zu <0>https://www.goodreads.com/review/list</0> und kopiere die RSS URL vom Ende der Seite',
                    'Go to <0>{0}</0> and enter following code: {1}': [
                        'Gehe zu <0>',
                        [
                            '0'
                        ],
                        '</0> und gib folgenden Code ein: ',
                        [
                            '1'
                        ]
                    ],
                    'Gotify server url': 'Gotify Server URL',
                    'Hide overview of unseen seasons': 'Übersicht der ungesehenen Staffeln ausblenden',
                    'Hide title of unseen episodes': 'Titel der ungesehenen Folgen ausblenden',
                    Home: 'Startseite',
                    Http: 'Http',
                    'I am listening it': 'Ich höre es gerade',
                    'I am playing it': 'Ich spiele es gerade',
                    'I am reading it': 'Ich lese es gerade',
                    'I am watching it': 'Ich schaue es gerade',
                    'I do not remember': 'Ich erinnere mich nicht',
                    'I finished listening it': 'Hab\'s zuende gehört',
                    'I finished playing it': 'Hab\'s zuende gespielt',
                    'I finished reading it': 'Hab\'s zuende gelesen',
                    'I finished watching it': 'Hab\'s zuende geschaut',
                    'IGDB credentials': 'IGDB Zugangsdaten',
                    Import: 'Importieren',
                    'Import from': 'Importieren von',
                    Imported: 'Importiert',
                    Importing: 'Wird importiert',
                    'In progress': 'In Arbeit …',
                    'Incorrect password or username': 'Falsches Passwort oder Benutzername',
                    Info: 'Info',
                    Key: 'Schlüssel',
                    Language: 'Sprache',
                    'Last airing': 'Letzte Austrahlung',
                    'Last listened at {0}': [
                        'Zuletzt gehört am ',
                        [
                            '0'
                        ]
                    ],
                    'Last played at {0}': [
                        'Zuletzt gespielt am ',
                        [
                            '0'
                        ]
                    ],
                    'Last read at {0}': [
                        'Zuletzt gelesen am ',
                        [
                            '0'
                        ]
                    ],
                    'Last seen': 'Zuletzt gesehen',
                    'Last seen at {0}': [
                        'Zuletzt gesehen am ',
                        [
                            '0'
                        ]
                    ],
                    Listened: 'Gehört',
                    'Listened at {0}': [
                        'Angehört am ',
                        [
                            '0'
                        ]
                    ],
                    'Listened history': 'Gehört Verlauf',
                    Loading: 'Wird geladen',
                    Login: 'Anmelden',
                    Logout: 'Ausloggen',
                    Logs: 'Logs',
                    'Mark as listened': 'Als gehört markieren',
                    'Mark as played': 'Als gespielt markieren',
                    'Mark as read': 'Als gelesen markieren',
                    'Mark as seen': 'Als gesehen markieren',
                    'Mark {0} as seen': [
                        'Markiere ',
                        [
                            '0'
                        ],
                        ' als gesehen'
                    ],
                    'Media type': 'Medientyp',
                    'Metadata providers credentials': 'Zugangsdaten für Metadatenanbieter',
                    Movie: 'Film',
                    Movies: 'Filme',
                    Network: 'Sender',
                    'New password': 'Neues Passwort',
                    'Next airing': 'Nächste Ausstrahlung',
                    'Next episode': 'Nächste Folge',
                    'Next episode to watch': 'Nächste Folge zum Ansehen',
                    'No date': 'Kein Datum',
                    'No more logs': 'Keine weiteren Logs',
                    Notifications: 'Benachrichtigungen',
                    Now: 'Jetzt',
                    'Number of pages': 'Seitenanzahl',
                    'On watchlist': 'Auf der Watchlist',
                    Overview: 'Handlung',
                    Password: 'Passwort',
                    'Password has been changed': 'Das Passwort wurde geändert',
                    'Passwords do not match': 'Die Passwörter stimmen nicht überein',
                    Platform: 'Plattform',
                    Played: 'Gespielt',
                    'Played at {0}': [
                        'Gespielt am ',
                        [
                            '0'
                        ]
                    ],
                    'Played history': 'Gespielt Verlauf',
                    Preferences: 'Voreinstellungen',
                    Priority: 'Priorität',
                    Progress: 'Fortschritt',
                    'Public reviews': 'Öffentliche Bewertungen',
                    'RSS link': 'RSS Link',
                    Rated: 'Bewertet',
                    Rating: 'Bewertung',
                    Ratings: 'Bewertungen',
                    Read: 'Lesen',
                    'Read at {0}': [
                        'Gelesen am ',
                        [
                            '0'
                        ]
                    ],
                    'Read history': 'Gelesen Verlauf',
                    'Receive notification for all media items on your watchlist, when its release date changes': 'Erhalte Benachrichtigung für alle Medienelemente auf deiner Watchlist, wenn das Veröffentlichungsdatum geändert wird',
                    'Receive notification for all media items on your watchlist, when its status changes': 'Erhalte Benachrichtigungen für alle Medienelemente auf deiner Watchlist, wenn es sich um Statusänderungen handelt',
                    'Receive notification for all media items on your watchlist, when they are released, including new seasons for tv shows': 'Erhalte Benachrichtigungen für alle Medienelemente auf deiner Watchlist, wenn sie veröffentlicht werden, einschließlich neuer Staffeln für TV-Serien',
                    'Receive notification for all tv shows on your watchlist, when its number of seasons changes': 'Erhalte Benachrichtigungen für alle Serien auf deiner Watchlist, wenn sich die Anzahl der Staffeln ändert',
                    'Receive notification for every episode for all tv shows on your watchlist, when it\'s released': 'Erhalte eine Benachrichtigung für jede Folge deiner Serien auf deiner Watchlist, wenn sie veröffentlicht wird',
                    'Recently released': 'Kürzlich veröffentlicht',
                    Register: 'Registrieren',
                    'Release <0/>': 'Veröffentlichung <0/>',
                    'Release date': 'Erscheinungsdatum',
                    'Released <0/>': 'Veröffentlicht <0/>',
                    'Remove "{0}" from watchlist?': [
                        '"',
                        [
                            '0'
                        ],
                        '" von der Watchlist entfernen?'
                    ],
                    'Remove from listened history': 'Von der Gehörtliste entfernen',
                    'Remove from played history': 'Von der Gespieltliste entfernen',
                    'Remove from read history': 'Von der Gelesenliste entfernen',
                    'Remove from seen history': 'Von der Gesehenliste entfernen',
                    'Remove from watchlist': 'Von Watchlist entfernen',
                    'Remove token': 'Token löschen',
                    'Review by <0><1>{author}</1></0> at {date}': [
                        'Bewertung von <0><1>',
                        [
                            'author'
                        ],
                        '</1></0> um ',
                        [
                            'date'
                        ]
                    ],
                    Runtime: 'Laufzeit',
                    Save: 'Speichern',
                    'Save review': 'Bewertung speichern',
                    Search: 'Suche',
                    'Search for items or <0>import</0>': 'Nach Elementen suchen oder <0>importieren</0>',
                    Season: 'Staffel',
                    'Season {0}': [
                        'Staffel ',
                        [
                            '0'
                        ]
                    ],
                    Seasons: 'Staffeln',
                    'Seen at {0}': [
                        'Gesehen am ',
                        [
                            '0'
                        ]
                    ],
                    'Seen history': 'Gesehen Übersicht',
                    Select: 'Auswählen',
                    'Send notification for episodes releases': 'Benachrichtigung für Veröffentlichungen von Folgen senden',
                    'Send notification for releases': 'Benachrichtigung für Neuveröffentlichungen',
                    'Send notification when number of seasons changes': 'Benachrichtigung senden, wenn sich die Anzahl der Staffeln ändert',
                    'Send notification when release date changes': 'Benachrichtigung bei Änderung des Veröffentlichungsdatums senden',
                    'Send notification when status changes': 'Benachrichtigung bei Statusänderung senden',
                    'Server error: {errorMessage}': [
                        'Server Error: ',
                        [
                            'errorMessage'
                        ]
                    ],
                    'Server language': 'Server Sprache',
                    'Server url (only for self hosting)': 'Server URL (nur für Selbst-Hosting)',
                    Set: 'Übernehmen',
                    'Set progress': 'Fortschritt setzen',
                    Settings: 'Einstellungen',
                    'Show your reviews to other users': 'Ihre Bewertungen anderen Benutzern zeigen',
                    Shows: 'Serien',
                    Source: 'Quelle',
                    Status: 'Status',
                    Summary: 'Zusammenfassung',
                    'S{0}': [
                        'S',
                        [
                            '0'
                        ]
                    ],
                    'S{0}E{1}': [
                        'S',
                        [
                            '0'
                        ],
                        'E',
                        [
                            '1'
                        ]
                    ],
                    'TMDB language': 'TMDB Sprache',
                    'This component can only be used with tv shows': 'Diese Komponente kann nur mit TV-Serien verwendet werden',
                    Title: 'Titel',
                    'To read': 'Zu lesen',
                    Topic: 'Thema',
                    Tv: 'TV',
                    Uninitialized: 'Nicht initialisiert',
                    Unrated: 'Nicht bewertet',
                    'Unseen episodes count': 'Anzahl ungesehener Folgen',
                    Upcoming: 'Demnächst',
                    'Update metadata': 'Metadaten aktualisieren',
                    'Updating metadata': 'Metadaten werden aktualisiert',
                    'User key': 'Benutzerschlüssel',
                    Username: 'Benutzername',
                    'Video game': 'Videospiel',
                    'Waiting for authentication': 'Warte auf Authentifizierung',
                    Warning: 'Warnung',
                    Watched: 'Gesehen',
                    Watchlist: 'Watchlist',
                    'What is the last episode of "{0}" you see?': [
                        'Was ist die letzte Folge die du von "',
                        [
                            '0'
                        ],
                        '" gesehen hast?'
                    ],
                    'What is the last episode you see?': 'Was ist die letzte Folge, die du gesehen hast?',
                    'When did you listen it?': 'Wann hast du es gehört?',
                    'When did you listen to "{0}"?': [
                        'Wann hast du "',
                        [
                            '0'
                        ],
                        '" gehört?\n'
                    ],
                    'When did you play "{0}"?': [
                        'Wann hast du "',
                        [
                            '0'
                        ],
                        '" gespielt?'
                    ],
                    'When did you play it?': 'Wann hast du es gespielt?',
                    'When did you read "{0}"?': [
                        'Wann hast du "',
                        [
                            '0'
                        ],
                        '" gelesen?'
                    ],
                    'When did you read it?': 'Wann hast du es gelesen?',
                    'When did you see "{0}"?': [
                        'Wann hast du "',
                        [
                            '0'
                        ],
                        '" gesehen?'
                    ],
                    'When did you see it?': 'Wann hast du es gesehen?',
                    import: 'Importieren',
                    '{0, plural, one { Found # item for query "<0>{searchQuery}</0>"} other { Found # items for query "<1>{searchQuery}</1>"}}': [
                        ['0',
                            'plural',
                            {
                                one: [
                                    ' ',
                                    '#',
                                    ' Einträge für Abfrage "<0>',
                                    [
                                        'searchQuery'
                                    ],
                                    '<0>" gefunden'
                                ],
                                other: [
                                    '  ',
                                    '#',
                                    ' Einträge für Abfrage "<1>',
                                    [
                                        'searchQuery'
                                    ],
                                    '</1>" gefunden'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Author} other {Authors}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Autor',
                                other: 'Autoren'
                            }
                        ]
                    ],
                    '{0, plural, one {Genre} other {Genres}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Genre',
                                other: 'Genre'
                            }
                        ]
                    ],
                    '{0, plural, one {Listened 1 time} other {Listened # times}}': [
                        ['0',
                            'plural',
                            {
                                one: '1 mal gehört',
                                other: [
                                    '#',
                                    ' mal gehört'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Narrator} other {Narrators}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Sprecher',
                                other: 'Sprecher'
                            }
                        ]
                    ],
                    '{0, plural, one {Platform} other {platforms}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Autor',
                                other: 'Autoren'
                            }
                        ]
                    ],
                    '{0, plural, one {Played 1 time} other {Played # times}}': [
                        ['0',
                            'plural',
                            {
                                one: '1 mal gespielt',
                                other: [
                                    '#',
                                    ' mal gespielt'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Read 1 time} other {Read # times}}': [
                        ['0',
                            'plural',
                            {
                                one: '1 mal gelesen',
                                other: [
                                    '#',
                                    ' mal gelesen'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Seen 1 time} other {Seen # times}}': [
                        ['0',
                            'plural',
                            {
                                one: '1 mal gesehen',
                                other: [
                                    '#',
                                    ' mal gesehen'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, other {unseen}}': [
                        ['0',
                            'plural',
                            {
                                other: 'ungesehen'
                            }
                        ]
                    ],
                    '{count, plural, one {Do you want to remove # seen history entry?} other {Do you want to remove all # seen history entries?}}': [
                        ['count',
                            'plural',
                            {
                                one: [
                                    'Möchten Sie ',
                                    '#',
                                    ' Einträge von der Gesehenliste entfernen?'
                                ],
                                other: [
                                    'Möchten Sie alle ',
                                    '#',
                                    ' Einträge von der Gesehenliste entfernen?'
                                ]
                            }
                        ]
                    ],
                    '{duration, plural, one {minute} other {minutes}}': [
                        ['duration',
                            'plural',
                            {
                                one: 'Minute',
                                other: 'Minuten'
                            }
                        ]
                    ],
                    '{numberOfItemsTotal, plural, one {1 item} other {# items}}': [
                        ['numberOfItemsTotal',
                            'plural',
                            {
                                one: '1 Artikel',
                                other: [
                                    '#',
                                    ' Artikel'
                                ]
                            }
                        ]
                    ],
                    '{value, plural, one {minute} other {minutes}}': [
                        ['value',
                            'plural',
                            {
                                one: 'Minute',
                                other: 'Minuten'
                            }
                        ]
                    ],
                    '{value, plural, one {page} other {pages}}': [
                        ['value',
                            'plural',
                            {
                                one: 'Seite',
                                other: 'Seiten'
                            }
                        ]
                    ]
                },
                en: {
                    '<0><1/> </0>listening': '<0><1/> </0>listening',
                    '<0><1/> </0>playing': '<0><1/> </0>playing',
                    '<0><1/> </0>reading': '<0><1/> </0>reading',
                    '<0><1/> </0>watching': '<0><1/> </0>watching',
                    '<0>{0}</0> audiobooks (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> audiobooks (<1>',
                        [
                            '1'
                        ],
                        '</1> plays)'
                    ],
                    '<0>{0}</0> books (<1>{1}</1> reads)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> books (<1>',
                        [
                            '1'
                        ],
                        '</1> reads)'
                    ],
                    '<0>{0}</0> episodes (<1>{1}</1> plays of <2>{2}</2> shows)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> episodes (<1>',
                        [
                            '1'
                        ],
                        '</1> plays of <2>',
                        [
                            '2'
                        ],
                        '</2> shows)'
                    ],
                    '<0>{0}</0> movies (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> movies (<1>',
                        [
                            '1'
                        ],
                        '</1> plays)'
                    ],
                    '<0>{0}</0> video games (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> video games (<1>',
                        [
                            '1'
                        ],
                        '</1> plays)'
                    ],
                    'API keys can be acquired here': 'API keys can be acquired here',
                    'Access Token': 'Access Token',
                    'Add season to seen history': 'Add season to seen history',
                    'Add to listened history': 'Add to listened history',
                    'Add to played history': 'Add to played history',
                    'Add to read history': 'Add to read history',
                    'Add to seen history': 'Add to seen history',
                    'Add to watchlist': 'Add to watchlist',
                    'Add token': 'Add token',
                    All: 'All',
                    'App token': 'App token',
                    'Application tokens': 'Application tokens',
                    'At release date': 'At release date',
                    'Audible language': 'Audible language',
                    Audiobook: 'Audiobook',
                    Audiobooks: 'Audiobooks',
                    'Avoid episode spoilers': 'Avoid episode spoilers',
                    'Avoid season spoilers': 'Avoid season spoilers',
                    Book: 'Book',
                    Books: 'Books',
                    Calendar: 'Calendar',
                    Cancel: 'Cancel',
                    'Change password': 'Change password',
                    'Client ID': 'Client ID',
                    'Client Secret': 'Client Secret',
                    Configuration: 'Configuration',
                    'Confirm new password': 'Confirm new password',
                    'Confirm password': 'Confirm password',
                    'Continue watching': 'Continue watching',
                    'Copy to clipboard': 'Copy to clipboard',
                    'Current password': 'Current password',
                    'Current password is incorrect': 'Current password is incorrect',
                    'Currently reading': 'Currently reading',
                    'Custom date': 'Custom date',
                    Debug: 'Debug',
                    Description: 'Description',
                    'Do you want to remove episode {0} from seen history?': [
                        'Do you want to remove episode ',
                        [
                            '0'
                        ],
                        ' from seen history?'
                    ],
                    Duration: 'Duration',
                    'Enable registration': 'Enable registration',
                    Episode: 'Episode',
                    'Episode {0} {1}': [
                        'Episode ',
                        [
                            '0'
                        ],
                        ' ',
                        [
                            '1'
                        ]
                    ],
                    Episodes: 'Episodes',
                    'Episodes page': 'Episodes page',
                    Error: 'Error',
                    Exporting: 'Exporting',
                    'First unwatched episode': 'First unwatched episode',
                    Games: 'Games',
                    General: 'General',
                    'Go to <0>https://www.goodreads.com/review/list</0> and copy RSS url from the bottom of the page': 'Go to <0>https://www.goodreads.com/review/list</0> and copy RSS url from the bottom of the page',
                    'Go to <0>{0}</0> and enter following code: {1}': [
                        'Go to <0>',
                        [
                            '0'
                        ],
                        '</0> and enter following code: ',
                        [
                            '1'
                        ]
                    ],
                    'Gotify server url': 'Gotify server url',
                    'Hide overview of unseen seasons': 'Hide overview of unseen seasons',
                    'Hide title of unseen episodes': 'Hide title of unseen episodes',
                    Home: 'Home',
                    Http: 'Http',
                    'I am listening it': 'I am listening it',
                    'I am playing it': 'I am playing it',
                    'I am reading it': 'I am reading it',
                    'I am watching it': 'I am watching it',
                    'I do not remember': 'I do not remember',
                    'I finished listening it': 'I finished listening it',
                    'I finished playing it': 'I finished playing it',
                    'I finished reading it': 'I finished reading it',
                    'I finished watching it': 'I finished watching it',
                    'IGDB credentials': 'IGDB credentials',
                    Import: 'Import',
                    'Import from': 'Import from',
                    Imported: 'Imported',
                    Importing: 'Importing',
                    'In progress': 'In progress',
                    'Incorrect password or username': 'Incorrect password or username',
                    Info: 'Info',
                    Key: 'Key',
                    Language: 'Language',
                    'Last airing': 'Last airing',
                    'Last listened at {0}': [
                        'Last listened at ',
                        [
                            '0'
                        ]
                    ],
                    'Last played at {0}': [
                        'Last played at ',
                        [
                            '0'
                        ]
                    ],
                    'Last read at {0}': [
                        'Last read at ',
                        [
                            '0'
                        ]
                    ],
                    'Last seen': 'Last seen',
                    'Last seen at {0}': [
                        'Last seen at ',
                        [
                            '0'
                        ]
                    ],
                    Listened: 'Listened',
                    'Listened at {0}': [
                        'Listened at ',
                        [
                            '0'
                        ]
                    ],
                    'Listened history': 'Listened history',
                    Loading: 'Loading',
                    Login: 'Login',
                    Logout: 'Logout',
                    Logs: 'Logs',
                    'Mark as listened': 'Mark as listened',
                    'Mark as played': 'Mark as played',
                    'Mark as read': 'Mark as read',
                    'Mark as seen': 'Mark as seen',
                    'Mark {0} as seen': [
                        'Mark ',
                        [
                            '0'
                        ],
                        ' as seen'
                    ],
                    'Media type': 'Media type',
                    'Metadata providers credentials': 'Metadata providers credentials',
                    Movie: 'Movie',
                    Movies: 'Movies',
                    Network: 'Network',
                    'New password': 'New password',
                    'Next airing': 'Next airing',
                    'Next episode': 'Next episode',
                    'Next episode to watch': 'Next episode to watch',
                    'No date': 'No date',
                    'No more logs': 'No more logs',
                    Notifications: 'Notifications',
                    Now: 'Now',
                    'Number of pages': 'Number of pages',
                    'On watchlist': 'On watchlist',
                    Overview: 'Overview',
                    Password: 'Password',
                    'Password has been changed': 'Password has been changed',
                    'Passwords do not match': 'Passwords do not match',
                    Platform: 'Platform',
                    Played: 'Played',
                    'Played at {0}': [
                        'Played at ',
                        [
                            '0'
                        ]
                    ],
                    'Played history': 'Played history',
                    Preferences: 'Preferences',
                    Priority: 'Priority',
                    Progress: 'Progress',
                    'Public reviews': 'Public reviews',
                    'RSS link': 'RSS link',
                    Rated: 'Rated',
                    Rating: 'Rating',
                    Ratings: 'Ratings',
                    Read: 'Read',
                    'Read at {0}': [
                        'Read at ',
                        [
                            '0'
                        ]
                    ],
                    'Read history': 'Read history',
                    'Receive notification for all media items on your watchlist, when its release date changes': 'Receive notification for all media items on your watchlist, when its release date changes',
                    'Receive notification for all media items on your watchlist, when its status changes': 'Receive notification for all media items on your watchlist, when its status changes',
                    'Receive notification for all media items on your watchlist, when they are released, including new seasons for tv shows': 'Receive notification for all media items on your watchlist, when they are released, including new seasons for tv shows',
                    'Receive notification for all tv shows on your watchlist, when its number of seasons changes': 'Receive notification for all tv shows on your watchlist, when its number of seasons changes',
                    'Receive notification for every episode for all tv shows on your watchlist, when it\'s released': 'Receive notification for every episode for all tv shows on your watchlist, when it\'s released',
                    'Recently released': 'Recently released',
                    Register: 'Register',
                    'Release <0/>': 'Release <0/>',
                    'Release date': 'Release date',
                    'Released <0/>': 'Released <0/>',
                    'Remove "{0}" from watchlist?': [
                        'Remove "',
                        [
                            '0'
                        ],
                        '" from watchlist?'
                    ],
                    'Remove from listened history': 'Remove from listened history',
                    'Remove from played history': 'Remove from played history',
                    'Remove from read history': 'Remove from read history',
                    'Remove from seen history': 'Remove from seen history',
                    'Remove from watchlist': 'Remove from watchlist',
                    'Remove token': 'Remove token',
                    'Review by <0><1>{author}</1></0> at {date}': [
                        'Review by <0><1>',
                        [
                            'author'
                        ],
                        '</1></0> at ',
                        [
                            'date'
                        ]
                    ],
                    Runtime: 'Runtime',
                    Save: 'Save',
                    'Save review': 'Save review',
                    Search: 'Search',
                    'Search for items or <0>import</0>': 'Search for items or <0>import</0>',
                    Season: 'Season',
                    'Season {0}': [
                        'Season ',
                        [
                            '0'
                        ]
                    ],
                    Seasons: 'Seasons',
                    'Seen at {0}': [
                        'Seen at ',
                        [
                            '0'
                        ]
                    ],
                    'Seen history': 'Seen history',
                    Select: 'Select',
                    'Send notification for episodes releases': 'Send notification for episodes releases',
                    'Send notification for releases': 'Send notification for releases',
                    'Send notification when number of seasons changes': 'Send notification when number of seasons changes',
                    'Send notification when release date changes': 'Send notification when release date changes',
                    'Send notification when status changes': 'Send notification when status changes',
                    'Server error: {errorMessage}': [
                        'Server error: ',
                        [
                            'errorMessage'
                        ]
                    ],
                    'Server language': 'Server language',
                    'Server url (only for self hosting)': 'Server url (only for self hosting)',
                    Set: 'Set',
                    'Set progress': 'Set progress',
                    Settings: 'Settings',
                    'Show your reviews to other users': 'Show your reviews to other users',
                    Shows: 'Shows',
                    Source: 'Source',
                    Status: 'Status',
                    Summary: 'Summary',
                    'S{0}': [
                        'S',
                        [
                            '0'
                        ]
                    ],
                    'S{0}E{1}': [
                        'S',
                        [
                            '0'
                        ],
                        'E',
                        [
                            '1'
                        ]
                    ],
                    'TMDB language': 'TMDB language',
                    'This component can only be used with tv shows': 'This component can only be used with tv shows',
                    Title: 'Title',
                    'To read': 'To read',
                    Topic: 'Topic',
                    Tv: 'Tv',
                    Uninitialized: 'Uninitialized',
                    Unrated: 'Unrated',
                    'Unseen episodes count': 'Unseen episodes count',
                    Upcoming: 'Upcoming',
                    'Update metadata': 'Update metadata',
                    'Updating metadata': 'Updating metadata',
                    'User key': 'User key',
                    Username: 'Username',
                    'Video game': 'Video game',
                    'Waiting for authentication': 'Waiting for authentication',
                    Warning: 'Warning',
                    Watched: 'Watched',
                    Watchlist: 'Watchlist',
                    'What is the last episode of "{0}" you see?': [
                        'What is the last episode of "',
                        [
                            '0'
                        ],
                        '" you see?'
                    ],
                    'What is the last episode you see?': 'What is the last episode you see?',
                    'When did you listen it?': 'When did you listen it?',
                    'When did you listen to "{0}"?': [
                        'When did you listen to "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you play "{0}"?': [
                        'When did you play "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you play it?': 'When did you play it?',
                    'When did you read "{0}"?': [
                        'When did you read "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you read it?': 'When did you read it?',
                    'When did you see "{0}"?': [
                        'When did you see "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you see it?': 'When did you see it?',
                    import: 'import',
                    '{0, plural, one { Found # item for query "<0>{searchQuery}</0>"} other { Found # items for query "<1>{searchQuery}</1>"}}': [
                        ['0',
                            'plural',
                            {
                                one: [
                                    ' Found ',
                                    '#',
                                    ' item for query "<0>',
                                    [
                                        'searchQuery'
                                    ],
                                    '</0>"'
                                ],
                                other: [
                                    ' Found ',
                                    '#',
                                    ' items for query "<1>',
                                    [
                                        'searchQuery'
                                    ],
                                    '</1>"'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Author} other {Authors}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Author',
                                other: 'Authors'
                            }
                        ]
                    ],
                    '{0, plural, one {Genre} other {Genres}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Genre',
                                other: 'Genres'
                            }
                        ]
                    ],
                    '{0, plural, one {Listened 1 time} other {Listened # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Listened 1 time',
                                other: [
                                    'Listened ',
                                    '#',
                                    ' times'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Narrator} other {Narrators}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Narrator',
                                other: 'Narrators'
                            }
                        ]
                    ],
                    '{0, plural, one {Platform} other {platforms}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Platform',
                                other: 'platforms'
                            }
                        ]
                    ],
                    '{0, plural, one {Played 1 time} other {Played # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Played 1 time',
                                other: [
                                    'Played ',
                                    '#',
                                    ' times'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Read 1 time} other {Read # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Read 1 time',
                                other: [
                                    'Read ',
                                    '#',
                                    ' times'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Seen 1 time} other {Seen # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Seen 1 time',
                                other: [
                                    'Seen ',
                                    '#',
                                    ' times'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, other {unseen}}': [
                        ['0',
                            'plural',
                            {
                                other: 'unseen'
                            }
                        ]
                    ],
                    '{count, plural, one {Do you want to remove # seen history entry?} other {Do you want to remove all # seen history entries?}}': [
                        ['count',
                            'plural',
                            {
                                one: [
                                    'Do you want to remove ',
                                    '#',
                                    ' seen history entry?'
                                ],
                                other: [
                                    'Do you want to remove all ',
                                    '#',
                                    ' seen history entries?'
                                ]
                            }
                        ]
                    ],
                    '{duration, plural, one {minute} other {minutes}}': [
                        ['duration',
                            'plural',
                            {
                                one: 'minute',
                                other: 'minutes'
                            }
                        ]
                    ],
                    '{numberOfItemsTotal, plural, one {1 item} other {# items}}': [
                        ['numberOfItemsTotal',
                            'plural',
                            {
                                one: '1 item',
                                other: [
                                    '#',
                                    ' items'
                                ]
                            }
                        ]
                    ],
                    '{value, plural, one {minute} other {minutes}}': [
                        ['value',
                            'plural',
                            {
                                one: 'minute',
                                other: 'minutes'
                            }
                        ]
                    ],
                    '{value, plural, one {page} other {pages}}': [
                        ['value',
                            'plural',
                            {
                                one: 'page',
                                other: 'pages'
                            }
                        ]
                    ]
                },
                es: {
                    '<0><1/> </0>listening': '<0><1/> </0>de escucha',
                    '<0><1/> </0>playing': '<0><1/> </0>jugando',
                    '<0><1/> </0>reading': '<0><1/> </0>de lectura',
                    '<0><1/> </0>watching': '<0><1/> </0>de visionado',
                    '<0>{0}</0> audiobooks (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> audiolibros (<1>',
                        [
                            '1'
                        ],
                        '</1> escuchas)'
                    ],
                    '<0>{0}</0> books (<1>{1}</1> reads)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> libros (<1>',
                        [
                            '1'
                        ],
                        '</1> lecturas)'
                    ],
                    '<0>{0}</0> episodes (<1>{1}</1> plays of <2>{2}</2> shows)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> episodios (<1>',
                        [
                            '1'
                        ],
                        '</1> reproducciones de <2>',
                        [
                            '2'
                        ],
                        '</2> series y programas)'
                    ],
                    '<0>{0}</0> movies (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> películas (<1>',
                        [
                            '1'
                        ],
                        '</1> reproducciones)'
                    ],
                    '<0>{0}</0> video games (<1>{1}</1> plays)': [
                        '<0>',
                        [
                            '0'
                        ],
                        '</0> videojuegos (<1>',
                        [
                            '1'
                        ],
                        '</1> ejecuciones)'
                    ],
                    'API keys can be acquired here': 'Las claves API se pueden obtener aquí',
                    'Access Token': 'Token de acceso',
                    'Add season to seen history': 'Marcar temporada como vista',
                    'Add to listened history': 'Marcar como escuchado',
                    'Add to played history': 'Marcar como jugado',
                    'Add to read history': 'Marcar como leído',
                    'Add to seen history': 'Marcar como vista',
                    'Add to watchlist': 'Añadir a la lista de seguimiento',
                    'Add token': 'Añadir token',
                    All: 'Todo',
                    'App token': 'Token de aplicación',
                    'Application tokens': 'Tokens de aplicación',
                    'At release date': 'En la fecha de estreno',
                    'Audible language': 'Idioma de Audible',
                    Audiobook: 'Audiolibro',
                    Audiobooks: 'Audiolibros',
                    'Avoid episode spoilers': 'Evitar spoilers de episodios',
                    'Avoid season spoilers': 'Evitar spoilers de temporada',
                    Book: 'Libro',
                    Books: 'Libros',
                    Calendar: 'Calendario',
                    Cancel: 'Cancelar',
                    'Change password': 'Cambiar contraseña',
                    'Client ID': 'Client ID',
                    'Client Secret': 'Client Secret',
                    Configuration: 'Configuración',
                    'Confirm new password': 'Confirmar contraseña',
                    'Confirm password': 'Confirmar contraseña',
                    'Continue watching': 'Seguir viendo',
                    'Copy to clipboard': 'Copiar al portapapeles',
                    'Current password': 'Contraseña actual',
                    'Current password is incorrect': 'La contraseña actual es incorrecta',
                    'Currently reading': 'Leyendo actualmente',
                    'Custom date': 'Fecha personalizada',
                    Debug: 'Depuración',
                    Description: 'Descripción',
                    'Do you want to remove episode {0} from seen history?': [
                        '¿Desea marcar el episodio ',
                        [
                            '0'
                        ],
                        ' como no visto?'
                    ],
                    Duration: 'Duración',
                    'Enable registration': 'Habilitar el registro de usuarios',
                    Episode: 'Episodio',
                    'Episode {0} {1}': [
                        'Episodio ',
                        [
                            '0'
                        ],
                        ' ',
                        [
                            '1'
                        ]
                    ],
                    Episodes: 'Episodios',
                    'Episodes page': 'Episodios',
                    Error: 'Error',
                    Exporting: 'Exportando',
                    'First unwatched episode': 'Primer episodio no visto',
                    Games: 'Juegos',
                    General: 'General',
                    'Go to <0>https://www.goodreads.com/review/list</0> and copy RSS url from the bottom of the page': 'Vaya a <0>https://www.goodreads.com/review/list</0> y copie la URL RSS de la parte de abajo de la página',
                    'Go to <0>{0}</0> and enter following code: {1}': [
                        'Vaya a <0>',
                        [
                            '0'
                        ],
                        '</0> e introduzca el siguiente código: ',
                        [
                            '1'
                        ]
                    ],
                    'Gotify server url': 'URL del servidor Gotify',
                    'Hide overview of unseen seasons': 'Ocultar la información de temporadas no vistas',
                    'Hide title of unseen episodes': 'Ocultar el título de episodios no vistos',
                    Home: 'Inicio',
                    Http: 'Http',
                    'I am listening it': 'Lo estoy escuchando',
                    'I am playing it': 'Lo estoy jugando',
                    'I am reading it': 'Lo estoy leyendo',
                    'I am watching it': 'La estoy viendo',
                    'I do not remember': 'No lo recuerdo',
                    'I finished listening it': 'Terminé de escucharlo',
                    'I finished playing it': 'Terminé de jugarlo',
                    'I finished reading it': 'Terminé de leerlo',
                    'I finished watching it': 'Terminé de verla',
                    'IGDB credentials': 'Credenciales de IGDB',
                    Import: 'Importar',
                    'Import from': 'Importar desde',
                    Imported: 'Importado',
                    Importing: 'Importando',
                    'In progress': 'En proceso',
                    'Incorrect password or username': 'Contraseña o nombre de usuario incorrectos',
                    Info: 'Información',
                    Key: 'Clave',
                    Language: 'Idioma',
                    'Last airing': 'Última emisión',
                    'Last listened at {0}': [
                        'Escuchado por última vez: ',
                        [
                            '0'
                        ]
                    ],
                    'Last played at {0}': [
                        'Jugado por última vez: ',
                        [
                            '0'
                        ]
                    ],
                    'Last read at {0}': [
                        'Leído por última vez: ',
                        [
                            '0'
                        ]
                    ],
                    'Last seen': 'Visto por última vez',
                    'Last seen at {0}': [
                        'Visto por última vez: ',
                        [
                            '0'
                        ]
                    ],
                    Listened: 'Escuchado',
                    'Listened at {0}': [
                        'Escuchado el ',
                        [
                            '0'
                        ]
                    ],
                    'Listened history': 'Historial de reproducción',
                    Loading: 'Cargando',
                    Login: 'Iniciar sesión',
                    Logout: 'Cerrar sesión',
                    Logs: 'Registros',
                    'Mark as listened': 'Marcar como escuchado',
                    'Mark as played': 'Marcar como jugado',
                    'Mark as read': 'Marcar como leído',
                    'Mark as seen': 'Marcar como visto',
                    'Mark {0} as seen': [
                        'Marcar ',
                        [
                            '0'
                        ],
                        ' como visto'
                    ],
                    'Media type': 'Tipo de medio',
                    'Metadata providers credentials': 'Credenciales de los proveedores de metadatos',
                    Movie: 'Película',
                    Movies: 'Películas',
                    Network: 'Canal',
                    'New password': 'Nueva contraseña',
                    'Next airing': 'Próxima emisión',
                    'Next episode': 'Siguiente episodio',
                    'Next episode to watch': 'Próximo episodio',
                    'No date': 'Sin fecha',
                    'No more logs': 'No hay más registros',
                    Notifications: 'Notificaciones',
                    Now: 'Ahora',
                    'Number of pages': 'Cantidad de páginas',
                    'On watchlist': 'En la lista de seguimiento',
                    Overview: 'Resumen',
                    Password: 'Contraseña',
                    'Password has been changed': 'Se ha cambiado la contraseña',
                    'Passwords do not match': 'Las contraseñas no coinciden',
                    Platform: 'Plataforma',
                    Played: 'Jugado',
                    'Played at {0}': [
                        'Jugado el ',
                        [
                            '0'
                        ]
                    ],
                    'Played history': 'Historial de juego',
                    Preferences: 'Preferencias',
                    Priority: 'Prioridad',
                    Progress: 'Progreso',
                    'Public reviews': 'Reseñas públicas',
                    'RSS link': 'Enlace RSS',
                    Rated: 'Puntuado',
                    Rating: 'Puntuación',
                    Ratings: 'Puntuaciones',
                    Read: 'Leído',
                    'Read at {0}': [
                        'Leído el ',
                        [
                            '0'
                        ]
                    ],
                    'Read history': 'Historial de lectura',
                    'Receive notification for all media items on your watchlist, when its release date changes': 'Reciba una notificación de todos los elementos multimedia de su lista de seguimiento cuando cambie su fecha de estreno',
                    'Receive notification for all media items on your watchlist, when its status changes': 'Reciba una notificación de todos los elementos multimedia de su lista de seguimiento cuando cambie su estado',
                    'Receive notification for all media items on your watchlist, when they are released, including new seasons for tv shows': 'Reciba una notificación de todos los elementos multimedia de su lista de seguimiento cuando se estrenen, incluyendo nuevas temporadas de series y programas',
                    'Receive notification for all tv shows on your watchlist, when its number of seasons changes': 'Reciba una notificación para todas las series y programas de su lista de seguimiento cuando cambie su número de temporadas',
                    'Receive notification for every episode for all tv shows on your watchlist, when it\'s released': 'Reciba una notificación cuando se estrene cada episodio para todas las series y programas de su lista de seguimiento',
                    'Recently released': 'Estrenado recientemente',
                    Register: 'Registro',
                    'Release <0/>': 'Estreno el <0/>',
                    'Release date': 'Fecha de estreno',
                    'Released <0/>': 'Estrenado el <0/>',
                    'Remove "{0}" from watchlist?': [
                        '¿Desea quitar "',
                        [
                            '0'
                        ],
                        '" de la lista de seguimiento?'
                    ],
                    'Remove from listened history': 'Marcar como no escuchado',
                    'Remove from played history': 'Marcar como no jugado',
                    'Remove from read history': 'Marcar como no leído',
                    'Remove from seen history': 'Marcar como no vista',
                    'Remove from watchlist': 'Quitar de la lista de seguimiento',
                    'Remove token': 'Eliminar token',
                    'Review by <0><1>{author}</1></0> at {date}': [
                        'Reseña de <0><1>',
                        [
                            'author'
                        ],
                        '</1></0> del ',
                        [
                            'date'
                        ]
                    ],
                    Runtime: 'Tiempo de ejecución',
                    Save: 'Guardar',
                    'Save review': 'Guardar reseña',
                    Search: 'Buscar',
                    'Search for items or <0>import</0>': 'Buscar elementos o <0>importar</0>',
                    Season: 'Temporada',
                    'Season {0}': [
                        'Temporada ',
                        [
                            '0'
                        ]
                    ],
                    Seasons: 'Temporadas',
                    'Seen at {0}': [
                        'Visto el ',
                        [
                            '0'
                        ]
                    ],
                    'Seen history': 'Historial de visionado',
                    Select: 'Seleccionar',
                    'Send notification for episodes releases': 'Enviar notificación de estrenos de episodios',
                    'Send notification for releases': 'Enviar notificación de estrenos',
                    'Send notification when number of seasons changes': 'Enviar notificación cuando cambie el número de temporadas',
                    'Send notification when release date changes': 'Enviar notificación cuando cambie la fecha de estreno',
                    'Send notification when status changes': 'Enviar notificación cuando cambie el estado',
                    'Server error: {errorMessage}': [
                        'Error del servidor: ',
                        [
                            'errorMessage'
                        ]
                    ],
                    'Server language': 'Idioma del servidor',
                    'Server url (only for self hosting)': 'URL del servidor (solo para autoalojamiento)',
                    Set: 'Establecer',
                    'Set progress': 'Establecer progreso',
                    Settings: 'Ajustes',
                    'Show your reviews to other users': 'Mostrar sus reseñas a otros usuarios',
                    Shows: 'Programas',
                    Source: 'Fuente',
                    Status: 'Estado',
                    Summary: 'Resumen',
                    'S{0}': [
                        'T',
                        [
                            '0'
                        ]
                    ],
                    'S{0}E{1}': [
                        'T',
                        [
                            '0'
                        ],
                        'E',
                        [
                            '1'
                        ]
                    ],
                    'TMDB language': 'Idioma de TMDB',
                    'This component can only be used with tv shows': 'Este componente sólo puede utilizarse con programas y series',
                    Title: 'Título',
                    'To read': 'Por leer',
                    Topic: 'Tema',
                    Tv: 'Series y programas',
                    Uninitialized: 'Sin inicializar',
                    Unrated: 'Sin puntuar',
                    'Unseen episodes count': 'Número de episodios no vistos',
                    Upcoming: 'Próximamente',
                    'Update metadata': 'Actualizar metadatos',
                    'Updating metadata': 'Actualizando metadatos',
                    'User key': 'Clave de usuario',
                    Username: 'Nombre de usuario',
                    'Video game': 'Videojuego',
                    'Waiting for authentication': 'Esperando autentificación',
                    Warning: 'Advertencia',
                    Watched: 'Visto',
                    Watchlist: 'Lista de seguimiento',
                    'What is the last episode of "{0}" you see?': [
                        '¿Cuál es el último episodio de "',
                        [
                            '0'
                        ],
                        '" que ha visto?'
                    ],
                    'What is the last episode you see?': '¿Cuál es el último episodio que ha visto?',
                    'When did you listen it?': '¿Cuándo lo escuchó?',
                    'When did you listen to "{0}"?': [
                        '¿Cuándo escuchó "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you play "{0}"?': [
                        '¿Cuándo jugó "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you play it?': '¿Cuándo lo jugó?',
                    'When did you read "{0}"?': [
                        '¿Cuándo leyó "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you read it?': '¿Cuándo lo leyó?',
                    'When did you see "{0}"?': [
                        '¿Cuándo vió "',
                        [
                            '0'
                        ],
                        '"?'
                    ],
                    'When did you see it?': '¿Cuándo lo vio?',
                    import: 'importar',
                    '{0, plural, one { Found # item for query "<0>{searchQuery}</0>"} other { Found # items for query "<1>{searchQuery}</1>"}}': [
                        ['0',
                            'plural',
                            {
                                one: [
                                    ' La búsqueda "<0>',
                                    [
                                        'searchQuery'
                                    ],
                                    '</0>" ha encontrado ',
                                    '#',
                                    ' elemento'
                                ],
                                other: [
                                    ' La búsqueda "<1>',
                                    [
                                        'searchQuery'
                                    ],
                                    '</1>" ha encontrado ',
                                    '#',
                                    ' elementos'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Author} other {Authors}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Escritor',
                                other: 'Escritores'
                            }
                        ]
                    ],
                    '{0, plural, one {Genre} other {Genres}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Género',
                                other: 'Géneros'
                            }
                        ]
                    ],
                    '{0, plural, one {Listened 1 time} other {Listened # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Escuchado 1 vez',
                                other: [
                                    'Escuchado ',
                                    '#',
                                    ' veces'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Narrator} other {Narrators}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Narrador',
                                other: 'Narradores'
                            }
                        ]
                    ],
                    '{0, plural, one {Platform} other {platforms}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Plataforma',
                                other: 'plataformas'
                            }
                        ]
                    ],
                    '{0, plural, one {Played 1 time} other {Played # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Jugado 1 vez',
                                other: [
                                    'Jugado ',
                                    '#',
                                    ' veces'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Read 1 time} other {Read # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Leído 1 vez',
                                other: [
                                    'Leído ',
                                    '#',
                                    ' veces'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, one {Seen 1 time} other {Seen # times}}': [
                        ['0',
                            'plural',
                            {
                                one: 'Visto 1 vez',
                                other: [
                                    'Visto ',
                                    '#',
                                    ' veces'
                                ]
                            }
                        ]
                    ],
                    '{0, plural, other {unseen}}': [
                        ['0',
                            'plural',
                            {
                                one: '',
                                other: 'sin ver'
                            }
                        ]
                    ],
                    '{count, plural, one {Do you want to remove # seen history entry?} other {Do you want to remove all # seen history entries?}}': [
                        ['count',
                            'plural',
                            {
                                one: [
                                    '¿Desea eliminar ',
                                    '#',
                                    ' entrada del registro?'
                                ],
                                other: [
                                    '¿Desea eliminar todas las ',
                                    '#',
                                    ' entradas del registro?'
                                ]
                            }
                        ]
                    ],
                    '{duration, plural, one {minute} other {minutes}}': [
                        ['duration',
                            'plural',
                            {
                                one: 'minuto',
                                other: 'minutos'
                            }
                        ]
                    ],
                    '{numberOfItemsTotal, plural, one {1 item} other {# items}}': [
                        ['numberOfItemsTotal',
                            'plural',
                            {
                                one: '1 elemento',
                                other: [
                                    '#',
                                    ' elementos'
                                ]
                            }
                        ]
                    ],
                    '{value, plural, one {minute} other {minutes}}': [
                        ['value',
                            'plural',
                            {
                                one: 'minuto',
                                other: 'minutos'
                            }
                        ]
                    ],
                    '{value, plural, one {page} other {pages}}': [
                        ['value',
                            'plural',
                            {
                                one: 'página',
                                other: 'páginas'
                            }
                        ]
                    ]
                }
            },
                sj = Object.keys(oj),
                uj = null === (ij = function () {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    for (var r = 0; r < t.length; r++) {
                        var a = 'function' == typeof t[r] ? t[r]() : t[r];
                        if (a) return a
                    }
                    return null
                }(function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : globalThis.navigator;
                    return e.language || e.userLanguage
                }(), 'en').split('-')) || void 0 === ij ? void 0 : ij.at(0),
                lj = sj.includes(uj) ? uj : 'en',
                Ze.loadLocaleData(Ee({
                }, lj, {
                    plurals: t[lj]
                })),
                Ze.load(oj),
                Ze.activate(lj);
            var dj,
                cj = new d.QueryClient({
                    defaultOptions: {
                        mutations: {
                            mutationFn: function (e) {
                                return console.log(e),
                                    null
                            }
                        },
                        queries: {
                            queryFn: function (e) {
                                return console.log(e),
                                    null
                            },
                            keepPreviousData: !0,
                            onSuccess: function (e) {
                                if (e && 'object' === u(e) && !0 === e.MediaTrackerError && 'string' == typeof e.errorMessage) throw new Error(e.errorMessage)
                            }
                        }
                    },
                    queryCache: new d.QueryCache({
                        onError: function (e) {
                            e instanceof ge && (console.log(e.status), dj(e.message))
                        },
                        onSuccess: function () {
                            dj(null)
                        }
                    })
                }),
                mj = function () {
                    var e = s(r.useState(), 2),
                        t = e[0],
                        n = e[1];
                    return r.useEffect((function () {
                        return dj = n,
                            function () {
                                dj = function () {
                                }
                            }
                    }), [
                    ]),
                        r.createElement(Ae, {
                            i18n: Ze
                        }, r.createElement(ke, null, r.createElement(d.QueryClientProvider, {
                            client: cj
                        }, r.createElement($, null, r.createElement(Jx, null))), t && r.createElement('div', {
                            className: 'fixed z-50 p-1 m-auto -translate-x-1/2 bg-red-700 rounded shadow-sm cursor-default shadow-black left-1/2 top-4'
                        }, r.createElement(Oe, {
                            id: 'Server error: {errorMessage}',
                            values: {
                                errorMessage: t
                            }
                        }))))
                };
            a.render(r.createElement(r.StrictMode, null, r.createElement(mj, null)), document.getElementById('root'))
        }()
}();
